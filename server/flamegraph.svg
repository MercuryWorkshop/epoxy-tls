<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2102" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2085.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2085.00"> </text><svg id="frames" x="10" width="1180" total_samples="136838"><g><title>[libc.so.6] (82 samples, 0.06%)</title><rect x="0.0037%" y="2021" width="0.0599%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="82"/><text x="0.2537%" y="2031.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="0.0468%" y="2005" width="0.0168%" height="15" fill="rgb(217,0,24)" fg:x="64" fg:w="23"/><text x="0.2968%" y="2015.50"></text></g><g><title>epoxy-server (91 samples, 0.07%)</title><rect x="0.0000%" y="2037" width="0.0665%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="91"/><text x="0.2500%" y="2047.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (42 samples, 0.03%)</title><rect x="0.2002%" y="1973" width="0.0307%" height="15" fill="rgb(248,212,6)" fg:x="274" fg:w="42"/><text x="0.4502%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (42 samples, 0.03%)</title><rect x="0.2002%" y="1957" width="0.0307%" height="15" fill="rgb(208,68,35)" fg:x="274" fg:w="42"/><text x="0.4502%" y="1967.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (42 samples, 0.03%)</title><rect x="0.2002%" y="1941" width="0.0307%" height="15" fill="rgb(232,128,0)" fg:x="274" fg:w="42"/><text x="0.4502%" y="1951.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (226 samples, 0.17%)</title><rect x="0.0672%" y="2021" width="0.1652%" height="15" fill="rgb(207,160,47)" fg:x="92" fg:w="226"/><text x="0.3172%" y="2031.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (47 samples, 0.03%)</title><rect x="0.1980%" y="2005" width="0.0343%" height="15" fill="rgb(228,23,34)" fg:x="271" fg:w="47"/><text x="0.4480%" y="2015.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (47 samples, 0.03%)</title><rect x="0.1980%" y="1989" width="0.0343%" height="15" fill="rgb(218,30,26)" fg:x="271" fg:w="47"/><text x="0.4480%" y="1999.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (33 samples, 0.02%)</title><rect x="0.2324%" y="2021" width="0.0241%" height="15" fill="rgb(220,122,19)" fg:x="318" fg:w="33"/><text x="0.4824%" y="2031.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="0.2565%" y="2021" width="0.0132%" height="15" fill="rgb(250,228,42)" fg:x="351" fg:w="18"/><text x="0.5065%" y="2031.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (24 samples, 0.02%)</title><rect x="0.2697%" y="2021" width="0.0175%" height="15" fill="rgb(240,193,28)" fg:x="369" fg:w="24"/><text x="0.5197%" y="2031.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="0.3800%" y="1989" width="0.0132%" height="15" fill="rgb(216,20,37)" fg:x="520" fg:w="18"/><text x="0.6300%" y="1999.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (260 samples, 0.19%)</title><rect x="0.2872%" y="2005" width="0.1900%" height="15" fill="rgb(206,188,39)" fg:x="393" fg:w="260"/><text x="0.5372%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (115 samples, 0.08%)</title><rect x="0.3932%" y="1989" width="0.0840%" height="15" fill="rgb(217,207,13)" fg:x="538" fg:w="115"/><text x="0.6432%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (115 samples, 0.08%)</title><rect x="0.3932%" y="1973" width="0.0840%" height="15" fill="rgb(231,73,38)" fg:x="538" fg:w="115"/><text x="0.6432%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (113 samples, 0.08%)</title><rect x="0.3946%" y="1957" width="0.0826%" height="15" fill="rgb(225,20,46)" fg:x="540" fg:w="113"/><text x="0.6446%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (113 samples, 0.08%)</title><rect x="0.3946%" y="1941" width="0.0826%" height="15" fill="rgb(210,31,41)" fg:x="540" fg:w="113"/><text x="0.6446%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (113 samples, 0.08%)</title><rect x="0.3946%" y="1925" width="0.0826%" height="15" fill="rgb(221,200,47)" fg:x="540" fg:w="113"/><text x="0.6446%" y="1935.50"></text></g><g><title>__rust_dealloc (113 samples, 0.08%)</title><rect x="0.3946%" y="1909" width="0.0826%" height="15" fill="rgb(226,26,5)" fg:x="540" fg:w="113"/><text x="0.6446%" y="1919.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (113 samples, 0.08%)</title><rect x="0.3946%" y="1893" width="0.0826%" height="15" fill="rgb(249,33,26)" fg:x="540" fg:w="113"/><text x="0.6446%" y="1903.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (343 samples, 0.25%)</title><rect x="0.4911%" y="2005" width="0.2507%" height="15" fill="rgb(235,183,28)" fg:x="672" fg:w="343"/><text x="0.7411%" y="2015.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (192 samples, 0.14%)</title><rect x="0.7418%" y="2005" width="0.1403%" height="15" fill="rgb(221,5,38)" fg:x="1015" fg:w="192"/><text x="0.9918%" y="2015.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (30 samples, 0.02%)</title><rect x="0.8821%" y="2005" width="0.0219%" height="15" fill="rgb(247,18,42)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="2015.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (30 samples, 0.02%)</title><rect x="0.8821%" y="1989" width="0.0219%" height="15" fill="rgb(241,131,45)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1999.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (30 samples, 0.02%)</title><rect x="0.8821%" y="1973" width="0.0219%" height="15" fill="rgb(249,31,29)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1983.50"></text></g><g><title>alloc::alloc::exchange_malloc (30 samples, 0.02%)</title><rect x="0.8821%" y="1957" width="0.0219%" height="15" fill="rgb(225,111,53)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.02%)</title><rect x="0.8821%" y="1941" width="0.0219%" height="15" fill="rgb(238,160,17)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.02%)</title><rect x="0.8821%" y="1925" width="0.0219%" height="15" fill="rgb(214,148,48)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.02%)</title><rect x="0.8821%" y="1909" width="0.0219%" height="15" fill="rgb(232,36,49)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1919.50"></text></g><g><title>__rust_alloc (30 samples, 0.02%)</title><rect x="0.8821%" y="1893" width="0.0219%" height="15" fill="rgb(209,103,24)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1903.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (30 samples, 0.02%)</title><rect x="0.8821%" y="1877" width="0.0219%" height="15" fill="rgb(229,88,8)" fg:x="1207" fg:w="30"/><text x="1.1321%" y="1887.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.04%)</title><rect x="0.9040%" y="2005" width="0.0409%" height="15" fill="rgb(213,181,19)" fg:x="1237" fg:w="56"/><text x="1.1540%" y="2015.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (33 samples, 0.02%)</title><rect x="0.9208%" y="1989" width="0.0241%" height="15" fill="rgb(254,191,54)" fg:x="1260" fg:w="33"/><text x="1.1708%" y="1999.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (33 samples, 0.02%)</title><rect x="0.9208%" y="1973" width="0.0241%" height="15" fill="rgb(241,83,37)" fg:x="1260" fg:w="33"/><text x="1.1708%" y="1983.50"></text></g><g><title>event_listener::TaskRef::into_task (33 samples, 0.02%)</title><rect x="0.9208%" y="1957" width="0.0241%" height="15" fill="rgb(233,36,39)" fg:x="1260" fg:w="33"/><text x="1.1708%" y="1967.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (33 samples, 0.02%)</title><rect x="0.9208%" y="1941" width="0.0241%" height="15" fill="rgb(226,3,54)" fg:x="1260" fg:w="33"/><text x="1.1708%" y="1951.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (59 samples, 0.04%)</title><rect x="0.9544%" y="2005" width="0.0431%" height="15" fill="rgb(245,192,40)" fg:x="1306" fg:w="59"/><text x="1.2044%" y="2015.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.03%)</title><rect x="1.1495%" y="1957" width="0.0300%" height="15" fill="rgb(238,167,29)" fg:x="1573" fg:w="41"/><text x="1.3995%" y="1967.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (41 samples, 0.03%)</title><rect x="1.1495%" y="1941" width="0.0300%" height="15" fill="rgb(232,182,51)" fg:x="1573" fg:w="41"/><text x="1.3995%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (41 samples, 0.03%)</title><rect x="1.1495%" y="1925" width="0.0300%" height="15" fill="rgb(231,60,39)" fg:x="1573" fg:w="41"/><text x="1.3995%" y="1935.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (251 samples, 0.18%)</title><rect x="0.9975%" y="2005" width="0.1834%" height="15" fill="rgb(208,69,12)" fg:x="1365" fg:w="251"/><text x="1.2475%" y="2015.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (45 samples, 0.03%)</title><rect x="1.1481%" y="1989" width="0.0329%" height="15" fill="rgb(235,93,37)" fg:x="1571" fg:w="45"/><text x="1.3981%" y="1999.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (45 samples, 0.03%)</title><rect x="1.1481%" y="1973" width="0.0329%" height="15" fill="rgb(213,116,39)" fg:x="1571" fg:w="45"/><text x="1.3981%" y="1983.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="1.1810%" y="2005" width="0.0219%" height="15" fill="rgb(222,207,29)" fg:x="1616" fg:w="30"/><text x="1.4310%" y="2015.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (27 samples, 0.02%)</title><rect x="1.1832%" y="1989" width="0.0197%" height="15" fill="rgb(206,96,30)" fg:x="1619" fg:w="27"/><text x="1.4332%" y="1999.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (27 samples, 0.02%)</title><rect x="1.1832%" y="1973" width="0.0197%" height="15" fill="rgb(218,138,4)" fg:x="1619" fg:w="27"/><text x="1.4332%" y="1983.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (92 samples, 0.07%)</title><rect x="1.2029%" y="2005" width="0.0672%" height="15" fill="rgb(250,191,14)" fg:x="1646" fg:w="92"/><text x="1.4529%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (22 samples, 0.02%)</title><rect x="1.2723%" y="2005" width="0.0161%" height="15" fill="rgb(239,60,40)" fg:x="1741" fg:w="22"/><text x="1.5223%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (21 samples, 0.02%)</title><rect x="1.2884%" y="2005" width="0.0153%" height="15" fill="rgb(206,27,48)" fg:x="1763" fg:w="21"/><text x="1.5384%" y="2015.50"></text></g><g><title>[libc.so.6] (66 samples, 0.05%)</title><rect x="1.3037%" y="2005" width="0.0482%" height="15" fill="rgb(225,35,8)" fg:x="1784" fg:w="66"/><text x="1.5537%" y="2015.50"></text></g><g><title>_ZN4core3ptr1271drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h199da551d4d9946fE (113 samples, 0.08%)</title><rect x="1.3520%" y="2005" width="0.0826%" height="15" fill="rgb(250,213,24)" fg:x="1850" fg:w="113"/><text x="1.6020%" y="2015.50"></text></g><g><title>__floattidf (44 samples, 0.03%)</title><rect x="1.4345%" y="2005" width="0.0322%" height="15" fill="rgb(247,123,22)" fg:x="1963" fg:w="44"/><text x="1.6845%" y="2015.50"></text></g><g><title>__vdso_clock_gettime (59 samples, 0.04%)</title><rect x="1.4704%" y="2005" width="0.0431%" height="15" fill="rgb(231,138,38)" fg:x="2012" fg:w="59"/><text x="1.7204%" y="2015.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (17 samples, 0.01%)</title><rect x="1.5135%" y="2005" width="0.0124%" height="15" fill="rgb(231,145,46)" fg:x="2071" fg:w="17"/><text x="1.7635%" y="2015.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (17 samples, 0.01%)</title><rect x="1.5544%" y="2005" width="0.0124%" height="15" fill="rgb(251,118,11)" fg:x="2127" fg:w="17"/><text x="1.8044%" y="2015.50"></text></g><g><title>_rjem_je_ecache_alloc (41 samples, 0.03%)</title><rect x="1.5836%" y="2005" width="0.0300%" height="15" fill="rgb(217,147,25)" fg:x="2167" fg:w="41"/><text x="1.8336%" y="2015.50"></text></g><g><title>_rjem_je_edata_cache_put (26 samples, 0.02%)</title><rect x="1.6326%" y="2005" width="0.0190%" height="15" fill="rgb(247,81,37)" fg:x="2234" fg:w="26"/><text x="1.8826%" y="2015.50"></text></g><g><title>_rjem_je_edata_heap_insert (28 samples, 0.02%)</title><rect x="1.6582%" y="2005" width="0.0205%" height="15" fill="rgb(209,12,38)" fg:x="2269" fg:w="28"/><text x="1.9082%" y="2015.50"></text></g><g><title>_rjem_je_emap_deregister_interior (20 samples, 0.01%)</title><rect x="1.7035%" y="2005" width="0.0146%" height="15" fill="rgb(227,1,9)" fg:x="2331" fg:w="20"/><text x="1.9535%" y="2015.50"></text></g><g><title>_rjem_je_emap_register_interior (19 samples, 0.01%)</title><rect x="1.7261%" y="2005" width="0.0139%" height="15" fill="rgb(248,47,43)" fg:x="2362" fg:w="19"/><text x="1.9761%" y="2015.50"></text></g><g><title>_rjem_je_emap_remap (40 samples, 0.03%)</title><rect x="1.7400%" y="2005" width="0.0292%" height="15" fill="rgb(221,10,30)" fg:x="2381" fg:w="40"/><text x="1.9900%" y="2015.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (22 samples, 0.02%)</title><rect x="1.7766%" y="2005" width="0.0161%" height="15" fill="rgb(210,229,1)" fg:x="2431" fg:w="22"/><text x="2.0266%" y="2015.50"></text></g><g><title>_rjem_je_emap_update_edata_state (16 samples, 0.01%)</title><rect x="1.7926%" y="2005" width="0.0117%" height="15" fill="rgb(222,148,37)" fg:x="2453" fg:w="16"/><text x="2.0426%" y="2015.50"></text></g><g><title>_rjem_je_eset_insert (20 samples, 0.01%)</title><rect x="1.8065%" y="2005" width="0.0146%" height="15" fill="rgb(234,67,33)" fg:x="2472" fg:w="20"/><text x="2.0565%" y="2015.50"></text></g><g><title>_rjem_je_eset_remove (14 samples, 0.01%)</title><rect x="1.8211%" y="2005" width="0.0102%" height="15" fill="rgb(247,98,35)" fg:x="2492" fg:w="14"/><text x="2.0711%" y="2015.50"></text></g><g><title>_rjem_je_extent_record (21 samples, 0.02%)</title><rect x="1.8438%" y="2005" width="0.0153%" height="15" fill="rgb(247,138,52)" fg:x="2523" fg:w="21"/><text x="2.0938%" y="2015.50"></text></g><g><title>_rjem_je_malloc_default (62 samples, 0.05%)</title><rect x="1.8686%" y="2005" width="0.0453%" height="15" fill="rgb(213,79,30)" fg:x="2557" fg:w="62"/><text x="2.1186%" y="2015.50"></text></g><g><title>_rjem_je_pa_alloc (16 samples, 0.01%)</title><rect x="1.9227%" y="2005" width="0.0117%" height="15" fill="rgb(246,177,23)" fg:x="2631" fg:w="16"/><text x="2.1727%" y="2015.50"></text></g><g><title>_rjem_je_pa_dalloc (18 samples, 0.01%)</title><rect x="1.9344%" y="2005" width="0.0132%" height="15" fill="rgb(230,62,27)" fg:x="2647" fg:w="18"/><text x="2.1844%" y="2015.50"></text></g><g><title>_rjem_je_sdallocx_default (65 samples, 0.05%)</title><rect x="1.9658%" y="2005" width="0.0475%" height="15" fill="rgb(216,154,8)" fg:x="2690" fg:w="65"/><text x="2.2158%" y="2015.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.01%)</title><rect x="2.0228%" y="2005" width="0.0124%" height="15" fill="rgb(244,35,45)" fg:x="2768" fg:w="17"/><text x="2.2728%" y="2015.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (23 samples, 0.02%)</title><rect x="2.0353%" y="2005" width="0.0168%" height="15" fill="rgb(251,115,12)" fg:x="2785" fg:w="23"/><text x="2.2853%" y="2015.50"></text></g><g><title>_rjem_je_te_event_trigger (104 samples, 0.08%)</title><rect x="2.0645%" y="2005" width="0.0760%" height="15" fill="rgb(240,54,50)" fg:x="2825" fg:w="104"/><text x="2.3145%" y="2015.50"></text></g><g><title>_rjem_malloc (18 samples, 0.01%)</title><rect x="2.1405%" y="2005" width="0.0132%" height="15" fill="rgb(233,84,52)" fg:x="2929" fg:w="18"/><text x="2.3905%" y="2015.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (66 samples, 0.05%)</title><rect x="2.1697%" y="2005" width="0.0482%" height="15" fill="rgb(207,117,47)" fg:x="2969" fg:w="66"/><text x="2.4197%" y="2015.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (42 samples, 0.03%)</title><rect x="2.1873%" y="1989" width="0.0307%" height="15" fill="rgb(249,43,39)" fg:x="2993" fg:w="42"/><text x="2.4373%" y="1999.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (42 samples, 0.03%)</title><rect x="2.1873%" y="1973" width="0.0307%" height="15" fill="rgb(209,38,44)" fg:x="2993" fg:w="42"/><text x="2.4373%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (31 samples, 0.02%)</title><rect x="2.2180%" y="2005" width="0.0227%" height="15" fill="rgb(236,212,23)" fg:x="3035" fg:w="31"/><text x="2.4680%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.01%)</title><rect x="2.2757%" y="1989" width="0.0110%" height="15" fill="rgb(242,79,21)" fg:x="3114" fg:w="15"/><text x="2.5257%" y="1999.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="2.2757%" y="1973" width="0.0110%" height="15" fill="rgb(211,96,35)" fg:x="3114" fg:w="15"/><text x="2.5257%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="2.2757%" y="1957" width="0.0110%" height="15" fill="rgb(253,215,40)" fg:x="3114" fg:w="15"/><text x="2.5257%" y="1967.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="2.2757%" y="1941" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="3114" fg:w="15"/><text x="2.5257%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (27 samples, 0.02%)</title><rect x="2.2866%" y="1989" width="0.0197%" height="15" fill="rgb(208,190,38)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="2.2866%" y="1973" width="0.0197%" height="15" fill="rgb(235,213,38)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="2.2866%" y="1957" width="0.0197%" height="15" fill="rgb(237,122,38)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="2.2866%" y="1941" width="0.0197%" height="15" fill="rgb(244,218,35)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (27 samples, 0.02%)</title><rect x="2.2866%" y="1925" width="0.0197%" height="15" fill="rgb(240,68,47)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="2.2866%" y="1909" width="0.0197%" height="15" fill="rgb(210,16,53)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.02%)</title><rect x="2.2866%" y="1893" width="0.0197%" height="15" fill="rgb(235,124,12)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="2.2866%" y="1877" width="0.0197%" height="15" fill="rgb(224,169,11)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1887.50"></text></g><g><title>__rust_alloc (27 samples, 0.02%)</title><rect x="2.2866%" y="1861" width="0.0197%" height="15" fill="rgb(250,166,2)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (27 samples, 0.02%)</title><rect x="2.2866%" y="1845" width="0.0197%" height="15" fill="rgb(242,216,29)" fg:x="3129" fg:w="27"/><text x="2.5366%" y="1855.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (93 samples, 0.07%)</title><rect x="2.2406%" y="2005" width="0.0680%" height="15" fill="rgb(230,116,27)" fg:x="3066" fg:w="93"/><text x="2.4906%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (57 samples, 0.04%)</title><rect x="2.3159%" y="1989" width="0.0417%" height="15" fill="rgb(228,99,48)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1999.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (57 samples, 0.04%)</title><rect x="2.3159%" y="1973" width="0.0417%" height="15" fill="rgb(253,11,6)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (57 samples, 0.04%)</title><rect x="2.3159%" y="1957" width="0.0417%" height="15" fill="rgb(247,143,39)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1967.50"></text></g><g><title>alloc::alloc::exchange_malloc (57 samples, 0.04%)</title><rect x="2.3159%" y="1941" width="0.0417%" height="15" fill="rgb(236,97,10)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1951.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.04%)</title><rect x="2.3159%" y="1925" width="0.0417%" height="15" fill="rgb(233,208,19)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1935.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.04%)</title><rect x="2.3159%" y="1909" width="0.0417%" height="15" fill="rgb(216,164,2)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1919.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.04%)</title><rect x="2.3159%" y="1893" width="0.0417%" height="15" fill="rgb(220,129,5)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1903.50"></text></g><g><title>__rust_alloc (57 samples, 0.04%)</title><rect x="2.3159%" y="1877" width="0.0417%" height="15" fill="rgb(242,17,10)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (57 samples, 0.04%)</title><rect x="2.3159%" y="1861" width="0.0417%" height="15" fill="rgb(242,107,0)" fg:x="3169" fg:w="57"/><text x="2.5659%" y="1871.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (147 samples, 0.11%)</title><rect x="2.3086%" y="2005" width="0.1074%" height="15" fill="rgb(251,28,31)" fg:x="3159" fg:w="147"/><text x="2.5586%" y="2015.50"></text></g><g><title>core::fmt::Arguments::new_v1 (80 samples, 0.06%)</title><rect x="2.3575%" y="1989" width="0.0585%" height="15" fill="rgb(233,223,10)" fg:x="3226" fg:w="80"/><text x="2.6075%" y="1999.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (367 samples, 0.27%)</title><rect x="2.4160%" y="2005" width="0.2682%" height="15" fill="rgb(215,21,27)" fg:x="3306" fg:w="367"/><text x="2.6660%" y="2015.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (367 samples, 0.27%)</title><rect x="2.4160%" y="1989" width="0.2682%" height="15" fill="rgb(232,23,21)" fg:x="3306" fg:w="367"/><text x="2.6660%" y="1999.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (367 samples, 0.27%)</title><rect x="2.4160%" y="1973" width="0.2682%" height="15" fill="rgb(244,5,23)" fg:x="3306" fg:w="367"/><text x="2.6660%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_frame::{{closure}}&gt; (50 samples, 0.04%)</title><rect x="2.6886%" y="2005" width="0.0365%" height="15" fill="rgb(226,81,46)" fg:x="3679" fg:w="50"/><text x="2.9386%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (26 samples, 0.02%)</title><rect x="2.7324%" y="2005" width="0.0190%" height="15" fill="rgb(247,70,30)" fg:x="3739" fg:w="26"/><text x="2.9824%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (61 samples, 0.04%)</title><rect x="2.7514%" y="2005" width="0.0446%" height="15" fill="rgb(212,68,19)" fg:x="3765" fg:w="61"/><text x="3.0014%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (30 samples, 0.02%)</title><rect x="2.7741%" y="1989" width="0.0219%" height="15" fill="rgb(240,187,13)" fg:x="3796" fg:w="30"/><text x="3.0241%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (30 samples, 0.02%)</title><rect x="2.7741%" y="1973" width="0.0219%" height="15" fill="rgb(223,113,26)" fg:x="3796" fg:w="30"/><text x="3.0241%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (19 samples, 0.01%)</title><rect x="2.7821%" y="1957" width="0.0139%" height="15" fill="rgb(206,192,2)" fg:x="3807" fg:w="19"/><text x="3.0321%" y="1967.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (19 samples, 0.01%)</title><rect x="2.7821%" y="1941" width="0.0139%" height="15" fill="rgb(241,108,4)" fg:x="3807" fg:w="19"/><text x="3.0321%" y="1951.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (19 samples, 0.01%)</title><rect x="2.7821%" y="1925" width="0.0139%" height="15" fill="rgb(247,173,49)" fg:x="3807" fg:w="19"/><text x="3.0321%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (40 samples, 0.03%)</title><rect x="2.7960%" y="2005" width="0.0292%" height="15" fill="rgb(224,114,35)" fg:x="3826" fg:w="40"/><text x="3.0460%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (40 samples, 0.03%)</title><rect x="2.8252%" y="2005" width="0.0292%" height="15" fill="rgb(245,159,27)" fg:x="3866" fg:w="40"/><text x="3.0752%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio::io::util::chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (457 samples, 0.33%)</title><rect x="2.8727%" y="2005" width="0.3340%" height="15" fill="rgb(245,172,44)" fg:x="3931" fg:w="457"/><text x="3.1227%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (349 samples, 0.26%)</title><rect x="3.2126%" y="2005" width="0.2550%" height="15" fill="rgb(236,23,11)" fg:x="4396" fg:w="349"/><text x="3.4626%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::process_wisp_message::{{closure}}&gt; (46 samples, 0.03%)</title><rect x="3.4676%" y="2005" width="0.0336%" height="15" fill="rgb(205,117,38)" fg:x="4745" fg:w="46"/><text x="3.7176%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (34 samples, 0.02%)</title><rect x="3.5012%" y="2005" width="0.0248%" height="15" fill="rgb(237,72,25)" fg:x="4791" fg:w="34"/><text x="3.7512%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (34 samples, 0.02%)</title><rect x="3.5261%" y="2005" width="0.0248%" height="15" fill="rgb(244,70,9)" fg:x="4825" fg:w="34"/><text x="3.7761%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (19 samples, 0.01%)</title><rect x="3.5524%" y="2005" width="0.0139%" height="15" fill="rgb(217,125,39)" fg:x="4861" fg:w="19"/><text x="3.8024%" y="2015.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (15 samples, 0.01%)</title><rect x="3.5882%" y="1989" width="0.0110%" height="15" fill="rgb(235,36,10)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1999.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.01%)</title><rect x="3.5882%" y="1973" width="0.0110%" height="15" fill="rgb(251,123,47)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1983.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.01%)</title><rect x="3.5882%" y="1957" width="0.0110%" height="15" fill="rgb(221,13,13)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="3.5882%" y="1941" width="0.0110%" height="15" fill="rgb(238,131,9)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="3.5882%" y="1925" width="0.0110%" height="15" fill="rgb(211,50,8)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="3.5882%" y="1909" width="0.0110%" height="15" fill="rgb(245,182,24)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1919.50"></text></g><g><title>__rust_alloc (15 samples, 0.01%)</title><rect x="3.5882%" y="1893" width="0.0110%" height="15" fill="rgb(242,14,37)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1903.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="3.5882%" y="1877" width="0.0110%" height="15" fill="rgb(246,228,12)" fg:x="4910" fg:w="15"/><text x="3.8382%" y="1887.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (47 samples, 0.03%)</title><rect x="3.5758%" y="2005" width="0.0343%" height="15" fill="rgb(213,55,15)" fg:x="4893" fg:w="47"/><text x="3.8258%" y="2015.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (15 samples, 0.01%)</title><rect x="3.5991%" y="1989" width="0.0110%" height="15" fill="rgb(209,9,3)" fg:x="4925" fg:w="15"/><text x="3.8491%" y="1999.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15 samples, 0.01%)</title><rect x="3.5991%" y="1973" width="0.0110%" height="15" fill="rgb(230,59,30)" fg:x="4925" fg:w="15"/><text x="3.8491%" y="1983.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="3.5991%" y="1957" width="0.0110%" height="15" fill="rgb(209,121,21)" fg:x="4925" fg:w="15"/><text x="3.8491%" y="1967.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (21 samples, 0.02%)</title><rect x="3.6101%" y="2005" width="0.0153%" height="15" fill="rgb(220,109,13)" fg:x="4940" fg:w="21"/><text x="3.8601%" y="2015.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (38 samples, 0.03%)</title><rect x="3.6255%" y="2005" width="0.0278%" height="15" fill="rgb(232,18,1)" fg:x="4961" fg:w="38"/><text x="3.8755%" y="2015.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (32 samples, 0.02%)</title><rect x="3.6298%" y="1989" width="0.0234%" height="15" fill="rgb(215,41,42)" fg:x="4967" fg:w="32"/><text x="3.8798%" y="1999.50"></text></g><g><title>extent_recycle (46 samples, 0.03%)</title><rect x="3.6605%" y="2005" width="0.0336%" height="15" fill="rgb(224,123,36)" fg:x="5009" fg:w="46"/><text x="3.9105%" y="2015.50"></text></g><g><title>extent_try_coalesce_impl (16 samples, 0.01%)</title><rect x="3.7036%" y="2005" width="0.0117%" height="15" fill="rgb(240,125,3)" fg:x="5068" fg:w="16"/><text x="3.9536%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (156 samples, 0.11%)</title><rect x="3.7153%" y="2005" width="0.1140%" height="15" fill="rgb(205,98,50)" fg:x="5084" fg:w="156"/><text x="3.9653%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (36 samples, 0.03%)</title><rect x="3.8030%" y="1989" width="0.0263%" height="15" fill="rgb(205,185,37)" fg:x="5204" fg:w="36"/><text x="4.0530%" y="1999.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (136 samples, 0.10%)</title><rect x="3.8293%" y="2005" width="0.0994%" height="15" fill="rgb(238,207,15)" fg:x="5240" fg:w="136"/><text x="4.0793%" y="2015.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (81 samples, 0.06%)</title><rect x="3.8695%" y="1989" width="0.0592%" height="15" fill="rgb(213,199,42)" fg:x="5295" fg:w="81"/><text x="4.1195%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (74 samples, 0.05%)</title><rect x="3.8747%" y="1973" width="0.0541%" height="15" fill="rgb(235,201,11)" fg:x="5302" fg:w="74"/><text x="4.1247%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (74 samples, 0.05%)</title><rect x="3.8747%" y="1957" width="0.0541%" height="15" fill="rgb(207,46,11)" fg:x="5302" fg:w="74"/><text x="4.1247%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (74 samples, 0.05%)</title><rect x="3.8747%" y="1941" width="0.0541%" height="15" fill="rgb(241,35,35)" fg:x="5302" fg:w="74"/><text x="4.1247%" y="1951.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (74 samples, 0.05%)</title><rect x="3.8747%" y="1925" width="0.0541%" height="15" fill="rgb(243,32,47)" fg:x="5302" fg:w="74"/><text x="4.1247%" y="1935.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (47 samples, 0.03%)</title><rect x="3.9309%" y="1989" width="0.0343%" height="15" fill="rgb(247,202,23)" fg:x="5379" fg:w="47"/><text x="4.1809%" y="1999.50"></text></g><g><title>fastwebsockets::frame::Frame::write (57 samples, 0.04%)</title><rect x="3.9287%" y="2005" width="0.0417%" height="15" fill="rgb(219,102,11)" fg:x="5376" fg:w="57"/><text x="4.1787%" y="2015.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (34 samples, 0.02%)</title><rect x="3.9704%" y="2005" width="0.0248%" height="15" fill="rgb(243,110,44)" fg:x="5433" fg:w="34"/><text x="4.2204%" y="2015.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (32 samples, 0.02%)</title><rect x="4.0011%" y="2005" width="0.0234%" height="15" fill="rgb(222,74,54)" fg:x="5475" fg:w="32"/><text x="4.2511%" y="2015.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (14 samples, 0.01%)</title><rect x="4.0245%" y="2005" width="0.0102%" height="15" fill="rgb(216,99,12)" fg:x="5507" fg:w="14"/><text x="4.2745%" y="2015.50"></text></g><g><title>pac_alloc_impl (239 samples, 0.17%)</title><rect x="4.0347%" y="2005" width="0.1747%" height="15" fill="rgb(226,22,26)" fg:x="5521" fg:w="239"/><text x="4.2847%" y="2015.50"></text></g><g><title>pac_alloc_real (14 samples, 0.01%)</title><rect x="4.2094%" y="2005" width="0.0102%" height="15" fill="rgb(217,163,10)" fg:x="5760" fg:w="14"/><text x="4.4594%" y="2015.50"></text></g><g><title>pac_dalloc_impl (51 samples, 0.04%)</title><rect x="4.2196%" y="2005" width="0.0373%" height="15" fill="rgb(213,25,53)" fg:x="5774" fg:w="51"/><text x="4.4696%" y="2015.50"></text></g><g><title>pthread_mutex_trylock (73 samples, 0.05%)</title><rect x="4.2686%" y="2005" width="0.0533%" height="15" fill="rgb(252,105,26)" fg:x="5841" fg:w="73"/><text x="4.5186%" y="2015.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (80 samples, 0.06%)</title><rect x="4.3241%" y="2005" width="0.0585%" height="15" fill="rgb(220,39,43)" fg:x="5917" fg:w="80"/><text x="4.5741%" y="2015.50"></text></g><g><title>std::time::Instant::now (15 samples, 0.01%)</title><rect x="4.3869%" y="2005" width="0.0110%" height="15" fill="rgb(229,68,48)" fg:x="6003" fg:w="15"/><text x="4.6369%" y="2015.50"></text></g><g><title>tcache_gc_small (20 samples, 0.01%)</title><rect x="4.4023%" y="2005" width="0.0146%" height="15" fill="rgb(252,8,32)" fg:x="6024" fg:w="20"/><text x="4.6523%" y="2015.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (28 samples, 0.02%)</title><rect x="4.4688%" y="1973" width="0.0205%" height="15" fill="rgb(223,20,43)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1983.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (28 samples, 0.02%)</title><rect x="4.4688%" y="1957" width="0.0205%" height="15" fill="rgb(229,81,49)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (28 samples, 0.02%)</title><rect x="4.4688%" y="1941" width="0.0205%" height="15" fill="rgb(236,28,36)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (28 samples, 0.02%)</title><rect x="4.4688%" y="1925" width="0.0205%" height="15" fill="rgb(249,185,26)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1935.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.02%)</title><rect x="4.4688%" y="1909" width="0.0205%" height="15" fill="rgb(249,174,33)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1919.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.02%)</title><rect x="4.4688%" y="1893" width="0.0205%" height="15" fill="rgb(233,201,37)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1903.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (28 samples, 0.02%)</title><rect x="4.4688%" y="1877" width="0.0205%" height="15" fill="rgb(221,78,26)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1887.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (28 samples, 0.02%)</title><rect x="4.4688%" y="1861" width="0.0205%" height="15" fill="rgb(250,127,30)" fg:x="6115" fg:w="28"/><text x="4.7188%" y="1871.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (104 samples, 0.08%)</title><rect x="4.4169%" y="2005" width="0.0760%" height="15" fill="rgb(230,49,44)" fg:x="6044" fg:w="104"/><text x="4.6669%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (34 samples, 0.02%)</title><rect x="4.4681%" y="1989" width="0.0248%" height="15" fill="rgb(229,67,23)" fg:x="6114" fg:w="34"/><text x="4.7181%" y="1999.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (82 samples, 0.06%)</title><rect x="4.4929%" y="2005" width="0.0599%" height="15" fill="rgb(249,83,47)" fg:x="6148" fg:w="82"/><text x="4.7429%" y="2015.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (48 samples, 0.04%)</title><rect x="4.5528%" y="2005" width="0.0351%" height="15" fill="rgb(215,43,3)" fg:x="6230" fg:w="48"/><text x="4.8028%" y="2015.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (22 samples, 0.02%)</title><rect x="4.5718%" y="1989" width="0.0161%" height="15" fill="rgb(238,154,13)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1999.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (22 samples, 0.02%)</title><rect x="4.5718%" y="1973" width="0.0161%" height="15" fill="rgb(219,56,2)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (22 samples, 0.02%)</title><rect x="4.5718%" y="1957" width="0.0161%" height="15" fill="rgb(233,0,4)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1967.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (22 samples, 0.02%)</title><rect x="4.5718%" y="1941" width="0.0161%" height="15" fill="rgb(235,30,7)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1951.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (22 samples, 0.02%)</title><rect x="4.5718%" y="1925" width="0.0161%" height="15" fill="rgb(250,79,13)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1935.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (22 samples, 0.02%)</title><rect x="4.5718%" y="1909" width="0.0161%" height="15" fill="rgb(211,146,34)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1919.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (22 samples, 0.02%)</title><rect x="4.5718%" y="1893" width="0.0161%" height="15" fill="rgb(228,22,38)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1903.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (22 samples, 0.02%)</title><rect x="4.5718%" y="1877" width="0.0161%" height="15" fill="rgb(235,168,5)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1887.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (22 samples, 0.02%)</title><rect x="4.5718%" y="1861" width="0.0161%" height="15" fill="rgb(221,155,16)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1871.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (22 samples, 0.02%)</title><rect x="4.5718%" y="1845" width="0.0161%" height="15" fill="rgb(215,215,53)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1855.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (22 samples, 0.02%)</title><rect x="4.5718%" y="1829" width="0.0161%" height="15" fill="rgb(223,4,10)" fg:x="6256" fg:w="22"/><text x="4.8218%" y="1839.50"></text></g><g><title>tokio::runtime::driver::Driver::park (27 samples, 0.02%)</title><rect x="4.5930%" y="2005" width="0.0197%" height="15" fill="rgb(234,103,6)" fg:x="6285" fg:w="27"/><text x="4.8430%" y="2015.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (21 samples, 0.02%)</title><rect x="4.6193%" y="2005" width="0.0153%" height="15" fill="rgb(227,97,0)" fg:x="6321" fg:w="21"/><text x="4.8693%" y="2015.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (111 samples, 0.08%)</title><rect x="4.6347%" y="2005" width="0.0811%" height="15" fill="rgb(234,150,53)" fg:x="6342" fg:w="111"/><text x="4.8847%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (25 samples, 0.02%)</title><rect x="4.7348%" y="2005" width="0.0183%" height="15" fill="rgb(228,201,54)" fg:x="6479" fg:w="25"/><text x="4.9848%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (36 samples, 0.03%)</title><rect x="4.7531%" y="2005" width="0.0263%" height="15" fill="rgb(222,22,37)" fg:x="6504" fg:w="36"/><text x="5.0031%" y="2015.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (49 samples, 0.04%)</title><rect x="4.7794%" y="2005" width="0.0358%" height="15" fill="rgb(237,53,32)" fg:x="6540" fg:w="49"/><text x="5.0294%" y="2015.50"></text></g><g><title>tokio::runtime::coop::budget (36 samples, 0.03%)</title><rect x="4.7889%" y="1989" width="0.0263%" height="15" fill="rgb(233,25,53)" fg:x="6553" fg:w="36"/><text x="5.0389%" y="1999.50"></text></g><g><title>tokio::runtime::coop::with_budget (36 samples, 0.03%)</title><rect x="4.7889%" y="1973" width="0.0263%" height="15" fill="rgb(210,40,34)" fg:x="6553" fg:w="36"/><text x="5.0389%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (36 samples, 0.03%)</title><rect x="4.7889%" y="1957" width="0.0263%" height="15" fill="rgb(241,220,44)" fg:x="6553" fg:w="36"/><text x="5.0389%" y="1967.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (35 samples, 0.03%)</title><rect x="4.7896%" y="1941" width="0.0256%" height="15" fill="rgb(235,28,35)" fg:x="6554" fg:w="35"/><text x="5.0396%" y="1951.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (35 samples, 0.03%)</title><rect x="4.7896%" y="1925" width="0.0256%" height="15" fill="rgb(210,56,17)" fg:x="6554" fg:w="35"/><text x="5.0396%" y="1935.50"></text></g><g><title>tokio::runtime::signal::Driver::process (28 samples, 0.02%)</title><rect x="4.8203%" y="2005" width="0.0205%" height="15" fill="rgb(224,130,29)" fg:x="6596" fg:w="28"/><text x="5.0703%" y="2015.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (14 samples, 0.01%)</title><rect x="4.8481%" y="2005" width="0.0102%" height="15" fill="rgb(235,212,8)" fg:x="6634" fg:w="14"/><text x="5.0981%" y="2015.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (46 samples, 0.03%)</title><rect x="4.8583%" y="2005" width="0.0336%" height="15" fill="rgb(223,33,50)" fg:x="6648" fg:w="46"/><text x="5.1083%" y="2015.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (45 samples, 0.03%)</title><rect x="4.8590%" y="1989" width="0.0329%" height="15" fill="rgb(219,149,13)" fg:x="6649" fg:w="45"/><text x="5.1090%" y="1999.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (36 samples, 0.03%)</title><rect x="4.8656%" y="1973" width="0.0263%" height="15" fill="rgb(250,156,29)" fg:x="6658" fg:w="36"/><text x="5.1156%" y="1983.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (36 samples, 0.03%)</title><rect x="4.8656%" y="1957" width="0.0263%" height="15" fill="rgb(216,193,19)" fg:x="6658" fg:w="36"/><text x="5.1156%" y="1967.50"></text></g><g><title>tokio::runtime::task::state::State::load (36 samples, 0.03%)</title><rect x="4.8656%" y="1941" width="0.0263%" height="15" fill="rgb(216,135,14)" fg:x="6658" fg:w="36"/><text x="5.1156%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (36 samples, 0.03%)</title><rect x="4.8656%" y="1925" width="0.0263%" height="15" fill="rgb(241,47,5)" fg:x="6658" fg:w="36"/><text x="5.1156%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.03%)</title><rect x="4.8656%" y="1909" width="0.0263%" height="15" fill="rgb(233,42,35)" fg:x="6658" fg:w="36"/><text x="5.1156%" y="1919.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (234 samples, 0.17%)</title><rect x="4.8992%" y="2005" width="0.1710%" height="15" fill="rgb(231,13,6)" fg:x="6704" fg:w="234"/><text x="5.1492%" y="2015.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (161 samples, 0.12%)</title><rect x="5.0775%" y="2005" width="0.1177%" height="15" fill="rgb(207,181,40)" fg:x="6948" fg:w="161"/><text x="5.3275%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (54 samples, 0.04%)</title><rect x="5.1952%" y="2005" width="0.0395%" height="15" fill="rgb(254,173,49)" fg:x="7109" fg:w="54"/><text x="5.4452%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (16 samples, 0.01%)</title><rect x="5.2347%" y="2005" width="0.0117%" height="15" fill="rgb(221,1,38)" fg:x="7163" fg:w="16"/><text x="5.4847%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (142 samples, 0.10%)</title><rect x="5.2463%" y="2005" width="0.1038%" height="15" fill="rgb(206,124,46)" fg:x="7179" fg:w="142"/><text x="5.4963%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (33 samples, 0.02%)</title><rect x="5.3501%" y="2005" width="0.0241%" height="15" fill="rgb(249,21,11)" fg:x="7321" fg:w="33"/><text x="5.6001%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (21 samples, 0.02%)</title><rect x="5.3757%" y="2005" width="0.0153%" height="15" fill="rgb(222,201,40)" fg:x="7356" fg:w="21"/><text x="5.6257%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (33 samples, 0.02%)</title><rect x="5.3910%" y="2005" width="0.0241%" height="15" fill="rgb(235,61,29)" fg:x="7377" fg:w="33"/><text x="5.6410%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (16 samples, 0.01%)</title><rect x="5.4254%" y="1989" width="0.0117%" height="15" fill="rgb(219,207,3)" fg:x="7424" fg:w="16"/><text x="5.6754%" y="1999.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="5.4254%" y="1973" width="0.0117%" height="15" fill="rgb(222,56,46)" fg:x="7424" fg:w="16"/><text x="5.6754%" y="1983.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (77 samples, 0.06%)</title><rect x="5.4152%" y="2005" width="0.0563%" height="15" fill="rgb(239,76,54)" fg:x="7410" fg:w="77"/><text x="5.6652%" y="2015.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (45 samples, 0.03%)</title><rect x="5.4385%" y="1989" width="0.0329%" height="15" fill="rgb(231,124,27)" fg:x="7442" fg:w="45"/><text x="5.6885%" y="1999.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (33 samples, 0.02%)</title><rect x="5.4729%" y="2005" width="0.0241%" height="15" fill="rgb(249,195,6)" fg:x="7489" fg:w="33"/><text x="5.7229%" y="2015.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (61 samples, 0.04%)</title><rect x="5.4992%" y="2005" width="0.0446%" height="15" fill="rgb(237,174,47)" fg:x="7525" fg:w="61"/><text x="5.7492%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (16 samples, 0.01%)</title><rect x="5.5321%" y="1989" width="0.0117%" height="15" fill="rgb(206,201,31)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (16 samples, 0.01%)</title><rect x="5.5321%" y="1973" width="0.0117%" height="15" fill="rgb(231,57,52)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="5.5321%" y="1957" width="0.0117%" height="15" fill="rgb(248,177,22)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="5.5321%" y="1941" width="0.0117%" height="15" fill="rgb(215,211,37)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (16 samples, 0.01%)</title><rect x="5.5321%" y="1925" width="0.0117%" height="15" fill="rgb(241,128,51)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (16 samples, 0.01%)</title><rect x="5.5321%" y="1909" width="0.0117%" height="15" fill="rgb(227,165,31)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.01%)</title><rect x="5.5321%" y="1893" width="0.0117%" height="15" fill="rgb(228,167,24)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.01%)</title><rect x="5.5321%" y="1877" width="0.0117%" height="15" fill="rgb(228,143,12)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.01%)</title><rect x="5.5321%" y="1861" width="0.0117%" height="15" fill="rgb(249,149,8)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1871.50"></text></g><g><title>__rust_alloc (16 samples, 0.01%)</title><rect x="5.5321%" y="1845" width="0.0117%" height="15" fill="rgb(243,35,44)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1855.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (16 samples, 0.01%)</title><rect x="5.5321%" y="1829" width="0.0117%" height="15" fill="rgb(246,89,9)" fg:x="7570" fg:w="16"/><text x="5.7821%" y="1839.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (468 samples, 0.34%)</title><rect x="5.5438%" y="2005" width="0.3420%" height="15" fill="rgb(233,213,13)" fg:x="7586" fg:w="468"/><text x="5.7938%" y="2015.50"></text></g><g><title>[anon] (7,691 samples, 5.62%)</title><rect x="0.2872%" y="2021" width="5.6205%" height="15" fill="rgb(233,141,41)" fg:x="393" fg:w="7691"/><text x="0.5372%" y="2031.50">[anon]</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (30 samples, 0.02%)</title><rect x="5.8858%" y="2005" width="0.0219%" height="15" fill="rgb(239,167,4)" fg:x="8054" fg:w="30"/><text x="6.1358%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="5.9092%" y="2005" width="0.0190%" height="15" fill="rgb(209,217,16)" fg:x="8086" fg:w="26"/><text x="6.1592%" y="2015.50"></text></g><g><title>[epoxy-server] (40 samples, 0.03%)</title><rect x="5.9077%" y="2021" width="0.0292%" height="15" fill="rgb(219,88,35)" fg:x="8084" fg:w="40"/><text x="6.1577%" y="2031.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (18 samples, 0.01%)</title><rect x="5.9406%" y="1781" width="0.0132%" height="15" fill="rgb(220,193,23)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1791.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.01%)</title><rect x="5.9406%" y="1765" width="0.0132%" height="15" fill="rgb(230,90,52)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1775.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.01%)</title><rect x="5.9406%" y="1749" width="0.0132%" height="15" fill="rgb(252,106,19)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1759.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (18 samples, 0.01%)</title><rect x="5.9406%" y="1733" width="0.0132%" height="15" fill="rgb(206,74,20)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1743.50"></text></g><g><title>parking_lot_core::parking_lot::park (18 samples, 0.01%)</title><rect x="5.9406%" y="1717" width="0.0132%" height="15" fill="rgb(230,138,44)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1727.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (18 samples, 0.01%)</title><rect x="5.9406%" y="1701" width="0.0132%" height="15" fill="rgb(235,182,43)" fg:x="8129" fg:w="18"/><text x="6.1906%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.02%)</title><rect x="5.9713%" y="1349" width="0.0219%" height="15" fill="rgb(242,16,51)" fg:x="8171" fg:w="30"/><text x="6.2213%" y="1359.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (18 samples, 0.01%)</title><rect x="6.0466%" y="1301" width="0.0132%" height="15" fill="rgb(248,9,4)" fg:x="8274" fg:w="18"/><text x="6.2966%" y="1311.50"></text></g><g><title>__floattidf (24 samples, 0.02%)</title><rect x="6.0444%" y="1333" width="0.0175%" height="15" fill="rgb(210,31,22)" fg:x="8271" fg:w="24"/><text x="6.2944%" y="1343.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (24 samples, 0.02%)</title><rect x="6.0444%" y="1317" width="0.0175%" height="15" fill="rgb(239,54,39)" fg:x="8271" fg:w="24"/><text x="6.2944%" y="1327.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (259 samples, 0.19%)</title><rect x="6.0648%" y="1333" width="0.1893%" height="15" fill="rgb(230,99,41)" fg:x="8299" fg:w="259"/><text x="6.3148%" y="1343.50"></text></g><g><title>pow (259 samples, 0.19%)</title><rect x="6.0648%" y="1317" width="0.1893%" height="15" fill="rgb(253,106,12)" fg:x="8299" fg:w="259"/><text x="6.3148%" y="1327.50"></text></g><g><title>[libm.so.6] (169 samples, 0.12%)</title><rect x="6.1306%" y="1301" width="0.1235%" height="15" fill="rgb(213,46,41)" fg:x="8389" fg:w="169"/><text x="6.3806%" y="1311.50"></text></g><g><title>clock_gettime (105 samples, 0.08%)</title><rect x="6.2578%" y="1317" width="0.0767%" height="15" fill="rgb(215,133,35)" fg:x="8563" fg:w="105"/><text x="6.5078%" y="1327.50"></text></g><g><title>__vdso_clock_gettime (57 samples, 0.04%)</title><rect x="6.2928%" y="1301" width="0.0417%" height="15" fill="rgb(213,28,5)" fg:x="8611" fg:w="57"/><text x="6.5428%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (467 samples, 0.34%)</title><rect x="5.9939%" y="1349" width="0.3413%" height="15" fill="rgb(215,77,49)" fg:x="8202" fg:w="467"/><text x="6.2439%" y="1359.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (111 samples, 0.08%)</title><rect x="6.2541%" y="1333" width="0.0811%" height="15" fill="rgb(248,100,22)" fg:x="8558" fg:w="111"/><text x="6.5041%" y="1343.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (170 samples, 0.12%)</title><rect x="6.3418%" y="1333" width="0.1242%" height="15" fill="rgb(208,67,9)" fg:x="8678" fg:w="170"/><text x="6.5918%" y="1343.50"></text></g><g><title>clock_gettime (156 samples, 0.11%)</title><rect x="6.3520%" y="1317" width="0.1140%" height="15" fill="rgb(219,133,21)" fg:x="8692" fg:w="156"/><text x="6.6020%" y="1327.50"></text></g><g><title>__vdso_clock_gettime (96 samples, 0.07%)</title><rect x="6.3959%" y="1301" width="0.0702%" height="15" fill="rgb(246,46,29)" fg:x="8752" fg:w="96"/><text x="6.6459%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (180 samples, 0.13%)</title><rect x="6.3352%" y="1349" width="0.1315%" height="15" fill="rgb(246,185,52)" fg:x="8669" fg:w="180"/><text x="6.5852%" y="1359.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (34 samples, 0.02%)</title><rect x="6.5084%" y="1269" width="0.0248%" height="15" fill="rgb(252,136,11)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (34 samples, 0.02%)</title><rect x="6.5084%" y="1253" width="0.0248%" height="15" fill="rgb(219,138,53)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (34 samples, 0.02%)</title><rect x="6.5084%" y="1237" width="0.0248%" height="15" fill="rgb(211,51,23)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (34 samples, 0.02%)</title><rect x="6.5084%" y="1221" width="0.0248%" height="15" fill="rgb(247,221,28)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.02%)</title><rect x="6.5084%" y="1205" width="0.0248%" height="15" fill="rgb(251,222,45)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (34 samples, 0.02%)</title><rect x="6.5084%" y="1189" width="0.0248%" height="15" fill="rgb(217,162,53)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (34 samples, 0.02%)</title><rect x="6.5084%" y="1173" width="0.0248%" height="15" fill="rgb(229,93,14)" fg:x="8906" fg:w="34"/><text x="6.7584%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (33 samples, 0.02%)</title><rect x="6.5092%" y="1157" width="0.0241%" height="15" fill="rgb(209,67,49)" fg:x="8907" fg:w="33"/><text x="6.7592%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (33 samples, 0.02%)</title><rect x="6.5092%" y="1141" width="0.0241%" height="15" fill="rgb(213,87,29)" fg:x="8907" fg:w="33"/><text x="6.7592%" y="1151.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (33 samples, 0.02%)</title><rect x="6.5092%" y="1125" width="0.0241%" height="15" fill="rgb(205,151,52)" fg:x="8907" fg:w="33"/><text x="6.7592%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (32 samples, 0.02%)</title><rect x="6.5099%" y="1109" width="0.0234%" height="15" fill="rgb(253,215,39)" fg:x="8908" fg:w="32"/><text x="6.7599%" y="1119.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (37 samples, 0.03%)</title><rect x="6.5077%" y="1285" width="0.0270%" height="15" fill="rgb(221,220,41)" fg:x="8905" fg:w="37"/><text x="6.7577%" y="1295.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (66 samples, 0.05%)</title><rect x="6.4967%" y="1301" width="0.0482%" height="15" fill="rgb(218,133,21)" fg:x="8890" fg:w="66"/><text x="6.7467%" y="1311.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (14 samples, 0.01%)</title><rect x="6.5347%" y="1285" width="0.0102%" height="15" fill="rgb(221,193,43)" fg:x="8942" fg:w="14"/><text x="6.7847%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (69 samples, 0.05%)</title><rect x="6.4953%" y="1333" width="0.0504%" height="15" fill="rgb(240,128,52)" fg:x="8888" fg:w="69"/><text x="6.7453%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (68 samples, 0.05%)</title><rect x="6.4960%" y="1317" width="0.0497%" height="15" fill="rgb(253,114,12)" fg:x="8889" fg:w="68"/><text x="6.7460%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (110 samples, 0.08%)</title><rect x="6.4668%" y="1349" width="0.0804%" height="15" fill="rgb(215,223,47)" fg:x="8849" fg:w="110"/><text x="6.7168%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (55 samples, 0.04%)</title><rect x="6.7788%" y="1333" width="0.0402%" height="15" fill="rgb(248,225,23)" fg:x="9276" fg:w="55"/><text x="7.0288%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (55 samples, 0.04%)</title><rect x="6.7788%" y="1317" width="0.0402%" height="15" fill="rgb(250,108,0)" fg:x="9276" fg:w="55"/><text x="7.0288%" y="1327.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (55 samples, 0.04%)</title><rect x="6.7788%" y="1301" width="0.0402%" height="15" fill="rgb(228,208,7)" fg:x="9276" fg:w="55"/><text x="7.0288%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (46 samples, 0.03%)</title><rect x="6.9725%" y="1317" width="0.0336%" height="15" fill="rgb(244,45,10)" fg:x="9541" fg:w="46"/><text x="7.2225%" y="1327.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (23 samples, 0.02%)</title><rect x="7.0112%" y="1301" width="0.0168%" height="15" fill="rgb(207,125,25)" fg:x="9594" fg:w="23"/><text x="7.2612%" y="1311.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (23 samples, 0.02%)</title><rect x="7.0112%" y="1285" width="0.0168%" height="15" fill="rgb(210,195,18)" fg:x="9594" fg:w="23"/><text x="7.2612%" y="1295.50"></text></g><g><title>core::cell::BorrowRefMut::new (23 samples, 0.02%)</title><rect x="7.0112%" y="1269" width="0.0168%" height="15" fill="rgb(249,80,12)" fg:x="9594" fg:w="23"/><text x="7.2612%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (35 samples, 0.03%)</title><rect x="7.0061%" y="1317" width="0.0256%" height="15" fill="rgb(221,65,9)" fg:x="9587" fg:w="35"/><text x="7.2561%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (177 samples, 0.13%)</title><rect x="7.0434%" y="1285" width="0.1294%" height="15" fill="rgb(235,49,36)" fg:x="9638" fg:w="177"/><text x="7.2934%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (177 samples, 0.13%)</title><rect x="7.0434%" y="1269" width="0.1294%" height="15" fill="rgb(225,32,20)" fg:x="9638" fg:w="177"/><text x="7.2934%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (85 samples, 0.06%)</title><rect x="7.1800%" y="1269" width="0.0621%" height="15" fill="rgb(215,141,46)" fg:x="9825" fg:w="85"/><text x="7.4300%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (85 samples, 0.06%)</title><rect x="7.1800%" y="1253" width="0.0621%" height="15" fill="rgb(250,160,47)" fg:x="9825" fg:w="85"/><text x="7.4300%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (75 samples, 0.05%)</title><rect x="7.2451%" y="1221" width="0.0548%" height="15" fill="rgb(216,222,40)" fg:x="9914" fg:w="75"/><text x="7.4951%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (75 samples, 0.05%)</title><rect x="7.2451%" y="1205" width="0.0548%" height="15" fill="rgb(234,217,39)" fg:x="9914" fg:w="75"/><text x="7.4951%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (75 samples, 0.05%)</title><rect x="7.2451%" y="1189" width="0.0548%" height="15" fill="rgb(207,178,40)" fg:x="9914" fg:w="75"/><text x="7.4951%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (168 samples, 0.12%)</title><rect x="7.3393%" y="1157" width="0.1228%" height="15" fill="rgb(221,136,13)" fg:x="10043" fg:w="168"/><text x="7.5893%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (168 samples, 0.12%)</title><rect x="7.3393%" y="1141" width="0.1228%" height="15" fill="rgb(249,199,10)" fg:x="10043" fg:w="168"/><text x="7.5893%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (284 samples, 0.21%)</title><rect x="7.3174%" y="1173" width="0.2075%" height="15" fill="rgb(249,222,13)" fg:x="10013" fg:w="284"/><text x="7.5674%" y="1183.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (86 samples, 0.06%)</title><rect x="7.4621%" y="1157" width="0.0628%" height="15" fill="rgb(244,185,38)" fg:x="10211" fg:w="86"/><text x="7.7121%" y="1167.50"></text></g><g><title>syscall (86 samples, 0.06%)</title><rect x="7.4621%" y="1141" width="0.0628%" height="15" fill="rgb(236,202,9)" fg:x="10211" fg:w="86"/><text x="7.7121%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (24 samples, 0.02%)</title><rect x="7.5250%" y="1173" width="0.0175%" height="15" fill="rgb(250,229,37)" fg:x="10297" fg:w="24"/><text x="7.7750%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="7.5250%" y="1157" width="0.0175%" height="15" fill="rgb(206,174,23)" fg:x="10297" fg:w="24"/><text x="7.7750%" y="1167.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="7.5250%" y="1141" width="0.0175%" height="15" fill="rgb(211,33,43)" fg:x="10297" fg:w="24"/><text x="7.7750%" y="1151.50"></text></g><g><title>core::ptr::write (24 samples, 0.02%)</title><rect x="7.5250%" y="1125" width="0.0175%" height="15" fill="rgb(245,58,50)" fg:x="10297" fg:w="24"/><text x="7.7750%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::hash (19 samples, 0.01%)</title><rect x="7.5491%" y="1157" width="0.0139%" height="15" fill="rgb(244,68,36)" fg:x="10330" fg:w="19"/><text x="7.7991%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (76 samples, 0.06%)</title><rect x="7.5454%" y="1173" width="0.0555%" height="15" fill="rgb(232,229,15)" fg:x="10325" fg:w="76"/><text x="7.7954%" y="1183.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (52 samples, 0.04%)</title><rect x="7.5630%" y="1157" width="0.0380%" height="15" fill="rgb(254,30,23)" fg:x="10349" fg:w="52"/><text x="7.8130%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (52 samples, 0.04%)</title><rect x="7.5630%" y="1141" width="0.0380%" height="15" fill="rgb(235,160,14)" fg:x="10349" fg:w="52"/><text x="7.8130%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (52 samples, 0.04%)</title><rect x="7.5630%" y="1125" width="0.0380%" height="15" fill="rgb(212,155,44)" fg:x="10349" fg:w="52"/><text x="7.8130%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (430 samples, 0.31%)</title><rect x="7.3160%" y="1189" width="0.3142%" height="15" fill="rgb(226,2,50)" fg:x="10011" fg:w="430"/><text x="7.5660%" y="1199.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (40 samples, 0.03%)</title><rect x="7.6010%" y="1173" width="0.0292%" height="15" fill="rgb(234,177,6)" fg:x="10401" fg:w="40"/><text x="7.8510%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.03%)</title><rect x="7.6024%" y="1157" width="0.0278%" height="15" fill="rgb(217,24,9)" fg:x="10403" fg:w="38"/><text x="7.8524%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (38 samples, 0.03%)</title><rect x="7.6024%" y="1141" width="0.0278%" height="15" fill="rgb(220,13,46)" fg:x="10403" fg:w="38"/><text x="7.8524%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (536 samples, 0.39%)</title><rect x="7.2421%" y="1269" width="0.3917%" height="15" fill="rgb(239,221,27)" fg:x="9910" fg:w="536"/><text x="7.4921%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (536 samples, 0.39%)</title><rect x="7.2421%" y="1253" width="0.3917%" height="15" fill="rgb(222,198,25)" fg:x="9910" fg:w="536"/><text x="7.4921%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (536 samples, 0.39%)</title><rect x="7.2421%" y="1237" width="0.3917%" height="15" fill="rgb(211,99,13)" fg:x="9910" fg:w="536"/><text x="7.4921%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::park (455 samples, 0.33%)</title><rect x="7.3013%" y="1221" width="0.3325%" height="15" fill="rgb(232,111,31)" fg:x="9991" fg:w="455"/><text x="7.5513%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (455 samples, 0.33%)</title><rect x="7.3013%" y="1205" width="0.3325%" height="15" fill="rgb(245,82,37)" fg:x="9991" fg:w="455"/><text x="7.5513%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (651 samples, 0.48%)</title><rect x="7.1727%" y="1285" width="0.4757%" height="15" fill="rgb(227,149,46)" fg:x="9815" fg:w="651"/><text x="7.4227%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.01%)</title><rect x="7.6338%" y="1269" width="0.0146%" height="15" fill="rgb(218,36,50)" fg:x="10446" fg:w="20"/><text x="7.8838%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15 samples, 0.01%)</title><rect x="7.6375%" y="1253" width="0.0110%" height="15" fill="rgb(226,80,48)" fg:x="10451" fg:w="15"/><text x="7.8875%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.01%)</title><rect x="7.6375%" y="1237" width="0.0110%" height="15" fill="rgb(238,224,15)" fg:x="10451" fg:w="15"/><text x="7.8875%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (15 samples, 0.01%)</title><rect x="7.6375%" y="1221" width="0.0110%" height="15" fill="rgb(241,136,10)" fg:x="10451" fg:w="15"/><text x="7.8875%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.01%)</title><rect x="7.6375%" y="1205" width="0.0110%" height="15" fill="rgb(208,32,45)" fg:x="10451" fg:w="15"/><text x="7.8875%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (150 samples, 0.11%)</title><rect x="7.8896%" y="1269" width="0.1096%" height="15" fill="rgb(207,135,9)" fg:x="10796" fg:w="150"/><text x="8.1396%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (150 samples, 0.11%)</title><rect x="7.8896%" y="1253" width="0.1096%" height="15" fill="rgb(206,86,44)" fg:x="10796" fg:w="150"/><text x="8.1396%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (287 samples, 0.21%)</title><rect x="7.9992%" y="1269" width="0.2097%" height="15" fill="rgb(245,177,15)" fg:x="10946" fg:w="287"/><text x="8.2492%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_swap (287 samples, 0.21%)</title><rect x="7.9992%" y="1253" width="0.2097%" height="15" fill="rgb(206,64,50)" fg:x="10946" fg:w="287"/><text x="8.2492%" y="1263.50"></text></g><g><title>tokio::runtime::driver::Driver::park (23 samples, 0.02%)</title><rect x="8.2090%" y="1269" width="0.0168%" height="15" fill="rgb(234,36,40)" fg:x="11233" fg:w="23"/><text x="8.4590%" y="1279.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (18 samples, 0.01%)</title><rect x="8.2126%" y="1253" width="0.0132%" height="15" fill="rgb(213,64,8)" fg:x="11238" fg:w="18"/><text x="8.4626%" y="1263.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (39 samples, 0.03%)</title><rect x="8.4012%" y="1157" width="0.0285%" height="15" fill="rgb(210,75,36)" fg:x="11496" fg:w="39"/><text x="8.6512%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 samples, 0.07%)</title><rect x="8.3785%" y="1173" width="0.0694%" height="15" fill="rgb(229,88,21)" fg:x="11465" fg:w="95"/><text x="8.6285%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::unchecked_iterator::UncheckedIterator&gt;::next_unchecked (25 samples, 0.02%)</title><rect x="8.4297%" y="1157" width="0.0183%" height="15" fill="rgb(252,204,47)" fg:x="11535" fg:w="25"/><text x="8.6797%" y="1167.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (25 samples, 0.02%)</title><rect x="8.4297%" y="1141" width="0.0183%" height="15" fill="rgb(208,77,27)" fg:x="11535" fg:w="25"/><text x="8.6797%" y="1151.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::add (25 samples, 0.02%)</title><rect x="8.4297%" y="1125" width="0.0183%" height="15" fill="rgb(221,76,26)" fg:x="11535" fg:w="25"/><text x="8.6797%" y="1135.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::get_mut (31 samples, 0.02%)</title><rect x="8.4479%" y="1141" width="0.0227%" height="15" fill="rgb(225,139,18)" fg:x="11560" fg:w="31"/><text x="8.6979%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::get_mut (31 samples, 0.02%)</title><rect x="8.4479%" y="1125" width="0.0227%" height="15" fill="rgb(230,137,11)" fg:x="11560" fg:w="31"/><text x="8.6979%" y="1135.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (31 samples, 0.02%)</title><rect x="8.4479%" y="1109" width="0.0227%" height="15" fill="rgb(212,28,1)" fg:x="11560" fg:w="31"/><text x="8.6979%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (334 samples, 0.24%)</title><rect x="9.5112%" y="1109" width="0.2441%" height="15" fill="rgb(248,164,17)" fg:x="13015" fg:w="334"/><text x="9.7612%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (334 samples, 0.24%)</title><rect x="9.5112%" y="1093" width="0.2441%" height="15" fill="rgb(222,171,42)" fg:x="13015" fg:w="334"/><text x="9.7612%" y="1103.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (181 samples, 0.13%)</title><rect x="9.6231%" y="1077" width="0.1323%" height="15" fill="rgb(243,84,45)" fg:x="13168" fg:w="181"/><text x="9.8731%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (646 samples, 0.47%)</title><rect x="9.7553%" y="1109" width="0.4721%" height="15" fill="rgb(252,49,23)" fg:x="13349" fg:w="646"/><text x="10.0053%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (646 samples, 0.47%)</title><rect x="9.7553%" y="1093" width="0.4721%" height="15" fill="rgb(215,19,7)" fg:x="13349" fg:w="646"/><text x="10.0053%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (59 samples, 0.04%)</title><rect x="10.2274%" y="1093" width="0.0431%" height="15" fill="rgb(238,81,41)" fg:x="13995" fg:w="59"/><text x="10.4774%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (59 samples, 0.04%)</title><rect x="10.2274%" y="1077" width="0.0431%" height="15" fill="rgb(210,199,37)" fg:x="13995" fg:w="59"/><text x="10.4774%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2,794 samples, 2.04%)</title><rect x="8.2835%" y="1253" width="2.0418%" height="15" fill="rgb(244,192,49)" fg:x="11335" fg:w="2794"/><text x="8.5335%" y="1263.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2,794 samples, 2.04%)</title><rect x="8.2835%" y="1237" width="2.0418%" height="15" fill="rgb(226,211,11)" fg:x="11335" fg:w="2794"/><text x="8.5335%" y="1247.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,794 samples, 2.04%)</title><rect x="8.2835%" y="1221" width="2.0418%" height="15" fill="rgb(236,162,54)" fg:x="11335" fg:w="2794"/><text x="8.5335%" y="1231.50">c..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,794 samples, 2.04%)</title><rect x="8.2835%" y="1205" width="2.0418%" height="15" fill="rgb(220,229,9)" fg:x="11335" fg:w="2794"/><text x="8.5335%" y="1215.50">&lt;..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (2,794 samples, 2.04%)</title><rect x="8.2835%" y="1189" width="2.0418%" height="15" fill="rgb(250,87,22)" fg:x="11335" fg:w="2794"/><text x="8.5335%" y="1199.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,569 samples, 1.88%)</title><rect x="8.4479%" y="1173" width="1.8774%" height="15" fill="rgb(239,43,17)" fg:x="11560" fg:w="2569"/><text x="8.6979%" y="1183.50">c..</text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (2,569 samples, 1.88%)</title><rect x="8.4479%" y="1157" width="1.8774%" height="15" fill="rgb(231,177,25)" fg:x="11560" fg:w="2569"/><text x="8.6979%" y="1167.50">t..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2,538 samples, 1.85%)</title><rect x="8.4706%" y="1141" width="1.8547%" height="15" fill="rgb(219,179,1)" fg:x="11591" fg:w="2538"/><text x="8.7206%" y="1151.50">t..</text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2,508 samples, 1.83%)</title><rect x="8.4925%" y="1125" width="1.8328%" height="15" fill="rgb(238,219,53)" fg:x="11621" fg:w="2508"/><text x="8.7425%" y="1135.50">t..</text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (134 samples, 0.10%)</title><rect x="10.2274%" y="1109" width="0.0979%" height="15" fill="rgb(232,167,36)" fg:x="13995" fg:w="134"/><text x="10.4774%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (75 samples, 0.05%)</title><rect x="10.2705%" y="1093" width="0.0548%" height="15" fill="rgb(244,19,51)" fg:x="14054" fg:w="75"/><text x="10.5205%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (201 samples, 0.15%)</title><rect x="10.3253%" y="1253" width="0.1469%" height="15" fill="rgb(224,6,22)" fg:x="14129" fg:w="201"/><text x="10.5753%" y="1263.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 samples, 0.15%)</title><rect x="10.3253%" y="1237" width="0.1469%" height="15" fill="rgb(224,145,5)" fg:x="14129" fg:w="201"/><text x="10.5753%" y="1247.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (193 samples, 0.14%)</title><rect x="10.3312%" y="1221" width="0.1410%" height="15" fill="rgb(234,130,49)" fg:x="14137" fg:w="193"/><text x="10.5812%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (176 samples, 0.13%)</title><rect x="10.3436%" y="1205" width="0.1286%" height="15" fill="rgb(254,6,2)" fg:x="14154" fg:w="176"/><text x="10.5936%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (176 samples, 0.13%)</title><rect x="10.3436%" y="1189" width="0.1286%" height="15" fill="rgb(208,96,46)" fg:x="14154" fg:w="176"/><text x="10.5936%" y="1199.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="10.4788%" y="1237" width="0.0190%" height="15" fill="rgb(239,3,39)" fg:x="14339" fg:w="26"/><text x="10.7288%" y="1247.50"></text></g><g><title>std::sync::poison::Flag::guard (26 samples, 0.02%)</title><rect x="10.4788%" y="1221" width="0.0190%" height="15" fill="rgb(233,210,1)" fg:x="14339" fg:w="26"/><text x="10.7288%" y="1231.50"></text></g><g><title>std::thread::panicking (17 samples, 0.01%)</title><rect x="10.4854%" y="1205" width="0.0124%" height="15" fill="rgb(244,137,37)" fg:x="14348" fg:w="17"/><text x="10.7354%" y="1215.50"></text></g><g><title>std::panicking::panicking (17 samples, 0.01%)</title><rect x="10.4854%" y="1189" width="0.0124%" height="15" fill="rgb(240,136,2)" fg:x="14348" fg:w="17"/><text x="10.7354%" y="1199.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (17 samples, 0.01%)</title><rect x="10.4854%" y="1173" width="0.0124%" height="15" fill="rgb(239,18,37)" fg:x="14348" fg:w="17"/><text x="10.7354%" y="1183.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (182 samples, 0.13%)</title><rect x="10.4788%" y="1253" width="0.1330%" height="15" fill="rgb(218,185,22)" fg:x="14339" fg:w="182"/><text x="10.7288%" y="1263.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write (156 samples, 0.11%)</title><rect x="10.4978%" y="1237" width="0.1140%" height="15" fill="rgb(225,218,4)" fg:x="14365" fg:w="156"/><text x="10.7478%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (154 samples, 0.11%)</title><rect x="10.4993%" y="1221" width="0.1125%" height="15" fill="rgb(230,182,32)" fg:x="14367" fg:w="154"/><text x="10.7493%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (154 samples, 0.11%)</title><rect x="10.4993%" y="1205" width="0.1125%" height="15" fill="rgb(242,56,43)" fg:x="14367" fg:w="154"/><text x="10.7493%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (123 samples, 0.09%)</title><rect x="10.6264%" y="1221" width="0.0899%" height="15" fill="rgb(233,99,24)" fg:x="14541" fg:w="123"/><text x="10.8764%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (123 samples, 0.09%)</title><rect x="10.6264%" y="1205" width="0.0899%" height="15" fill="rgb(234,209,42)" fg:x="14541" fg:w="123"/><text x="10.8764%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (123 samples, 0.09%)</title><rect x="10.6264%" y="1189" width="0.0899%" height="15" fill="rgb(227,7,12)" fg:x="14541" fg:w="123"/><text x="10.8764%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (123 samples, 0.09%)</title><rect x="10.6264%" y="1173" width="0.0899%" height="15" fill="rgb(245,203,43)" fg:x="14541" fg:w="123"/><text x="10.8764%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (118 samples, 0.09%)</title><rect x="10.6301%" y="1157" width="0.0862%" height="15" fill="rgb(238,205,33)" fg:x="14546" fg:w="118"/><text x="10.8801%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (118 samples, 0.09%)</title><rect x="10.6301%" y="1141" width="0.0862%" height="15" fill="rgb(231,56,7)" fg:x="14546" fg:w="118"/><text x="10.8801%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (147 samples, 0.11%)</title><rect x="10.7163%" y="1221" width="0.1074%" height="15" fill="rgb(244,186,29)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (147 samples, 0.11%)</title><rect x="10.7163%" y="1205" width="0.1074%" height="15" fill="rgb(234,111,31)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1215.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.11%)</title><rect x="10.7163%" y="1189" width="0.1074%" height="15" fill="rgb(241,149,10)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (147 samples, 0.11%)</title><rect x="10.7163%" y="1173" width="0.1074%" height="15" fill="rgb(249,206,44)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (147 samples, 0.11%)</title><rect x="10.7163%" y="1157" width="0.1074%" height="15" fill="rgb(251,153,30)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (147 samples, 0.11%)</title><rect x="10.7163%" y="1141" width="0.1074%" height="15" fill="rgb(239,152,38)" fg:x="14664" fg:w="147"/><text x="10.9663%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (144 samples, 0.11%)</title><rect x="10.8237%" y="1221" width="0.1052%" height="15" fill="rgb(249,139,47)" fg:x="14811" fg:w="144"/><text x="11.0737%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (144 samples, 0.11%)</title><rect x="10.8237%" y="1205" width="0.1052%" height="15" fill="rgb(244,64,35)" fg:x="14811" fg:w="144"/><text x="11.0737%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (144 samples, 0.11%)</title><rect x="10.8237%" y="1189" width="0.1052%" height="15" fill="rgb(216,46,15)" fg:x="14811" fg:w="144"/><text x="11.0737%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (139 samples, 0.10%)</title><rect x="10.8274%" y="1173" width="0.1016%" height="15" fill="rgb(250,74,19)" fg:x="14816" fg:w="139"/><text x="11.0774%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (139 samples, 0.10%)</title><rect x="10.8274%" y="1157" width="0.1016%" height="15" fill="rgb(249,42,33)" fg:x="14816" fg:w="139"/><text x="11.0774%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (156 samples, 0.11%)</title><rect x="10.9385%" y="1173" width="0.1140%" height="15" fill="rgb(242,149,17)" fg:x="14968" fg:w="156"/><text x="11.1885%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (156 samples, 0.11%)</title><rect x="10.9385%" y="1157" width="0.1140%" height="15" fill="rgb(244,29,21)" fg:x="14968" fg:w="156"/><text x="11.1885%" y="1167.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (675 samples, 0.49%)</title><rect x="10.6118%" y="1253" width="0.4933%" height="15" fill="rgb(220,130,37)" fg:x="14521" fg:w="675"/><text x="10.8618%" y="1263.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (675 samples, 0.49%)</title><rect x="10.6118%" y="1237" width="0.4933%" height="15" fill="rgb(211,67,2)" fg:x="14521" fg:w="675"/><text x="10.8618%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (241 samples, 0.18%)</title><rect x="10.9290%" y="1221" width="0.1761%" height="15" fill="rgb(235,68,52)" fg:x="14955" fg:w="241"/><text x="11.1790%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (241 samples, 0.18%)</title><rect x="10.9290%" y="1205" width="0.1761%" height="15" fill="rgb(246,142,3)" fg:x="14955" fg:w="241"/><text x="11.1790%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (241 samples, 0.18%)</title><rect x="10.9290%" y="1189" width="0.1761%" height="15" fill="rgb(241,25,7)" fg:x="14955" fg:w="241"/><text x="11.1790%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (72 samples, 0.05%)</title><rect x="11.0525%" y="1173" width="0.0526%" height="15" fill="rgb(242,119,39)" fg:x="15124" fg:w="72"/><text x="11.3025%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (72 samples, 0.05%)</title><rect x="11.0525%" y="1157" width="0.0526%" height="15" fill="rgb(241,98,45)" fg:x="15124" fg:w="72"/><text x="11.3025%" y="1167.50"></text></g><g><title>tokio::runtime::driver::Handle::time (167 samples, 0.12%)</title><rect x="11.1066%" y="1253" width="0.1220%" height="15" fill="rgb(254,28,30)" fg:x="15198" fg:w="167"/><text x="11.3566%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (165 samples, 0.12%)</title><rect x="11.1080%" y="1237" width="0.1206%" height="15" fill="rgb(241,142,54)" fg:x="15200" fg:w="165"/><text x="11.3580%" y="1247.50"></text></g><g><title>tokio::runtime::driver::IoStack::park (27 samples, 0.02%)</title><rect x="11.2286%" y="1253" width="0.0197%" height="15" fill="rgb(222,85,15)" fg:x="15365" fg:w="27"/><text x="11.4786%" y="1263.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (229 samples, 0.17%)</title><rect x="11.2805%" y="1237" width="0.1674%" height="15" fill="rgb(210,85,47)" fg:x="15436" fg:w="229"/><text x="11.5305%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (229 samples, 0.17%)</title><rect x="11.2805%" y="1221" width="0.1674%" height="15" fill="rgb(224,206,25)" fg:x="15436" fg:w="229"/><text x="11.5305%" y="1231.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (229 samples, 0.17%)</title><rect x="11.2805%" y="1205" width="0.1674%" height="15" fill="rgb(243,201,19)" fg:x="15436" fg:w="229"/><text x="11.5305%" y="1215.50"></text></g><g><title>mio::event::event::Event::token (37 samples, 0.03%)</title><rect x="11.4478%" y="1237" width="0.0270%" height="15" fill="rgb(236,59,4)" fg:x="15665" fg:w="37"/><text x="11.6978%" y="1247.50"></text></g><g><title>mio::sys::unix::selector::event::token (37 samples, 0.03%)</title><rect x="11.4478%" y="1221" width="0.0270%" height="15" fill="rgb(254,179,45)" fg:x="15665" fg:w="37"/><text x="11.6978%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (38 samples, 0.03%)</title><rect x="11.8827%" y="1205" width="0.0278%" height="15" fill="rgb(226,14,10)" fg:x="16260" fg:w="38"/><text x="12.1327%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (38 samples, 0.03%)</title><rect x="11.8827%" y="1189" width="0.0278%" height="15" fill="rgb(244,27,41)" fg:x="16260" fg:w="38"/><text x="12.1327%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (37 samples, 0.03%)</title><rect x="11.8834%" y="1173" width="0.0270%" height="15" fill="rgb(235,35,32)" fg:x="16261" fg:w="37"/><text x="12.1334%" y="1183.50"></text></g><g><title>[libc.so.6] (362 samples, 0.26%)</title><rect x="12.1604%" y="1189" width="0.2645%" height="15" fill="rgb(218,68,31)" fg:x="16640" fg:w="362"/><text x="12.4104%" y="1199.50"></text></g><g><title>mio::poll::Poll::poll (1,446 samples, 1.06%)</title><rect x="11.4749%" y="1237" width="1.0567%" height="15" fill="rgb(207,120,37)" fg:x="15702" fg:w="1446"/><text x="11.7249%" y="1247.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1,433 samples, 1.05%)</title><rect x="11.4844%" y="1221" width="1.0472%" height="15" fill="rgb(227,98,0)" fg:x="15715" fg:w="1433"/><text x="11.7344%" y="1231.50"></text></g><g><title>epoll_wait (850 samples, 0.62%)</title><rect x="11.9104%" y="1205" width="0.6212%" height="15" fill="rgb(207,7,3)" fg:x="16298" fg:w="850"/><text x="12.1604%" y="1215.50"></text></g><g><title>[unknown] (146 samples, 0.11%)</title><rect x="12.4249%" y="1189" width="0.1067%" height="15" fill="rgb(206,98,19)" fg:x="17002" fg:w="146"/><text x="12.6749%" y="1199.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (64 samples, 0.05%)</title><rect x="12.5316%" y="1237" width="0.0468%" height="15" fill="rgb(217,5,26)" fg:x="17148" fg:w="64"/><text x="12.7816%" y="1247.50"></text></g><g><title>mio::event::event::Event::is_write_closed (16 samples, 0.01%)</title><rect x="12.5667%" y="1221" width="0.0117%" height="15" fill="rgb(235,190,38)" fg:x="17196" fg:w="16"/><text x="12.8167%" y="1231.50"></text></g><g><title>mio::sys::unix::selector::event::is_write_closed (16 samples, 0.01%)</title><rect x="12.5667%" y="1205" width="0.0117%" height="15" fill="rgb(247,86,24)" fg:x="17196" fg:w="16"/><text x="12.8167%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1,162 samples, 0.85%)</title><rect x="12.5901%" y="1221" width="0.8492%" height="15" fill="rgb(205,101,16)" fg:x="17228" fg:w="1162"/><text x="12.8401%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,162 samples, 0.85%)</title><rect x="12.5901%" y="1205" width="0.8492%" height="15" fill="rgb(246,168,33)" fg:x="17228" fg:w="1162"/><text x="12.8401%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (748 samples, 0.55%)</title><rect x="13.4392%" y="1221" width="0.5466%" height="15" fill="rgb(231,114,1)" fg:x="18390" fg:w="748"/><text x="13.6892%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (748 samples, 0.55%)</title><rect x="13.4392%" y="1205" width="0.5466%" height="15" fill="rgb(207,184,53)" fg:x="18390" fg:w="748"/><text x="13.6892%" y="1215.50"></text></g><g><title>tokio::util::bit::Pack::pack (28 samples, 0.02%)</title><rect x="13.9910%" y="1221" width="0.0205%" height="15" fill="rgb(224,95,51)" fg:x="19145" fg:w="28"/><text x="14.2410%" y="1231.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1,954 samples, 1.43%)</title><rect x="12.5857%" y="1237" width="1.4280%" height="15" fill="rgb(212,188,45)" fg:x="17222" fg:w="1954"/><text x="12.8357%" y="1247.50"></text></g><g><title>core::mem::drop (918 samples, 0.67%)</title><rect x="14.0363%" y="1221" width="0.6709%" height="15" fill="rgb(223,154,38)" fg:x="19207" fg:w="918"/><text x="14.2863%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (918 samples, 0.67%)</title><rect x="14.0363%" y="1205" width="0.6709%" height="15" fill="rgb(251,22,52)" fg:x="19207" fg:w="918"/><text x="14.2863%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (918 samples, 0.67%)</title><rect x="14.0363%" y="1189" width="0.6709%" height="15" fill="rgb(229,209,22)" fg:x="19207" fg:w="918"/><text x="14.2863%" y="1199.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (918 samples, 0.67%)</title><rect x="14.0363%" y="1173" width="0.6709%" height="15" fill="rgb(234,138,34)" fg:x="19207" fg:w="918"/><text x="14.2863%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (918 samples, 0.67%)</title><rect x="14.0363%" y="1157" width="0.6709%" height="15" fill="rgb(212,95,11)" fg:x="19207" fg:w="918"/><text x="14.2863%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (907 samples, 0.66%)</title><rect x="14.0443%" y="1141" width="0.6628%" height="15" fill="rgb(240,179,47)" fg:x="19218" fg:w="907"/><text x="14.2943%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (907 samples, 0.66%)</title><rect x="14.0443%" y="1125" width="0.6628%" height="15" fill="rgb(240,163,11)" fg:x="19218" fg:w="907"/><text x="14.2943%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.01%)</title><rect x="14.7072%" y="1221" width="0.0117%" height="15" fill="rgb(236,37,12)" fg:x="20125" fg:w="16"/><text x="14.9572%" y="1231.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="14.7072%" y="1205" width="0.0117%" height="15" fill="rgb(232,164,16)" fg:x="20125" fg:w="16"/><text x="14.9572%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (303 samples, 0.22%)</title><rect x="14.7262%" y="1221" width="0.2214%" height="15" fill="rgb(244,205,15)" fg:x="20151" fg:w="303"/><text x="14.9762%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (303 samples, 0.22%)</title><rect x="14.7262%" y="1205" width="0.2214%" height="15" fill="rgb(223,117,47)" fg:x="20151" fg:w="303"/><text x="14.9762%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (303 samples, 0.22%)</title><rect x="14.7262%" y="1189" width="0.2214%" height="15" fill="rgb(244,107,35)" fg:x="20151" fg:w="303"/><text x="14.9762%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (300 samples, 0.22%)</title><rect x="14.7284%" y="1173" width="0.2192%" height="15" fill="rgb(205,140,8)" fg:x="20154" fg:w="300"/><text x="14.9784%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (300 samples, 0.22%)</title><rect x="14.7284%" y="1157" width="0.2192%" height="15" fill="rgb(228,84,46)" fg:x="20154" fg:w="300"/><text x="14.9784%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="14.9739%" y="1093" width="0.0102%" height="15" fill="rgb(254,188,9)" fg:x="20490" fg:w="14"/><text x="15.2239%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (25 samples, 0.02%)</title><rect x="14.9732%" y="1141" width="0.0183%" height="15" fill="rgb(206,112,54)" fg:x="20489" fg:w="25"/><text x="15.2232%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (24 samples, 0.02%)</title><rect x="14.9739%" y="1125" width="0.0175%" height="15" fill="rgb(216,84,49)" fg:x="20490" fg:w="24"/><text x="15.2239%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler (24 samples, 0.02%)</title><rect x="14.9739%" y="1109" width="0.0175%" height="15" fill="rgb(214,194,35)" fg:x="20490" fg:w="24"/><text x="15.2239%" y="1119.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (57 samples, 0.04%)</title><rect x="14.9724%" y="1157" width="0.0417%" height="15" fill="rgb(249,28,3)" fg:x="20488" fg:w="57"/><text x="15.2224%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::schedule (31 samples, 0.02%)</title><rect x="14.9914%" y="1141" width="0.0227%" height="15" fill="rgb(222,56,52)" fg:x="20514" fg:w="31"/><text x="15.2414%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::load (34 samples, 0.02%)</title><rect x="15.0207%" y="1125" width="0.0248%" height="15" fill="rgb(245,217,50)" fg:x="20554" fg:w="34"/><text x="15.2707%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.02%)</title><rect x="15.0207%" y="1109" width="0.0248%" height="15" fill="rgb(213,201,24)" fg:x="20554" fg:w="34"/><text x="15.2707%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.02%)</title><rect x="15.0207%" y="1093" width="0.0248%" height="15" fill="rgb(248,116,28)" fg:x="20554" fg:w="34"/><text x="15.2707%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (5,198 samples, 3.80%)</title><rect x="11.2483%" y="1253" width="3.7987%" height="15" fill="rgb(219,72,43)" fg:x="15392" fg:w="5198"/><text x="11.4983%" y="1263.50">toki..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,414 samples, 1.03%)</title><rect x="14.0137%" y="1237" width="1.0333%" height="15" fill="rgb(209,138,14)" fg:x="19176" fg:w="1414"/><text x="14.2637%" y="1247.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (125 samples, 0.09%)</title><rect x="14.9556%" y="1221" width="0.0913%" height="15" fill="rgb(222,18,33)" fg:x="20465" fg:w="125"/><text x="15.2056%" y="1231.50"></text></g><g><title>core::task::wake::Waker::wake (107 samples, 0.08%)</title><rect x="14.9688%" y="1205" width="0.0782%" height="15" fill="rgb(213,199,7)" fg:x="20483" fg:w="107"/><text x="15.2188%" y="1215.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (107 samples, 0.08%)</title><rect x="14.9688%" y="1189" width="0.0782%" height="15" fill="rgb(250,110,10)" fg:x="20483" fg:w="107"/><text x="15.2188%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (107 samples, 0.08%)</title><rect x="14.9688%" y="1173" width="0.0782%" height="15" fill="rgb(248,123,6)" fg:x="20483" fg:w="107"/><text x="15.2188%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (45 samples, 0.03%)</title><rect x="15.0141%" y="1157" width="0.0329%" height="15" fill="rgb(206,91,31)" fg:x="20545" fg:w="45"/><text x="15.2641%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (45 samples, 0.03%)</title><rect x="15.0141%" y="1141" width="0.0329%" height="15" fill="rgb(211,154,13)" fg:x="20545" fg:w="45"/><text x="15.2641%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.02%)</title><rect x="15.0543%" y="1189" width="0.0183%" height="15" fill="rgb(225,148,7)" fg:x="20600" fg:w="25"/><text x="15.3043%" y="1199.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (25 samples, 0.02%)</title><rect x="15.0543%" y="1173" width="0.0183%" height="15" fill="rgb(220,160,43)" fg:x="20600" fg:w="25"/><text x="15.3043%" y="1183.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (25 samples, 0.02%)</title><rect x="15.0543%" y="1157" width="0.0183%" height="15" fill="rgb(213,52,39)" fg:x="20600" fg:w="25"/><text x="15.3043%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="15.0572%" y="1141" width="0.0153%" height="15" fill="rgb(243,137,7)" fg:x="20604" fg:w="21"/><text x="15.3072%" y="1151.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (65 samples, 0.05%)</title><rect x="15.0543%" y="1237" width="0.0475%" height="15" fill="rgb(230,79,13)" fg:x="20600" fg:w="65"/><text x="15.3043%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (65 samples, 0.05%)</title><rect x="15.0543%" y="1221" width="0.0475%" height="15" fill="rgb(247,105,23)" fg:x="20600" fg:w="65"/><text x="15.3043%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (65 samples, 0.05%)</title><rect x="15.0543%" y="1205" width="0.0475%" height="15" fill="rgb(223,179,41)" fg:x="20600" fg:w="65"/><text x="15.3043%" y="1215.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (40 samples, 0.03%)</title><rect x="15.0726%" y="1189" width="0.0292%" height="15" fill="rgb(218,9,34)" fg:x="20625" fg:w="40"/><text x="15.3226%" y="1199.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (23 samples, 0.02%)</title><rect x="15.0850%" y="1173" width="0.0168%" height="15" fill="rgb(222,106,8)" fg:x="20642" fg:w="23"/><text x="15.3350%" y="1183.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (14 samples, 0.01%)</title><rect x="15.0916%" y="1157" width="0.0102%" height="15" fill="rgb(211,220,0)" fg:x="20651" fg:w="14"/><text x="15.3416%" y="1167.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (28 samples, 0.02%)</title><rect x="15.2268%" y="1093" width="0.0205%" height="15" fill="rgb(229,52,16)" fg:x="20836" fg:w="28"/><text x="15.4768%" y="1103.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (28 samples, 0.02%)</title><rect x="15.2268%" y="1077" width="0.0205%" height="15" fill="rgb(212,155,18)" fg:x="20836" fg:w="28"/><text x="15.4768%" y="1087.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (114 samples, 0.08%)</title><rect x="15.1836%" y="1125" width="0.0833%" height="15" fill="rgb(242,21,14)" fg:x="20777" fg:w="114"/><text x="15.4336%" y="1135.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (114 samples, 0.08%)</title><rect x="15.1836%" y="1109" width="0.0833%" height="15" fill="rgb(222,19,48)" fg:x="20777" fg:w="114"/><text x="15.4336%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (27 samples, 0.02%)</title><rect x="15.2472%" y="1093" width="0.0197%" height="15" fill="rgb(232,45,27)" fg:x="20864" fg:w="27"/><text x="15.4972%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (2,228 samples, 1.63%)</title><rect x="15.8194%" y="1045" width="1.6282%" height="15" fill="rgb(249,103,42)" fg:x="21647" fg:w="2228"/><text x="16.0694%" y="1055.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2,228 samples, 1.63%)</title><rect x="15.8194%" y="1029" width="1.6282%" height="15" fill="rgb(246,81,33)" fg:x="21647" fg:w="2228"/><text x="16.0694%" y="1039.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (2,228 samples, 1.63%)</title><rect x="15.8194%" y="1013" width="1.6282%" height="15" fill="rgb(252,33,42)" fg:x="21647" fg:w="2228"/><text x="16.0694%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (2,087 samples, 1.53%)</title><rect x="15.9225%" y="997" width="1.5252%" height="15" fill="rgb(209,212,41)" fg:x="21788" fg:w="2087"/><text x="16.1725%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (2,087 samples, 1.53%)</title><rect x="15.9225%" y="981" width="1.5252%" height="15" fill="rgb(207,154,6)" fg:x="21788" fg:w="2087"/><text x="16.1725%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (25 samples, 0.02%)</title><rect x="17.4476%" y="981" width="0.0183%" height="15" fill="rgb(223,64,47)" fg:x="23875" fg:w="25"/><text x="17.6976%" y="991.50"></text></g><g><title>core::mem::drop (4,532 samples, 3.31%)</title><rect x="15.8194%" y="1061" width="3.3119%" height="15" fill="rgb(211,161,38)" fg:x="21647" fg:w="4532"/><text x="16.0694%" y="1071.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (2,304 samples, 1.68%)</title><rect x="17.4476%" y="1045" width="1.6837%" height="15" fill="rgb(219,138,40)" fg:x="23875" fg:w="2304"/><text x="17.6976%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (2,304 samples, 1.68%)</title><rect x="17.4476%" y="1029" width="1.6837%" height="15" fill="rgb(241,228,46)" fg:x="23875" fg:w="2304"/><text x="17.6976%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2,304 samples, 1.68%)</title><rect x="17.4476%" y="1013" width="1.6837%" height="15" fill="rgb(223,209,38)" fg:x="23875" fg:w="2304"/><text x="17.6976%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2,304 samples, 1.68%)</title><rect x="17.4476%" y="997" width="1.6837%" height="15" fill="rgb(236,164,45)" fg:x="23875" fg:w="2304"/><text x="17.6976%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2,279 samples, 1.67%)</title><rect x="17.4659%" y="981" width="1.6655%" height="15" fill="rgb(231,15,5)" fg:x="23900" fg:w="2279"/><text x="17.7159%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2,279 samples, 1.67%)</title><rect x="17.4659%" y="965" width="1.6655%" height="15" fill="rgb(252,35,15)" fg:x="23900" fg:w="2279"/><text x="17.7159%" y="975.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (20 samples, 0.01%)</title><rect x="19.1314%" y="1061" width="0.0146%" height="15" fill="rgb(248,181,18)" fg:x="26179" fg:w="20"/><text x="19.3814%" y="1071.50"></text></g><g><title>std::sync::poison::Flag::borrow (55 samples, 0.04%)</title><rect x="19.1460%" y="1029" width="0.0402%" height="15" fill="rgb(233,39,42)" fg:x="26199" fg:w="55"/><text x="19.3960%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::get (30 samples, 0.02%)</title><rect x="19.1643%" y="1013" width="0.0219%" height="15" fill="rgb(238,110,33)" fg:x="26224" fg:w="30"/><text x="19.4143%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (30 samples, 0.02%)</title><rect x="19.1643%" y="997" width="0.0219%" height="15" fill="rgb(233,195,10)" fg:x="26224" fg:w="30"/><text x="19.4143%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.02%)</title><rect x="19.1643%" y="981" width="0.0219%" height="15" fill="rgb(254,105,3)" fg:x="26224" fg:w="30"/><text x="19.4143%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (79 samples, 0.06%)</title><rect x="19.1460%" y="1045" width="0.0577%" height="15" fill="rgb(221,225,9)" fg:x="26199" fg:w="79"/><text x="19.3960%" y="1055.50"></text></g><g><title>std::sync::poison::map_result (24 samples, 0.02%)</title><rect x="19.1862%" y="1029" width="0.0175%" height="15" fill="rgb(224,227,45)" fg:x="26254" fg:w="24"/><text x="19.4362%" y="1039.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (28 samples, 0.02%)</title><rect x="19.2249%" y="1029" width="0.0205%" height="15" fill="rgb(229,198,43)" fg:x="26307" fg:w="28"/><text x="19.4749%" y="1039.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (28 samples, 0.02%)</title><rect x="19.2249%" y="1013" width="0.0205%" height="15" fill="rgb(206,209,35)" fg:x="26307" fg:w="28"/><text x="19.4749%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (2,363 samples, 1.73%)</title><rect x="19.2454%" y="1029" width="1.7269%" height="15" fill="rgb(245,195,53)" fg:x="26335" fg:w="2363"/><text x="19.4954%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,363 samples, 1.73%)</title><rect x="19.2454%" y="1013" width="1.7269%" height="15" fill="rgb(240,92,26)" fg:x="26335" fg:w="2363"/><text x="19.4954%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (31 samples, 0.02%)</title><rect x="20.9722%" y="1029" width="0.0227%" height="15" fill="rgb(207,40,23)" fg:x="28698" fg:w="31"/><text x="21.2222%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.02%)</title><rect x="20.9722%" y="1013" width="0.0227%" height="15" fill="rgb(223,111,35)" fg:x="28698" fg:w="31"/><text x="21.2222%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (2,582 samples, 1.89%)</title><rect x="19.1460%" y="1061" width="1.8869%" height="15" fill="rgb(229,147,28)" fg:x="26199" fg:w="2582"/><text x="19.3960%" y="1071.50">s..</text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (2,503 samples, 1.83%)</title><rect x="19.2037%" y="1045" width="1.8292%" height="15" fill="rgb(211,29,28)" fg:x="26278" fg:w="2503"/><text x="19.4537%" y="1055.50">s..</text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (52 samples, 0.04%)</title><rect x="20.9949%" y="1029" width="0.0380%" height="15" fill="rgb(228,72,33)" fg:x="28729" fg:w="52"/><text x="21.2449%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (86 samples, 0.06%)</title><rect x="21.2010%" y="1045" width="0.0628%" height="15" fill="rgb(205,214,31)" fg:x="29011" fg:w="86"/><text x="21.4510%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (86 samples, 0.06%)</title><rect x="21.2010%" y="1029" width="0.0628%" height="15" fill="rgb(224,111,15)" fg:x="29011" fg:w="86"/><text x="21.4510%" y="1039.50"></text></g><g><title>core::slice::index::get_noubcheck (86 samples, 0.06%)</title><rect x="21.2010%" y="1013" width="0.0628%" height="15" fill="rgb(253,21,26)" fg:x="29011" fg:w="86"/><text x="21.4510%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (30 samples, 0.02%)</title><rect x="21.2638%" y="997" width="0.0219%" height="15" fill="rgb(245,139,43)" fg:x="29097" fg:w="30"/><text x="21.5138%" y="1007.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (30 samples, 0.02%)</title><rect x="21.2638%" y="981" width="0.0219%" height="15" fill="rgb(252,170,7)" fg:x="29097" fg:w="30"/><text x="21.5138%" y="991.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (2,702 samples, 1.97%)</title><rect x="21.0329%" y="1061" width="1.9746%" height="15" fill="rgb(231,118,14)" fg:x="28781" fg:w="2702"/><text x="21.2829%" y="1071.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2,386 samples, 1.74%)</title><rect x="21.2638%" y="1045" width="1.7437%" height="15" fill="rgb(238,83,0)" fg:x="29097" fg:w="2386"/><text x="21.5138%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2,386 samples, 1.74%)</title><rect x="21.2638%" y="1029" width="1.7437%" height="15" fill="rgb(221,39,39)" fg:x="29097" fg:w="2386"/><text x="21.5138%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2,386 samples, 1.74%)</title><rect x="21.2638%" y="1013" width="1.7437%" height="15" fill="rgb(222,119,46)" fg:x="29097" fg:w="2386"/><text x="21.5138%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2,356 samples, 1.72%)</title><rect x="21.2858%" y="997" width="1.7217%" height="15" fill="rgb(222,165,49)" fg:x="29127" fg:w="2356"/><text x="21.5358%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2,356 samples, 1.72%)</title><rect x="21.2858%" y="981" width="1.7217%" height="15" fill="rgb(219,113,52)" fg:x="29127" fg:w="2356"/><text x="21.5358%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (30 samples, 0.02%)</title><rect x="23.0075%" y="1061" width="0.0219%" height="15" fill="rgb(214,7,15)" fg:x="31483" fg:w="30"/><text x="23.2575%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (352 samples, 0.26%)</title><rect x="23.6433%" y="1029" width="0.2572%" height="15" fill="rgb(235,32,4)" fg:x="32353" fg:w="352"/><text x="23.8933%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (352 samples, 0.26%)</title><rect x="23.6433%" y="1013" width="0.2572%" height="15" fill="rgb(238,90,54)" fg:x="32353" fg:w="352"/><text x="23.8933%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (183 samples, 0.13%)</title><rect x="23.7668%" y="997" width="0.1337%" height="15" fill="rgb(213,208,19)" fg:x="32522" fg:w="183"/><text x="24.0168%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (515 samples, 0.38%)</title><rect x="23.9005%" y="1029" width="0.3764%" height="15" fill="rgb(233,156,4)" fg:x="32705" fg:w="515"/><text x="24.1505%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (515 samples, 0.38%)</title><rect x="23.9005%" y="1013" width="0.3764%" height="15" fill="rgb(207,194,5)" fg:x="32705" fg:w="515"/><text x="24.1505%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,761 samples, 1.29%)</title><rect x="23.0294%" y="1045" width="1.2869%" height="15" fill="rgb(206,111,30)" fg:x="31513" fg:w="1761"/><text x="23.2794%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (54 samples, 0.04%)</title><rect x="24.2769%" y="1029" width="0.0395%" height="15" fill="rgb(243,70,54)" fg:x="33220" fg:w="54"/><text x="24.5269%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (54 samples, 0.04%)</title><rect x="24.2769%" y="1013" width="0.0395%" height="15" fill="rgb(242,28,8)" fg:x="33220" fg:w="54"/><text x="24.5269%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (153 samples, 0.11%)</title><rect x="24.3163%" y="1045" width="0.1118%" height="15" fill="rgb(219,106,18)" fg:x="33274" fg:w="153"/><text x="24.5663%" y="1055.50"></text></g><g><title>core::fmt::Arguments::new_v1 (38 samples, 0.03%)</title><rect x="24.4004%" y="1029" width="0.0278%" height="15" fill="rgb(244,222,10)" fg:x="33389" fg:w="38"/><text x="24.6504%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (2,002 samples, 1.46%)</title><rect x="23.0294%" y="1061" width="1.4630%" height="15" fill="rgb(236,179,52)" fg:x="31513" fg:w="2002"/><text x="23.2794%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (88 samples, 0.06%)</title><rect x="24.4282%" y="1045" width="0.0643%" height="15" fill="rgb(213,23,39)" fg:x="33427" fg:w="88"/><text x="24.6782%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (53 samples, 0.04%)</title><rect x="24.4537%" y="1029" width="0.0387%" height="15" fill="rgb(238,48,10)" fg:x="33462" fg:w="53"/><text x="24.7037%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (123 samples, 0.09%)</title><rect x="24.4925%" y="1045" width="0.0899%" height="15" fill="rgb(251,196,23)" fg:x="33515" fg:w="123"/><text x="24.7425%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (377 samples, 0.28%)</title><rect x="25.0625%" y="1029" width="0.2755%" height="15" fill="rgb(250,152,24)" fg:x="34295" fg:w="377"/><text x="25.3125%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (377 samples, 0.28%)</title><rect x="25.0625%" y="1013" width="0.2755%" height="15" fill="rgb(209,150,17)" fg:x="34295" fg:w="377"/><text x="25.3125%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (167 samples, 0.12%)</title><rect x="25.2159%" y="997" width="0.1220%" height="15" fill="rgb(234,202,34)" fg:x="34505" fg:w="167"/><text x="25.4659%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (471 samples, 0.34%)</title><rect x="25.3380%" y="1029" width="0.3442%" height="15" fill="rgb(253,148,53)" fg:x="34672" fg:w="471"/><text x="25.5880%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (471 samples, 0.34%)</title><rect x="25.3380%" y="1013" width="0.3442%" height="15" fill="rgb(218,129,16)" fg:x="34672" fg:w="471"/><text x="25.5880%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (58 samples, 0.04%)</title><rect x="25.6822%" y="1013" width="0.0424%" height="15" fill="rgb(216,85,19)" fg:x="35143" fg:w="58"/><text x="25.9322%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (58 samples, 0.04%)</title><rect x="25.6822%" y="997" width="0.0424%" height="15" fill="rgb(235,228,7)" fg:x="35143" fg:w="58"/><text x="25.9322%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (1,750 samples, 1.28%)</title><rect x="24.4925%" y="1061" width="1.2789%" height="15" fill="rgb(245,175,0)" fg:x="33515" fg:w="1750"/><text x="24.7425%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,627 samples, 1.19%)</title><rect x="24.5824%" y="1045" width="1.1890%" height="15" fill="rgb(208,168,36)" fg:x="33638" fg:w="1627"/><text x="24.8324%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (122 samples, 0.09%)</title><rect x="25.6822%" y="1029" width="0.0892%" height="15" fill="rgb(246,171,24)" fg:x="35143" fg:w="122"/><text x="25.9322%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (64 samples, 0.05%)</title><rect x="25.7246%" y="1013" width="0.0468%" height="15" fill="rgb(215,142,24)" fg:x="35201" fg:w="64"/><text x="25.9746%" y="1023.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (27 samples, 0.02%)</title><rect x="25.7714%" y="1061" width="0.0197%" height="15" fill="rgb(250,187,7)" fg:x="35265" fg:w="27"/><text x="26.0214%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (14,717 samples, 10.76%)</title><rect x="15.1113%" y="1221" width="10.7551%" height="15" fill="rgb(228,66,33)" fg:x="20678" fg:w="14717"/><text x="15.3613%" y="1231.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (14,717 samples, 10.76%)</title><rect x="15.1113%" y="1205" width="10.7551%" height="15" fill="rgb(234,215,21)" fg:x="20678" fg:w="14717"/><text x="15.3613%" y="1215.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (14,717 samples, 10.76%)</title><rect x="15.1113%" y="1189" width="10.7551%" height="15" fill="rgb(222,191,20)" fg:x="20678" fg:w="14717"/><text x="15.3613%" y="1199.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14,709 samples, 10.75%)</title><rect x="15.1171%" y="1173" width="10.7492%" height="15" fill="rgb(245,79,54)" fg:x="20686" fg:w="14709"/><text x="15.3671%" y="1183.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (14,709 samples, 10.75%)</title><rect x="15.1171%" y="1157" width="10.7492%" height="15" fill="rgb(240,10,37)" fg:x="20686" fg:w="14709"/><text x="15.3671%" y="1167.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14,709 samples, 10.75%)</title><rect x="15.1171%" y="1141" width="10.7492%" height="15" fill="rgb(214,192,32)" fg:x="20686" fg:w="14709"/><text x="15.3671%" y="1151.50">core::iter::trai..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (14,504 samples, 10.60%)</title><rect x="15.2670%" y="1125" width="10.5994%" height="15" fill="rgb(209,36,54)" fg:x="20891" fg:w="14504"/><text x="15.5170%" y="1135.50">core::iter::tra..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (14,504 samples, 10.60%)</title><rect x="15.2670%" y="1109" width="10.5994%" height="15" fill="rgb(220,10,11)" fg:x="20891" fg:w="14504"/><text x="15.5170%" y="1119.50">core::ops::func..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (14,471 samples, 10.58%)</title><rect x="15.2911%" y="1093" width="10.5753%" height="15" fill="rgb(221,106,17)" fg:x="20924" fg:w="14471"/><text x="15.5411%" y="1103.50">tokio::runtime:..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (14,312 samples, 10.46%)</title><rect x="15.4073%" y="1077" width="10.4591%" height="15" fill="rgb(251,142,44)" fg:x="21083" fg:w="14312"/><text x="15.6573%" y="1087.50">tokio::runtime:..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (103 samples, 0.08%)</title><rect x="25.7911%" y="1061" width="0.0753%" height="15" fill="rgb(238,13,15)" fg:x="35292" fg:w="103"/><text x="26.0411%" y="1071.50"></text></g><g><title>core::ptr::eq (26 samples, 0.02%)</title><rect x="25.8474%" y="1045" width="0.0190%" height="15" fill="rgb(208,107,27)" fg:x="35369" fg:w="26"/><text x="26.0974%" y="1055.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (14,734 samples, 10.77%)</title><rect x="15.1018%" y="1237" width="10.7675%" height="15" fill="rgb(205,136,37)" fg:x="20665" fg:w="14734"/><text x="15.3518%" y="1247.50">tokio::runtime::..</text></g><g><title>core::cmp::Ord::min (28 samples, 0.02%)</title><rect x="25.9014%" y="1205" width="0.0205%" height="15" fill="rgb(250,205,27)" fg:x="35443" fg:w="28"/><text x="26.1514%" y="1215.50"></text></g><g><title>core::time::Duration::as_millis (29 samples, 0.02%)</title><rect x="25.9219%" y="1205" width="0.0212%" height="15" fill="rgb(210,80,43)" fg:x="35471" fg:w="29"/><text x="26.1719%" y="1215.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (119 samples, 0.09%)</title><rect x="25.9000%" y="1221" width="0.0870%" height="15" fill="rgb(247,160,36)" fg:x="35441" fg:w="119"/><text x="26.1500%" y="1231.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (60 samples, 0.04%)</title><rect x="25.9431%" y="1205" width="0.0438%" height="15" fill="rgb(234,13,49)" fg:x="35500" fg:w="60"/><text x="26.1931%" y="1215.50"></text></g><g><title>std::time::Instant::duration_since (60 samples, 0.04%)</title><rect x="25.9431%" y="1189" width="0.0438%" height="15" fill="rgb(234,122,0)" fg:x="35500" fg:w="60"/><text x="26.1931%" y="1199.50"></text></g><g><title>std::time::Instant::checked_duration_since (60 samples, 0.04%)</title><rect x="25.9431%" y="1173" width="0.0438%" height="15" fill="rgb(207,146,38)" fg:x="35500" fg:w="60"/><text x="26.1931%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (60 samples, 0.04%)</title><rect x="25.9431%" y="1157" width="0.0438%" height="15" fill="rgb(207,177,25)" fg:x="35500" fg:w="60"/><text x="26.1931%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (58 samples, 0.04%)</title><rect x="25.9445%" y="1141" width="0.0424%" height="15" fill="rgb(211,178,42)" fg:x="35502" fg:w="58"/><text x="26.1945%" y="1151.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::AddAssign&lt;core::time::Duration&gt;&gt;::add_assign (27 samples, 0.02%)</title><rect x="25.9964%" y="1205" width="0.0197%" height="15" fill="rgb(230,69,54)" fg:x="35573" fg:w="27"/><text x="26.2464%" y="1215.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (27 samples, 0.02%)</title><rect x="25.9964%" y="1189" width="0.0197%" height="15" fill="rgb(214,135,41)" fg:x="35573" fg:w="27"/><text x="26.2464%" y="1199.50"></text></g><g><title>std::time::Instant::checked_add (27 samples, 0.02%)</title><rect x="25.9964%" y="1173" width="0.0197%" height="15" fill="rgb(237,67,25)" fg:x="35573" fg:w="27"/><text x="26.2464%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_add_duration (27 samples, 0.02%)</title><rect x="25.9964%" y="1157" width="0.0197%" height="15" fill="rgb(222,189,50)" fg:x="35573" fg:w="27"/><text x="26.2464%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::checked_add_duration (27 samples, 0.02%)</title><rect x="25.9964%" y="1141" width="0.0197%" height="15" fill="rgb(245,148,34)" fg:x="35573" fg:w="27"/><text x="26.2464%" y="1151.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_add_unsigned (21 samples, 0.02%)</title><rect x="26.0008%" y="1125" width="0.0153%" height="15" fill="rgb(222,29,6)" fg:x="35579" fg:w="21"/><text x="26.2508%" y="1135.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add_unsigned (17 samples, 0.01%)</title><rect x="26.0037%" y="1109" width="0.0124%" height="15" fill="rgb(221,189,43)" fg:x="35583" fg:w="17"/><text x="26.2537%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::time::clock::Inner&gt;&gt; (128 samples, 0.09%)</title><rect x="26.0162%" y="1205" width="0.0935%" height="15" fill="rgb(207,36,27)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::time::clock::Inner&gt;&gt; (128 samples, 0.09%)</title><rect x="26.0162%" y="1189" width="0.0935%" height="15" fill="rgb(217,90,24)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1199.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (128 samples, 0.09%)</title><rect x="26.0162%" y="1173" width="0.0935%" height="15" fill="rgb(224,66,35)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (128 samples, 0.09%)</title><rect x="26.0162%" y="1157" width="0.0935%" height="15" fill="rgb(221,13,50)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (128 samples, 0.09%)</title><rect x="26.0162%" y="1141" width="0.0935%" height="15" fill="rgb(236,68,49)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (128 samples, 0.09%)</title><rect x="26.0162%" y="1125" width="0.0935%" height="15" fill="rgb(229,146,28)" fg:x="35600" fg:w="128"/><text x="26.2662%" y="1135.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (79 samples, 0.06%)</title><rect x="26.1309%" y="1189" width="0.0577%" height="15" fill="rgb(225,31,38)" fg:x="35757" fg:w="79"/><text x="26.3809%" y="1199.50"></text></g><g><title>std::time::Instant::duration_since (79 samples, 0.06%)</title><rect x="26.1309%" y="1173" width="0.0577%" height="15" fill="rgb(250,208,3)" fg:x="35757" fg:w="79"/><text x="26.3809%" y="1183.50"></text></g><g><title>std::time::Instant::checked_duration_since (72 samples, 0.05%)</title><rect x="26.1360%" y="1157" width="0.0526%" height="15" fill="rgb(246,54,23)" fg:x="35764" fg:w="72"/><text x="26.3860%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (72 samples, 0.05%)</title><rect x="26.1360%" y="1141" width="0.0526%" height="15" fill="rgb(243,76,11)" fg:x="35764" fg:w="72"/><text x="26.3860%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (55 samples, 0.04%)</title><rect x="26.1484%" y="1125" width="0.0402%" height="15" fill="rgb(245,21,50)" fg:x="35781" fg:w="55"/><text x="26.3984%" y="1135.50"></text></g><g><title>clock_gettime (1,258 samples, 0.92%)</title><rect x="26.2222%" y="1141" width="0.9193%" height="15" fill="rgb(228,9,43)" fg:x="35882" fg:w="1258"/><text x="26.4722%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (782 samples, 0.57%)</title><rect x="26.5701%" y="1125" width="0.5715%" height="15" fill="rgb(208,100,47)" fg:x="36358" fg:w="782"/><text x="26.8201%" y="1135.50"></text></g><g><title>std::time::Instant::elapsed (1,422 samples, 1.04%)</title><rect x="26.1134%" y="1205" width="1.0392%" height="15" fill="rgb(232,26,8)" fg:x="35733" fg:w="1422"/><text x="26.3634%" y="1215.50"></text></g><g><title>std::time::Instant::now (1,319 samples, 0.96%)</title><rect x="26.1886%" y="1189" width="0.9639%" height="15" fill="rgb(216,166,38)" fg:x="35836" fg:w="1319"/><text x="26.4386%" y="1199.50"></text></g><g><title>std::sys::pal::unix::time::Instant::now (1,319 samples, 0.96%)</title><rect x="26.1886%" y="1173" width="0.9639%" height="15" fill="rgb(251,202,51)" fg:x="35836" fg:w="1319"/><text x="26.4386%" y="1183.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,311 samples, 0.96%)</title><rect x="26.1945%" y="1157" width="0.9581%" height="15" fill="rgb(254,216,34)" fg:x="35844" fg:w="1311"/><text x="26.4445%" y="1167.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (16,753 samples, 12.24%)</title><rect x="15.0536%" y="1253" width="12.2429%" height="15" fill="rgb(251,32,27)" fg:x="20599" fg:w="16753"/><text x="15.3036%" y="1263.50">tokio::runtime::ti..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (1,950 samples, 1.43%)</title><rect x="25.8715%" y="1237" width="1.4250%" height="15" fill="rgb(208,127,28)" fg:x="35402" fg:w="1950"/><text x="26.1215%" y="1247.50"></text></g><g><title>tokio::time::clock::Clock::now (1,792 samples, 1.31%)</title><rect x="25.9869%" y="1221" width="1.3096%" height="15" fill="rgb(224,137,22)" fg:x="35560" fg:w="1792"/><text x="26.2369%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (197 samples, 0.14%)</title><rect x="27.1525%" y="1205" width="0.1440%" height="15" fill="rgb(254,70,32)" fg:x="37155" fg:w="197"/><text x="27.4025%" y="1215.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (197 samples, 0.14%)</title><rect x="27.1525%" y="1189" width="0.1440%" height="15" fill="rgb(229,75,37)" fg:x="37155" fg:w="197"/><text x="27.4025%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (197 samples, 0.14%)</title><rect x="27.1525%" y="1173" width="0.1440%" height="15" fill="rgb(252,64,23)" fg:x="37155" fg:w="197"/><text x="27.4025%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (195 samples, 0.14%)</title><rect x="27.1540%" y="1157" width="0.1425%" height="15" fill="rgb(232,162,48)" fg:x="37157" fg:w="195"/><text x="27.4040%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (195 samples, 0.14%)</title><rect x="27.1540%" y="1141" width="0.1425%" height="15" fill="rgb(246,160,12)" fg:x="37157" fg:w="195"/><text x="27.4040%" y="1151.50"></text></g><g><title>tokio::runtime::time::AtomicOptionNonZeroU64::store (25 samples, 0.02%)</title><rect x="27.2965%" y="1253" width="0.0183%" height="15" fill="rgb(247,166,0)" fg:x="37352" fg:w="25"/><text x="27.5465%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::store (25 samples, 0.02%)</title><rect x="27.2965%" y="1237" width="0.0183%" height="15" fill="rgb(249,219,21)" fg:x="37352" fg:w="25"/><text x="27.5465%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_store (25 samples, 0.02%)</title><rect x="27.2965%" y="1221" width="0.0183%" height="15" fill="rgb(205,209,3)" fg:x="37352" fg:w="25"/><text x="27.5465%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (26,921 samples, 19.67%)</title><rect x="7.6485%" y="1285" width="19.6736%" height="15" fill="rgb(243,44,1)" fg:x="10466" fg:w="26921"/><text x="7.8985%" y="1295.50">tokio::runtime::scheduler::mult..</text></g><g><title>tokio::runtime::time::Driver::park_internal (26,131 samples, 19.10%)</title><rect x="8.2258%" y="1269" width="19.0963%" height="15" fill="rgb(206,159,16)" fg:x="11256" fg:w="26131"/><text x="8.4758%" y="1279.50">tokio::runtime::time::Driver::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (27,981 samples, 20.45%)</title><rect x="7.0317%" y="1317" width="20.4483%" height="15" fill="rgb(244,77,30)" fg:x="9622" fg:w="27981"/><text x="7.2817%" y="1327.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (27,981 samples, 20.45%)</title><rect x="7.0317%" y="1301" width="20.4483%" height="15" fill="rgb(218,69,12)" fg:x="9622" fg:w="27981"/><text x="7.2817%" y="1311.50">tokio::runtime::scheduler::multi..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (216 samples, 0.16%)</title><rect x="27.3221%" y="1285" width="0.1579%" height="15" fill="rgb(212,87,7)" fg:x="37387" fg:w="216"/><text x="27.5721%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (216 samples, 0.16%)</title><rect x="27.3221%" y="1269" width="0.1579%" height="15" fill="rgb(245,114,25)" fg:x="37387" fg:w="216"/><text x="27.5721%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (216 samples, 0.16%)</title><rect x="27.3221%" y="1253" width="0.1579%" height="15" fill="rgb(210,61,42)" fg:x="37387" fg:w="216"/><text x="27.5721%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (28,339 samples, 20.71%)</title><rect x="6.8190%" y="1333" width="20.7099%" height="15" fill="rgb(211,52,33)" fg:x="9331" fg:w="28339"/><text x="7.0690%" y="1343.50">tokio::runtime::scheduler::multi_..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (64 samples, 0.05%)</title><rect x="27.4821%" y="1317" width="0.0468%" height="15" fill="rgb(234,58,33)" fg:x="37606" fg:w="64"/><text x="27.7321%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (32 samples, 0.02%)</title><rect x="27.5055%" y="1301" width="0.0234%" height="15" fill="rgb(220,115,36)" fg:x="37638" fg:w="32"/><text x="27.7555%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (28 samples, 0.02%)</title><rect x="27.5084%" y="1285" width="0.0205%" height="15" fill="rgb(243,153,54)" fg:x="37642" fg:w="28"/><text x="27.7584%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (25 samples, 0.02%)</title><rect x="27.5106%" y="1269" width="0.0183%" height="15" fill="rgb(251,47,18)" fg:x="37645" fg:w="25"/><text x="27.7606%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="27.5106%" y="1253" width="0.0183%" height="15" fill="rgb(242,102,42)" fg:x="37645" fg:w="25"/><text x="27.7606%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (194 samples, 0.14%)</title><rect x="27.6787%" y="1317" width="0.1418%" height="15" fill="rgb(234,31,38)" fg:x="37875" fg:w="194"/><text x="27.9287%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (194 samples, 0.14%)</title><rect x="27.6787%" y="1301" width="0.1418%" height="15" fill="rgb(221,117,51)" fg:x="37875" fg:w="194"/><text x="27.9287%" y="1311.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (194 samples, 0.14%)</title><rect x="27.6787%" y="1285" width="0.1418%" height="15" fill="rgb(212,20,18)" fg:x="37875" fg:w="194"/><text x="27.9287%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (194 samples, 0.14%)</title><rect x="27.6787%" y="1269" width="0.1418%" height="15" fill="rgb(245,133,36)" fg:x="37875" fg:w="194"/><text x="27.9287%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (192 samples, 0.14%)</title><rect x="27.6802%" y="1253" width="0.1403%" height="15" fill="rgb(212,6,19)" fg:x="37877" fg:w="192"/><text x="27.9302%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (192 samples, 0.14%)</title><rect x="27.6802%" y="1237" width="0.1403%" height="15" fill="rgb(218,1,36)" fg:x="37877" fg:w="192"/><text x="27.9302%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (135 samples, 0.10%)</title><rect x="27.8241%" y="1269" width="0.0987%" height="15" fill="rgb(246,84,54)" fg:x="38074" fg:w="135"/><text x="28.0741%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (135 samples, 0.10%)</title><rect x="27.8241%" y="1253" width="0.0987%" height="15" fill="rgb(242,110,6)" fg:x="38074" fg:w="135"/><text x="28.0741%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (145 samples, 0.11%)</title><rect x="27.8205%" y="1317" width="0.1060%" height="15" fill="rgb(214,47,5)" fg:x="38069" fg:w="145"/><text x="28.0705%" y="1327.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (145 samples, 0.11%)</title><rect x="27.8205%" y="1301" width="0.1060%" height="15" fill="rgb(218,159,25)" fg:x="38069" fg:w="145"/><text x="28.0705%" y="1311.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (145 samples, 0.11%)</title><rect x="27.8205%" y="1285" width="0.1060%" height="15" fill="rgb(215,211,28)" fg:x="38069" fg:w="145"/><text x="28.0705%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (569 samples, 0.42%)</title><rect x="27.5289%" y="1333" width="0.4158%" height="15" fill="rgb(238,59,32)" fg:x="37670" fg:w="569"/><text x="27.7789%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (25 samples, 0.02%)</title><rect x="27.9265%" y="1317" width="0.0183%" height="15" fill="rgb(226,82,3)" fg:x="38214" fg:w="25"/><text x="28.1765%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (169 samples, 0.12%)</title><rect x="27.9564%" y="1301" width="0.1235%" height="15" fill="rgb(240,164,32)" fg:x="38255" fg:w="169"/><text x="28.2064%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (169 samples, 0.12%)</title><rect x="27.9564%" y="1285" width="0.1235%" height="15" fill="rgb(232,46,7)" fg:x="38255" fg:w="169"/><text x="28.2064%" y="1295.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.12%)</title><rect x="27.9564%" y="1269" width="0.1235%" height="15" fill="rgb(229,129,53)" fg:x="38255" fg:w="169"/><text x="28.2064%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (169 samples, 0.12%)</title><rect x="27.9564%" y="1253" width="0.1235%" height="15" fill="rgb(234,188,29)" fg:x="38255" fg:w="169"/><text x="28.2064%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (168 samples, 0.12%)</title><rect x="27.9571%" y="1237" width="0.1228%" height="15" fill="rgb(246,141,4)" fg:x="38256" fg:w="168"/><text x="28.2071%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (168 samples, 0.12%)</title><rect x="27.9571%" y="1221" width="0.1228%" height="15" fill="rgb(229,23,39)" fg:x="38256" fg:w="168"/><text x="28.2071%" y="1231.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (77 samples, 0.06%)</title><rect x="28.1413%" y="1253" width="0.0563%" height="15" fill="rgb(206,12,3)" fg:x="38508" fg:w="77"/><text x="28.3913%" y="1263.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (77 samples, 0.06%)</title><rect x="28.1413%" y="1237" width="0.0563%" height="15" fill="rgb(252,226,20)" fg:x="38508" fg:w="77"/><text x="28.3913%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (213 samples, 0.16%)</title><rect x="28.0799%" y="1301" width="0.1557%" height="15" fill="rgb(216,123,35)" fg:x="38424" fg:w="213"/><text x="28.3299%" y="1311.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (213 samples, 0.16%)</title><rect x="28.0799%" y="1285" width="0.1557%" height="15" fill="rgb(212,68,40)" fg:x="38424" fg:w="213"/><text x="28.3299%" y="1295.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (213 samples, 0.16%)</title><rect x="28.0799%" y="1269" width="0.1557%" height="15" fill="rgb(254,125,32)" fg:x="38424" fg:w="213"/><text x="28.3299%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.04%)</title><rect x="28.1976%" y="1253" width="0.0380%" height="15" fill="rgb(253,97,22)" fg:x="38585" fg:w="52"/><text x="28.4476%" y="1263.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="28.2195%" y="1237" width="0.0161%" height="15" fill="rgb(241,101,14)" fg:x="38615" fg:w="22"/><text x="28.4695%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (129 samples, 0.09%)</title><rect x="28.2400%" y="1253" width="0.0943%" height="15" fill="rgb(238,103,29)" fg:x="38643" fg:w="129"/><text x="28.4900%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (129 samples, 0.09%)</title><rect x="28.2400%" y="1237" width="0.0943%" height="15" fill="rgb(233,195,47)" fg:x="38643" fg:w="129"/><text x="28.4900%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (521 samples, 0.38%)</title><rect x="27.9550%" y="1317" width="0.3807%" height="15" fill="rgb(246,218,30)" fg:x="38253" fg:w="521"/><text x="28.2050%" y="1327.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (137 samples, 0.10%)</title><rect x="28.2356%" y="1301" width="0.1001%" height="15" fill="rgb(219,145,47)" fg:x="38637" fg:w="137"/><text x="28.4856%" y="1311.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (137 samples, 0.10%)</title><rect x="28.2356%" y="1285" width="0.1001%" height="15" fill="rgb(243,12,26)" fg:x="38637" fg:w="137"/><text x="28.4856%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (137 samples, 0.10%)</title><rect x="28.2356%" y="1269" width="0.1001%" height="15" fill="rgb(214,87,16)" fg:x="38637" fg:w="137"/><text x="28.4856%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (37 samples, 0.03%)</title><rect x="28.3357%" y="1317" width="0.0270%" height="15" fill="rgb(208,99,42)" fg:x="38774" fg:w="37"/><text x="28.5857%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (577 samples, 0.42%)</title><rect x="27.9447%" y="1333" width="0.4217%" height="15" fill="rgb(253,99,2)" fg:x="38239" fg:w="577"/><text x="28.1947%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (86 samples, 0.06%)</title><rect x="28.3803%" y="1301" width="0.0628%" height="15" fill="rgb(220,168,23)" fg:x="38835" fg:w="86"/><text x="28.6303%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (86 samples, 0.06%)</title><rect x="28.3803%" y="1285" width="0.0628%" height="15" fill="rgb(242,38,24)" fg:x="38835" fg:w="86"/><text x="28.6303%" y="1295.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.06%)</title><rect x="28.3803%" y="1269" width="0.0628%" height="15" fill="rgb(225,182,9)" fg:x="38835" fg:w="86"/><text x="28.6303%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (86 samples, 0.06%)</title><rect x="28.3803%" y="1253" width="0.0628%" height="15" fill="rgb(243,178,37)" fg:x="38835" fg:w="86"/><text x="28.6303%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (85 samples, 0.06%)</title><rect x="28.3810%" y="1237" width="0.0621%" height="15" fill="rgb(232,139,19)" fg:x="38836" fg:w="85"/><text x="28.6310%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (85 samples, 0.06%)</title><rect x="28.3810%" y="1221" width="0.0621%" height="15" fill="rgb(225,201,24)" fg:x="38836" fg:w="85"/><text x="28.6310%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (17 samples, 0.01%)</title><rect x="28.4431%" y="1253" width="0.0124%" height="15" fill="rgb(221,47,46)" fg:x="38921" fg:w="17"/><text x="28.6931%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.01%)</title><rect x="28.4431%" y="1237" width="0.0124%" height="15" fill="rgb(249,23,13)" fg:x="38921" fg:w="17"/><text x="28.6931%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (24 samples, 0.02%)</title><rect x="28.4431%" y="1301" width="0.0175%" height="15" fill="rgb(219,9,5)" fg:x="38921" fg:w="24"/><text x="28.6931%" y="1311.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (24 samples, 0.02%)</title><rect x="28.4431%" y="1285" width="0.0175%" height="15" fill="rgb(254,171,16)" fg:x="38921" fg:w="24"/><text x="28.6931%" y="1295.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (24 samples, 0.02%)</title><rect x="28.4431%" y="1269" width="0.0175%" height="15" fill="rgb(230,171,20)" fg:x="38921" fg:w="24"/><text x="28.6931%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (141 samples, 0.10%)</title><rect x="28.3737%" y="1317" width="0.1030%" height="15" fill="rgb(210,71,41)" fg:x="38826" fg:w="141"/><text x="28.6237%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (22 samples, 0.02%)</title><rect x="28.4607%" y="1301" width="0.0161%" height="15" fill="rgb(206,173,20)" fg:x="38945" fg:w="22"/><text x="28.7107%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.01%)</title><rect x="28.4636%" y="1285" width="0.0132%" height="15" fill="rgb(233,88,34)" fg:x="38949" fg:w="18"/><text x="28.7136%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.01%)</title><rect x="28.4636%" y="1269" width="0.0132%" height="15" fill="rgb(223,209,46)" fg:x="38949" fg:w="18"/><text x="28.7136%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (23 samples, 0.02%)</title><rect x="28.4767%" y="1317" width="0.0168%" height="15" fill="rgb(250,43,18)" fg:x="38967" fg:w="23"/><text x="28.7267%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (30,032 samples, 21.95%)</title><rect x="6.5472%" y="1349" width="21.9471%" height="15" fill="rgb(208,13,10)" fg:x="8959" fg:w="30032"/><text x="6.7972%" y="1359.50">tokio::runtime::scheduler::multi_th..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (175 samples, 0.13%)</title><rect x="28.3664%" y="1333" width="0.1279%" height="15" fill="rgb(212,200,36)" fg:x="38816" fg:w="175"/><text x="28.6164%" y="1343.50"></text></g><g><title>tokio::runtime::context::budget (17 samples, 0.01%)</title><rect x="28.5067%" y="1301" width="0.0124%" height="15" fill="rgb(225,90,30)" fg:x="39008" fg:w="17"/><text x="28.7567%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.01%)</title><rect x="28.5067%" y="1285" width="0.0124%" height="15" fill="rgb(236,182,39)" fg:x="39008" fg:w="17"/><text x="28.7567%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (16 samples, 0.01%)</title><rect x="28.5286%" y="1285" width="0.0117%" height="15" fill="rgb(212,144,35)" fg:x="39038" fg:w="16"/><text x="28.7786%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (16 samples, 0.01%)</title><rect x="28.5286%" y="1269" width="0.0117%" height="15" fill="rgb(228,63,44)" fg:x="39038" fg:w="16"/><text x="28.7786%" y="1279.50"></text></g><g><title>core::cell::BorrowRefMut::new (16 samples, 0.01%)</title><rect x="28.5286%" y="1253" width="0.0117%" height="15" fill="rgb(228,109,6)" fg:x="39038" fg:w="16"/><text x="28.7786%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (24 samples, 0.02%)</title><rect x="28.5403%" y="1285" width="0.0175%" height="15" fill="rgb(238,117,24)" fg:x="39054" fg:w="24"/><text x="28.7903%" y="1295.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="28.5403%" y="1269" width="0.0175%" height="15" fill="rgb(242,26,26)" fg:x="39054" fg:w="24"/><text x="28.7903%" y="1279.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="28.5403%" y="1253" width="0.0175%" height="15" fill="rgb(221,92,48)" fg:x="39054" fg:w="24"/><text x="28.7903%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (19 samples, 0.01%)</title><rect x="28.5637%" y="1285" width="0.0139%" height="15" fill="rgb(209,209,32)" fg:x="39086" fg:w="19"/><text x="28.8137%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.02%)</title><rect x="28.6010%" y="1157" width="0.0197%" height="15" fill="rgb(221,70,22)" fg:x="39137" fg:w="27"/><text x="28.8510%" y="1167.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (27 samples, 0.02%)</title><rect x="28.6010%" y="1141" width="0.0197%" height="15" fill="rgb(248,145,5)" fg:x="39137" fg:w="27"/><text x="28.8510%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (90 samples, 0.07%)</title><rect x="28.6419%" y="1093" width="0.0658%" height="15" fill="rgb(226,116,26)" fg:x="39193" fg:w="90"/><text x="28.8919%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (90 samples, 0.07%)</title><rect x="28.6419%" y="1077" width="0.0658%" height="15" fill="rgb(244,5,17)" fg:x="39193" fg:w="90"/><text x="28.8919%" y="1087.50"></text></g><g><title>clock_gettime (42 samples, 0.03%)</title><rect x="28.7106%" y="1061" width="0.0307%" height="15" fill="rgb(252,159,33)" fg:x="39287" fg:w="42"/><text x="28.9606%" y="1071.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.01%)</title><rect x="28.7296%" y="1045" width="0.0117%" height="15" fill="rgb(206,71,0)" fg:x="39313" fg:w="16"/><text x="28.9796%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (48 samples, 0.04%)</title><rect x="28.7077%" y="1093" width="0.0351%" height="15" fill="rgb(233,118,54)" fg:x="39283" fg:w="48"/><text x="28.9577%" y="1103.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (45 samples, 0.03%)</title><rect x="28.7099%" y="1077" width="0.0329%" height="15" fill="rgb(234,83,48)" fg:x="39286" fg:w="45"/><text x="28.9599%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::hash (14 samples, 0.01%)</title><rect x="28.7501%" y="1077" width="0.0102%" height="15" fill="rgb(228,3,54)" fg:x="39341" fg:w="14"/><text x="29.0001%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (63 samples, 0.05%)</title><rect x="28.7427%" y="1093" width="0.0460%" height="15" fill="rgb(226,155,13)" fg:x="39331" fg:w="63"/><text x="28.9927%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (39 samples, 0.03%)</title><rect x="28.7603%" y="1077" width="0.0285%" height="15" fill="rgb(241,28,37)" fg:x="39355" fg:w="39"/><text x="29.0103%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (38 samples, 0.03%)</title><rect x="28.7610%" y="1061" width="0.0278%" height="15" fill="rgb(233,93,10)" fg:x="39356" fg:w="38"/><text x="29.0110%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (38 samples, 0.03%)</title><rect x="28.7610%" y="1045" width="0.0278%" height="15" fill="rgb(225,113,19)" fg:x="39356" fg:w="38"/><text x="29.0110%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (221 samples, 0.16%)</title><rect x="28.6346%" y="1125" width="0.1615%" height="15" fill="rgb(241,2,18)" fg:x="39183" fg:w="221"/><text x="28.8846%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (221 samples, 0.16%)</title><rect x="28.6346%" y="1109" width="0.1615%" height="15" fill="rgb(228,207,21)" fg:x="39183" fg:w="221"/><text x="28.8846%" y="1119.50"></text></g><g><title>syscall (21 samples, 0.02%)</title><rect x="28.7961%" y="1125" width="0.0153%" height="15" fill="rgb(213,211,35)" fg:x="39404" fg:w="21"/><text x="29.0461%" y="1135.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (25 samples, 0.02%)</title><rect x="28.8114%" y="1061" width="0.0183%" height="15" fill="rgb(209,83,10)" fg:x="39425" fg:w="25"/><text x="29.0614%" y="1071.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (25 samples, 0.02%)</title><rect x="28.8114%" y="1045" width="0.0183%" height="15" fill="rgb(209,164,1)" fg:x="39425" fg:w="25"/><text x="29.0614%" y="1055.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (25 samples, 0.02%)</title><rect x="28.8114%" y="1029" width="0.0183%" height="15" fill="rgb(213,184,43)" fg:x="39425" fg:w="25"/><text x="29.0614%" y="1039.50"></text></g><g><title>write (25 samples, 0.02%)</title><rect x="28.8114%" y="1013" width="0.0183%" height="15" fill="rgb(231,61,34)" fg:x="39425" fg:w="25"/><text x="29.0614%" y="1023.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (26 samples, 0.02%)</title><rect x="28.8114%" y="1125" width="0.0190%" height="15" fill="rgb(235,75,3)" fg:x="39425" fg:w="26"/><text x="29.0614%" y="1135.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (26 samples, 0.02%)</title><rect x="28.8114%" y="1109" width="0.0190%" height="15" fill="rgb(220,106,47)" fg:x="39425" fg:w="26"/><text x="29.0614%" y="1119.50"></text></g><g><title>mio::waker::Waker::wake (26 samples, 0.02%)</title><rect x="28.8114%" y="1093" width="0.0190%" height="15" fill="rgb(210,196,33)" fg:x="39425" fg:w="26"/><text x="29.0614%" y="1103.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (26 samples, 0.02%)</title><rect x="28.8114%" y="1077" width="0.0190%" height="15" fill="rgb(229,154,42)" fg:x="39425" fg:w="26"/><text x="29.0614%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (40 samples, 0.03%)</title><rect x="28.8480%" y="1093" width="0.0292%" height="15" fill="rgb(228,114,26)" fg:x="39475" fg:w="40"/><text x="29.0980%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_swap (40 samples, 0.03%)</title><rect x="28.8480%" y="1077" width="0.0292%" height="15" fill="rgb(208,144,1)" fg:x="39475" fg:w="40"/><text x="29.0980%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (81 samples, 0.06%)</title><rect x="28.8304%" y="1125" width="0.0592%" height="15" fill="rgb(239,112,37)" fg:x="39451" fg:w="81"/><text x="29.0804%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (81 samples, 0.06%)</title><rect x="28.8304%" y="1109" width="0.0592%" height="15" fill="rgb(210,96,50)" fg:x="39451" fg:w="81"/><text x="29.0804%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (26 samples, 0.02%)</title><rect x="28.8991%" y="1109" width="0.0190%" height="15" fill="rgb(222,178,2)" fg:x="39545" fg:w="26"/><text x="29.1491%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="28.8991%" y="1093" width="0.0190%" height="15" fill="rgb(226,74,18)" fg:x="39545" fg:w="26"/><text x="29.1491%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (40 samples, 0.03%)</title><rect x="28.8896%" y="1125" width="0.0292%" height="15" fill="rgb(225,67,54)" fg:x="39532" fg:w="40"/><text x="29.1396%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23 samples, 0.02%)</title><rect x="28.9298%" y="1093" width="0.0168%" height="15" fill="rgb(251,92,32)" fg:x="39587" fg:w="23"/><text x="29.1798%" y="1103.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="28.9298%" y="1077" width="0.0168%" height="15" fill="rgb(228,149,22)" fg:x="39587" fg:w="23"/><text x="29.1798%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (59 samples, 0.04%)</title><rect x="28.9576%" y="1093" width="0.0431%" height="15" fill="rgb(243,54,13)" fg:x="39625" fg:w="59"/><text x="29.2076%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (58 samples, 0.04%)</title><rect x="28.9583%" y="1077" width="0.0424%" height="15" fill="rgb(243,180,28)" fg:x="39626" fg:w="58"/><text x="29.2083%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (58 samples, 0.04%)</title><rect x="28.9583%" y="1061" width="0.0424%" height="15" fill="rgb(208,167,24)" fg:x="39626" fg:w="58"/><text x="29.2083%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (555 samples, 0.41%)</title><rect x="28.5973%" y="1221" width="0.4056%" height="15" fill="rgb(245,73,45)" fg:x="39132" fg:w="555"/><text x="28.8473%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (550 samples, 0.40%)</title><rect x="28.6010%" y="1205" width="0.4019%" height="15" fill="rgb(237,203,48)" fg:x="39137" fg:w="550"/><text x="28.8510%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (550 samples, 0.40%)</title><rect x="28.6010%" y="1189" width="0.4019%" height="15" fill="rgb(211,197,16)" fg:x="39137" fg:w="550"/><text x="28.8510%" y="1199.50"></text></g><g><title>tokio::runtime::context::with_scheduler (550 samples, 0.40%)</title><rect x="28.6010%" y="1173" width="0.4019%" height="15" fill="rgb(243,99,51)" fg:x="39137" fg:w="550"/><text x="28.8510%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (523 samples, 0.38%)</title><rect x="28.6207%" y="1157" width="0.3822%" height="15" fill="rgb(215,123,29)" fg:x="39164" fg:w="523"/><text x="28.8707%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (506 samples, 0.37%)</title><rect x="28.6331%" y="1141" width="0.3698%" height="15" fill="rgb(239,186,37)" fg:x="39181" fg:w="506"/><text x="28.8831%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (115 samples, 0.08%)</title><rect x="28.9189%" y="1125" width="0.0840%" height="15" fill="rgb(252,136,39)" fg:x="39572" fg:w="115"/><text x="29.1689%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (102 samples, 0.07%)</title><rect x="28.9284%" y="1109" width="0.0745%" height="15" fill="rgb(223,213,32)" fg:x="39585" fg:w="102"/><text x="29.1784%" y="1119.50"></text></g><g><title>futures_util::future::future::map::_::&lt;impl futures_util::future::future::map::Map&lt;Fut,F&gt;&gt;::project (15 samples, 0.01%)</title><rect x="29.0526%" y="965" width="0.0110%" height="15" fill="rgb(233,115,5)" fg:x="39755" fg:w="15"/><text x="29.3026%" y="975.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (79 samples, 0.06%)</title><rect x="30.6479%" y="933" width="0.0577%" height="15" fill="rgb(207,226,44)" fg:x="41938" fg:w="79"/><text x="30.8979%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (173 samples, 0.13%)</title><rect x="30.7057%" y="933" width="0.1264%" height="15" fill="rgb(208,126,0)" fg:x="42017" fg:w="173"/><text x="30.9557%" y="943.50"></text></g><g><title>cache_bin_alloc_easy (32 samples, 0.02%)</title><rect x="31.8296%" y="613" width="0.0234%" height="15" fill="rgb(244,66,21)" fg:x="43555" fg:w="32"/><text x="32.0796%" y="623.50"></text></g><g><title>cache_bin_alloc_impl (32 samples, 0.02%)</title><rect x="31.8296%" y="597" width="0.0234%" height="15" fill="rgb(222,97,12)" fg:x="43555" fg:w="32"/><text x="32.0796%" y="607.50"></text></g><g><title>__rust_alloc (78 samples, 0.06%)</title><rect x="31.8084%" y="677" width="0.0570%" height="15" fill="rgb(219,213,19)" fg:x="43526" fg:w="78"/><text x="32.0584%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (78 samples, 0.06%)</title><rect x="31.8084%" y="661" width="0.0570%" height="15" fill="rgb(252,169,30)" fg:x="43526" fg:w="78"/><text x="32.0584%" y="671.50"></text></g><g><title>_rjem_malloc (76 samples, 0.06%)</title><rect x="31.8099%" y="645" width="0.0555%" height="15" fill="rgb(206,32,51)" fg:x="43528" fg:w="76"/><text x="32.0599%" y="655.50"></text></g><g><title>imalloc_fastpath (74 samples, 0.05%)</title><rect x="31.8113%" y="629" width="0.0541%" height="15" fill="rgb(250,172,42)" fg:x="43530" fg:w="74"/><text x="32.0613%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (100 samples, 0.07%)</title><rect x="31.7931%" y="789" width="0.0731%" height="15" fill="rgb(209,34,43)" fg:x="43505" fg:w="100"/><text x="32.0431%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (100 samples, 0.07%)</title><rect x="31.7931%" y="773" width="0.0731%" height="15" fill="rgb(223,11,35)" fg:x="43505" fg:w="100"/><text x="32.0431%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (100 samples, 0.07%)</title><rect x="31.7931%" y="757" width="0.0731%" height="15" fill="rgb(251,219,26)" fg:x="43505" fg:w="100"/><text x="32.0431%" y="767.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.06%)</title><rect x="31.8055%" y="741" width="0.0607%" height="15" fill="rgb(231,119,3)" fg:x="43522" fg:w="83"/><text x="32.0555%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.06%)</title><rect x="31.8084%" y="725" width="0.0577%" height="15" fill="rgb(216,97,11)" fg:x="43526" fg:w="79"/><text x="32.0584%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.06%)</title><rect x="31.8084%" y="709" width="0.0577%" height="15" fill="rgb(223,59,9)" fg:x="43526" fg:w="79"/><text x="32.0584%" y="719.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 0.06%)</title><rect x="31.8084%" y="693" width="0.0577%" height="15" fill="rgb(233,93,31)" fg:x="43526" fg:w="79"/><text x="32.0584%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (38 samples, 0.03%)</title><rect x="32.8534%" y="725" width="0.0278%" height="15" fill="rgb(239,81,33)" fg:x="44956" fg:w="38"/><text x="33.1034%" y="735.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (38 samples, 0.03%)</title><rect x="32.8534%" y="709" width="0.0278%" height="15" fill="rgb(213,120,34)" fg:x="44956" fg:w="38"/><text x="33.1034%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (113 samples, 0.08%)</title><rect x="32.8856%" y="725" width="0.0826%" height="15" fill="rgb(243,49,53)" fg:x="45000" fg:w="113"/><text x="33.1356%" y="735.50"></text></g><g><title>_ZN4core3ptr1271drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h199da551d4d9946fE (28 samples, 0.02%)</title><rect x="32.9682%" y="725" width="0.0205%" height="15" fill="rgb(247,216,33)" fg:x="45113" fg:w="28"/><text x="33.2182%" y="735.50"></text></g><g><title>core::cmp::PartialEq::ne (180 samples, 0.13%)</title><rect x="32.9886%" y="725" width="0.1315%" height="15" fill="rgb(226,26,14)" fg:x="45141" fg:w="180"/><text x="33.2386%" y="735.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (180 samples, 0.13%)</title><rect x="32.9886%" y="709" width="0.1315%" height="15" fill="rgb(215,49,53)" fg:x="45141" fg:w="180"/><text x="33.2386%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (29 samples, 0.02%)</title><rect x="34.1082%" y="709" width="0.0212%" height="15" fill="rgb(245,162,40)" fg:x="46673" fg:w="29"/><text x="34.3582%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (77 samples, 0.06%)</title><rect x="35.9082%" y="661" width="0.0563%" height="15" fill="rgb(229,68,17)" fg:x="49136" fg:w="77"/><text x="36.1582%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (108 samples, 0.08%)</title><rect x="35.8921%" y="677" width="0.0789%" height="15" fill="rgb(213,182,10)" fg:x="49114" fg:w="108"/><text x="36.1421%" y="687.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (175 samples, 0.13%)</title><rect x="35.9871%" y="661" width="0.1279%" height="15" fill="rgb(245,125,30)" fg:x="49244" fg:w="175"/><text x="36.2371%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (120 samples, 0.09%)</title><rect x="36.0273%" y="645" width="0.0877%" height="15" fill="rgb(232,202,2)" fg:x="49299" fg:w="120"/><text x="36.2773%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (89 samples, 0.07%)</title><rect x="36.0499%" y="629" width="0.0650%" height="15" fill="rgb(237,140,51)" fg:x="49330" fg:w="89"/><text x="36.2999%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (14 samples, 0.01%)</title><rect x="36.1150%" y="661" width="0.0102%" height="15" fill="rgb(236,157,25)" fg:x="49419" fg:w="14"/><text x="36.3650%" y="671.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::chunk_mut (14 samples, 0.01%)</title><rect x="36.1150%" y="645" width="0.0102%" height="15" fill="rgb(219,209,0)" fg:x="49419" fg:w="14"/><text x="36.3650%" y="655.50"></text></g><g><title>[libc.so.6] (779 samples, 0.57%)</title><rect x="36.9261%" y="437" width="0.5693%" height="15" fill="rgb(240,116,54)" fg:x="50529" fg:w="779"/><text x="37.1761%" y="447.50"></text></g><g><title>recv (1,719 samples, 1.26%)</title><rect x="36.3824%" y="453" width="1.2562%" height="15" fill="rgb(216,10,36)" fg:x="49785" fg:w="1719"/><text x="36.6324%" y="463.50"></text></g><g><title>[unknown] (196 samples, 0.14%)</title><rect x="37.4954%" y="437" width="0.1432%" height="15" fill="rgb(222,72,44)" fg:x="51308" fg:w="196"/><text x="37.7454%" y="447.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (207 samples, 0.15%)</title><rect x="37.6409%" y="437" width="0.1513%" height="15" fill="rgb(232,159,9)" fg:x="51507" fg:w="207"/><text x="37.8909%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,937 samples, 1.42%)</title><rect x="36.3773%" y="581" width="1.4155%" height="15" fill="rgb(210,39,32)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="591.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,937 samples, 1.42%)</title><rect x="36.3773%" y="565" width="1.4155%" height="15" fill="rgb(216,194,45)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="575.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,937 samples, 1.42%)</title><rect x="36.3773%" y="549" width="1.4155%" height="15" fill="rgb(218,18,35)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="559.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,937 samples, 1.42%)</title><rect x="36.3773%" y="533" width="1.4155%" height="15" fill="rgb(207,83,51)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="543.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,937 samples, 1.42%)</title><rect x="36.3773%" y="517" width="1.4155%" height="15" fill="rgb(225,63,43)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="527.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,937 samples, 1.42%)</title><rect x="36.3773%" y="501" width="1.4155%" height="15" fill="rgb(207,57,36)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="511.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1,937 samples, 1.42%)</title><rect x="36.3773%" y="485" width="1.4155%" height="15" fill="rgb(216,99,33)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="495.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1,937 samples, 1.42%)</title><rect x="36.3773%" y="469" width="1.4155%" height="15" fill="rgb(225,42,16)" fg:x="49778" fg:w="1937"/><text x="36.6273%" y="479.50"></text></g><g><title>std::sys::pal::unix::cvt (211 samples, 0.15%)</title><rect x="37.6387%" y="453" width="0.1542%" height="15" fill="rgb(220,201,45)" fg:x="51504" fg:w="211"/><text x="37.8887%" y="463.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (18 samples, 0.01%)</title><rect x="37.7965%" y="581" width="0.0132%" height="15" fill="rgb(225,33,4)" fg:x="51720" fg:w="18"/><text x="38.0465%" y="591.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (17 samples, 0.01%)</title><rect x="37.7972%" y="565" width="0.0124%" height="15" fill="rgb(224,33,50)" fg:x="51721" fg:w="17"/><text x="38.0472%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (70 samples, 0.05%)</title><rect x="37.8097%" y="581" width="0.0512%" height="15" fill="rgb(246,198,51)" fg:x="51738" fg:w="70"/><text x="38.0597%" y="591.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (14 samples, 0.01%)</title><rect x="37.8608%" y="581" width="0.0102%" height="15" fill="rgb(205,22,4)" fg:x="51808" fg:w="14"/><text x="38.1108%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.01%)</title><rect x="37.8725%" y="533" width="0.0146%" height="15" fill="rgb(206,3,8)" fg:x="51824" fg:w="20"/><text x="38.1225%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.01%)</title><rect x="37.8725%" y="517" width="0.0146%" height="15" fill="rgb(251,23,15)" fg:x="51824" fg:w="20"/><text x="38.1225%" y="527.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (32 samples, 0.02%)</title><rect x="37.8711%" y="581" width="0.0234%" height="15" fill="rgb(252,88,28)" fg:x="51822" fg:w="32"/><text x="38.1211%" y="591.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (32 samples, 0.02%)</title><rect x="37.8711%" y="565" width="0.0234%" height="15" fill="rgb(212,127,14)" fg:x="51822" fg:w="32"/><text x="38.1211%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (32 samples, 0.02%)</title><rect x="37.8711%" y="549" width="0.0234%" height="15" fill="rgb(247,145,37)" fg:x="51822" fg:w="32"/><text x="38.1211%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (23 samples, 0.02%)</title><rect x="37.9215%" y="501" width="0.0168%" height="15" fill="rgb(209,117,53)" fg:x="51891" fg:w="23"/><text x="38.1715%" y="511.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (23 samples, 0.02%)</title><rect x="37.9215%" y="485" width="0.0168%" height="15" fill="rgb(212,90,42)" fg:x="51891" fg:w="23"/><text x="38.1715%" y="495.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (23 samples, 0.02%)</title><rect x="37.9215%" y="469" width="0.0168%" height="15" fill="rgb(218,164,37)" fg:x="51891" fg:w="23"/><text x="38.1715%" y="479.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (59 samples, 0.04%)</title><rect x="37.9200%" y="549" width="0.0431%" height="15" fill="rgb(246,65,34)" fg:x="51889" fg:w="59"/><text x="38.1700%" y="559.50"></text></g><g><title>tokio::runtime::context::budget (59 samples, 0.04%)</title><rect x="37.9200%" y="533" width="0.0431%" height="15" fill="rgb(231,100,33)" fg:x="51889" fg:w="59"/><text x="38.1700%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.04%)</title><rect x="37.9200%" y="517" width="0.0431%" height="15" fill="rgb(228,126,14)" fg:x="51889" fg:w="59"/><text x="38.1700%" y="527.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (34 samples, 0.02%)</title><rect x="37.9383%" y="501" width="0.0248%" height="15" fill="rgb(215,173,21)" fg:x="51914" fg:w="34"/><text x="38.1883%" y="511.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (34 samples, 0.02%)</title><rect x="37.9383%" y="485" width="0.0248%" height="15" fill="rgb(210,6,40)" fg:x="51914" fg:w="34"/><text x="38.1883%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (30 samples, 0.02%)</title><rect x="37.9829%" y="533" width="0.0219%" height="15" fill="rgb(212,48,18)" fg:x="51975" fg:w="30"/><text x="38.2329%" y="543.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (26 samples, 0.02%)</title><rect x="37.9858%" y="517" width="0.0190%" height="15" fill="rgb(230,214,11)" fg:x="51979" fg:w="26"/><text x="38.2358%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (17 samples, 0.01%)</title><rect x="37.9924%" y="501" width="0.0124%" height="15" fill="rgb(254,105,39)" fg:x="51988" fg:w="17"/><text x="38.2424%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.01%)</title><rect x="37.9924%" y="485" width="0.0124%" height="15" fill="rgb(245,158,5)" fg:x="51988" fg:w="17"/><text x="38.2424%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.01%)</title><rect x="37.9924%" y="469" width="0.0124%" height="15" fill="rgb(249,208,11)" fg:x="51988" fg:w="17"/><text x="38.2424%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (304 samples, 0.22%)</title><rect x="38.0121%" y="533" width="0.2222%" height="15" fill="rgb(210,39,28)" fg:x="52015" fg:w="304"/><text x="38.2621%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (304 samples, 0.22%)</title><rect x="38.0121%" y="517" width="0.2222%" height="15" fill="rgb(211,56,53)" fg:x="52015" fg:w="304"/><text x="38.2621%" y="527.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (2,904 samples, 2.12%)</title><rect x="36.1252%" y="661" width="2.1222%" height="15" fill="rgb(226,201,30)" fg:x="49433" fg:w="2904"/><text x="36.3752%" y="671.50">&lt;..</text></g><g><title>&lt;tokio::io::util::chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,903 samples, 2.12%)</title><rect x="36.1259%" y="645" width="2.1215%" height="15" fill="rgb(239,101,34)" fg:x="49434" fg:w="2903"/><text x="36.3759%" y="655.50">&lt;..</text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,896 samples, 2.12%)</title><rect x="36.1310%" y="629" width="2.1164%" height="15" fill="rgb(226,209,5)" fg:x="49441" fg:w="2896"/><text x="36.3810%" y="639.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,672 samples, 1.95%)</title><rect x="36.2947%" y="613" width="1.9527%" height="15" fill="rgb(250,105,47)" fg:x="49665" fg:w="2672"/><text x="36.5447%" y="623.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2,598 samples, 1.90%)</title><rect x="36.3488%" y="597" width="1.8986%" height="15" fill="rgb(230,72,3)" fg:x="49739" fg:w="2598"/><text x="36.5988%" y="607.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (483 samples, 0.35%)</title><rect x="37.8944%" y="581" width="0.3530%" height="15" fill="rgb(232,218,39)" fg:x="51854" fg:w="483"/><text x="38.1444%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (477 samples, 0.35%)</title><rect x="37.8988%" y="565" width="0.3486%" height="15" fill="rgb(248,166,6)" fg:x="51860" fg:w="477"/><text x="38.1488%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (389 samples, 0.28%)</title><rect x="37.9631%" y="549" width="0.2843%" height="15" fill="rgb(247,89,20)" fg:x="51948" fg:w="389"/><text x="38.2131%" y="559.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (50 samples, 0.04%)</title><rect x="38.2474%" y="661" width="0.0365%" height="15" fill="rgb(248,130,54)" fg:x="52337" fg:w="50"/><text x="38.4974%" y="671.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (28 samples, 0.02%)</title><rect x="38.2840%" y="661" width="0.0205%" height="15" fill="rgb(234,196,4)" fg:x="52387" fg:w="28"/><text x="38.5340%" y="671.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (23 samples, 0.02%)</title><rect x="38.2876%" y="645" width="0.0168%" height="15" fill="rgb(250,143,31)" fg:x="52392" fg:w="23"/><text x="38.5376%" y="655.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (20 samples, 0.01%)</title><rect x="38.2898%" y="629" width="0.0146%" height="15" fill="rgb(211,110,34)" fg:x="52395" fg:w="20"/><text x="38.5398%" y="639.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (21 samples, 0.02%)</title><rect x="38.3132%" y="661" width="0.0153%" height="15" fill="rgb(215,124,48)" fg:x="52427" fg:w="21"/><text x="38.5632%" y="671.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (3,231 samples, 2.36%)</title><rect x="35.9761%" y="677" width="2.3612%" height="15" fill="rgb(216,46,13)" fg:x="49229" fg:w="3231"/><text x="36.2261%" y="687.50">&lt;t..</text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (35 samples, 0.03%)</title><rect x="38.3453%" y="661" width="0.0256%" height="15" fill="rgb(205,184,25)" fg:x="52471" fg:w="35"/><text x="38.5953%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (33 samples, 0.02%)</title><rect x="38.3468%" y="645" width="0.0241%" height="15" fill="rgb(228,1,10)" fg:x="52473" fg:w="33"/><text x="38.5968%" y="655.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (49 samples, 0.04%)</title><rect x="38.3373%" y="677" width="0.0358%" height="15" fill="rgb(213,116,27)" fg:x="52460" fg:w="49"/><text x="38.5873%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (48 samples, 0.04%)</title><rect x="38.3914%" y="661" width="0.0351%" height="15" fill="rgb(241,95,50)" fg:x="52534" fg:w="48"/><text x="38.6414%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (48 samples, 0.04%)</title><rect x="38.3914%" y="645" width="0.0351%" height="15" fill="rgb(238,48,32)" fg:x="52534" fg:w="48"/><text x="38.6414%" y="655.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (91 samples, 0.07%)</title><rect x="38.3731%" y="677" width="0.0665%" height="15" fill="rgb(235,113,49)" fg:x="52509" fg:w="91"/><text x="38.6231%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.01%)</title><rect x="38.4265%" y="661" width="0.0132%" height="15" fill="rgb(205,127,43)" fg:x="52582" fg:w="18"/><text x="38.6765%" y="671.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32::_{{closure}} (18 samples, 0.01%)</title><rect x="38.4265%" y="645" width="0.0132%" height="15" fill="rgb(250,162,2)" fg:x="52582" fg:w="18"/><text x="38.6765%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13,532 samples, 9.89%)</title><rect x="38.5733%" y="597" width="9.8891%" height="15" fill="rgb(220,13,41)" fg:x="52783" fg:w="13532"/><text x="38.8233%" y="607.50">core::intrinsi..</text></g><g><title>[libc.so.6] (13,530 samples, 9.89%)</title><rect x="38.5748%" y="581" width="9.8876%" height="15" fill="rgb(249,221,25)" fg:x="52785" fg:w="13530"/><text x="38.8248%" y="591.50">[libc.so.6]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13,598 samples, 9.94%)</title><rect x="38.5288%" y="645" width="9.9373%" height="15" fill="rgb(215,208,19)" fg:x="52722" fg:w="13598"/><text x="38.7788%" y="655.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13,598 samples, 9.94%)</title><rect x="38.5288%" y="629" width="9.9373%" height="15" fill="rgb(236,175,2)" fg:x="52722" fg:w="13598"/><text x="38.7788%" y="639.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13,598 samples, 9.94%)</title><rect x="38.5288%" y="613" width="9.9373%" height="15" fill="rgb(241,52,2)" fg:x="52722" fg:w="13598"/><text x="38.7788%" y="623.50">alloc::vec::Ve..</text></g><g><title>sz_index2size (108 samples, 0.08%)</title><rect x="48.5954%" y="421" width="0.0789%" height="15" fill="rgb(248,140,14)" fg:x="66497" fg:w="108"/><text x="48.8454%" y="431.50"></text></g><g><title>sz_index2size_lookup (108 samples, 0.08%)</title><rect x="48.5954%" y="405" width="0.0789%" height="15" fill="rgb(253,22,42)" fg:x="66497" fg:w="108"/><text x="48.8454%" y="415.50"></text></g><g><title>sz_index2size_lookup_impl (108 samples, 0.08%)</title><rect x="48.5954%" y="389" width="0.0789%" height="15" fill="rgb(234,61,47)" fg:x="66497" fg:w="108"/><text x="48.8454%" y="399.50"></text></g><g><title>aligned_usize_get (256 samples, 0.19%)</title><rect x="48.5764%" y="437" width="0.1871%" height="15" fill="rgb(208,226,15)" fg:x="66471" fg:w="256"/><text x="48.8264%" y="447.50"></text></g><g><title>sz_size2index (122 samples, 0.09%)</title><rect x="48.6743%" y="421" width="0.0892%" height="15" fill="rgb(217,221,4)" fg:x="66605" fg:w="122"/><text x="48.9243%" y="431.50"></text></g><g><title>sz_size2index_compute (115 samples, 0.08%)</title><rect x="48.6795%" y="405" width="0.0840%" height="15" fill="rgb(212,174,34)" fg:x="66612" fg:w="115"/><text x="48.9295%" y="415.50"></text></g><g><title>_rjem_je_arena_get_ehooks (30 samples, 0.02%)</title><rect x="48.8373%" y="341" width="0.0219%" height="15" fill="rgb(253,83,4)" fg:x="66828" fg:w="30"/><text x="49.0873%" y="351.50"></text></g><g><title>_rjem_je_emap_remap (34 samples, 0.02%)</title><rect x="48.8775%" y="325" width="0.0248%" height="15" fill="rgb(250,195,49)" fg:x="66883" fg:w="34"/><text x="49.1275%" y="335.50"></text></g><g><title>rtree_write (15 samples, 0.01%)</title><rect x="48.8914%" y="309" width="0.0110%" height="15" fill="rgb(241,192,25)" fg:x="66902" fg:w="15"/><text x="49.1414%" y="319.50"></text></g><g><title>pa_nactive_add (35 samples, 0.03%)</title><rect x="48.9060%" y="325" width="0.0256%" height="15" fill="rgb(208,124,10)" fg:x="66922" fg:w="35"/><text x="49.1560%" y="335.50"></text></g><g><title>atomic_fetch_add_zu (35 samples, 0.03%)</title><rect x="48.9060%" y="309" width="0.0256%" height="15" fill="rgb(222,33,0)" fg:x="66922" fg:w="35"/><text x="49.1560%" y="319.50"></text></g><g><title>pa_shard_uses_hpa (51 samples, 0.04%)</title><rect x="48.9316%" y="325" width="0.0373%" height="15" fill="rgb(234,209,28)" fg:x="66957" fg:w="51"/><text x="49.1816%" y="335.50"></text></g><g><title>atomic_load_b (51 samples, 0.04%)</title><rect x="48.9316%" y="309" width="0.0373%" height="15" fill="rgb(224,11,23)" fg:x="66957" fg:w="51"/><text x="49.1816%" y="319.50"></text></g><g><title>_rjem_je_edata_heap_first (143 samples, 0.10%)</title><rect x="49.2005%" y="197" width="0.1045%" height="15" fill="rgb(232,99,1)" fg:x="67325" fg:w="143"/><text x="49.4505%" y="207.50"></text></g><g><title>ph_first (129 samples, 0.09%)</title><rect x="49.2107%" y="181" width="0.0943%" height="15" fill="rgb(237,95,45)" fg:x="67339" fg:w="129"/><text x="49.4607%" y="191.50"></text></g><g><title>ph_merge_aux (101 samples, 0.07%)</title><rect x="49.2312%" y="165" width="0.0738%" height="15" fill="rgb(208,109,11)" fg:x="67367" fg:w="101"/><text x="49.4812%" y="175.50"></text></g><g><title>phn_next_get (85 samples, 0.06%)</title><rect x="49.2429%" y="149" width="0.0621%" height="15" fill="rgb(216,190,48)" fg:x="67383" fg:w="85"/><text x="49.4929%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (21 samples, 0.02%)</title><rect x="49.3050%" y="197" width="0.0153%" height="15" fill="rgb(251,171,36)" fg:x="67468" fg:w="21"/><text x="49.5550%" y="207.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (19 samples, 0.01%)</title><rect x="49.3065%" y="181" width="0.0139%" height="15" fill="rgb(230,62,22)" fg:x="67470" fg:w="19"/><text x="49.5565%" y="191.50"></text></g><g><title>edata_cmp_summary_comp (36 samples, 0.03%)</title><rect x="49.3204%" y="197" width="0.0263%" height="15" fill="rgb(225,114,35)" fg:x="67489" fg:w="36"/><text x="49.5704%" y="207.50"></text></g><g><title>fb_ffs (41 samples, 0.03%)</title><rect x="49.3467%" y="197" width="0.0300%" height="15" fill="rgb(215,118,42)" fg:x="67525" fg:w="41"/><text x="49.5967%" y="207.50"></text></g><g><title>fb_find_impl (41 samples, 0.03%)</title><rect x="49.3467%" y="181" width="0.0300%" height="15" fill="rgb(243,119,21)" fg:x="67525" fg:w="41"/><text x="49.5967%" y="191.50"></text></g><g><title>_rjem_je_eset_fit (391 samples, 0.29%)</title><rect x="49.1048%" y="229" width="0.2857%" height="15" fill="rgb(252,177,53)" fg:x="67194" fg:w="391"/><text x="49.3548%" y="239.50"></text></g><g><title>eset_first_fit (366 samples, 0.27%)</title><rect x="49.1231%" y="213" width="0.2675%" height="15" fill="rgb(237,209,29)" fg:x="67219" fg:w="366"/><text x="49.3731%" y="223.50"></text></g><g><title>sz_psz2ind (18 samples, 0.01%)</title><rect x="49.3774%" y="197" width="0.0132%" height="15" fill="rgb(212,65,23)" fg:x="67567" fg:w="18"/><text x="49.6274%" y="207.50"></text></g><g><title>rtree_leaf_elm_lookup (16 samples, 0.01%)</title><rect x="49.4044%" y="197" width="0.0117%" height="15" fill="rgb(230,222,46)" fg:x="67604" fg:w="16"/><text x="49.6544%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (63 samples, 0.05%)</title><rect x="49.4161%" y="197" width="0.0460%" height="15" fill="rgb(215,135,32)" fg:x="67620" fg:w="63"/><text x="49.6661%" y="207.50"></text></g><g><title>rtree_leaf_elm_bits_read (59 samples, 0.04%)</title><rect x="49.4190%" y="181" width="0.0431%" height="15" fill="rgb(246,101,22)" fg:x="67624" fg:w="59"/><text x="49.6690%" y="191.50"></text></g><g><title>atomic_load_p (59 samples, 0.04%)</title><rect x="49.4190%" y="165" width="0.0431%" height="15" fill="rgb(206,107,13)" fg:x="67624" fg:w="59"/><text x="49.6690%" y="175.50"></text></g><g><title>_rjem_je_emap_update_edata_state (94 samples, 0.07%)</title><rect x="49.3942%" y="213" width="0.0687%" height="15" fill="rgb(250,100,44)" fg:x="67590" fg:w="94"/><text x="49.6442%" y="223.50"></text></g><g><title>_rjem_je_edata_heap_remove (28 samples, 0.02%)</title><rect x="49.4768%" y="197" width="0.0205%" height="15" fill="rgb(231,147,38)" fg:x="67703" fg:w="28"/><text x="49.7268%" y="207.50"></text></g><g><title>ph_remove (19 samples, 0.01%)</title><rect x="49.4833%" y="181" width="0.0139%" height="15" fill="rgb(229,8,40)" fg:x="67712" fg:w="19"/><text x="49.7333%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (22 samples, 0.02%)</title><rect x="49.4972%" y="197" width="0.0161%" height="15" fill="rgb(221,135,30)" fg:x="67731" fg:w="22"/><text x="49.7472%" y="207.50"></text></g><g><title>edata_list_inactive_remove (33 samples, 0.02%)</title><rect x="49.5155%" y="197" width="0.0241%" height="15" fill="rgb(249,193,18)" fg:x="67756" fg:w="33"/><text x="49.7655%" y="207.50"></text></g><g><title>atomic_load_zu (57 samples, 0.04%)</title><rect x="49.5403%" y="181" width="0.0417%" height="15" fill="rgb(209,133,39)" fg:x="67790" fg:w="57"/><text x="49.7903%" y="191.50"></text></g><g><title>eset_stats_sub (62 samples, 0.05%)</title><rect x="49.5403%" y="197" width="0.0453%" height="15" fill="rgb(232,100,14)" fg:x="67790" fg:w="62"/><text x="49.7903%" y="207.50"></text></g><g><title>extent_recycle_extract (709 samples, 0.52%)</title><rect x="49.0894%" y="245" width="0.5181%" height="15" fill="rgb(224,185,1)" fg:x="67173" fg:w="709"/><text x="49.3394%" y="255.50"></text></g><g><title>extent_activate_locked (297 samples, 0.22%)</title><rect x="49.3905%" y="229" width="0.2170%" height="15" fill="rgb(223,139,8)" fg:x="67585" fg:w="297"/><text x="49.6405%" y="239.50"></text></g><g><title>_rjem_je_eset_remove (198 samples, 0.14%)</title><rect x="49.4629%" y="213" width="0.1447%" height="15" fill="rgb(232,213,38)" fg:x="67684" fg:w="198"/><text x="49.7129%" y="223.50"></text></g><g><title>sz_psz2ind (25 samples, 0.02%)</title><rect x="49.5893%" y="197" width="0.0183%" height="15" fill="rgb(207,94,22)" fg:x="67857" fg:w="25"/><text x="49.8393%" y="207.50"></text></g><g><title>_rjem_je_emap_update_edata_state (57 samples, 0.04%)</title><rect x="49.6193%" y="197" width="0.0417%" height="15" fill="rgb(219,183,54)" fg:x="67898" fg:w="57"/><text x="49.8693%" y="207.50"></text></g><g><title>rtree_leaf_elm_state_update (29 samples, 0.02%)</title><rect x="49.6397%" y="181" width="0.0212%" height="15" fill="rgb(216,185,54)" fg:x="67926" fg:w="29"/><text x="49.8897%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (25 samples, 0.02%)</title><rect x="49.6426%" y="165" width="0.0183%" height="15" fill="rgb(254,217,39)" fg:x="67930" fg:w="25"/><text x="49.8926%" y="175.50"></text></g><g><title>atomic_load_p (25 samples, 0.02%)</title><rect x="49.6426%" y="149" width="0.0183%" height="15" fill="rgb(240,178,23)" fg:x="67930" fg:w="25"/><text x="49.8926%" y="159.50"></text></g><g><title>_rjem_je_edata_heap_empty (20 samples, 0.01%)</title><rect x="49.6821%" y="181" width="0.0146%" height="15" fill="rgb(218,11,47)" fg:x="67984" fg:w="20"/><text x="49.9321%" y="191.50"></text></g><g><title>edata_heap_ph_cmp (14 samples, 0.01%)</title><rect x="49.7143%" y="149" width="0.0102%" height="15" fill="rgb(218,51,51)" fg:x="68028" fg:w="14"/><text x="49.9643%" y="159.50"></text></g><g><title>edata_snad_comp (14 samples, 0.01%)</title><rect x="49.7143%" y="133" width="0.0102%" height="15" fill="rgb(238,126,27)" fg:x="68028" fg:w="14"/><text x="49.9643%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_insert (47 samples, 0.03%)</title><rect x="49.6967%" y="181" width="0.0343%" height="15" fill="rgb(249,202,22)" fg:x="68004" fg:w="47"/><text x="49.9467%" y="191.50"></text></g><g><title>ph_insert (38 samples, 0.03%)</title><rect x="49.7033%" y="165" width="0.0278%" height="15" fill="rgb(254,195,49)" fg:x="68013" fg:w="38"/><text x="49.9533%" y="175.50"></text></g><g><title>atomic_load_zu (20 samples, 0.01%)</title><rect x="49.7523%" y="165" width="0.0146%" height="15" fill="rgb(208,123,14)" fg:x="68080" fg:w="20"/><text x="50.0023%" y="175.50"></text></g><g><title>eset_stats_add (23 samples, 0.02%)</title><rect x="49.7523%" y="181" width="0.0168%" height="15" fill="rgb(224,200,8)" fg:x="68080" fg:w="23"/><text x="50.0023%" y="191.50"></text></g><g><title>extent_deactivate_locked (246 samples, 0.18%)</title><rect x="49.6076%" y="229" width="0.1798%" height="15" fill="rgb(217,61,36)" fg:x="67882" fg:w="246"/><text x="49.8576%" y="239.50"></text></g><g><title>extent_deactivate_locked_impl (246 samples, 0.18%)</title><rect x="49.6076%" y="213" width="0.1798%" height="15" fill="rgb(206,35,45)" fg:x="67882" fg:w="246"/><text x="49.8576%" y="223.50"></text></g><g><title>_rjem_je_eset_insert (173 samples, 0.13%)</title><rect x="49.6609%" y="197" width="0.1264%" height="15" fill="rgb(217,65,33)" fg:x="67955" fg:w="173"/><text x="49.9109%" y="207.50"></text></g><g><title>sz_psz2ind (23 samples, 0.02%)</title><rect x="49.7705%" y="181" width="0.0168%" height="15" fill="rgb(222,158,48)" fg:x="68105" fg:w="23"/><text x="50.0205%" y="191.50"></text></g><g><title>phn_merge (17 samples, 0.01%)</title><rect x="49.8575%" y="117" width="0.0124%" height="15" fill="rgb(254,2,54)" fg:x="68224" fg:w="17"/><text x="50.1075%" y="127.50"></text></g><g><title>phn_merge_siblings (43 samples, 0.03%)</title><rect x="49.8560%" y="133" width="0.0314%" height="15" fill="rgb(250,143,38)" fg:x="68222" fg:w="43"/><text x="50.1060%" y="143.50"></text></g><g><title>phn_next_get (24 samples, 0.02%)</title><rect x="49.8699%" y="117" width="0.0175%" height="15" fill="rgb(248,25,0)" fg:x="68241" fg:w="24"/><text x="50.1199%" y="127.50"></text></g><g><title>phn_next_get (16 samples, 0.01%)</title><rect x="49.8875%" y="133" width="0.0117%" height="15" fill="rgb(206,152,27)" fg:x="68265" fg:w="16"/><text x="50.1375%" y="143.50"></text></g><g><title>_rjem_je_edata_avail_first (77 samples, 0.06%)</title><rect x="49.8451%" y="181" width="0.0563%" height="15" fill="rgb(240,77,30)" fg:x="68207" fg:w="77"/><text x="50.0951%" y="191.50"></text></g><g><title>ph_first (72 samples, 0.05%)</title><rect x="49.8487%" y="165" width="0.0526%" height="15" fill="rgb(231,5,3)" fg:x="68212" fg:w="72"/><text x="50.0987%" y="175.50"></text></g><g><title>ph_merge_aux (65 samples, 0.05%)</title><rect x="49.8538%" y="149" width="0.0475%" height="15" fill="rgb(207,226,32)" fg:x="68219" fg:w="65"/><text x="50.1038%" y="159.50"></text></g><g><title>edata_avail_ph_cmp (25 samples, 0.02%)</title><rect x="49.9350%" y="101" width="0.0183%" height="15" fill="rgb(222,207,47)" fg:x="68330" fg:w="25"/><text x="50.1850%" y="111.50"></text></g><g><title>edata_esnead_comp (25 samples, 0.02%)</title><rect x="49.9350%" y="85" width="0.0183%" height="15" fill="rgb(229,115,45)" fg:x="68330" fg:w="25"/><text x="50.1850%" y="95.50"></text></g><g><title>edata_esn_comp (17 samples, 0.01%)</title><rect x="49.9408%" y="69" width="0.0124%" height="15" fill="rgb(224,191,6)" fg:x="68338" fg:w="17"/><text x="50.1908%" y="79.50"></text></g><g><title>edata_esn_get (15 samples, 0.01%)</title><rect x="49.9423%" y="53" width="0.0110%" height="15" fill="rgb(230,227,24)" fg:x="68340" fg:w="15"/><text x="50.1923%" y="63.50"></text></g><g><title>phn_merge (77 samples, 0.06%)</title><rect x="49.9335%" y="117" width="0.0563%" height="15" fill="rgb(228,80,19)" fg:x="68328" fg:w="77"/><text x="50.1835%" y="127.50"></text></g><g><title>phn_merge_ordered (50 samples, 0.04%)</title><rect x="49.9532%" y="101" width="0.0365%" height="15" fill="rgb(247,229,0)" fg:x="68355" fg:w="50"/><text x="50.2032%" y="111.50"></text></g><g><title>phn_prev_set (27 samples, 0.02%)</title><rect x="49.9700%" y="85" width="0.0197%" height="15" fill="rgb(237,194,15)" fg:x="68378" fg:w="27"/><text x="50.2200%" y="95.50"></text></g><g><title>phn_next_get (142 samples, 0.10%)</title><rect x="49.9898%" y="117" width="0.1038%" height="15" fill="rgb(219,203,20)" fg:x="68405" fg:w="142"/><text x="50.2398%" y="127.50"></text></g><g><title>phn_next_set (15 samples, 0.01%)</title><rect x="50.0935%" y="117" width="0.0110%" height="15" fill="rgb(234,128,8)" fg:x="68547" fg:w="15"/><text x="50.3435%" y="127.50"></text></g><g><title>ph_merge_children (266 samples, 0.19%)</title><rect x="49.9247%" y="149" width="0.1944%" height="15" fill="rgb(248,202,8)" fg:x="68316" fg:w="266"/><text x="50.1747%" y="159.50"></text></g><g><title>phn_merge_siblings (266 samples, 0.19%)</title><rect x="49.9247%" y="133" width="0.1944%" height="15" fill="rgb(206,104,37)" fg:x="68316" fg:w="266"/><text x="50.1747%" y="143.50"></text></g><g><title>phn_prev_set (20 samples, 0.01%)</title><rect x="50.1045%" y="117" width="0.0146%" height="15" fill="rgb(223,8,27)" fg:x="68562" fg:w="20"/><text x="50.3545%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_remove (304 samples, 0.22%)</title><rect x="49.9013%" y="181" width="0.2222%" height="15" fill="rgb(216,217,28)" fg:x="68284" fg:w="304"/><text x="50.1513%" y="191.50"></text></g><g><title>ph_remove (300 samples, 0.22%)</title><rect x="49.9043%" y="165" width="0.2192%" height="15" fill="rgb(249,199,1)" fg:x="68288" fg:w="300"/><text x="50.1543%" y="175.50"></text></g><g><title>malloc_mutex_trylock_final (76 samples, 0.06%)</title><rect x="50.1264%" y="165" width="0.0555%" height="15" fill="rgb(240,85,17)" fg:x="68592" fg:w="76"/><text x="50.3764%" y="175.50"></text></g><g><title>pthread_mutex_trylock (75 samples, 0.05%)</title><rect x="50.1272%" y="149" width="0.0548%" height="15" fill="rgb(206,108,45)" fg:x="68593" fg:w="75"/><text x="50.3772%" y="159.50"></text></g><g><title>malloc_mutex_lock (77 samples, 0.06%)</title><rect x="50.1264%" y="181" width="0.0563%" height="15" fill="rgb(245,210,41)" fg:x="68592" fg:w="77"/><text x="50.3764%" y="191.50"></text></g><g><title>[libc.so.6] (103 samples, 0.08%)</title><rect x="50.1827%" y="165" width="0.0753%" height="15" fill="rgb(206,13,37)" fg:x="68669" fg:w="103"/><text x="50.4327%" y="175.50"></text></g><g><title>pthread_mutex_unlock (66 samples, 0.05%)</title><rect x="50.2580%" y="165" width="0.0482%" height="15" fill="rgb(250,61,18)" fg:x="68772" fg:w="66"/><text x="50.5080%" y="175.50"></text></g><g><title>_rjem_je_edata_cache_get (648 samples, 0.47%)</title><rect x="49.8392%" y="197" width="0.4736%" height="15" fill="rgb(235,172,48)" fg:x="68199" fg:w="648"/><text x="50.0892%" y="207.50"></text></g><g><title>malloc_mutex_unlock (178 samples, 0.13%)</title><rect x="50.1827%" y="181" width="0.1301%" height="15" fill="rgb(249,201,17)" fg:x="68669" fg:w="178"/><text x="50.4327%" y="191.50"></text></g><g><title>_rjem_je_emap_split_commit (22 samples, 0.02%)</title><rect x="50.3128%" y="197" width="0.0161%" height="15" fill="rgb(219,208,6)" fg:x="68847" fg:w="22"/><text x="50.5628%" y="207.50"></text></g><g><title>emap_rtree_write_acquired (17 samples, 0.01%)</title><rect x="50.3164%" y="181" width="0.0124%" height="15" fill="rgb(248,31,23)" fg:x="68852" fg:w="17"/><text x="50.5664%" y="191.50"></text></g><g><title>_rjem_je_emap_split_prepare (31 samples, 0.02%)</title><rect x="50.3289%" y="197" width="0.0227%" height="15" fill="rgb(245,15,42)" fg:x="68869" fg:w="31"/><text x="50.5789%" y="207.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (26 samples, 0.02%)</title><rect x="50.3325%" y="181" width="0.0190%" height="15" fill="rgb(222,217,39)" fg:x="68874" fg:w="26"/><text x="50.5825%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (21 samples, 0.02%)</title><rect x="50.3362%" y="165" width="0.0153%" height="15" fill="rgb(210,219,27)" fg:x="68879" fg:w="21"/><text x="50.5862%" y="175.50"></text></g><g><title>extent_recycle_split (1,040 samples, 0.76%)</title><rect x="49.6076%" y="245" width="0.7600%" height="15" fill="rgb(252,166,36)" fg:x="67882" fg:w="1040"/><text x="49.8576%" y="255.50"></text></g><g><title>extent_split_interior (794 samples, 0.58%)</title><rect x="49.7873%" y="229" width="0.5802%" height="15" fill="rgb(245,132,34)" fg:x="68128" fg:w="794"/><text x="50.0373%" y="239.50"></text></g><g><title>extent_split_impl (778 samples, 0.57%)</title><rect x="49.7990%" y="213" width="0.5686%" height="15" fill="rgb(236,54,3)" fg:x="68144" fg:w="778"/><text x="50.0490%" y="223.50"></text></g><g><title>atomic_load_b (14 samples, 0.01%)</title><rect x="50.3727%" y="213" width="0.0102%" height="15" fill="rgb(241,173,43)" fg:x="68929" fg:w="14"/><text x="50.6227%" y="223.50"></text></g><g><title>pthread_mutex_trylock (27 samples, 0.02%)</title><rect x="50.3844%" y="197" width="0.0197%" height="15" fill="rgb(215,190,9)" fg:x="68945" fg:w="27"/><text x="50.6344%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (31 samples, 0.02%)</title><rect x="50.3829%" y="213" width="0.0227%" height="15" fill="rgb(242,101,16)" fg:x="68943" fg:w="31"/><text x="50.6329%" y="223.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (63 samples, 0.05%)</title><rect x="50.3698%" y="229" width="0.0460%" height="15" fill="rgb(223,190,21)" fg:x="68925" fg:w="63"/><text x="50.6198%" y="239.50"></text></g><g><title>spin_cpu_spinwait (14 samples, 0.01%)</title><rect x="50.4056%" y="213" width="0.0102%" height="15" fill="rgb(215,228,25)" fg:x="68974" fg:w="14"/><text x="50.6556%" y="223.50"></text></g><g><title>pthread_mutex_trylock (249 samples, 0.18%)</title><rect x="50.4166%" y="213" width="0.1820%" height="15" fill="rgb(225,36,22)" fg:x="68989" fg:w="249"/><text x="50.6666%" y="223.50"></text></g><g><title>malloc_mutex_trylock_final (290 samples, 0.21%)</title><rect x="50.4158%" y="229" width="0.2119%" height="15" fill="rgb(251,106,46)" fg:x="68988" fg:w="290"/><text x="50.6658%" y="239.50"></text></g><g><title>pthread_mutex_trylock@plt (40 samples, 0.03%)</title><rect x="50.5985%" y="213" width="0.0292%" height="15" fill="rgb(208,90,1)" fg:x="69238" fg:w="40"/><text x="50.8485%" y="223.50"></text></g><g><title>malloc_mutex_lock (363 samples, 0.27%)</title><rect x="50.3676%" y="245" width="0.2653%" height="15" fill="rgb(243,10,4)" fg:x="68922" fg:w="363"/><text x="50.6176%" y="255.50"></text></g><g><title>[libc.so.6] (106 samples, 0.08%)</title><rect x="50.6343%" y="229" width="0.0775%" height="15" fill="rgb(212,137,27)" fg:x="69287" fg:w="106"/><text x="50.8843%" y="239.50"></text></g><g><title>pthread_mutex_unlock (26 samples, 0.02%)</title><rect x="50.7147%" y="229" width="0.0190%" height="15" fill="rgb(231,220,49)" fg:x="69397" fg:w="26"/><text x="50.9647%" y="239.50"></text></g><g><title>extent_recycle (2,306 samples, 1.69%)</title><rect x="49.0500%" y="261" width="1.6852%" height="15" fill="rgb(237,96,20)" fg:x="67119" fg:w="2306"/><text x="49.3000%" y="271.50"></text></g><g><title>malloc_mutex_unlock (140 samples, 0.10%)</title><rect x="50.6329%" y="245" width="0.1023%" height="15" fill="rgb(239,229,30)" fg:x="69285" fg:w="140"/><text x="50.8829%" y="255.50"></text></g><g><title>_rjem_je_ecache_alloc (2,325 samples, 1.70%)</title><rect x="49.0368%" y="277" width="1.6991%" height="15" fill="rgb(219,65,33)" fg:x="67101" fg:w="2325"/><text x="49.2868%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_first (16 samples, 0.01%)</title><rect x="50.7600%" y="181" width="0.0117%" height="15" fill="rgb(243,134,7)" fg:x="69459" fg:w="16"/><text x="51.0100%" y="191.50"></text></g><g><title>_rjem_je_eset_fit (58 samples, 0.04%)</title><rect x="50.7461%" y="213" width="0.0424%" height="15" fill="rgb(216,177,54)" fg:x="69440" fg:w="58"/><text x="50.9961%" y="223.50"></text></g><g><title>eset_first_fit (56 samples, 0.04%)</title><rect x="50.7476%" y="197" width="0.0409%" height="15" fill="rgb(211,160,20)" fg:x="69442" fg:w="56"/><text x="50.9976%" y="207.50"></text></g><g><title>_rjem_je_emap_update_edata_state (19 samples, 0.01%)</title><rect x="50.7900%" y="197" width="0.0139%" height="15" fill="rgb(239,85,39)" fg:x="69500" fg:w="19"/><text x="51.0400%" y="207.50"></text></g><g><title>extent_recycle_extract (120 samples, 0.09%)</title><rect x="50.7439%" y="229" width="0.0877%" height="15" fill="rgb(232,125,22)" fg:x="69437" fg:w="120"/><text x="50.9939%" y="239.50"></text></g><g><title>extent_activate_locked (59 samples, 0.04%)</title><rect x="50.7885%" y="213" width="0.0431%" height="15" fill="rgb(244,57,34)" fg:x="69498" fg:w="59"/><text x="51.0385%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (38 samples, 0.03%)</title><rect x="50.8039%" y="197" width="0.0278%" height="15" fill="rgb(214,203,32)" fg:x="69519" fg:w="38"/><text x="51.0539%" y="207.50"></text></g><g><title>_rjem_je_emap_update_edata_state (21 samples, 0.02%)</title><rect x="50.8331%" y="181" width="0.0153%" height="15" fill="rgb(207,58,43)" fg:x="69559" fg:w="21"/><text x="51.0831%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (15 samples, 0.01%)</title><rect x="50.8375%" y="165" width="0.0110%" height="15" fill="rgb(215,193,15)" fg:x="69565" fg:w="15"/><text x="51.0875%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (15 samples, 0.01%)</title><rect x="50.8375%" y="149" width="0.0110%" height="15" fill="rgb(232,15,44)" fg:x="69565" fg:w="15"/><text x="51.0875%" y="159.50"></text></g><g><title>atomic_load_p (15 samples, 0.01%)</title><rect x="50.8375%" y="133" width="0.0110%" height="15" fill="rgb(212,3,48)" fg:x="69565" fg:w="15"/><text x="51.0875%" y="143.50"></text></g><g><title>extent_deactivate_locked (64 samples, 0.05%)</title><rect x="50.8316%" y="213" width="0.0468%" height="15" fill="rgb(218,128,7)" fg:x="69557" fg:w="64"/><text x="51.0816%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (64 samples, 0.05%)</title><rect x="50.8316%" y="197" width="0.0468%" height="15" fill="rgb(226,216,39)" fg:x="69557" fg:w="64"/><text x="51.0816%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (41 samples, 0.03%)</title><rect x="50.8484%" y="181" width="0.0300%" height="15" fill="rgb(243,47,51)" fg:x="69580" fg:w="41"/><text x="51.0984%" y="191.50"></text></g><g><title>phn_merge (27 samples, 0.02%)</title><rect x="50.9106%" y="101" width="0.0197%" height="15" fill="rgb(241,183,40)" fg:x="69665" fg:w="27"/><text x="51.1606%" y="111.50"></text></g><g><title>phn_merge_ordered (19 samples, 0.01%)</title><rect x="50.9164%" y="85" width="0.0139%" height="15" fill="rgb(231,217,32)" fg:x="69673" fg:w="19"/><text x="51.1664%" y="95.50"></text></g><g><title>phn_next_get (41 samples, 0.03%)</title><rect x="50.9303%" y="101" width="0.0300%" height="15" fill="rgb(229,61,38)" fg:x="69692" fg:w="41"/><text x="51.1803%" y="111.50"></text></g><g><title>ph_merge_children (82 samples, 0.06%)</title><rect x="50.9069%" y="133" width="0.0599%" height="15" fill="rgb(225,210,5)" fg:x="69660" fg:w="82"/><text x="51.1569%" y="143.50"></text></g><g><title>phn_merge_siblings (82 samples, 0.06%)</title><rect x="50.9069%" y="117" width="0.0599%" height="15" fill="rgb(231,79,45)" fg:x="69660" fg:w="82"/><text x="51.1569%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_remove (90 samples, 0.07%)</title><rect x="50.9018%" y="165" width="0.0658%" height="15" fill="rgb(224,100,7)" fg:x="69653" fg:w="90"/><text x="51.1518%" y="175.50"></text></g><g><title>ph_remove (89 samples, 0.07%)</title><rect x="50.9025%" y="149" width="0.0650%" height="15" fill="rgb(241,198,18)" fg:x="69654" fg:w="89"/><text x="51.1525%" y="159.50"></text></g><g><title>malloc_mutex_lock (14 samples, 0.01%)</title><rect x="50.9676%" y="165" width="0.0102%" height="15" fill="rgb(252,97,53)" fg:x="69743" fg:w="14"/><text x="51.2176%" y="175.50"></text></g><g><title>malloc_mutex_trylock_final (14 samples, 0.01%)</title><rect x="50.9676%" y="149" width="0.0102%" height="15" fill="rgb(220,88,7)" fg:x="69743" fg:w="14"/><text x="51.2176%" y="159.50"></text></g><g><title>pthread_mutex_trylock (14 samples, 0.01%)</title><rect x="50.9676%" y="133" width="0.0102%" height="15" fill="rgb(213,176,14)" fg:x="69743" fg:w="14"/><text x="51.2176%" y="143.50"></text></g><g><title>_rjem_je_edata_cache_get (117 samples, 0.09%)</title><rect x="50.8967%" y="181" width="0.0855%" height="15" fill="rgb(246,73,7)" fg:x="69646" fg:w="117"/><text x="51.1467%" y="191.50"></text></g><g><title>_rjem_je_emap_split_prepare (16 samples, 0.01%)</title><rect x="50.9858%" y="181" width="0.0117%" height="15" fill="rgb(245,64,36)" fg:x="69768" fg:w="16"/><text x="51.2358%" y="191.50"></text></g><g><title>extent_recycle_split (241 samples, 0.18%)</title><rect x="50.8316%" y="229" width="0.1761%" height="15" fill="rgb(245,80,10)" fg:x="69557" fg:w="241"/><text x="51.0816%" y="239.50"></text></g><g><title>extent_split_interior (177 samples, 0.13%)</title><rect x="50.8784%" y="213" width="0.1294%" height="15" fill="rgb(232,107,50)" fg:x="69621" fg:w="177"/><text x="51.1284%" y="223.50"></text></g><g><title>extent_split_impl (173 samples, 0.13%)</title><rect x="50.8813%" y="197" width="0.1264%" height="15" fill="rgb(253,3,0)" fg:x="69625" fg:w="173"/><text x="51.1313%" y="207.50"></text></g><g><title>malloc_mutex_lock (24 samples, 0.02%)</title><rect x="51.0078%" y="229" width="0.0175%" height="15" fill="rgb(212,99,53)" fg:x="69798" fg:w="24"/><text x="51.2578%" y="239.50"></text></g><g><title>malloc_mutex_trylock_final (24 samples, 0.02%)</title><rect x="51.0078%" y="213" width="0.0175%" height="15" fill="rgb(249,111,54)" fg:x="69798" fg:w="24"/><text x="51.2578%" y="223.50"></text></g><g><title>pthread_mutex_trylock (24 samples, 0.02%)</title><rect x="51.0078%" y="197" width="0.0175%" height="15" fill="rgb(249,55,30)" fg:x="69798" fg:w="24"/><text x="51.2578%" y="207.50"></text></g><g><title>extent_recycle (406 samples, 0.30%)</title><rect x="50.7388%" y="245" width="0.2967%" height="15" fill="rgb(237,47,42)" fg:x="69430" fg:w="406"/><text x="50.9888%" y="255.50"></text></g><g><title>malloc_mutex_unlock (14 samples, 0.01%)</title><rect x="51.0253%" y="229" width="0.0102%" height="15" fill="rgb(211,20,18)" fg:x="69822" fg:w="14"/><text x="51.2753%" y="239.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="51.0253%" y="213" width="0.0102%" height="15" fill="rgb(231,203,46)" fg:x="69822" fg:w="14"/><text x="51.2753%" y="223.50"></text></g><g><title>malloc_mutex_lock (26 samples, 0.02%)</title><rect x="51.0355%" y="245" width="0.0190%" height="15" fill="rgb(237,142,3)" fg:x="69836" fg:w="26"/><text x="51.2855%" y="255.50"></text></g><g><title>malloc_mutex_trylock_final (26 samples, 0.02%)</title><rect x="51.0355%" y="229" width="0.0190%" height="15" fill="rgb(241,107,1)" fg:x="69836" fg:w="26"/><text x="51.2855%" y="239.50"></text></g><g><title>pthread_mutex_trylock (24 samples, 0.02%)</title><rect x="51.0370%" y="213" width="0.0175%" height="15" fill="rgb(229,83,13)" fg:x="69838" fg:w="24"/><text x="51.2870%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (441 samples, 0.32%)</title><rect x="50.7359%" y="277" width="0.3223%" height="15" fill="rgb(241,91,40)" fg:x="69426" fg:w="441"/><text x="50.9859%" y="287.50"></text></g><g><title>extent_alloc_retained (439 samples, 0.32%)</title><rect x="50.7374%" y="261" width="0.3208%" height="15" fill="rgb(225,3,45)" fg:x="69428" fg:w="439"/><text x="50.9874%" y="271.50"></text></g><g><title>atomic_fetch_add_zu (21 samples, 0.02%)</title><rect x="51.0582%" y="277" width="0.0153%" height="15" fill="rgb(244,223,14)" fg:x="69867" fg:w="21"/><text x="51.3082%" y="287.50"></text></g><g><title>pac_alloc_real (2,816 samples, 2.06%)</title><rect x="49.0185%" y="293" width="2.0579%" height="15" fill="rgb(224,124,37)" fg:x="67076" fg:w="2816"/><text x="49.2685%" y="303.50">p..</text></g><g><title>_rjem_je_pa_alloc (3,059 samples, 2.24%)</title><rect x="48.8600%" y="341" width="2.2355%" height="15" fill="rgb(251,171,30)" fg:x="66859" fg:w="3059"/><text x="49.1100%" y="351.50">_..</text></g><g><title>pai_alloc (2,910 samples, 2.13%)</title><rect x="48.9689%" y="325" width="2.1266%" height="15" fill="rgb(236,46,54)" fg:x="67008" fg:w="2910"/><text x="49.2189%" y="335.50">p..</text></g><g><title>pac_alloc_impl (2,900 samples, 2.12%)</title><rect x="48.9762%" y="309" width="2.1193%" height="15" fill="rgb(245,213,5)" fg:x="67018" fg:w="2900"/><text x="49.2262%" y="319.50">p..</text></g><g><title>pac_ehooks_get (26 samples, 0.02%)</title><rect x="51.0765%" y="293" width="0.0190%" height="15" fill="rgb(230,144,27)" fg:x="69892" fg:w="26"/><text x="51.3265%" y="303.50"></text></g><g><title>locked_inc_u64 (56 samples, 0.04%)</title><rect x="51.1064%" y="325" width="0.0409%" height="15" fill="rgb(220,86,6)" fg:x="69933" fg:w="56"/><text x="51.3564%" y="335.50"></text></g><g><title>atomic_fetch_add_u64 (56 samples, 0.04%)</title><rect x="51.1064%" y="309" width="0.0409%" height="15" fill="rgb(240,20,13)" fg:x="69933" fg:w="56"/><text x="51.3564%" y="319.50"></text></g><g><title>arena_large_malloc_stats_update (76 samples, 0.06%)</title><rect x="51.0998%" y="341" width="0.0555%" height="15" fill="rgb(217,89,34)" fg:x="69924" fg:w="76"/><text x="51.3498%" y="351.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (3,225 samples, 2.36%)</title><rect x="48.8132%" y="357" width="2.3568%" height="15" fill="rgb(229,13,5)" fg:x="66795" fg:w="3225"/><text x="49.0632%" y="367.50">_..</text></g><g><title>sz_size2index (14 samples, 0.01%)</title><rect x="51.1598%" y="341" width="0.0102%" height="15" fill="rgb(244,67,35)" fg:x="70006" fg:w="14"/><text x="51.4098%" y="351.50"></text></g><g><title>sz_size2index_compute (14 samples, 0.01%)</title><rect x="51.1598%" y="325" width="0.0102%" height="15" fill="rgb(221,40,2)" fg:x="70006" fg:w="14"/><text x="51.4098%" y="335.50"></text></g><g><title>arena_decay_dirty (15 samples, 0.01%)</title><rect x="51.1737%" y="309" width="0.0110%" height="15" fill="rgb(237,157,21)" fg:x="70025" fg:w="15"/><text x="51.4237%" y="319.50"></text></g><g><title>arena_decay_impl (15 samples, 0.01%)</title><rect x="51.1737%" y="293" width="0.0110%" height="15" fill="rgb(222,94,11)" fg:x="70025" fg:w="15"/><text x="51.4237%" y="303.50"></text></g><g><title>_rjem_je_arena_decay (16 samples, 0.01%)</title><rect x="51.1737%" y="325" width="0.0117%" height="15" fill="rgb(249,113,6)" fg:x="70025" fg:w="16"/><text x="51.4237%" y="335.50"></text></g><g><title>arena_decay_tick (23 samples, 0.02%)</title><rect x="51.1715%" y="357" width="0.0168%" height="15" fill="rgb(238,137,36)" fg:x="70022" fg:w="23"/><text x="51.4215%" y="367.50"></text></g><g><title>arena_decay_ticks (23 samples, 0.02%)</title><rect x="51.1715%" y="341" width="0.0168%" height="15" fill="rgb(210,102,26)" fg:x="70022" fg:w="23"/><text x="51.4215%" y="351.50"></text></g><g><title>_rjem_je_large_palloc (3,308 samples, 2.42%)</title><rect x="48.7993%" y="373" width="2.4175%" height="15" fill="rgb(218,30,30)" fg:x="66776" fg:w="3308"/><text x="49.0493%" y="383.50">_r..</text></g><g><title>sz_sa2u (39 samples, 0.03%)</title><rect x="51.1883%" y="357" width="0.0285%" height="15" fill="rgb(214,67,26)" fg:x="70045" fg:w="39"/><text x="51.4383%" y="367.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (36 samples, 0.03%)</title><rect x="51.2168%" y="373" width="0.0263%" height="15" fill="rgb(251,9,53)" fg:x="70084" fg:w="36"/><text x="51.4668%" y="383.50"></text></g><g><title>cache_bin_nstashed_get_local (23 samples, 0.02%)</title><rect x="51.2263%" y="357" width="0.0168%" height="15" fill="rgb(228,204,25)" fg:x="70097" fg:w="23"/><text x="51.4763%" y="367.50"></text></g><g><title>cache_bin_nstashed_get_internal (23 samples, 0.02%)</title><rect x="51.2263%" y="341" width="0.0168%" height="15" fill="rgb(207,153,8)" fg:x="70097" fg:w="23"/><text x="51.4763%" y="351.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (19 samples, 0.01%)</title><rect x="51.2292%" y="325" width="0.0139%" height="15" fill="rgb(242,9,16)" fg:x="70101" fg:w="19"/><text x="51.4792%" y="335.50"></text></g><g><title>arena_choose (22 samples, 0.02%)</title><rect x="51.2431%" y="373" width="0.0161%" height="15" fill="rgb(217,211,10)" fg:x="70120" fg:w="22"/><text x="51.4931%" y="383.50"></text></g><g><title>arena_choose_impl (17 samples, 0.01%)</title><rect x="51.2467%" y="357" width="0.0124%" height="15" fill="rgb(219,228,52)" fg:x="70125" fg:w="17"/><text x="51.4967%" y="367.50"></text></g><g><title>cache_bin_alloc (81 samples, 0.06%)</title><rect x="51.2592%" y="373" width="0.0592%" height="15" fill="rgb(231,92,29)" fg:x="70142" fg:w="81"/><text x="51.5092%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (81 samples, 0.06%)</title><rect x="51.2592%" y="357" width="0.0592%" height="15" fill="rgb(232,8,23)" fg:x="70142" fg:w="81"/><text x="51.5092%" y="367.50"></text></g><g><title>tcache_alloc_large (3,477 samples, 2.54%)</title><rect x="48.7876%" y="389" width="2.5410%" height="15" fill="rgb(216,211,34)" fg:x="66760" fg:w="3477"/><text x="49.0376%" y="399.50">tc..</text></g><g><title>sz_s2u (14 samples, 0.01%)</title><rect x="51.3183%" y="373" width="0.0102%" height="15" fill="rgb(236,151,0)" fg:x="70223" fg:w="14"/><text x="51.5683%" y="383.50"></text></g><g><title>sz_s2u_compute (14 samples, 0.01%)</title><rect x="51.3183%" y="357" width="0.0102%" height="15" fill="rgb(209,168,3)" fg:x="70223" fg:w="14"/><text x="51.5683%" y="367.50"></text></g><g><title>__popcountdi2 (42 samples, 0.03%)</title><rect x="51.4024%" y="357" width="0.0307%" height="15" fill="rgb(208,129,28)" fg:x="70338" fg:w="42"/><text x="51.6524%" y="367.50"></text></g><g><title>_rjem_je_arena_bin_choose (30 samples, 0.02%)</title><rect x="51.5295%" y="341" width="0.0219%" height="15" fill="rgb(229,78,22)" fg:x="70512" fg:w="30"/><text x="51.7795%" y="351.50"></text></g><g><title>arena_get_bin (25 samples, 0.02%)</title><rect x="51.5332%" y="325" width="0.0183%" height="15" fill="rgb(228,187,13)" fg:x="70517" fg:w="25"/><text x="51.7832%" y="335.50"></text></g><g><title>arena_bin_slabs_full_insert (17 samples, 0.01%)</title><rect x="51.5646%" y="325" width="0.0124%" height="15" fill="rgb(240,119,24)" fg:x="70560" fg:w="17"/><text x="51.8146%" y="335.50"></text></g><g><title>ph_merge_aux (22 samples, 0.02%)</title><rect x="51.6245%" y="277" width="0.0161%" height="15" fill="rgb(209,194,42)" fg:x="70642" fg:w="22"/><text x="51.8745%" y="287.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (136 samples, 0.10%)</title><rect x="51.5573%" y="341" width="0.0994%" height="15" fill="rgb(247,200,46)" fg:x="70550" fg:w="136"/><text x="51.8073%" y="351.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (109 samples, 0.08%)</title><rect x="51.5770%" y="325" width="0.0797%" height="15" fill="rgb(218,76,16)" fg:x="70577" fg:w="109"/><text x="51.8270%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_remove_first (89 samples, 0.07%)</title><rect x="51.5917%" y="309" width="0.0650%" height="15" fill="rgb(225,21,48)" fg:x="70597" fg:w="89"/><text x="51.8417%" y="319.50"></text></g><g><title>ph_remove_first (65 samples, 0.05%)</title><rect x="51.6092%" y="293" width="0.0475%" height="15" fill="rgb(239,223,50)" fg:x="70621" fg:w="65"/><text x="51.8592%" y="303.50"></text></g><g><title>ph_merge_children (22 samples, 0.02%)</title><rect x="51.6406%" y="277" width="0.0161%" height="15" fill="rgb(244,45,21)" fg:x="70664" fg:w="22"/><text x="51.8906%" y="287.50"></text></g><g><title>phn_merge_siblings (19 samples, 0.01%)</title><rect x="51.6428%" y="261" width="0.0139%" height="15" fill="rgb(232,33,43)" fg:x="70667" fg:w="19"/><text x="51.8928%" y="271.50"></text></g><g><title>phn_next_get (16 samples, 0.01%)</title><rect x="51.6450%" y="245" width="0.0117%" height="15" fill="rgb(209,8,3)" fg:x="70670" fg:w="16"/><text x="51.8950%" y="255.50"></text></g><g><title>[libc.so.6] (145 samples, 0.11%)</title><rect x="51.7364%" y="309" width="0.1060%" height="15" fill="rgb(214,25,53)" fg:x="70795" fg:w="145"/><text x="51.9864%" y="319.50"></text></g><g><title>_rjem_je_bitmap_size (17 samples, 0.01%)</title><rect x="51.8423%" y="309" width="0.0124%" height="15" fill="rgb(254,186,54)" fg:x="70940" fg:w="17"/><text x="52.0923%" y="319.50"></text></g><g><title>_rjem_je_bitmap_init (199 samples, 0.15%)</title><rect x="51.7122%" y="325" width="0.1454%" height="15" fill="rgb(208,174,49)" fg:x="70762" fg:w="199"/><text x="51.9622%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (15 samples, 0.01%)</title><rect x="51.9527%" y="261" width="0.0110%" height="15" fill="rgb(233,191,51)" fg:x="71091" fg:w="15"/><text x="52.2027%" y="271.50"></text></g><g><title>rtree_write_range (55 samples, 0.04%)</title><rect x="51.9308%" y="293" width="0.0402%" height="15" fill="rgb(222,134,10)" fg:x="71061" fg:w="55"/><text x="52.1808%" y="303.50"></text></g><g><title>rtree_write_range_impl (55 samples, 0.04%)</title><rect x="51.9308%" y="277" width="0.0402%" height="15" fill="rgb(230,226,20)" fg:x="71061" fg:w="55"/><text x="52.1808%" y="287.50"></text></g><g><title>_rjem_je_emap_register_interior (94 samples, 0.07%)</title><rect x="51.9030%" y="309" width="0.0687%" height="15" fill="rgb(251,111,25)" fg:x="71023" fg:w="94"/><text x="52.1530%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (31 samples, 0.02%)</title><rect x="52.0024%" y="277" width="0.0227%" height="15" fill="rgb(224,40,46)" fg:x="71159" fg:w="31"/><text x="52.2524%" y="287.50"></text></g><g><title>rtree_contents_encode (19 samples, 0.01%)</title><rect x="52.0250%" y="261" width="0.0139%" height="15" fill="rgb(236,108,47)" fg:x="71190" fg:w="19"/><text x="52.2750%" y="271.50"></text></g><g><title>rtree_leaf_elm_bits_encode (19 samples, 0.01%)</title><rect x="52.0250%" y="245" width="0.0139%" height="15" fill="rgb(234,93,0)" fg:x="71190" fg:w="19"/><text x="52.2750%" y="255.50"></text></g><g><title>rtree_write (52 samples, 0.04%)</title><rect x="52.0016%" y="293" width="0.0380%" height="15" fill="rgb(224,213,32)" fg:x="71158" fg:w="52"/><text x="52.2516%" y="303.50"></text></g><g><title>rtree_leaf_elm_write (20 samples, 0.01%)</title><rect x="52.0250%" y="277" width="0.0146%" height="15" fill="rgb(251,11,48)" fg:x="71190" fg:w="20"/><text x="52.2750%" y="287.50"></text></g><g><title>_rjem_je_emap_remap (95 samples, 0.07%)</title><rect x="51.9717%" y="309" width="0.0694%" height="15" fill="rgb(236,173,5)" fg:x="71117" fg:w="95"/><text x="52.2217%" y="319.50"></text></g><g><title>pa_nactive_add (67 samples, 0.05%)</title><rect x="52.0477%" y="309" width="0.0490%" height="15" fill="rgb(230,95,12)" fg:x="71221" fg:w="67"/><text x="52.2977%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (67 samples, 0.05%)</title><rect x="52.0477%" y="293" width="0.0490%" height="15" fill="rgb(232,209,1)" fg:x="71221" fg:w="67"/><text x="52.2977%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (72 samples, 0.05%)</title><rect x="52.0966%" y="309" width="0.0526%" height="15" fill="rgb(232,6,1)" fg:x="71288" fg:w="72"/><text x="52.3466%" y="319.50"></text></g><g><title>atomic_load_b (72 samples, 0.05%)</title><rect x="52.0966%" y="293" width="0.0526%" height="15" fill="rgb(210,224,50)" fg:x="71288" fg:w="72"/><text x="52.3466%" y="303.50"></text></g><g><title>edata_heap_ph_cmp (14 samples, 0.01%)</title><rect x="52.6038%" y="101" width="0.0102%" height="15" fill="rgb(228,127,35)" fg:x="71982" fg:w="14"/><text x="52.8538%" y="111.50"></text></g><g><title>edata_snad_comp (14 samples, 0.01%)</title><rect x="52.6038%" y="85" width="0.0102%" height="15" fill="rgb(245,102,45)" fg:x="71982" fg:w="14"/><text x="52.8538%" y="95.50"></text></g><g><title>edata_cmp_summary_get (14 samples, 0.01%)</title><rect x="52.6038%" y="69" width="0.0102%" height="15" fill="rgb(214,1,49)" fg:x="71982" fg:w="14"/><text x="52.8538%" y="79.50"></text></g><g><title>phn_merge (15 samples, 0.01%)</title><rect x="52.6038%" y="117" width="0.0110%" height="15" fill="rgb(226,163,40)" fg:x="71982" fg:w="15"/><text x="52.8538%" y="127.50"></text></g><g><title>phn_merge_siblings (25 samples, 0.02%)</title><rect x="52.6038%" y="133" width="0.0183%" height="15" fill="rgb(239,212,28)" fg:x="71982" fg:w="25"/><text x="52.8538%" y="143.50"></text></g><g><title>phn_next_get (105 samples, 0.08%)</title><rect x="52.6221%" y="133" width="0.0767%" height="15" fill="rgb(220,20,13)" fg:x="72007" fg:w="105"/><text x="52.8721%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_first (198 samples, 0.14%)</title><rect x="52.5548%" y="181" width="0.1447%" height="15" fill="rgb(210,164,35)" fg:x="71915" fg:w="198"/><text x="52.8048%" y="191.50"></text></g><g><title>ph_first (184 samples, 0.13%)</title><rect x="52.5651%" y="165" width="0.1345%" height="15" fill="rgb(248,109,41)" fg:x="71929" fg:w="184"/><text x="52.8151%" y="175.50"></text></g><g><title>ph_merge_aux (141 samples, 0.10%)</title><rect x="52.5965%" y="149" width="0.1030%" height="15" fill="rgb(238,23,50)" fg:x="71972" fg:w="141"/><text x="52.8465%" y="159.50"></text></g><g><title>sz_pind2sz (20 samples, 0.01%)</title><rect x="52.7222%" y="149" width="0.0146%" height="15" fill="rgb(211,48,49)" fg:x="72144" fg:w="20"/><text x="52.9722%" y="159.50"></text></g><g><title>sz_pind2sz_lookup (20 samples, 0.01%)</title><rect x="52.7222%" y="133" width="0.0146%" height="15" fill="rgb(223,36,21)" fg:x="72144" fg:w="20"/><text x="52.9722%" y="143.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (91 samples, 0.07%)</title><rect x="52.6995%" y="181" width="0.0665%" height="15" fill="rgb(207,123,46)" fg:x="72113" fg:w="91"/><text x="52.9495%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (83 samples, 0.06%)</title><rect x="52.7054%" y="165" width="0.0607%" height="15" fill="rgb(240,218,32)" fg:x="72121" fg:w="83"/><text x="52.9554%" y="175.50"></text></g><g><title>sz_psz2ind (40 samples, 0.03%)</title><rect x="52.7368%" y="149" width="0.0292%" height="15" fill="rgb(252,5,43)" fg:x="72164" fg:w="40"/><text x="52.9868%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (93 samples, 0.07%)</title><rect x="52.7660%" y="181" width="0.0680%" height="15" fill="rgb(252,84,19)" fg:x="72204" fg:w="93"/><text x="53.0160%" y="191.50"></text></g><g><title>fb_ffs (93 samples, 0.07%)</title><rect x="52.8340%" y="181" width="0.0680%" height="15" fill="rgb(243,152,39)" fg:x="72297" fg:w="93"/><text x="53.0840%" y="191.50"></text></g><g><title>fb_find_impl (93 samples, 0.07%)</title><rect x="52.8340%" y="165" width="0.0680%" height="15" fill="rgb(234,160,15)" fg:x="72297" fg:w="93"/><text x="53.0840%" y="175.50"></text></g><g><title>ffs_lu (17 samples, 0.01%)</title><rect x="52.8895%" y="149" width="0.0124%" height="15" fill="rgb(237,34,20)" fg:x="72373" fg:w="17"/><text x="53.1395%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (754 samples, 0.55%)</title><rect x="52.3758%" y="213" width="0.5510%" height="15" fill="rgb(229,97,13)" fg:x="71670" fg:w="754"/><text x="52.6258%" y="223.50"></text></g><g><title>eset_first_fit (719 samples, 0.53%)</title><rect x="52.4014%" y="197" width="0.5254%" height="15" fill="rgb(234,71,50)" fg:x="71705" fg:w="719"/><text x="52.6514%" y="207.50"></text></g><g><title>sz_psz2ind (29 samples, 0.02%)</title><rect x="52.9056%" y="181" width="0.0212%" height="15" fill="rgb(253,155,4)" fg:x="72395" fg:w="29"/><text x="53.1556%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (31 samples, 0.02%)</title><rect x="52.9656%" y="181" width="0.0227%" height="15" fill="rgb(222,185,37)" fg:x="72477" fg:w="31"/><text x="53.2156%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (95 samples, 0.07%)</title><rect x="52.9882%" y="181" width="0.0694%" height="15" fill="rgb(251,177,13)" fg:x="72508" fg:w="95"/><text x="53.2382%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (82 samples, 0.06%)</title><rect x="52.9977%" y="165" width="0.0599%" height="15" fill="rgb(250,179,40)" fg:x="72521" fg:w="82"/><text x="53.2477%" y="175.50"></text></g><g><title>atomic_load_p (82 samples, 0.06%)</title><rect x="52.9977%" y="149" width="0.0599%" height="15" fill="rgb(242,44,2)" fg:x="72521" fg:w="82"/><text x="53.2477%" y="159.50"></text></g><g><title>_rjem_je_emap_update_edata_state (167 samples, 0.12%)</title><rect x="52.9370%" y="197" width="0.1220%" height="15" fill="rgb(216,177,13)" fg:x="72438" fg:w="167"/><text x="53.1870%" y="207.50"></text></g><g><title>_rjem_je_edata_heap_first (14 samples, 0.01%)</title><rect x="53.0905%" y="181" width="0.0102%" height="15" fill="rgb(216,106,43)" fg:x="72648" fg:w="14"/><text x="53.3405%" y="191.50"></text></g><g><title>edata_heap_ph_cmp (14 samples, 0.01%)</title><rect x="53.1548%" y="101" width="0.0102%" height="15" fill="rgb(216,183,2)" fg:x="72736" fg:w="14"/><text x="53.4048%" y="111.50"></text></g><g><title>edata_snad_comp (14 samples, 0.01%)</title><rect x="53.1548%" y="85" width="0.0102%" height="15" fill="rgb(249,75,3)" fg:x="72736" fg:w="14"/><text x="53.4048%" y="95.50"></text></g><g><title>phn_lchild_get (20 samples, 0.01%)</title><rect x="53.1665%" y="85" width="0.0146%" height="15" fill="rgb(219,67,39)" fg:x="72752" fg:w="20"/><text x="53.4165%" y="95.50"></text></g><g><title>phn_merge (65 samples, 0.05%)</title><rect x="53.1504%" y="117" width="0.0475%" height="15" fill="rgb(253,228,2)" fg:x="72730" fg:w="65"/><text x="53.4004%" y="127.50"></text></g><g><title>phn_merge_ordered (45 samples, 0.03%)</title><rect x="53.1651%" y="101" width="0.0329%" height="15" fill="rgb(235,138,27)" fg:x="72750" fg:w="45"/><text x="53.4151%" y="111.50"></text></g><g><title>phn_prev_set (17 samples, 0.01%)</title><rect x="53.1855%" y="85" width="0.0124%" height="15" fill="rgb(236,97,51)" fg:x="72778" fg:w="17"/><text x="53.4355%" y="95.50"></text></g><g><title>phn_next_get (140 samples, 0.10%)</title><rect x="53.1979%" y="117" width="0.1023%" height="15" fill="rgb(240,80,30)" fg:x="72795" fg:w="140"/><text x="53.4479%" y="127.50"></text></g><g><title>ph_merge_children (244 samples, 0.18%)</title><rect x="53.1358%" y="149" width="0.1783%" height="15" fill="rgb(230,178,19)" fg:x="72710" fg:w="244"/><text x="53.3858%" y="159.50"></text></g><g><title>phn_merge_siblings (244 samples, 0.18%)</title><rect x="53.1358%" y="133" width="0.1783%" height="15" fill="rgb(210,190,27)" fg:x="72710" fg:w="244"/><text x="53.3858%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_remove (297 samples, 0.22%)</title><rect x="53.1007%" y="181" width="0.2170%" height="15" fill="rgb(222,107,31)" fg:x="72662" fg:w="297"/><text x="53.3507%" y="191.50"></text></g><g><title>ph_remove (273 samples, 0.20%)</title><rect x="53.1183%" y="165" width="0.1995%" height="15" fill="rgb(216,127,34)" fg:x="72686" fg:w="273"/><text x="53.3683%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (50 samples, 0.04%)</title><rect x="53.3178%" y="181" width="0.0365%" height="15" fill="rgb(234,116,52)" fg:x="72959" fg:w="50"/><text x="53.5678%" y="191.50"></text></g><g><title>sz_psz2ind (29 samples, 0.02%)</title><rect x="53.3331%" y="165" width="0.0212%" height="15" fill="rgb(222,124,15)" fg:x="72980" fg:w="29"/><text x="53.5831%" y="175.50"></text></g><g><title>edata_list_inactive_remove (126 samples, 0.09%)</title><rect x="53.3624%" y="181" width="0.0921%" height="15" fill="rgb(231,179,28)" fg:x="73020" fg:w="126"/><text x="53.6124%" y="191.50"></text></g><g><title>atomic_load_zu (103 samples, 0.08%)</title><rect x="53.4574%" y="165" width="0.0753%" height="15" fill="rgb(226,93,45)" fg:x="73150" fg:w="103"/><text x="53.7074%" y="175.50"></text></g><g><title>eset_stats_sub (113 samples, 0.08%)</title><rect x="53.4566%" y="181" width="0.0826%" height="15" fill="rgb(215,8,51)" fg:x="73149" fg:w="113"/><text x="53.7066%" y="191.50"></text></g><g><title>extent_recycle_extract (1,704 samples, 1.25%)</title><rect x="52.3356%" y="229" width="1.2453%" height="15" fill="rgb(223,106,5)" fg:x="71615" fg:w="1704"/><text x="52.5856%" y="239.50"></text></g><g><title>extent_activate_locked (895 samples, 0.65%)</title><rect x="52.9268%" y="213" width="0.6541%" height="15" fill="rgb(250,191,5)" fg:x="72424" fg:w="895"/><text x="53.1768%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (714 samples, 0.52%)</title><rect x="53.0591%" y="197" width="0.5218%" height="15" fill="rgb(242,132,44)" fg:x="72605" fg:w="714"/><text x="53.3091%" y="207.50"></text></g><g><title>sz_psz2ind (55 samples, 0.04%)</title><rect x="53.5407%" y="181" width="0.0402%" height="15" fill="rgb(251,152,29)" fg:x="73264" fg:w="55"/><text x="53.7907%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (35 samples, 0.03%)</title><rect x="53.6181%" y="165" width="0.0256%" height="15" fill="rgb(218,179,5)" fg:x="73370" fg:w="35"/><text x="53.8681%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (29 samples, 0.02%)</title><rect x="53.6225%" y="149" width="0.0212%" height="15" fill="rgb(227,67,19)" fg:x="73376" fg:w="29"/><text x="53.8725%" y="159.50"></text></g><g><title>atomic_load_p (29 samples, 0.02%)</title><rect x="53.6225%" y="133" width="0.0212%" height="15" fill="rgb(233,119,31)" fg:x="73376" fg:w="29"/><text x="53.8725%" y="143.50"></text></g><g><title>_rjem_je_emap_update_edata_state (68 samples, 0.05%)</title><rect x="53.5948%" y="181" width="0.0497%" height="15" fill="rgb(241,120,22)" fg:x="73338" fg:w="68"/><text x="53.8448%" y="191.50"></text></g><g><title>_rjem_je_edata_heap_empty (20 samples, 0.01%)</title><rect x="53.6686%" y="165" width="0.0146%" height="15" fill="rgb(224,102,30)" fg:x="73439" fg:w="20"/><text x="53.9186%" y="175.50"></text></g><g><title>edata_heap_ph_cmp (27 samples, 0.02%)</title><rect x="53.7007%" y="133" width="0.0197%" height="15" fill="rgb(210,164,37)" fg:x="73483" fg:w="27"/><text x="53.9507%" y="143.50"></text></g><g><title>edata_snad_comp (27 samples, 0.02%)</title><rect x="53.7007%" y="117" width="0.0197%" height="15" fill="rgb(226,191,16)" fg:x="73483" fg:w="27"/><text x="53.9507%" y="127.50"></text></g><g><title>edata_cmp_summary_get (24 samples, 0.02%)</title><rect x="53.7029%" y="101" width="0.0175%" height="15" fill="rgb(214,40,45)" fg:x="73486" fg:w="24"/><text x="53.9529%" y="111.50"></text></g><g><title>edata_sn_get (24 samples, 0.02%)</title><rect x="53.7029%" y="85" width="0.0175%" height="15" fill="rgb(244,29,26)" fg:x="73486" fg:w="24"/><text x="53.9529%" y="95.50"></text></g><g><title>_rjem_je_edata_heap_insert (67 samples, 0.05%)</title><rect x="53.6832%" y="165" width="0.0490%" height="15" fill="rgb(216,16,5)" fg:x="73459" fg:w="67"/><text x="53.9332%" y="175.50"></text></g><g><title>ph_insert (61 samples, 0.04%)</title><rect x="53.6876%" y="149" width="0.0446%" height="15" fill="rgb(249,76,35)" fg:x="73465" fg:w="61"/><text x="53.9376%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (22 samples, 0.02%)</title><rect x="53.7322%" y="165" width="0.0161%" height="15" fill="rgb(207,11,44)" fg:x="73526" fg:w="22"/><text x="53.9822%" y="175.50"></text></g><g><title>edata_list_inactive_append (23 samples, 0.02%)</title><rect x="53.7541%" y="165" width="0.0168%" height="15" fill="rgb(228,190,49)" fg:x="73556" fg:w="23"/><text x="54.0041%" y="175.50"></text></g><g><title>atomic_load_zu (20 samples, 0.01%)</title><rect x="53.7753%" y="149" width="0.0146%" height="15" fill="rgb(214,173,12)" fg:x="73585" fg:w="20"/><text x="54.0253%" y="159.50"></text></g><g><title>eset_stats_add (22 samples, 0.02%)</title><rect x="53.7745%" y="165" width="0.0161%" height="15" fill="rgb(218,26,35)" fg:x="73584" fg:w="22"/><text x="54.0245%" y="175.50"></text></g><g><title>extent_deactivate_locked (331 samples, 0.24%)</title><rect x="53.5809%" y="213" width="0.2419%" height="15" fill="rgb(220,200,19)" fg:x="73319" fg:w="331"/><text x="53.8309%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (331 samples, 0.24%)</title><rect x="53.5809%" y="197" width="0.2419%" height="15" fill="rgb(239,95,49)" fg:x="73319" fg:w="331"/><text x="53.8309%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (244 samples, 0.18%)</title><rect x="53.6445%" y="181" width="0.1783%" height="15" fill="rgb(235,85,53)" fg:x="73406" fg:w="244"/><text x="53.8945%" y="191.50"></text></g><g><title>sz_psz2ind (37 samples, 0.03%)</title><rect x="53.7957%" y="165" width="0.0270%" height="15" fill="rgb(233,133,31)" fg:x="73613" fg:w="37"/><text x="54.0457%" y="175.50"></text></g><g><title>edata_avail_ph_cmp (19 samples, 0.01%)</title><rect x="53.9353%" y="85" width="0.0139%" height="15" fill="rgb(218,25,20)" fg:x="73804" fg:w="19"/><text x="54.1853%" y="95.50"></text></g><g><title>edata_esnead_comp (19 samples, 0.01%)</title><rect x="53.9353%" y="69" width="0.0139%" height="15" fill="rgb(252,210,38)" fg:x="73804" fg:w="19"/><text x="54.1853%" y="79.50"></text></g><g><title>edata_esn_comp (17 samples, 0.01%)</title><rect x="53.9368%" y="53" width="0.0124%" height="15" fill="rgb(242,134,21)" fg:x="73806" fg:w="17"/><text x="54.1868%" y="63.50"></text></g><g><title>edata_esn_get (17 samples, 0.01%)</title><rect x="53.9368%" y="37" width="0.0124%" height="15" fill="rgb(213,28,48)" fg:x="73806" fg:w="17"/><text x="54.1868%" y="47.50"></text></g><g><title>phn_merge (23 samples, 0.02%)</title><rect x="53.9353%" y="101" width="0.0168%" height="15" fill="rgb(250,196,2)" fg:x="73804" fg:w="23"/><text x="54.1853%" y="111.50"></text></g><g><title>phn_next_get (22 samples, 0.02%)</title><rect x="53.9521%" y="101" width="0.0161%" height="15" fill="rgb(227,5,17)" fg:x="73827" fg:w="22"/><text x="54.2021%" y="111.50"></text></g><g><title>phn_merge_siblings (54 samples, 0.04%)</title><rect x="53.9324%" y="117" width="0.0395%" height="15" fill="rgb(221,226,24)" fg:x="73800" fg:w="54"/><text x="54.1824%" y="127.50"></text></g><g><title>phn_next_get (24 samples, 0.02%)</title><rect x="53.9718%" y="117" width="0.0175%" height="15" fill="rgb(211,5,48)" fg:x="73854" fg:w="24"/><text x="54.2218%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_first (103 samples, 0.08%)</title><rect x="53.9148%" y="165" width="0.0753%" height="15" fill="rgb(219,150,6)" fg:x="73776" fg:w="103"/><text x="54.1648%" y="175.50"></text></g><g><title>ph_first (98 samples, 0.07%)</title><rect x="53.9185%" y="149" width="0.0716%" height="15" fill="rgb(251,46,16)" fg:x="73781" fg:w="98"/><text x="54.1685%" y="159.50"></text></g><g><title>ph_merge_aux (87 samples, 0.06%)</title><rect x="53.9265%" y="133" width="0.0636%" height="15" fill="rgb(220,204,40)" fg:x="73792" fg:w="87"/><text x="54.1765%" y="143.50"></text></g><g><title>edata_avail_ph_cmp (43 samples, 0.03%)</title><rect x="54.0325%" y="85" width="0.0314%" height="15" fill="rgb(211,85,2)" fg:x="73937" fg:w="43"/><text x="54.2825%" y="95.50"></text></g><g><title>edata_esnead_comp (43 samples, 0.03%)</title><rect x="54.0325%" y="69" width="0.0314%" height="15" fill="rgb(229,17,7)" fg:x="73937" fg:w="43"/><text x="54.2825%" y="79.50"></text></g><g><title>edata_esn_comp (29 samples, 0.02%)</title><rect x="54.0427%" y="53" width="0.0212%" height="15" fill="rgb(239,72,28)" fg:x="73951" fg:w="29"/><text x="54.2927%" y="63.50"></text></g><g><title>edata_esn_get (25 samples, 0.02%)</title><rect x="54.0457%" y="37" width="0.0183%" height="15" fill="rgb(230,47,54)" fg:x="73955" fg:w="25"/><text x="54.2957%" y="47.50"></text></g><g><title>phn_lchild_get (32 samples, 0.02%)</title><rect x="54.0647%" y="69" width="0.0234%" height="15" fill="rgb(214,50,8)" fg:x="73981" fg:w="32"/><text x="54.3147%" y="79.50"></text></g><g><title>phn_lchild_set (14 samples, 0.01%)</title><rect x="54.0880%" y="69" width="0.0102%" height="15" fill="rgb(216,198,43)" fg:x="74013" fg:w="14"/><text x="54.3380%" y="79.50"></text></g><g><title>phn_merge (128 samples, 0.09%)</title><rect x="54.0267%" y="101" width="0.0935%" height="15" fill="rgb(234,20,35)" fg:x="73929" fg:w="128"/><text x="54.2767%" y="111.50"></text></g><g><title>phn_merge_ordered (77 samples, 0.06%)</title><rect x="54.0639%" y="85" width="0.0563%" height="15" fill="rgb(254,45,19)" fg:x="73980" fg:w="77"/><text x="54.3139%" y="95.50"></text></g><g><title>phn_prev_set (30 samples, 0.02%)</title><rect x="54.0983%" y="69" width="0.0219%" height="15" fill="rgb(219,14,44)" fg:x="74027" fg:w="30"/><text x="54.3483%" y="79.50"></text></g><g><title>phn_next_get (230 samples, 0.17%)</title><rect x="54.1202%" y="101" width="0.1681%" height="15" fill="rgb(217,220,26)" fg:x="74057" fg:w="230"/><text x="54.3702%" y="111.50"></text></g><g><title>phn_next_set (28 samples, 0.02%)</title><rect x="54.2883%" y="101" width="0.0205%" height="15" fill="rgb(213,158,28)" fg:x="74287" fg:w="28"/><text x="54.5383%" y="111.50"></text></g><g><title>ph_merge_children (425 samples, 0.31%)</title><rect x="54.0135%" y="133" width="0.3106%" height="15" fill="rgb(252,51,52)" fg:x="73911" fg:w="425"/><text x="54.2635%" y="143.50"></text></g><g><title>phn_merge_siblings (425 samples, 0.31%)</title><rect x="54.0135%" y="117" width="0.3106%" height="15" fill="rgb(246,89,16)" fg:x="73911" fg:w="425"/><text x="54.2635%" y="127.50"></text></g><g><title>phn_prev_set (21 samples, 0.02%)</title><rect x="54.3087%" y="101" width="0.0153%" height="15" fill="rgb(216,158,49)" fg:x="74315" fg:w="21"/><text x="54.5587%" y="111.50"></text></g><g><title>_rjem_je_edata_avail_remove (470 samples, 0.34%)</title><rect x="53.9901%" y="165" width="0.3435%" height="15" fill="rgb(236,107,19)" fg:x="73879" fg:w="470"/><text x="54.2401%" y="175.50"></text></g><g><title>ph_remove (458 samples, 0.33%)</title><rect x="53.9989%" y="149" width="0.3347%" height="15" fill="rgb(228,185,30)" fg:x="73891" fg:w="458"/><text x="54.2489%" y="159.50"></text></g><g><title>pthread_mutex_trylock (88 samples, 0.06%)</title><rect x="54.3358%" y="133" width="0.0643%" height="15" fill="rgb(246,134,8)" fg:x="74352" fg:w="88"/><text x="54.5858%" y="143.50"></text></g><g><title>malloc_mutex_trylock_final (91 samples, 0.07%)</title><rect x="54.3343%" y="149" width="0.0665%" height="15" fill="rgb(214,143,50)" fg:x="74350" fg:w="91"/><text x="54.5843%" y="159.50"></text></g><g><title>malloc_mutex_lock (95 samples, 0.07%)</title><rect x="54.3343%" y="165" width="0.0694%" height="15" fill="rgb(228,75,8)" fg:x="74350" fg:w="95"/><text x="54.5843%" y="175.50"></text></g><g><title>[libc.so.6] (69 samples, 0.05%)</title><rect x="54.4052%" y="149" width="0.0504%" height="15" fill="rgb(207,175,4)" fg:x="74447" fg:w="69"/><text x="54.6552%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (758 samples, 0.55%)</title><rect x="53.9061%" y="181" width="0.5539%" height="15" fill="rgb(205,108,24)" fg:x="73764" fg:w="758"/><text x="54.1561%" y="191.50"></text></g><g><title>malloc_mutex_unlock (77 samples, 0.06%)</title><rect x="54.4037%" y="165" width="0.0563%" height="15" fill="rgb(244,120,49)" fg:x="74445" fg:w="77"/><text x="54.6537%" y="175.50"></text></g><g><title>_rjem_je_emap_split_commit (36 samples, 0.03%)</title><rect x="54.4600%" y="181" width="0.0263%" height="15" fill="rgb(223,47,38)" fg:x="74522" fg:w="36"/><text x="54.7100%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (23 samples, 0.02%)</title><rect x="54.4695%" y="165" width="0.0168%" height="15" fill="rgb(229,179,11)" fg:x="74535" fg:w="23"/><text x="54.7195%" y="175.50"></text></g><g><title>rtree_leaf_elm_write (14 samples, 0.01%)</title><rect x="54.4761%" y="149" width="0.0102%" height="15" fill="rgb(231,122,1)" fg:x="74544" fg:w="14"/><text x="54.7261%" y="159.50"></text></g><g><title>_rjem_je_emap_split_prepare (65 samples, 0.05%)</title><rect x="54.4863%" y="181" width="0.0475%" height="15" fill="rgb(245,119,9)" fg:x="74558" fg:w="65"/><text x="54.7363%" y="191.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (49 samples, 0.04%)</title><rect x="54.4980%" y="165" width="0.0358%" height="15" fill="rgb(241,163,25)" fg:x="74574" fg:w="49"/><text x="54.7480%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (32 samples, 0.02%)</title><rect x="54.5104%" y="149" width="0.0234%" height="15" fill="rgb(217,214,3)" fg:x="74591" fg:w="32"/><text x="54.7604%" y="159.50"></text></g><g><title>edata_init (16 samples, 0.01%)</title><rect x="54.5346%" y="181" width="0.0117%" height="15" fill="rgb(240,86,28)" fg:x="74624" fg:w="16"/><text x="54.7846%" y="191.50"></text></g><g><title>ehooks_split (28 samples, 0.02%)</title><rect x="54.5499%" y="181" width="0.0205%" height="15" fill="rgb(215,47,9)" fg:x="74645" fg:w="28"/><text x="54.7999%" y="191.50"></text></g><g><title>extent_recycle_split (1,364 samples, 1.00%)</title><rect x="53.5809%" y="229" width="0.9968%" height="15" fill="rgb(252,25,45)" fg:x="73319" fg:w="1364"/><text x="53.8309%" y="239.50"></text></g><g><title>extent_split_interior (1,033 samples, 0.75%)</title><rect x="53.8228%" y="213" width="0.7549%" height="15" fill="rgb(251,164,9)" fg:x="73650" fg:w="1033"/><text x="54.0728%" y="223.50"></text></g><g><title>extent_split_impl (1,004 samples, 0.73%)</title><rect x="53.8440%" y="197" width="0.7337%" height="15" fill="rgb(233,194,0)" fg:x="73679" fg:w="1004"/><text x="54.0940%" y="207.50"></text></g><g><title>atomic_load_b (24 samples, 0.02%)</title><rect x="54.5908%" y="197" width="0.0175%" height="15" fill="rgb(249,111,24)" fg:x="74701" fg:w="24"/><text x="54.8408%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (37 samples, 0.03%)</title><rect x="54.6084%" y="197" width="0.0270%" height="15" fill="rgb(250,223,3)" fg:x="74725" fg:w="37"/><text x="54.8584%" y="207.50"></text></g><g><title>pthread_mutex_trylock (37 samples, 0.03%)</title><rect x="54.6084%" y="181" width="0.0270%" height="15" fill="rgb(236,178,37)" fg:x="74725" fg:w="37"/><text x="54.8584%" y="191.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (100 samples, 0.07%)</title><rect x="54.5799%" y="213" width="0.0731%" height="15" fill="rgb(241,158,50)" fg:x="74686" fg:w="100"/><text x="54.8299%" y="223.50"></text></g><g><title>spin_cpu_spinwait (24 samples, 0.02%)</title><rect x="54.6354%" y="197" width="0.0175%" height="15" fill="rgb(213,121,41)" fg:x="74762" fg:w="24"/><text x="54.8854%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (161 samples, 0.12%)</title><rect x="54.6529%" y="213" width="0.1177%" height="15" fill="rgb(240,92,3)" fg:x="74786" fg:w="161"/><text x="54.9029%" y="223.50"></text></g><g><title>pthread_mutex_trylock (156 samples, 0.11%)</title><rect x="54.6566%" y="197" width="0.1140%" height="15" fill="rgb(205,123,3)" fg:x="74791" fg:w="156"/><text x="54.9066%" y="207.50"></text></g><g><title>malloc_mutex_lock (268 samples, 0.20%)</title><rect x="54.5777%" y="229" width="0.1959%" height="15" fill="rgb(205,97,47)" fg:x="74683" fg:w="268"/><text x="54.8277%" y="239.50"></text></g><g><title>[libc.so.6] (177 samples, 0.13%)</title><rect x="54.7743%" y="213" width="0.1294%" height="15" fill="rgb(247,152,14)" fg:x="74952" fg:w="177"/><text x="55.0243%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc (3,619 samples, 2.64%)</title><rect x="52.2633%" y="261" width="2.6447%" height="15" fill="rgb(248,195,53)" fg:x="71516" fg:w="3619"/><text x="52.5133%" y="271.50">_r..</text></g><g><title>extent_recycle (3,582 samples, 2.62%)</title><rect x="52.2903%" y="245" width="2.6177%" height="15" fill="rgb(226,201,16)" fg:x="71553" fg:w="3582"/><text x="52.5403%" y="255.50">ex..</text></g><g><title>malloc_mutex_unlock (184 samples, 0.13%)</title><rect x="54.7735%" y="229" width="0.1345%" height="15" fill="rgb(205,98,0)" fg:x="74951" fg:w="184"/><text x="55.0235%" y="239.50"></text></g><g><title>_rjem_je_eset_fit (34 samples, 0.02%)</title><rect x="54.9153%" y="197" width="0.0248%" height="15" fill="rgb(214,191,48)" fg:x="75145" fg:w="34"/><text x="55.1653%" y="207.50"></text></g><g><title>eset_first_fit (34 samples, 0.02%)</title><rect x="54.9153%" y="181" width="0.0248%" height="15" fill="rgb(237,112,39)" fg:x="75145" fg:w="34"/><text x="55.1653%" y="191.50"></text></g><g><title>extent_recycle_extract (77 samples, 0.06%)</title><rect x="54.9138%" y="213" width="0.0563%" height="15" fill="rgb(247,203,27)" fg:x="75143" fg:w="77"/><text x="55.1638%" y="223.50"></text></g><g><title>extent_activate_locked (41 samples, 0.03%)</title><rect x="54.9401%" y="197" width="0.0300%" height="15" fill="rgb(235,124,28)" fg:x="75179" fg:w="41"/><text x="55.1901%" y="207.50"></text></g><g><title>_rjem_je_eset_remove (27 samples, 0.02%)</title><rect x="54.9504%" y="181" width="0.0197%" height="15" fill="rgb(208,207,46)" fg:x="75193" fg:w="27"/><text x="55.2004%" y="191.50"></text></g><g><title>extent_deactivate_locked (27 samples, 0.02%)</title><rect x="54.9701%" y="197" width="0.0197%" height="15" fill="rgb(234,176,4)" fg:x="75220" fg:w="27"/><text x="55.2201%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (27 samples, 0.02%)</title><rect x="54.9701%" y="181" width="0.0197%" height="15" fill="rgb(230,133,28)" fg:x="75220" fg:w="27"/><text x="55.2201%" y="191.50"></text></g><g><title>_rjem_je_eset_insert (17 samples, 0.01%)</title><rect x="54.9774%" y="165" width="0.0124%" height="15" fill="rgb(211,137,40)" fg:x="75230" fg:w="17"/><text x="55.2274%" y="175.50"></text></g><g><title>phn_next_get (34 samples, 0.02%)</title><rect x="55.0213%" y="85" width="0.0248%" height="15" fill="rgb(254,35,13)" fg:x="75290" fg:w="34"/><text x="55.2713%" y="95.50"></text></g><g><title>_rjem_je_edata_avail_remove (54 samples, 0.04%)</title><rect x="55.0096%" y="149" width="0.0395%" height="15" fill="rgb(225,49,51)" fg:x="75274" fg:w="54"/><text x="55.2596%" y="159.50"></text></g><g><title>ph_remove (54 samples, 0.04%)</title><rect x="55.0096%" y="133" width="0.0395%" height="15" fill="rgb(251,10,15)" fg:x="75274" fg:w="54"/><text x="55.2596%" y="143.50"></text></g><g><title>ph_merge_children (49 samples, 0.04%)</title><rect x="55.0132%" y="117" width="0.0358%" height="15" fill="rgb(228,207,15)" fg:x="75279" fg:w="49"/><text x="55.2632%" y="127.50"></text></g><g><title>phn_merge_siblings (49 samples, 0.04%)</title><rect x="55.0132%" y="101" width="0.0358%" height="15" fill="rgb(241,99,19)" fg:x="75279" fg:w="49"/><text x="55.2632%" y="111.50"></text></g><g><title>_rjem_je_edata_cache_get (77 samples, 0.06%)</title><rect x="55.0045%" y="165" width="0.0563%" height="15" fill="rgb(207,104,49)" fg:x="75267" fg:w="77"/><text x="55.2545%" y="175.50"></text></g><g><title>extent_recycle_split (144 samples, 0.11%)</title><rect x="54.9701%" y="213" width="0.1052%" height="15" fill="rgb(234,99,18)" fg:x="75220" fg:w="144"/><text x="55.2201%" y="223.50"></text></g><g><title>extent_split_interior (117 samples, 0.09%)</title><rect x="54.9898%" y="197" width="0.0855%" height="15" fill="rgb(213,191,49)" fg:x="75247" fg:w="117"/><text x="55.2398%" y="207.50"></text></g><g><title>extent_split_impl (111 samples, 0.08%)</title><rect x="54.9942%" y="181" width="0.0811%" height="15" fill="rgb(210,226,19)" fg:x="75253" fg:w="111"/><text x="55.2442%" y="191.50"></text></g><g><title>extent_recycle (240 samples, 0.18%)</title><rect x="54.9087%" y="229" width="0.1754%" height="15" fill="rgb(229,97,18)" fg:x="75136" fg:w="240"/><text x="55.1587%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (250 samples, 0.18%)</title><rect x="54.9080%" y="261" width="0.1827%" height="15" fill="rgb(211,167,15)" fg:x="75135" fg:w="250"/><text x="55.1580%" y="271.50"></text></g><g><title>extent_alloc_retained (250 samples, 0.18%)</title><rect x="54.9080%" y="245" width="0.1827%" height="15" fill="rgb(210,169,34)" fg:x="75135" fg:w="250"/><text x="55.1580%" y="255.50"></text></g><g><title>pac_alloc_real (3,940 samples, 2.88%)</title><rect x="52.2245%" y="277" width="2.8793%" height="15" fill="rgb(241,121,31)" fg:x="71463" fg:w="3940"/><text x="52.4745%" y="287.50">pa..</text></g><g><title>_rjem_je_pa_alloc (4,481 samples, 3.27%)</title><rect x="51.8591%" y="325" width="3.2747%" height="15" fill="rgb(232,40,11)" fg:x="70963" fg:w="4481"/><text x="52.1091%" y="335.50">_rj..</text></g><g><title>pai_alloc (4,084 samples, 2.98%)</title><rect x="52.1493%" y="309" width="2.9846%" height="15" fill="rgb(205,86,26)" fg:x="71360" fg:w="4084"/><text x="52.3993%" y="319.50">pai..</text></g><g><title>pac_alloc_impl (4,066 samples, 2.97%)</title><rect x="52.1624%" y="293" width="2.9714%" height="15" fill="rgb(231,126,28)" fg:x="71378" fg:w="4066"/><text x="52.4124%" y="303.50">pac..</text></g><g><title>pac_ehooks_get (41 samples, 0.03%)</title><rect x="55.1038%" y="277" width="0.0300%" height="15" fill="rgb(219,221,18)" fg:x="75403" fg:w="41"/><text x="55.3538%" y="287.50"></text></g><g><title>arena_slab_alloc (4,785 samples, 3.50%)</title><rect x="51.6618%" y="341" width="3.4968%" height="15" fill="rgb(211,40,0)" fg:x="70693" fg:w="4785"/><text x="51.9118%" y="351.50">are..</text></g><g><title>san_slab_extent_decide_guard (19 samples, 0.01%)</title><rect x="55.1448%" y="325" width="0.0139%" height="15" fill="rgb(239,85,43)" fg:x="75459" fg:w="19"/><text x="55.3948%" y="335.50"></text></g><g><title>cfs_lu (23 samples, 0.02%)</title><rect x="55.2354%" y="325" width="0.0168%" height="15" fill="rgb(231,55,21)" fg:x="75583" fg:w="23"/><text x="55.4854%" y="335.50"></text></g><g><title>arena_slab_reg_alloc_batch (139 samples, 0.10%)</title><rect x="55.1587%" y="341" width="0.1016%" height="15" fill="rgb(225,184,43)" fg:x="75478" fg:w="139"/><text x="55.4087%" y="351.50"></text></g><g><title>edata_nfree_get (26 samples, 0.02%)</title><rect x="55.2661%" y="341" width="0.0190%" height="15" fill="rgb(251,158,41)" fg:x="75625" fg:w="26"/><text x="55.5161%" y="351.50"></text></g><g><title>pthread_mutex_trylock (411 samples, 0.30%)</title><rect x="55.3026%" y="309" width="0.3004%" height="15" fill="rgb(234,159,37)" fg:x="75675" fg:w="411"/><text x="55.5526%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (433 samples, 0.32%)</title><rect x="55.2939%" y="325" width="0.3164%" height="15" fill="rgb(216,204,22)" fg:x="75663" fg:w="433"/><text x="55.5439%" y="335.50"></text></g><g><title>malloc_mutex_lock (450 samples, 0.33%)</title><rect x="55.2851%" y="341" width="0.3289%" height="15" fill="rgb(214,17,3)" fg:x="75651" fg:w="450"/><text x="55.5351%" y="351.50"></text></g><g><title>[libc.so.6] (259 samples, 0.19%)</title><rect x="55.6191%" y="325" width="0.1893%" height="15" fill="rgb(212,111,17)" fg:x="76108" fg:w="259"/><text x="55.8691%" y="335.50"></text></g><g><title>pthread_mutex_unlock (101 samples, 0.07%)</title><rect x="55.8105%" y="325" width="0.0738%" height="15" fill="rgb(221,157,24)" fg:x="76370" fg:w="101"/><text x="56.0605%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (6,110 samples, 4.47%)</title><rect x="51.4331%" y="357" width="4.4651%" height="15" fill="rgb(252,16,13)" fg:x="70380" fg:w="6110"/><text x="51.6831%" y="367.50">_rjem..</text></g><g><title>malloc_mutex_unlock (389 samples, 0.28%)</title><rect x="55.6139%" y="341" width="0.2843%" height="15" fill="rgb(221,62,2)" fg:x="76101" fg:w="389"/><text x="55.8639%" y="351.50"></text></g><g><title>pthread_mutex_unlock@plt (19 samples, 0.01%)</title><rect x="55.8843%" y="325" width="0.0139%" height="15" fill="rgb(247,87,22)" fg:x="76471" fg:w="19"/><text x="56.1343%" y="335.50"></text></g><g><title>arena_decay_dirty (14 samples, 0.01%)</title><rect x="55.8982%" y="341" width="0.0102%" height="15" fill="rgb(215,73,9)" fg:x="76490" fg:w="14"/><text x="56.1482%" y="351.50"></text></g><g><title>arena_decay_impl (14 samples, 0.01%)</title><rect x="55.8982%" y="325" width="0.0102%" height="15" fill="rgb(207,175,33)" fg:x="76490" fg:w="14"/><text x="56.1482%" y="335.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (14 samples, 0.01%)</title><rect x="55.8982%" y="309" width="0.0102%" height="15" fill="rgb(243,129,54)" fg:x="76490" fg:w="14"/><text x="56.1482%" y="319.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (14 samples, 0.01%)</title><rect x="55.8982%" y="293" width="0.0102%" height="15" fill="rgb(227,119,45)" fg:x="76490" fg:w="14"/><text x="56.1482%" y="303.50"></text></g><g><title>_rjem_je_arena_decay (18 samples, 0.01%)</title><rect x="55.8982%" y="357" width="0.0132%" height="15" fill="rgb(205,109,36)" fg:x="76490" fg:w="18"/><text x="56.1482%" y="367.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (6,205 samples, 4.53%)</title><rect x="51.3805%" y="373" width="4.5346%" height="15" fill="rgb(205,6,39)" fg:x="70308" fg:w="6205"/><text x="51.6305%" y="383.50">_rjem..</text></g><g><title>arena_choose (46 samples, 0.03%)</title><rect x="55.9245%" y="373" width="0.0336%" height="15" fill="rgb(221,32,16)" fg:x="76526" fg:w="46"/><text x="56.1745%" y="383.50"></text></g><g><title>arena_choose_impl (46 samples, 0.03%)</title><rect x="55.9245%" y="357" width="0.0336%" height="15" fill="rgb(228,144,50)" fg:x="76526" fg:w="46"/><text x="56.1745%" y="367.50"></text></g><g><title>tsd_arena_get (14 samples, 0.01%)</title><rect x="55.9479%" y="341" width="0.0102%" height="15" fill="rgb(229,201,53)" fg:x="76558" fg:w="14"/><text x="56.1979%" y="351.50"></text></g><g><title>cache_bin_alloc (279 samples, 0.20%)</title><rect x="55.9581%" y="373" width="0.2039%" height="15" fill="rgb(249,153,27)" fg:x="76572" fg:w="279"/><text x="56.2081%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (279 samples, 0.20%)</title><rect x="55.9581%" y="357" width="0.2039%" height="15" fill="rgb(227,106,25)" fg:x="76572" fg:w="279"/><text x="56.2081%" y="367.50"></text></g><g><title>iallocztm (10,133 samples, 7.41%)</title><rect x="48.7635%" y="421" width="7.4051%" height="15" fill="rgb(230,65,29)" fg:x="66727" fg:w="10133"/><text x="49.0135%" y="431.50">iallocztm</text></g><g><title>arena_malloc (10,133 samples, 7.41%)</title><rect x="48.7635%" y="405" width="7.4051%" height="15" fill="rgb(221,57,46)" fg:x="66727" fg:w="10133"/><text x="49.0135%" y="415.50">arena_mall..</text></g><g><title>tcache_alloc_small (6,623 samples, 4.84%)</title><rect x="51.3286%" y="389" width="4.8400%" height="15" fill="rgb(229,161,17)" fg:x="70237" fg:w="6623"/><text x="51.5786%" y="399.50">tcache..</text></g><g><title>imalloc_no_sample (10,138 samples, 7.41%)</title><rect x="48.7635%" y="437" width="7.4088%" height="15" fill="rgb(222,213,11)" fg:x="66727" fg:w="10138"/><text x="49.0135%" y="447.50">imalloc_no..</text></g><g><title>peak_update (40 samples, 0.03%)</title><rect x="56.2183%" y="373" width="0.0292%" height="15" fill="rgb(235,35,13)" fg:x="76928" fg:w="40"/><text x="56.4683%" y="383.50"></text></g><g><title>_rjem_je_peak_event_update (69 samples, 0.05%)</title><rect x="56.2183%" y="389" width="0.0504%" height="15" fill="rgb(233,158,34)" fg:x="76928" fg:w="69"/><text x="56.4683%" y="399.50"></text></g><g><title>tsd_thread_allocated_get (29 samples, 0.02%)</title><rect x="56.2475%" y="373" width="0.0212%" height="15" fill="rgb(215,151,48)" fg:x="76968" fg:w="29"/><text x="56.4975%" y="383.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (74 samples, 0.05%)</title><rect x="56.2183%" y="405" width="0.0541%" height="15" fill="rgb(229,84,14)" fg:x="76928" fg:w="74"/><text x="56.4683%" y="415.50"></text></g><g><title>cache_bin_ncached_get_local (25 samples, 0.02%)</title><rect x="56.5070%" y="341" width="0.0183%" height="15" fill="rgb(229,68,14)" fg:x="77323" fg:w="25"/><text x="56.7570%" y="351.50"></text></g><g><title>cache_bin_ncached_get_internal (25 samples, 0.02%)</title><rect x="56.5070%" y="325" width="0.0183%" height="15" fill="rgb(243,106,26)" fg:x="77323" fg:w="25"/><text x="56.7570%" y="335.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (104 samples, 0.08%)</title><rect x="56.4785%" y="357" width="0.0760%" height="15" fill="rgb(206,45,38)" fg:x="77284" fg:w="104"/><text x="56.7285%" y="367.50"></text></g><g><title>cache_bin_nstashed_get_local (40 samples, 0.03%)</title><rect x="56.5252%" y="341" width="0.0292%" height="15" fill="rgb(226,6,15)" fg:x="77348" fg:w="40"/><text x="56.7752%" y="351.50"></text></g><g><title>cache_bin_nstashed_get_internal (40 samples, 0.03%)</title><rect x="56.5252%" y="325" width="0.0292%" height="15" fill="rgb(232,22,54)" fg:x="77348" fg:w="40"/><text x="56.7752%" y="335.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (40 samples, 0.03%)</title><rect x="56.5252%" y="309" width="0.0292%" height="15" fill="rgb(229,222,32)" fg:x="77348" fg:w="40"/><text x="56.7752%" y="319.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (14 samples, 0.01%)</title><rect x="56.5932%" y="197" width="0.0102%" height="15" fill="rgb(228,62,29)" fg:x="77441" fg:w="14"/><text x="56.8432%" y="207.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (14 samples, 0.01%)</title><rect x="56.5932%" y="181" width="0.0102%" height="15" fill="rgb(251,103,34)" fg:x="77441" fg:w="14"/><text x="56.8432%" y="191.50"></text></g><g><title>extent_try_coalesce_large (50 samples, 0.04%)</title><rect x="56.5925%" y="229" width="0.0365%" height="15" fill="rgb(233,12,30)" fg:x="77440" fg:w="50"/><text x="56.8425%" y="239.50"></text></g><g><title>extent_try_coalesce_impl (50 samples, 0.04%)</title><rect x="56.5925%" y="213" width="0.0365%" height="15" fill="rgb(238,52,0)" fg:x="77440" fg:w="50"/><text x="56.8425%" y="223.50"></text></g><g><title>extent_coalesce (35 samples, 0.03%)</title><rect x="56.6034%" y="197" width="0.0256%" height="15" fill="rgb(223,98,5)" fg:x="77455" fg:w="35"/><text x="56.8534%" y="207.50"></text></g><g><title>extent_merge_impl (26 samples, 0.02%)</title><rect x="56.6100%" y="181" width="0.0190%" height="15" fill="rgb(228,75,37)" fg:x="77464" fg:w="26"/><text x="56.8600%" y="191.50"></text></g><g><title>extent_merge_impl (22 samples, 0.02%)</title><rect x="56.6129%" y="165" width="0.0161%" height="15" fill="rgb(205,115,49)" fg:x="77468" fg:w="22"/><text x="56.8629%" y="175.50"></text></g><g><title>_rjem_je_extent_record (68 samples, 0.05%)</title><rect x="56.5815%" y="245" width="0.0497%" height="15" fill="rgb(250,154,43)" fg:x="77425" fg:w="68"/><text x="56.8315%" y="255.50"></text></g><g><title>_rjem_je_large_dalloc_finish (82 samples, 0.06%)</title><rect x="56.5735%" y="293" width="0.0599%" height="15" fill="rgb(226,43,29)" fg:x="77414" fg:w="82"/><text x="56.8235%" y="303.50"></text></g><g><title>large_dalloc_finish_impl (81 samples, 0.06%)</title><rect x="56.5742%" y="277" width="0.0592%" height="15" fill="rgb(249,228,39)" fg:x="77415" fg:w="81"/><text x="56.8242%" y="287.50"></text></g><g><title>pac_dalloc_impl (73 samples, 0.05%)</title><rect x="56.5800%" y="261" width="0.0533%" height="15" fill="rgb(216,79,43)" fg:x="77423" fg:w="73"/><text x="56.8300%" y="271.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (114 samples, 0.08%)</title><rect x="56.5625%" y="341" width="0.0833%" height="15" fill="rgb(228,95,12)" fg:x="77399" fg:w="114"/><text x="56.8125%" y="351.50"></text></g><g><title>tcache_bin_flush_bottom (114 samples, 0.08%)</title><rect x="56.5625%" y="325" width="0.0833%" height="15" fill="rgb(249,221,15)" fg:x="77399" fg:w="114"/><text x="56.8125%" y="335.50"></text></g><g><title>tcache_bin_flush_impl (111 samples, 0.08%)</title><rect x="56.5647%" y="309" width="0.0811%" height="15" fill="rgb(233,34,13)" fg:x="77402" fg:w="111"/><text x="56.8147%" y="319.50"></text></g><g><title>tcache_gc_large (115 samples, 0.08%)</title><rect x="56.5625%" y="357" width="0.0840%" height="15" fill="rgb(214,103,39)" fg:x="77399" fg:w="115"/><text x="56.8125%" y="367.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="56.6568%" y="293" width="0.0110%" height="15" fill="rgb(251,126,39)" fg:x="77528" fg:w="15"/><text x="56.9068%" y="303.50"></text></g><g><title>cache_bin_finish_flush (17 samples, 0.01%)</title><rect x="56.6560%" y="309" width="0.0124%" height="15" fill="rgb(214,216,36)" fg:x="77527" fg:w="17"/><text x="56.9060%" y="319.50"></text></g><g><title>_rjem_je_pa_dalloc (28 samples, 0.02%)</title><rect x="56.6948%" y="277" width="0.0205%" height="15" fill="rgb(220,221,8)" fg:x="77580" fg:w="28"/><text x="56.9448%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_insert (22 samples, 0.02%)</title><rect x="56.7474%" y="197" width="0.0161%" height="15" fill="rgb(240,216,3)" fg:x="77652" fg:w="22"/><text x="56.9974%" y="207.50"></text></g><g><title>ph_insert (21 samples, 0.02%)</title><rect x="56.7481%" y="181" width="0.0153%" height="15" fill="rgb(232,218,17)" fg:x="77653" fg:w="21"/><text x="56.9981%" y="191.50"></text></g><g><title>extent_deactivate_locked (66 samples, 0.05%)</title><rect x="56.7320%" y="245" width="0.0482%" height="15" fill="rgb(229,163,45)" fg:x="77631" fg:w="66"/><text x="56.9820%" y="255.50"></text></g><g><title>extent_deactivate_locked_impl (66 samples, 0.05%)</title><rect x="56.7320%" y="229" width="0.0482%" height="15" fill="rgb(231,110,42)" fg:x="77631" fg:w="66"/><text x="56.9820%" y="239.50"></text></g><g><title>_rjem_je_eset_insert (56 samples, 0.04%)</title><rect x="56.7394%" y="213" width="0.0409%" height="15" fill="rgb(208,170,48)" fg:x="77641" fg:w="56"/><text x="56.9894%" y="223.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (34 samples, 0.02%)</title><rect x="56.7876%" y="213" width="0.0248%" height="15" fill="rgb(239,116,25)" fg:x="77707" fg:w="34"/><text x="57.0376%" y="223.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (31 samples, 0.02%)</title><rect x="56.7898%" y="197" width="0.0227%" height="15" fill="rgb(219,200,50)" fg:x="77710" fg:w="31"/><text x="57.0398%" y="207.50"></text></g><g><title>_rjem_je_eset_remove (27 samples, 0.02%)</title><rect x="56.8132%" y="197" width="0.0197%" height="15" fill="rgb(245,200,0)" fg:x="77742" fg:w="27"/><text x="57.0632%" y="207.50"></text></g><g><title>ehooks_merge (17 samples, 0.01%)</title><rect x="56.8336%" y="181" width="0.0124%" height="15" fill="rgb(245,119,33)" fg:x="77770" fg:w="17"/><text x="57.0836%" y="191.50"></text></g><g><title>_rjem_je_edata_cache_put (19 samples, 0.01%)</title><rect x="56.8519%" y="165" width="0.0139%" height="15" fill="rgb(231,125,12)" fg:x="77795" fg:w="19"/><text x="57.1019%" y="175.50"></text></g><g><title>extent_try_coalesce_large (125 samples, 0.09%)</title><rect x="56.7803%" y="245" width="0.0913%" height="15" fill="rgb(216,96,41)" fg:x="77697" fg:w="125"/><text x="57.0303%" y="255.50"></text></g><g><title>extent_try_coalesce_impl (124 samples, 0.09%)</title><rect x="56.7810%" y="229" width="0.0906%" height="15" fill="rgb(248,43,45)" fg:x="77698" fg:w="124"/><text x="57.0310%" y="239.50"></text></g><g><title>extent_coalesce (81 samples, 0.06%)</title><rect x="56.8124%" y="213" width="0.0592%" height="15" fill="rgb(217,222,7)" fg:x="77741" fg:w="81"/><text x="57.0624%" y="223.50"></text></g><g><title>extent_merge_impl (53 samples, 0.04%)</title><rect x="56.8329%" y="197" width="0.0387%" height="15" fill="rgb(233,28,6)" fg:x="77769" fg:w="53"/><text x="57.0829%" y="207.50"></text></g><g><title>extent_merge_impl (35 samples, 0.03%)</title><rect x="56.8461%" y="181" width="0.0256%" height="15" fill="rgb(231,218,15)" fg:x="77787" fg:w="35"/><text x="57.0961%" y="191.50"></text></g><g><title>_rjem_je_extent_record (208 samples, 0.15%)</title><rect x="56.7255%" y="261" width="0.1520%" height="15" fill="rgb(226,171,48)" fg:x="77622" fg:w="208"/><text x="56.9755%" y="271.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (259 samples, 0.19%)</title><rect x="56.6904%" y="293" width="0.1893%" height="15" fill="rgb(235,201,9)" fg:x="77574" fg:w="259"/><text x="56.9404%" y="303.50"></text></g><g><title>pac_dalloc_impl (225 samples, 0.16%)</title><rect x="56.7152%" y="277" width="0.1644%" height="15" fill="rgb(217,80,15)" fg:x="77608" fg:w="225"/><text x="56.9652%" y="287.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (17 samples, 0.01%)</title><rect x="56.8943%" y="277" width="0.0124%" height="15" fill="rgb(219,152,8)" fg:x="77853" fg:w="17"/><text x="57.1443%" y="287.50"></text></g><g><title>arena_dissociate_bin_slab (17 samples, 0.01%)</title><rect x="56.8943%" y="261" width="0.0124%" height="15" fill="rgb(243,107,38)" fg:x="77853" fg:w="17"/><text x="57.1443%" y="271.50"></text></g><g><title>arena_dalloc_bin_locked_step (50 samples, 0.04%)</title><rect x="56.8833%" y="293" width="0.0365%" height="15" fill="rgb(231,17,5)" fg:x="77838" fg:w="50"/><text x="57.1333%" y="303.50"></text></g><g><title>edata_arena_ind_get (28 samples, 0.02%)</title><rect x="56.9301%" y="293" width="0.0205%" height="15" fill="rgb(209,25,54)" fg:x="77902" fg:w="28"/><text x="57.1801%" y="303.50"></text></g><g><title>malloc_mutex_trylock_final (71 samples, 0.05%)</title><rect x="56.9506%" y="277" width="0.0519%" height="15" fill="rgb(219,0,2)" fg:x="77930" fg:w="71"/><text x="57.2006%" y="287.50"></text></g><g><title>pthread_mutex_trylock (71 samples, 0.05%)</title><rect x="56.9506%" y="261" width="0.0519%" height="15" fill="rgb(246,9,5)" fg:x="77930" fg:w="71"/><text x="57.2006%" y="271.50"></text></g><g><title>malloc_mutex_lock (74 samples, 0.05%)</title><rect x="56.9506%" y="293" width="0.0541%" height="15" fill="rgb(226,159,4)" fg:x="77930" fg:w="74"/><text x="57.2006%" y="303.50"></text></g><g><title>malloc_mutex_unlock (15 samples, 0.01%)</title><rect x="57.0046%" y="293" width="0.0110%" height="15" fill="rgb(219,175,34)" fg:x="78004" fg:w="15"/><text x="57.2546%" y="303.50"></text></g><g><title>rtree_leaf_elm_read (46 samples, 0.03%)</title><rect x="57.0499%" y="261" width="0.0336%" height="15" fill="rgb(236,10,46)" fg:x="78066" fg:w="46"/><text x="57.2999%" y="271.50"></text></g><g><title>rtree_leaf_elm_bits_read (46 samples, 0.03%)</title><rect x="57.0499%" y="245" width="0.0336%" height="15" fill="rgb(240,211,16)" fg:x="78066" fg:w="46"/><text x="57.2999%" y="255.50"></text></g><g><title>atomic_load_p (46 samples, 0.03%)</title><rect x="57.0499%" y="229" width="0.0336%" height="15" fill="rgb(205,3,43)" fg:x="78066" fg:w="46"/><text x="57.2999%" y="239.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (104 samples, 0.08%)</title><rect x="57.0156%" y="293" width="0.0760%" height="15" fill="rgb(245,7,22)" fg:x="78019" fg:w="104"/><text x="57.2656%" y="303.50"></text></g><g><title>emap_edata_lookup_batch (100 samples, 0.07%)</title><rect x="57.0185%" y="277" width="0.0731%" height="15" fill="rgb(239,132,32)" fg:x="78023" fg:w="100"/><text x="57.2685%" y="287.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (607 samples, 0.44%)</title><rect x="56.6502%" y="341" width="0.4436%" height="15" fill="rgb(228,202,34)" fg:x="77519" fg:w="607"/><text x="56.9002%" y="351.50"></text></g><g><title>tcache_bin_flush_bottom (601 samples, 0.44%)</title><rect x="56.6546%" y="325" width="0.4392%" height="15" fill="rgb(254,200,22)" fg:x="77525" fg:w="601"/><text x="56.9046%" y="335.50"></text></g><g><title>tcache_bin_flush_impl (582 samples, 0.43%)</title><rect x="56.6685%" y="309" width="0.4253%" height="15" fill="rgb(219,10,39)" fg:x="77544" fg:w="582"/><text x="56.9185%" y="319.50"></text></g><g><title>tcache_gc_small (618 samples, 0.45%)</title><rect x="56.6465%" y="357" width="0.4516%" height="15" fill="rgb(226,210,39)" fg:x="77514" fg:w="618"/><text x="56.8965%" y="367.50"></text></g><g><title>tcache_get (33 samples, 0.02%)</title><rect x="57.0982%" y="357" width="0.0241%" height="15" fill="rgb(208,219,16)" fg:x="78132" fg:w="33"/><text x="57.3482%" y="367.50"></text></g><g><title>tcache_available (33 samples, 0.02%)</title><rect x="57.0982%" y="341" width="0.0241%" height="15" fill="rgb(216,158,51)" fg:x="78132" fg:w="33"/><text x="57.3482%" y="351.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (945 samples, 0.69%)</title><rect x="56.4332%" y="389" width="0.6906%" height="15" fill="rgb(233,14,44)" fg:x="77222" fg:w="945"/><text x="56.6832%" y="399.50"></text></g><g><title>tcache_event (936 samples, 0.68%)</title><rect x="56.4397%" y="373" width="0.6840%" height="15" fill="rgb(237,97,39)" fg:x="77231" fg:w="936"/><text x="56.6897%" y="383.50"></text></g><g><title>_rjem_je_tcache_gc_new_event_wait (25 samples, 0.02%)</title><rect x="57.1238%" y="389" width="0.0183%" height="15" fill="rgb(218,198,43)" fg:x="78167" fg:w="25"/><text x="57.3738%" y="399.50"></text></g><g><title>atomic_fence (59 samples, 0.04%)</title><rect x="57.1654%" y="325" width="0.0431%" height="15" fill="rgb(231,104,20)" fg:x="78224" fg:w="59"/><text x="57.4154%" y="335.50"></text></g><g><title>te_adjust_thresholds_helper (84 samples, 0.06%)</title><rect x="57.1566%" y="389" width="0.0614%" height="15" fill="rgb(254,36,13)" fg:x="78212" fg:w="84"/><text x="57.4066%" y="399.50"></text></g><g><title>te_ctx_next_event_set (81 samples, 0.06%)</title><rect x="57.1588%" y="373" width="0.0592%" height="15" fill="rgb(248,14,50)" fg:x="78215" fg:w="81"/><text x="57.4088%" y="383.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (74 samples, 0.05%)</title><rect x="57.1639%" y="357" width="0.0541%" height="15" fill="rgb(217,107,29)" fg:x="78222" fg:w="74"/><text x="57.4139%" y="367.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (73 samples, 0.05%)</title><rect x="57.1647%" y="341" width="0.0533%" height="15" fill="rgb(251,169,33)" fg:x="78223" fg:w="73"/><text x="57.4147%" y="351.50"></text></g><g><title>_rjem_je_te_event_trigger (1,299 samples, 0.95%)</title><rect x="56.2724%" y="405" width="0.9493%" height="15" fill="rgb(217,108,32)" fg:x="77002" fg:w="1299"/><text x="56.5224%" y="415.50"></text></g><g><title>imalloc_body (11,865 samples, 8.67%)</title><rect x="48.5713%" y="453" width="8.6708%" height="15" fill="rgb(219,66,42)" fg:x="66464" fg:w="11865"/><text x="48.8213%" y="463.50">imalloc_body</text></g><g><title>thread_alloc_event (1,464 samples, 1.07%)</title><rect x="56.1723%" y="437" width="1.0699%" height="15" fill="rgb(206,180,7)" fg:x="76865" fg:w="1464"/><text x="56.4223%" y="447.50"></text></g><g><title>te_event_advance (1,464 samples, 1.07%)</title><rect x="56.1723%" y="421" width="1.0699%" height="15" fill="rgb(208,226,31)" fg:x="76865" fg:w="1464"/><text x="56.4223%" y="431.50"></text></g><g><title>te_ctx_get (27 samples, 0.02%)</title><rect x="57.2224%" y="405" width="0.0197%" height="15" fill="rgb(218,26,49)" fg:x="78302" fg:w="27"/><text x="57.4724%" y="415.50"></text></g><g><title>_rjem_je_malloc_default (12,018 samples, 8.78%)</title><rect x="48.4865%" y="485" width="8.7826%" height="15" fill="rgb(233,197,48)" fg:x="66348" fg:w="12018"/><text x="48.7365%" y="495.50">_rjem_je_mal..</text></g><g><title>imalloc (11,902 samples, 8.70%)</title><rect x="48.5713%" y="469" width="8.6979%" height="15" fill="rgb(252,181,51)" fg:x="66464" fg:w="11902"/><text x="48.8213%" y="479.50">imalloc</text></g><g><title>tsd_fetch (37 samples, 0.03%)</title><rect x="57.2421%" y="453" width="0.0270%" height="15" fill="rgb(253,90,19)" fg:x="78329" fg:w="37"/><text x="57.4921%" y="463.50"></text></g><g><title>tsd_fetch_impl (37 samples, 0.03%)</title><rect x="57.2421%" y="437" width="0.0270%" height="15" fill="rgb(215,171,30)" fg:x="78329" fg:w="37"/><text x="57.4921%" y="447.50"></text></g><g><title>__rust_alloc (12,065 samples, 8.82%)</title><rect x="48.4829%" y="517" width="8.8170%" height="15" fill="rgb(214,222,9)" fg:x="66343" fg:w="12065"/><text x="48.7329%" y="527.50">__rust_alloc</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (12,065 samples, 8.82%)</title><rect x="48.4829%" y="501" width="8.8170%" height="15" fill="rgb(223,3,22)" fg:x="66343" fg:w="12065"/><text x="48.7329%" y="511.50">&lt;tikv_jemall..</text></g><g><title>_rjem_malloc (40 samples, 0.03%)</title><rect x="57.2706%" y="485" width="0.0292%" height="15" fill="rgb(225,196,46)" fg:x="78368" fg:w="40"/><text x="57.5206%" y="495.50"></text></g><g><title>imalloc_fastpath (40 samples, 0.03%)</title><rect x="57.2706%" y="469" width="0.0292%" height="15" fill="rgb(209,110,37)" fg:x="78368" fg:w="40"/><text x="57.5206%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12,079 samples, 8.83%)</title><rect x="48.4829%" y="565" width="8.8272%" height="15" fill="rgb(249,89,12)" fg:x="66343" fg:w="12079"/><text x="48.7329%" y="575.50">&lt;alloc::allo..</text></g><g><title>alloc::alloc::Global::alloc_impl (12,079 samples, 8.83%)</title><rect x="48.4829%" y="549" width="8.8272%" height="15" fill="rgb(226,27,33)" fg:x="66343" fg:w="12079"/><text x="48.7329%" y="559.50">alloc::alloc..</text></g><g><title>alloc::alloc::alloc (12,079 samples, 8.83%)</title><rect x="48.4829%" y="533" width="8.8272%" height="15" fill="rgb(213,82,22)" fg:x="66343" fg:w="12079"/><text x="48.7329%" y="543.50">alloc::alloc..</text></g><g><title>core::ptr::read_volatile (14 samples, 0.01%)</title><rect x="57.2999%" y="517" width="0.0102%" height="15" fill="rgb(248,140,0)" fg:x="78408" fg:w="14"/><text x="57.5499%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (12,109 samples, 8.85%)</title><rect x="48.4690%" y="645" width="8.8492%" height="15" fill="rgb(228,106,3)" fg:x="66324" fg:w="12109"/><text x="48.7190%" y="655.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12,109 samples, 8.85%)</title><rect x="48.4690%" y="629" width="8.8492%" height="15" fill="rgb(209,23,37)" fg:x="66324" fg:w="12109"/><text x="48.7190%" y="639.50">alloc::vec::..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12,109 samples, 8.85%)</title><rect x="48.4690%" y="613" width="8.8492%" height="15" fill="rgb(241,93,50)" fg:x="66324" fg:w="12109"/><text x="48.7190%" y="623.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (12,109 samples, 8.85%)</title><rect x="48.4690%" y="597" width="8.8492%" height="15" fill="rgb(253,46,43)" fg:x="66324" fg:w="12109"/><text x="48.7190%" y="607.50">alloc::raw_v..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (12,109 samples, 8.85%)</title><rect x="48.4690%" y="581" width="8.8492%" height="15" fill="rgb(226,206,43)" fg:x="66324" fg:w="12109"/><text x="48.7190%" y="591.50">alloc::raw_v..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (61 samples, 0.04%)</title><rect x="57.3211%" y="645" width="0.0446%" height="15" fill="rgb(217,54,7)" fg:x="78437" fg:w="61"/><text x="57.5711%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (54 samples, 0.04%)</title><rect x="57.3262%" y="629" width="0.0395%" height="15" fill="rgb(223,5,52)" fg:x="78444" fg:w="54"/><text x="57.5762%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (54 samples, 0.04%)</title><rect x="57.3262%" y="613" width="0.0395%" height="15" fill="rgb(206,52,46)" fg:x="78444" fg:w="54"/><text x="57.5762%" y="623.50"></text></g><g><title>bytes::bytes_mut::original_capacity_from_repr (21 samples, 0.02%)</title><rect x="57.3656%" y="645" width="0.0153%" height="15" fill="rgb(253,136,11)" fg:x="78498" fg:w="21"/><text x="57.6156%" y="655.50"></text></g><g><title>bytes::bytes_mut::release_shared (1,825 samples, 1.33%)</title><rect x="57.3810%" y="645" width="1.3337%" height="15" fill="rgb(208,106,33)" fg:x="78519" fg:w="1825"/><text x="57.6310%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1,820 samples, 1.33%)</title><rect x="57.3846%" y="629" width="1.3300%" height="15" fill="rgb(206,54,4)" fg:x="78524" fg:w="1820"/><text x="57.6346%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (1,820 samples, 1.33%)</title><rect x="57.3846%" y="613" width="1.3300%" height="15" fill="rgb(213,3,15)" fg:x="78524" fg:w="1820"/><text x="57.6346%" y="623.50"></text></g><g><title>core::cmp::max (14 samples, 0.01%)</title><rect x="58.7147%" y="645" width="0.0102%" height="15" fill="rgb(252,211,39)" fg:x="80344" fg:w="14"/><text x="58.9647%" y="655.50"></text></g><g><title>core::cmp::Ord::max (14 samples, 0.01%)</title><rect x="58.7147%" y="629" width="0.0102%" height="15" fill="rgb(223,6,36)" fg:x="80344" fg:w="14"/><text x="58.9647%" y="639.50"></text></g><g><title>core::cmp::max_by (14 samples, 0.01%)</title><rect x="58.7147%" y="613" width="0.0102%" height="15" fill="rgb(252,169,45)" fg:x="80344" fg:w="14"/><text x="58.9647%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (224 samples, 0.16%)</title><rect x="58.7249%" y="645" width="0.1637%" height="15" fill="rgb(212,48,26)" fg:x="80358" fg:w="224"/><text x="58.9749%" y="655.50"></text></g><g><title>[libc.so.6] (223 samples, 0.16%)</title><rect x="58.7256%" y="629" width="0.1630%" height="15" fill="rgb(251,102,48)" fg:x="80359" fg:w="223"/><text x="58.9756%" y="639.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (23 samples, 0.02%)</title><rect x="58.8886%" y="645" width="0.0168%" height="15" fill="rgb(243,208,16)" fg:x="80582" fg:w="23"/><text x="59.1386%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (28,007 samples, 20.47%)</title><rect x="38.4396%" y="677" width="20.4673%" height="15" fill="rgb(219,96,24)" fg:x="52600" fg:w="28007"/><text x="38.6896%" y="687.50">bytes::bytes_mut::BytesMut::rese..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (27,981 samples, 20.45%)</title><rect x="38.4586%" y="661" width="20.4483%" height="15" fill="rgb(219,33,29)" fg:x="52626" fg:w="27981"/><text x="38.7086%" y="671.50">bytes::bytes_mut::BytesMut::rese..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (45 samples, 0.03%)</title><rect x="58.9376%" y="661" width="0.0329%" height="15" fill="rgb(223,176,5)" fg:x="80649" fg:w="45"/><text x="59.1876%" y="671.50"></text></g><g><title>arena_bin_refill_slabcur_no_fresh_slab (16 samples, 0.01%)</title><rect x="59.1575%" y="373" width="0.0117%" height="15" fill="rgb(228,140,14)" fg:x="80950" fg:w="16"/><text x="59.4075%" y="383.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (15 samples, 0.01%)</title><rect x="59.1583%" y="357" width="0.0110%" height="15" fill="rgb(217,179,31)" fg:x="80951" fg:w="15"/><text x="59.4083%" y="367.50"></text></g><g><title>cfs_lu (14 samples, 0.01%)</title><rect x="59.2138%" y="357" width="0.0102%" height="15" fill="rgb(230,9,30)" fg:x="81027" fg:w="14"/><text x="59.4638%" y="367.50"></text></g><g><title>arena_slab_reg_alloc_batch (65 samples, 0.05%)</title><rect x="59.1773%" y="373" width="0.0475%" height="15" fill="rgb(230,136,20)" fg:x="80977" fg:w="65"/><text x="59.4273%" y="383.50"></text></g><g><title>pthread_mutex_trylock (91 samples, 0.07%)</title><rect x="59.2365%" y="341" width="0.0665%" height="15" fill="rgb(215,210,22)" fg:x="81058" fg:w="91"/><text x="59.4865%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (94 samples, 0.07%)</title><rect x="59.2365%" y="357" width="0.0687%" height="15" fill="rgb(218,43,5)" fg:x="81058" fg:w="94"/><text x="59.4865%" y="367.50"></text></g><g><title>malloc_mutex_lock (98 samples, 0.07%)</title><rect x="59.2365%" y="373" width="0.0716%" height="15" fill="rgb(216,11,5)" fg:x="81058" fg:w="98"/><text x="59.4865%" y="383.50"></text></g><g><title>[libc.so.6] (43 samples, 0.03%)</title><rect x="59.3088%" y="357" width="0.0314%" height="15" fill="rgb(209,82,29)" fg:x="81157" fg:w="43"/><text x="59.5588%" y="367.50"></text></g><g><title>pthread_mutex_unlock (24 samples, 0.02%)</title><rect x="59.3402%" y="357" width="0.0175%" height="15" fill="rgb(244,115,12)" fg:x="81200" fg:w="24"/><text x="59.5902%" y="367.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (300 samples, 0.22%)</title><rect x="59.1400%" y="389" width="0.2192%" height="15" fill="rgb(222,82,18)" fg:x="80926" fg:w="300"/><text x="59.3900%" y="399.50"></text></g><g><title>malloc_mutex_unlock (70 samples, 0.05%)</title><rect x="59.3081%" y="373" width="0.0512%" height="15" fill="rgb(249,227,8)" fg:x="81156" fg:w="70"/><text x="59.5581%" y="383.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (319 samples, 0.23%)</title><rect x="59.1349%" y="405" width="0.2331%" height="15" fill="rgb(253,141,45)" fg:x="80919" fg:w="319"/><text x="59.3849%" y="415.50"></text></g><g><title>arena_choose (25 samples, 0.02%)</title><rect x="59.3739%" y="405" width="0.0183%" height="15" fill="rgb(234,184,4)" fg:x="81246" fg:w="25"/><text x="59.6239%" y="415.50"></text></g><g><title>arena_choose_impl (25 samples, 0.02%)</title><rect x="59.3739%" y="389" width="0.0183%" height="15" fill="rgb(218,194,23)" fg:x="81246" fg:w="25"/><text x="59.6239%" y="399.50"></text></g><g><title>imalloc_no_sample (379 samples, 0.28%)</title><rect x="59.1181%" y="469" width="0.2770%" height="15" fill="rgb(235,66,41)" fg:x="80896" fg:w="379"/><text x="59.3681%" y="479.50"></text></g><g><title>iallocztm (379 samples, 0.28%)</title><rect x="59.1181%" y="453" width="0.2770%" height="15" fill="rgb(245,217,1)" fg:x="80896" fg:w="379"/><text x="59.3681%" y="463.50"></text></g><g><title>arena_malloc (379 samples, 0.28%)</title><rect x="59.1181%" y="437" width="0.2770%" height="15" fill="rgb(229,91,1)" fg:x="80896" fg:w="379"/><text x="59.3681%" y="447.50"></text></g><g><title>tcache_alloc_small (379 samples, 0.28%)</title><rect x="59.1181%" y="421" width="0.2770%" height="15" fill="rgb(207,101,30)" fg:x="80896" fg:w="379"/><text x="59.3681%" y="431.50"></text></g><g><title>imalloc_body (383 samples, 0.28%)</title><rect x="59.1166%" y="485" width="0.2799%" height="15" fill="rgb(223,82,49)" fg:x="80894" fg:w="383"/><text x="59.3666%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (388 samples, 0.28%)</title><rect x="59.1152%" y="517" width="0.2835%" height="15" fill="rgb(218,167,17)" fg:x="80892" fg:w="388"/><text x="59.3652%" y="527.50"></text></g><g><title>imalloc (386 samples, 0.28%)</title><rect x="59.1166%" y="501" width="0.2821%" height="15" fill="rgb(208,103,14)" fg:x="80894" fg:w="386"/><text x="59.3666%" y="511.50"></text></g><g><title>cache_bin_alloc (22 samples, 0.02%)</title><rect x="59.7042%" y="485" width="0.0161%" height="15" fill="rgb(238,20,8)" fg:x="81698" fg:w="22"/><text x="59.9542%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (22 samples, 0.02%)</title><rect x="59.7042%" y="469" width="0.0161%" height="15" fill="rgb(218,80,54)" fg:x="81698" fg:w="22"/><text x="59.9542%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (256 samples, 0.19%)</title><rect x="59.7203%" y="485" width="0.1871%" height="15" fill="rgb(240,144,17)" fg:x="81720" fg:w="256"/><text x="59.9703%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (256 samples, 0.19%)</title><rect x="59.7203%" y="469" width="0.1871%" height="15" fill="rgb(245,27,50)" fg:x="81720" fg:w="256"/><text x="59.9703%" y="479.50"></text></g><g><title>sz_index2size_lookup_impl (154 samples, 0.11%)</title><rect x="59.9132%" y="469" width="0.1125%" height="15" fill="rgb(251,51,7)" fg:x="81984" fg:w="154"/><text x="60.1632%" y="479.50"></text></g><g><title>sz_size2index_usize_fastpath (178 samples, 0.13%)</title><rect x="59.9132%" y="485" width="0.1301%" height="15" fill="rgb(245,217,29)" fg:x="81984" fg:w="178"/><text x="60.1632%" y="495.50"></text></g><g><title>sz_size2index_lookup_impl (24 samples, 0.02%)</title><rect x="60.0257%" y="469" width="0.0175%" height="15" fill="rgb(221,176,29)" fg:x="82138" fg:w="24"/><text x="60.2757%" y="479.50"></text></g><g><title>__rust_alloc (1,280 samples, 0.94%)</title><rect x="59.1093%" y="549" width="0.9354%" height="15" fill="rgb(212,180,24)" fg:x="80884" fg:w="1280"/><text x="59.3593%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,280 samples, 0.94%)</title><rect x="59.1093%" y="533" width="0.9354%" height="15" fill="rgb(254,24,2)" fg:x="80884" fg:w="1280"/><text x="59.3593%" y="543.50"></text></g><g><title>_rjem_malloc (884 samples, 0.65%)</title><rect x="59.3987%" y="517" width="0.6460%" height="15" fill="rgb(230,100,2)" fg:x="81280" fg:w="884"/><text x="59.6487%" y="527.50"></text></g><g><title>imalloc_fastpath (882 samples, 0.64%)</title><rect x="59.4002%" y="501" width="0.6446%" height="15" fill="rgb(219,142,25)" fg:x="81282" fg:w="882"/><text x="59.6502%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,440 samples, 1.05%)</title><rect x="59.0209%" y="629" width="1.0523%" height="15" fill="rgb(240,73,43)" fg:x="80763" fg:w="1440"/><text x="59.2709%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,326 samples, 0.97%)</title><rect x="59.1042%" y="613" width="0.9690%" height="15" fill="rgb(214,114,15)" fg:x="80877" fg:w="1326"/><text x="59.3542%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,319 samples, 0.96%)</title><rect x="59.1093%" y="597" width="0.9639%" height="15" fill="rgb(207,130,4)" fg:x="80884" fg:w="1319"/><text x="59.3593%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,319 samples, 0.96%)</title><rect x="59.1093%" y="581" width="0.9639%" height="15" fill="rgb(221,25,40)" fg:x="80884" fg:w="1319"/><text x="59.3593%" y="591.50"></text></g><g><title>alloc::alloc::alloc (1,319 samples, 0.96%)</title><rect x="59.1093%" y="565" width="0.9639%" height="15" fill="rgb(241,184,7)" fg:x="80884" fg:w="1319"/><text x="59.3593%" y="575.50"></text></g><g><title>core::ptr::read_volatile (39 samples, 0.03%)</title><rect x="60.0447%" y="549" width="0.0285%" height="15" fill="rgb(235,159,4)" fg:x="82164" fg:w="39"/><text x="60.2947%" y="559.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (1,508 samples, 1.10%)</title><rect x="58.9895%" y="645" width="1.1020%" height="15" fill="rgb(214,87,48)" fg:x="80720" fg:w="1508"/><text x="59.2395%" y="655.50"></text></g><g><title>bytes::bytes_mut::rebuild_vec (25 samples, 0.02%)</title><rect x="60.0732%" y="629" width="0.0183%" height="15" fill="rgb(246,198,24)" fg:x="82203" fg:w="25"/><text x="60.3232%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (1,548 samples, 1.13%)</title><rect x="58.9763%" y="661" width="1.1313%" height="15" fill="rgb(209,66,40)" fg:x="80702" fg:w="1548"/><text x="59.2263%" y="671.50"></text></g><g><title>bytes::bytes_mut::increment_shared (22 samples, 0.02%)</title><rect x="60.0915%" y="645" width="0.0161%" height="15" fill="rgb(233,147,39)" fg:x="82228" fg:w="22"/><text x="60.3415%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (22 samples, 0.02%)</title><rect x="60.0915%" y="629" width="0.0161%" height="15" fill="rgb(231,145,52)" fg:x="82228" fg:w="22"/><text x="60.3415%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (22 samples, 0.02%)</title><rect x="60.0915%" y="613" width="0.0161%" height="15" fill="rgb(206,20,26)" fg:x="82228" fg:w="22"/><text x="60.3415%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1,652 samples, 1.21%)</title><rect x="58.9069%" y="677" width="1.2073%" height="15" fill="rgb(238,220,4)" fg:x="80607" fg:w="1652"/><text x="59.1569%" y="687.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (34,774 samples, 25.41%)</title><rect x="34.7075%" y="693" width="25.4125%" height="15" fill="rgb(252,195,42)" fg:x="47493" fg:w="34774"/><text x="34.9575%" y="703.50">fastwebsockets::ReadHalf::parse_frame_hea..</text></g><g><title>fastwebsockets::frame::Payload::to_mut (70 samples, 0.05%)</title><rect x="60.3027%" y="677" width="0.0512%" height="15" fill="rgb(209,10,6)" fg:x="82517" fg:w="70"/><text x="60.5527%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (117 samples, 0.09%)</title><rect x="63.9289%" y="645" width="0.0855%" height="15" fill="rgb(229,3,52)" fg:x="87479" fg:w="117"/><text x="64.1789%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_offsets (19 samples, 0.01%)</title><rect x="64.0436%" y="629" width="0.0139%" height="15" fill="rgb(253,49,37)" fg:x="87636" fg:w="19"/><text x="64.2936%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (61 samples, 0.04%)</title><rect x="64.0144%" y="645" width="0.0446%" height="15" fill="rgb(240,103,49)" fg:x="87596" fg:w="61"/><text x="64.2644%" y="655.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (42,358 samples, 30.95%)</title><rect x="33.1297%" y="725" width="30.9549%" height="15" fill="rgb(250,182,30)" fg:x="45334" fg:w="42358"/><text x="33.3797%" y="735.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{c..</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (40,990 samples, 29.96%)</title><rect x="34.1294%" y="709" width="29.9551%" height="15" fill="rgb(248,8,30)" fg:x="46702" fg:w="40990"/><text x="34.3794%" y="719.50">fastwebsockets::ReadHalf::read_frame_inner::_{{c..</text></g><g><title>fastwebsockets::frame::Frame::unmask (5,425 samples, 3.96%)</title><rect x="60.1200%" y="693" width="3.9645%" height="15" fill="rgb(237,120,30)" fg:x="82267" fg:w="5425"/><text x="60.3700%" y="703.50">fast..</text></g><g><title>fastwebsockets::mask::unmask (5,105 samples, 3.73%)</title><rect x="60.3538%" y="677" width="3.7307%" height="15" fill="rgb(221,146,34)" fg:x="82587" fg:w="5105"/><text x="60.6038%" y="687.50">fast..</text></g><g><title>fastwebsockets::mask::unmask_fallback (5,105 samples, 3.73%)</title><rect x="60.3538%" y="661" width="3.7307%" height="15" fill="rgb(242,55,13)" fg:x="82587" fg:w="5105"/><text x="60.6038%" y="671.50">fast..</text></g><g><title>fastwebsockets::mask::unmask_easy (35 samples, 0.03%)</title><rect x="64.0590%" y="645" width="0.0256%" height="15" fill="rgb(242,112,31)" fg:x="87657" fg:w="35"/><text x="64.3090%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 0.03%)</title><rect x="64.0590%" y="629" width="0.0256%" height="15" fill="rgb(249,192,27)" fg:x="87657" fg:w="35"/><text x="64.3090%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.03%)</title><rect x="64.0590%" y="613" width="0.0256%" height="15" fill="rgb(208,204,44)" fg:x="87657" fg:w="35"/><text x="64.3090%" y="623.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.03%)</title><rect x="64.0590%" y="597" width="0.0256%" height="15" fill="rgb(208,93,54)" fg:x="87657" fg:w="35"/><text x="64.3090%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43,914 samples, 32.09%)</title><rect x="32.2440%" y="757" width="32.0920%" height="15" fill="rgb(242,1,31)" fg:x="44122" fg:w="43914"/><text x="32.4940%" y="767.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (43,914 samples, 32.09%)</title><rect x="32.2440%" y="741" width="32.0920%" height="15" fill="rgb(241,83,25)" fg:x="44122" fg:w="43914"/><text x="32.4940%" y="751.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSo..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (344 samples, 0.25%)</title><rect x="64.0845%" y="725" width="0.2514%" height="15" fill="rgb(205,169,50)" fg:x="87692" fg:w="344"/><text x="64.3345%" y="735.50"></text></g><g><title>cache_bin_dalloc_easy (134 samples, 0.10%)</title><rect x="64.8219%" y="613" width="0.0979%" height="15" fill="rgb(239,186,37)" fg:x="88701" fg:w="134"/><text x="65.0719%" y="623.50"></text></g><g><title>cache_bin_full (64 samples, 0.05%)</title><rect x="64.8731%" y="597" width="0.0468%" height="15" fill="rgb(205,221,10)" fg:x="88771" fg:w="64"/><text x="65.1231%" y="607.50"></text></g><g><title>sz_index2size (28 samples, 0.02%)</title><rect x="64.9198%" y="613" width="0.0205%" height="15" fill="rgb(218,196,15)" fg:x="88835" fg:w="28"/><text x="65.1698%" y="623.50"></text></g><g><title>sz_index2size_lookup (28 samples, 0.02%)</title><rect x="64.9198%" y="597" width="0.0205%" height="15" fill="rgb(218,196,35)" fg:x="88835" fg:w="28"/><text x="65.1698%" y="607.50"></text></g><g><title>sz_index2size_lookup_impl (28 samples, 0.02%)</title><rect x="64.9198%" y="581" width="0.0205%" height="15" fill="rgb(233,63,24)" fg:x="88835" fg:w="28"/><text x="65.1698%" y="591.50"></text></g><g><title>_rjem_sdallocx (698 samples, 0.51%)</title><rect x="64.4419%" y="645" width="0.5101%" height="15" fill="rgb(225,8,4)" fg:x="88181" fg:w="698"/><text x="64.6919%" y="655.50"></text></g><g><title>free_fastpath (698 samples, 0.51%)</title><rect x="64.4419%" y="629" width="0.5101%" height="15" fill="rgb(234,105,35)" fg:x="88181" fg:w="698"/><text x="64.6919%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (731 samples, 0.53%)</title><rect x="64.4368%" y="709" width="0.5342%" height="15" fill="rgb(236,21,32)" fg:x="88174" fg:w="731"/><text x="64.6868%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (731 samples, 0.53%)</title><rect x="64.4368%" y="693" width="0.5342%" height="15" fill="rgb(228,109,6)" fg:x="88174" fg:w="731"/><text x="64.6868%" y="703.50"></text></g><g><title>__rust_dealloc (731 samples, 0.53%)</title><rect x="64.4368%" y="677" width="0.5342%" height="15" fill="rgb(229,215,31)" fg:x="88174" fg:w="731"/><text x="64.6868%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (731 samples, 0.53%)</title><rect x="64.4368%" y="661" width="0.5342%" height="15" fill="rgb(221,52,54)" fg:x="88174" fg:w="731"/><text x="64.6868%" y="671.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (26 samples, 0.02%)</title><rect x="64.9520%" y="645" width="0.0190%" height="15" fill="rgb(252,129,43)" fg:x="88879" fg:w="26"/><text x="65.2020%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (766 samples, 0.56%)</title><rect x="64.4229%" y="725" width="0.5598%" height="15" fill="rgb(248,183,27)" fg:x="88155" fg:w="766"/><text x="64.6729%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::for_value_raw (16 samples, 0.01%)</title><rect x="64.9710%" y="709" width="0.0117%" height="15" fill="rgb(250,0,22)" fg:x="88905" fg:w="16"/><text x="65.2210%" y="719.50"></text></g><g><title>core::mem::size_of_val_raw (16 samples, 0.01%)</title><rect x="64.9710%" y="693" width="0.0117%" height="15" fill="rgb(213,166,10)" fg:x="88905" fg:w="16"/><text x="65.2210%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (896 samples, 0.65%)</title><rect x="64.3359%" y="757" width="0.6548%" height="15" fill="rgb(207,163,36)" fg:x="88036" fg:w="896"/><text x="64.5859%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (896 samples, 0.65%)</title><rect x="64.3359%" y="741" width="0.6548%" height="15" fill="rgb(208,122,22)" fg:x="88036" fg:w="896"/><text x="64.5859%" y="751.50"></text></g><g><title>cache_bin_alloc_easy (31 samples, 0.02%)</title><rect x="65.0280%" y="581" width="0.0227%" height="15" fill="rgb(207,104,49)" fg:x="88983" fg:w="31"/><text x="65.2780%" y="591.50"></text></g><g><title>cache_bin_alloc_impl (31 samples, 0.02%)</title><rect x="65.0280%" y="565" width="0.0227%" height="15" fill="rgb(248,211,50)" fg:x="88983" fg:w="31"/><text x="65.2780%" y="575.50"></text></g><g><title>__rust_alloc (68 samples, 0.05%)</title><rect x="65.0105%" y="645" width="0.0497%" height="15" fill="rgb(217,13,45)" fg:x="88959" fg:w="68"/><text x="65.2605%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (68 samples, 0.05%)</title><rect x="65.0105%" y="629" width="0.0497%" height="15" fill="rgb(211,216,49)" fg:x="88959" fg:w="68"/><text x="65.2605%" y="639.50"></text></g><g><title>_rjem_malloc (59 samples, 0.04%)</title><rect x="65.0170%" y="613" width="0.0431%" height="15" fill="rgb(221,58,53)" fg:x="88968" fg:w="59"/><text x="65.2670%" y="623.50"></text></g><g><title>imalloc_fastpath (59 samples, 0.04%)</title><rect x="65.0170%" y="597" width="0.0431%" height="15" fill="rgb(220,112,41)" fg:x="88968" fg:w="59"/><text x="65.2670%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (45,426 samples, 33.20%)</title><rect x="31.8661%" y="789" width="33.1969%" height="15" fill="rgb(236,38,28)" fg:x="43605" fg:w="45426"/><text x="32.1161%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::p..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (45,426 samples, 33.20%)</title><rect x="31.8661%" y="773" width="33.1969%" height="15" fill="rgb(227,195,22)" fg:x="43605" fg:w="45426"/><text x="32.1161%" y="783.50">&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+cor..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (99 samples, 0.07%)</title><rect x="64.9907%" y="757" width="0.0723%" height="15" fill="rgb(214,55,33)" fg:x="88932" fg:w="99"/><text x="65.2407%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (92 samples, 0.07%)</title><rect x="64.9958%" y="741" width="0.0672%" height="15" fill="rgb(248,80,13)" fg:x="88939" fg:w="92"/><text x="65.2458%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (92 samples, 0.07%)</title><rect x="64.9958%" y="725" width="0.0672%" height="15" fill="rgb(238,52,6)" fg:x="88939" fg:w="92"/><text x="65.2458%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (74 samples, 0.05%)</title><rect x="65.0090%" y="709" width="0.0541%" height="15" fill="rgb(224,198,47)" fg:x="88957" fg:w="74"/><text x="65.2590%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (72 samples, 0.05%)</title><rect x="65.0105%" y="693" width="0.0526%" height="15" fill="rgb(233,171,20)" fg:x="88959" fg:w="72"/><text x="65.2605%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (72 samples, 0.05%)</title><rect x="65.0105%" y="677" width="0.0526%" height="15" fill="rgb(241,30,25)" fg:x="88959" fg:w="72"/><text x="65.2605%" y="687.50"></text></g><g><title>alloc::alloc::alloc (72 samples, 0.05%)</title><rect x="65.0105%" y="661" width="0.0526%" height="15" fill="rgb(207,171,38)" fg:x="88959" fg:w="72"/><text x="65.2605%" y="671.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="65.0631%" y="757" width="0.0124%" height="15" fill="rgb(234,70,1)" fg:x="89031" fg:w="17"/><text x="65.3131%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (23 samples, 0.02%)</title><rect x="65.0631%" y="789" width="0.0168%" height="15" fill="rgb(232,178,18)" fg:x="89031" fg:w="23"/><text x="65.3131%" y="799.50"></text></g><g><title>core::mem::replace (23 samples, 0.02%)</title><rect x="65.0631%" y="773" width="0.0168%" height="15" fill="rgb(241,78,40)" fg:x="89031" fg:w="23"/><text x="65.3131%" y="783.50"></text></g><g><title>cache_bin_dalloc_easy (69 samples, 0.05%)</title><rect x="65.2268%" y="645" width="0.0504%" height="15" fill="rgb(222,35,25)" fg:x="89255" fg:w="69"/><text x="65.4768%" y="655.50"></text></g><g><title>_rjem_sdallocx (115 samples, 0.08%)</title><rect x="65.1990%" y="677" width="0.0840%" height="15" fill="rgb(207,92,16)" fg:x="89217" fg:w="115"/><text x="65.4490%" y="687.50"></text></g><g><title>free_fastpath (115 samples, 0.08%)</title><rect x="65.1990%" y="661" width="0.0840%" height="15" fill="rgb(216,59,51)" fg:x="89217" fg:w="115"/><text x="65.4490%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.10%)</title><rect x="65.1990%" y="741" width="0.0979%" height="15" fill="rgb(213,80,28)" fg:x="89217" fg:w="134"/><text x="65.4490%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.10%)</title><rect x="65.1990%" y="725" width="0.0979%" height="15" fill="rgb(220,93,7)" fg:x="89217" fg:w="134"/><text x="65.4490%" y="735.50"></text></g><g><title>__rust_dealloc (134 samples, 0.10%)</title><rect x="65.1990%" y="709" width="0.0979%" height="15" fill="rgb(225,24,44)" fg:x="89217" fg:w="134"/><text x="65.4490%" y="719.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (134 samples, 0.10%)</title><rect x="65.1990%" y="693" width="0.0979%" height="15" fill="rgb(243,74,40)" fg:x="89217" fg:w="134"/><text x="65.4490%" y="703.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (19 samples, 0.01%)</title><rect x="65.2830%" y="677" width="0.0139%" height="15" fill="rgb(228,39,7)" fg:x="89332" fg:w="19"/><text x="65.5330%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (152 samples, 0.11%)</title><rect x="65.1895%" y="757" width="0.1111%" height="15" fill="rgb(227,79,8)" fg:x="89204" fg:w="152"/><text x="65.4395%" y="767.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (46,436 samples, 33.94%)</title><rect x="31.3714%" y="821" width="33.9350%" height="15" fill="rgb(236,58,11)" fg:x="42928" fg:w="46436"/><text x="31.6214%" y="831.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::po..</text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (46,433 samples, 33.93%)</title><rect x="31.3736%" y="805" width="33.9328%" height="15" fill="rgb(249,63,35)" fg:x="42931" fg:w="46433"/><text x="31.6236%" y="815.50">&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::w..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (310 samples, 0.23%)</title><rect x="65.0799%" y="789" width="0.2265%" height="15" fill="rgb(252,114,16)" fg:x="89054" fg:w="310"/><text x="65.3299%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (310 samples, 0.23%)</title><rect x="65.0799%" y="773" width="0.2265%" height="15" fill="rgb(254,151,24)" fg:x="89054" fg:w="310"/><text x="65.3299%" y="783.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="65.3327%" y="789" width="0.0132%" height="15" fill="rgb(253,54,39)" fg:x="89400" fg:w="18"/><text x="65.5827%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (90 samples, 0.07%)</title><rect x="65.3488%" y="789" width="0.0658%" height="15" fill="rgb(243,25,45)" fg:x="89422" fg:w="90"/><text x="65.5988%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (90 samples, 0.07%)</title><rect x="65.3488%" y="773" width="0.0658%" height="15" fill="rgb(234,134,9)" fg:x="89422" fg:w="90"/><text x="65.5988%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 0.07%)</title><rect x="65.3488%" y="757" width="0.0658%" height="15" fill="rgb(227,166,31)" fg:x="89422" fg:w="90"/><text x="65.5988%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (89 samples, 0.07%)</title><rect x="65.3495%" y="741" width="0.0650%" height="15" fill="rgb(245,143,41)" fg:x="89423" fg:w="89"/><text x="65.5995%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (89 samples, 0.07%)</title><rect x="65.3495%" y="725" width="0.0650%" height="15" fill="rgb(238,181,32)" fg:x="89423" fg:w="89"/><text x="65.5995%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;wisp_mux::inner::WsEvent,flume::async::AsyncSignal&gt;&gt;&gt; (94 samples, 0.07%)</title><rect x="65.4146%" y="789" width="0.0687%" height="15" fill="rgb(224,113,18)" fg:x="89512" fg:w="94"/><text x="65.6646%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.07%)</title><rect x="65.4146%" y="773" width="0.0687%" height="15" fill="rgb(240,229,28)" fg:x="89512" fg:w="94"/><text x="65.6646%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (94 samples, 0.07%)</title><rect x="65.4146%" y="757" width="0.0687%" height="15" fill="rgb(250,185,3)" fg:x="89512" fg:w="94"/><text x="65.6646%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (94 samples, 0.07%)</title><rect x="65.4146%" y="741" width="0.0687%" height="15" fill="rgb(212,59,25)" fg:x="89512" fg:w="94"/><text x="65.6646%" y="751.50"></text></g><g><title>core::mem::drop (111 samples, 0.08%)</title><rect x="65.5118%" y="757" width="0.0811%" height="15" fill="rgb(221,87,20)" fg:x="89645" fg:w="111"/><text x="65.7618%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;wisp_mux::inner::WsEvent&gt;&gt;&gt; (111 samples, 0.08%)</title><rect x="65.5118%" y="741" width="0.0811%" height="15" fill="rgb(213,74,28)" fg:x="89645" fg:w="111"/><text x="65.7618%" y="751.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 samples, 0.08%)</title><rect x="65.5118%" y="725" width="0.0811%" height="15" fill="rgb(224,132,34)" fg:x="89645" fg:w="111"/><text x="65.7618%" y="735.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (108 samples, 0.08%)</title><rect x="65.5140%" y="709" width="0.0789%" height="15" fill="rgb(222,101,24)" fg:x="89648" fg:w="108"/><text x="65.7640%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (104 samples, 0.08%)</title><rect x="65.5169%" y="693" width="0.0760%" height="15" fill="rgb(254,142,4)" fg:x="89652" fg:w="104"/><text x="65.7669%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (104 samples, 0.08%)</title><rect x="65.5169%" y="677" width="0.0760%" height="15" fill="rgb(230,229,49)" fg:x="89652" fg:w="104"/><text x="65.7669%" y="687.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (20 samples, 0.01%)</title><rect x="65.5929%" y="757" width="0.0146%" height="15" fill="rgb(238,70,47)" fg:x="89756" fg:w="20"/><text x="65.8429%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (348 samples, 0.25%)</title><rect x="65.4891%" y="789" width="0.2543%" height="15" fill="rgb(231,160,17)" fg:x="89614" fg:w="348"/><text x="65.7391%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (348 samples, 0.25%)</title><rect x="65.4891%" y="773" width="0.2543%" height="15" fill="rgb(218,68,53)" fg:x="89614" fg:w="348"/><text x="65.7391%" y="783.50"></text></g><g><title>flume::wait_lock (184 samples, 0.13%)</title><rect x="65.6090%" y="757" width="0.1345%" height="15" fill="rgb(236,111,10)" fg:x="89778" fg:w="184"/><text x="65.8590%" y="767.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (183 samples, 0.13%)</title><rect x="65.6097%" y="741" width="0.1337%" height="15" fill="rgb(224,34,41)" fg:x="89779" fg:w="183"/><text x="65.8597%" y="751.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (177 samples, 0.13%)</title><rect x="65.6141%" y="725" width="0.1294%" height="15" fill="rgb(241,118,19)" fg:x="89785" fg:w="177"/><text x="65.8641%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (175 samples, 0.13%)</title><rect x="65.6155%" y="709" width="0.1279%" height="15" fill="rgb(238,129,25)" fg:x="89787" fg:w="175"/><text x="65.8655%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (175 samples, 0.13%)</title><rect x="65.6155%" y="693" width="0.1279%" height="15" fill="rgb(238,22,31)" fg:x="89787" fg:w="175"/><text x="65.8655%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (20 samples, 0.01%)</title><rect x="65.7478%" y="773" width="0.0146%" height="15" fill="rgb(222,174,48)" fg:x="89968" fg:w="20"/><text x="65.9978%" y="783.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (746 samples, 0.55%)</title><rect x="65.3064%" y="821" width="0.5452%" height="15" fill="rgb(206,152,40)" fg:x="89364" fg:w="746"/><text x="65.5564%" y="831.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (746 samples, 0.55%)</title><rect x="65.3064%" y="805" width="0.5452%" height="15" fill="rgb(218,99,54)" fg:x="89364" fg:w="746"/><text x="65.5564%" y="815.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (148 samples, 0.11%)</title><rect x="65.7434%" y="789" width="0.1082%" height="15" fill="rgb(220,174,26)" fg:x="89962" fg:w="148"/><text x="65.9934%" y="799.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (111 samples, 0.08%)</title><rect x="65.7705%" y="773" width="0.0811%" height="15" fill="rgb(245,116,9)" fg:x="89999" fg:w="111"/><text x="66.0205%" y="783.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (111 samples, 0.08%)</title><rect x="65.7705%" y="757" width="0.0811%" height="15" fill="rgb(209,72,35)" fg:x="89999" fg:w="111"/><text x="66.0205%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (105 samples, 0.08%)</title><rect x="65.7749%" y="741" width="0.0767%" height="15" fill="rgb(226,126,21)" fg:x="90005" fg:w="105"/><text x="66.0249%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (105 samples, 0.08%)</title><rect x="65.7749%" y="725" width="0.0767%" height="15" fill="rgb(227,192,1)" fg:x="90005" fg:w="105"/><text x="66.0249%" y="735.50"></text></g><g><title>cache_bin_dalloc_easy (63 samples, 0.05%)</title><rect x="66.1329%" y="613" width="0.0460%" height="15" fill="rgb(237,180,29)" fg:x="90495" fg:w="63"/><text x="66.3829%" y="623.50"></text></g><g><title>_rjem_sdallocx (115 samples, 0.08%)</title><rect x="66.1030%" y="645" width="0.0840%" height="15" fill="rgb(230,197,35)" fg:x="90454" fg:w="115"/><text x="66.3530%" y="655.50"></text></g><g><title>free_fastpath (115 samples, 0.08%)</title><rect x="66.1030%" y="629" width="0.0840%" height="15" fill="rgb(246,193,31)" fg:x="90454" fg:w="115"/><text x="66.3530%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (144 samples, 0.11%)</title><rect x="66.0979%" y="709" width="0.1052%" height="15" fill="rgb(241,36,4)" fg:x="90447" fg:w="144"/><text x="66.3479%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (144 samples, 0.11%)</title><rect x="66.0979%" y="693" width="0.1052%" height="15" fill="rgb(241,130,17)" fg:x="90447" fg:w="144"/><text x="66.3479%" y="703.50"></text></g><g><title>__rust_dealloc (144 samples, 0.11%)</title><rect x="66.0979%" y="677" width="0.1052%" height="15" fill="rgb(206,137,32)" fg:x="90447" fg:w="144"/><text x="66.3479%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (144 samples, 0.11%)</title><rect x="66.0979%" y="661" width="0.1052%" height="15" fill="rgb(237,228,51)" fg:x="90447" fg:w="144"/><text x="66.3479%" y="671.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (22 samples, 0.02%)</title><rect x="66.1870%" y="645" width="0.0161%" height="15" fill="rgb(243,6,42)" fg:x="90569" fg:w="22"/><text x="66.4370%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (168 samples, 0.12%)</title><rect x="66.0898%" y="725" width="0.1228%" height="15" fill="rgb(251,74,28)" fg:x="90436" fg:w="168"/><text x="66.3398%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (47,960 samples, 35.05%)</title><rect x="31.1682%" y="901" width="35.0487%" height="15" fill="rgb(218,20,49)" fg:x="42650" fg:w="47960"/><text x="31.4182%" y="911.50">core::ops::function::impls::&lt;impl core::ops::function::Fn..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (47,957 samples, 35.05%)</title><rect x="31.1704%" y="885" width="35.0466%" height="15" fill="rgb(238,28,14)" fg:x="42653" fg:w="47957"/><text x="31.4204%" y="895.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (47,684 samples, 34.85%)</title><rect x="31.3699%" y="869" width="34.8470%" height="15" fill="rgb(229,40,46)" fg:x="42926" fg:w="47684"/><text x="31.6199%" y="879.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (47,684 samples, 34.85%)</title><rect x="31.3699%" y="853" width="34.8470%" height="15" fill="rgb(244,195,20)" fg:x="42926" fg:w="47684"/><text x="31.6199%" y="863.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (47,684 samples, 34.85%)</title><rect x="31.3699%" y="837" width="34.8470%" height="15" fill="rgb(253,56,35)" fg:x="42926" fg:w="47684"/><text x="31.6199%" y="847.50">&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::f..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (500 samples, 0.37%)</title><rect x="65.8516%" y="821" width="0.3654%" height="15" fill="rgb(210,149,44)" fg:x="90110" fg:w="500"/><text x="66.1016%" y="831.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (235 samples, 0.17%)</title><rect x="66.0453%" y="805" width="0.1717%" height="15" fill="rgb(240,135,12)" fg:x="90375" fg:w="235"/><text x="66.2953%" y="815.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (235 samples, 0.17%)</title><rect x="66.0453%" y="789" width="0.1717%" height="15" fill="rgb(251,24,50)" fg:x="90375" fg:w="235"/><text x="66.2953%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt;&gt; (230 samples, 0.17%)</title><rect x="66.0489%" y="773" width="0.1681%" height="15" fill="rgb(243,200,47)" fg:x="90380" fg:w="230"/><text x="66.2989%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (230 samples, 0.17%)</title><rect x="66.0489%" y="757" width="0.1681%" height="15" fill="rgb(224,166,26)" fg:x="90380" fg:w="230"/><text x="66.2989%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (230 samples, 0.17%)</title><rect x="66.0489%" y="741" width="0.1681%" height="15" fill="rgb(233,0,47)" fg:x="90380" fg:w="230"/><text x="66.2989%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (162 samples, 0.12%)</title><rect x="66.2170%" y="885" width="0.1184%" height="15" fill="rgb(253,80,5)" fg:x="90610" fg:w="162"/><text x="66.4670%" y="895.50"></text></g><g><title>core::ptr::swap (160 samples, 0.12%)</title><rect x="66.2184%" y="869" width="0.1169%" height="15" fill="rgb(214,133,25)" fg:x="90612" fg:w="160"/><text x="66.4684%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (158 samples, 0.12%)</title><rect x="66.2199%" y="853" width="0.1155%" height="15" fill="rgb(209,27,14)" fg:x="90614" fg:w="158"/><text x="66.4699%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (35 samples, 0.03%)</title><rect x="66.3361%" y="821" width="0.0256%" height="15" fill="rgb(219,102,51)" fg:x="90773" fg:w="35"/><text x="66.5861%" y="831.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (35 samples, 0.03%)</title><rect x="66.3361%" y="805" width="0.0256%" height="15" fill="rgb(237,18,16)" fg:x="90773" fg:w="35"/><text x="66.5861%" y="815.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (35 samples, 0.03%)</title><rect x="66.3361%" y="789" width="0.0256%" height="15" fill="rgb(241,85,17)" fg:x="90773" fg:w="35"/><text x="66.5861%" y="799.50"></text></g><g><title>&lt;core::num::wrapping::Wrapping&lt;u64&gt; as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (14 samples, 0.01%)</title><rect x="66.3741%" y="805" width="0.0102%" height="15" fill="rgb(236,90,42)" fg:x="90825" fg:w="14"/><text x="66.6241%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_shr (14 samples, 0.01%)</title><rect x="66.3741%" y="789" width="0.0102%" height="15" fill="rgb(249,57,21)" fg:x="90825" fg:w="14"/><text x="66.6241%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::unchecked_shr (14 samples, 0.01%)</title><rect x="66.3741%" y="773" width="0.0102%" height="15" fill="rgb(243,12,36)" fg:x="90825" fg:w="14"/><text x="66.6241%" y="783.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (48,654 samples, 35.56%)</title><rect x="30.8321%" y="933" width="35.5559%" height="15" fill="rgb(253,128,47)" fg:x="42190" fg:w="48654"/><text x="31.0821%" y="943.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future:..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (48,654 samples, 35.56%)</title><rect x="30.8321%" y="917" width="35.5559%" height="15" fill="rgb(207,33,20)" fg:x="42190" fg:w="48654"/><text x="31.0821%" y="927.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_..</text></g><g><title>futures_util::async_await::random::shuffle (234 samples, 0.17%)</title><rect x="66.2170%" y="901" width="0.1710%" height="15" fill="rgb(233,215,35)" fg:x="90610" fg:w="234"/><text x="66.4670%" y="911.50"></text></g><g><title>futures_util::async_await::random::gen_index (72 samples, 0.05%)</title><rect x="66.3354%" y="885" width="0.0526%" height="15" fill="rgb(249,188,52)" fg:x="90772" fg:w="72"/><text x="66.5854%" y="895.50"></text></g><g><title>futures_util::async_await::random::random (71 samples, 0.05%)</title><rect x="66.3361%" y="869" width="0.0519%" height="15" fill="rgb(225,12,32)" fg:x="90773" fg:w="71"/><text x="66.5861%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (71 samples, 0.05%)</title><rect x="66.3361%" y="853" width="0.0519%" height="15" fill="rgb(247,98,14)" fg:x="90773" fg:w="71"/><text x="66.5861%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (71 samples, 0.05%)</title><rect x="66.3361%" y="837" width="0.0519%" height="15" fill="rgb(247,219,48)" fg:x="90773" fg:w="71"/><text x="66.5861%" y="847.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (36 samples, 0.03%)</title><rect x="66.3617%" y="821" width="0.0263%" height="15" fill="rgb(253,60,48)" fg:x="90808" fg:w="36"/><text x="66.6117%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (33 samples, 0.02%)</title><rect x="66.4289%" y="757" width="0.0241%" height="15" fill="rgb(245,15,52)" fg:x="90900" fg:w="33"/><text x="66.6789%" y="767.50"></text></g><g><title>cache_bin_alloc_impl (33 samples, 0.02%)</title><rect x="66.4289%" y="741" width="0.0241%" height="15" fill="rgb(220,133,28)" fg:x="90900" fg:w="33"/><text x="66.6789%" y="751.50"></text></g><g><title>__rust_alloc (84 samples, 0.06%)</title><rect x="66.4041%" y="821" width="0.0614%" height="15" fill="rgb(217,180,4)" fg:x="90866" fg:w="84"/><text x="66.6541%" y="831.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (84 samples, 0.06%)</title><rect x="66.4041%" y="805" width="0.0614%" height="15" fill="rgb(251,24,1)" fg:x="90866" fg:w="84"/><text x="66.6541%" y="815.50"></text></g><g><title>_rjem_malloc (76 samples, 0.06%)</title><rect x="66.4099%" y="789" width="0.0555%" height="15" fill="rgb(212,185,49)" fg:x="90874" fg:w="76"/><text x="66.6599%" y="799.50"></text></g><g><title>imalloc_fastpath (75 samples, 0.05%)</title><rect x="66.4106%" y="773" width="0.0548%" height="15" fill="rgb(215,175,22)" fg:x="90875" fg:w="75"/><text x="66.6606%" y="783.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (109 samples, 0.08%)</title><rect x="66.3880%" y="933" width="0.0797%" height="15" fill="rgb(250,205,14)" fg:x="90844" fg:w="109"/><text x="66.6380%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (109 samples, 0.08%)</title><rect x="66.3880%" y="917" width="0.0797%" height="15" fill="rgb(225,211,22)" fg:x="90844" fg:w="109"/><text x="66.6380%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (109 samples, 0.08%)</title><rect x="66.3880%" y="901" width="0.0797%" height="15" fill="rgb(251,179,42)" fg:x="90844" fg:w="109"/><text x="66.6380%" y="911.50"></text></g><g><title>alloc::alloc::exchange_malloc (95 samples, 0.07%)</title><rect x="66.3982%" y="885" width="0.0694%" height="15" fill="rgb(208,216,51)" fg:x="90858" fg:w="95"/><text x="66.6482%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.06%)</title><rect x="66.4041%" y="869" width="0.0636%" height="15" fill="rgb(235,36,11)" fg:x="90866" fg:w="87"/><text x="66.6541%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.06%)</title><rect x="66.4041%" y="853" width="0.0636%" height="15" fill="rgb(213,189,28)" fg:x="90866" fg:w="87"/><text x="66.6541%" y="863.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.06%)</title><rect x="66.4041%" y="837" width="0.0636%" height="15" fill="rgb(227,203,42)" fg:x="90866" fg:w="87"/><text x="66.6541%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::process_wisp_message::{{closure}}&gt; (19 samples, 0.01%)</title><rect x="66.4698%" y="933" width="0.0139%" height="15" fill="rgb(244,72,36)" fg:x="90956" fg:w="19"/><text x="66.7198%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="66.4837%" y="933" width="0.0168%" height="15" fill="rgb(213,53,17)" fg:x="90975" fg:w="23"/><text x="66.7337%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (22 samples, 0.02%)</title><rect x="67.0274%" y="917" width="0.0161%" height="15" fill="rgb(207,167,3)" fg:x="91719" fg:w="22"/><text x="67.2774%" y="927.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="67.0464%" y="917" width="0.0117%" height="15" fill="rgb(216,98,30)" fg:x="91745" fg:w="16"/><text x="67.2964%" y="927.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (25 samples, 0.02%)</title><rect x="67.4213%" y="901" width="0.0183%" height="15" fill="rgb(236,123,15)" fg:x="92258" fg:w="25"/><text x="67.6713%" y="911.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (17 samples, 0.01%)</title><rect x="67.4652%" y="885" width="0.0124%" height="15" fill="rgb(248,81,50)" fg:x="92318" fg:w="17"/><text x="67.7152%" y="895.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (17 samples, 0.01%)</title><rect x="67.4652%" y="869" width="0.0124%" height="15" fill="rgb(214,120,4)" fg:x="92318" fg:w="17"/><text x="67.7152%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (25 samples, 0.02%)</title><rect x="67.4886%" y="853" width="0.0183%" height="15" fill="rgb(208,179,34)" fg:x="92350" fg:w="25"/><text x="67.7386%" y="863.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (41 samples, 0.03%)</title><rect x="67.4776%" y="885" width="0.0300%" height="15" fill="rgb(227,140,7)" fg:x="92335" fg:w="41"/><text x="67.7276%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (34 samples, 0.02%)</title><rect x="67.4827%" y="869" width="0.0248%" height="15" fill="rgb(214,22,6)" fg:x="92342" fg:w="34"/><text x="67.7327%" y="879.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (101 samples, 0.07%)</title><rect x="67.4396%" y="901" width="0.0738%" height="15" fill="rgb(207,137,27)" fg:x="92283" fg:w="101"/><text x="67.6896%" y="911.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (17 samples, 0.01%)</title><rect x="67.5624%" y="837" width="0.0124%" height="15" fill="rgb(210,8,46)" fg:x="92451" fg:w="17"/><text x="67.8124%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (56 samples, 0.04%)</title><rect x="67.5441%" y="853" width="0.0409%" height="15" fill="rgb(240,16,54)" fg:x="92426" fg:w="56"/><text x="67.7941%" y="863.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (101 samples, 0.07%)</title><rect x="67.5134%" y="901" width="0.0738%" height="15" fill="rgb(211,209,29)" fg:x="92384" fg:w="101"/><text x="67.7634%" y="911.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (72 samples, 0.05%)</title><rect x="67.5346%" y="885" width="0.0526%" height="15" fill="rgb(226,228,24)" fg:x="92413" fg:w="72"/><text x="67.7846%" y="895.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (66 samples, 0.05%)</title><rect x="67.5390%" y="869" width="0.0482%" height="15" fill="rgb(222,84,9)" fg:x="92419" fg:w="66"/><text x="67.7890%" y="879.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (1,488 samples, 1.09%)</title><rect x="66.5005%" y="933" width="1.0874%" height="15" fill="rgb(234,203,30)" fg:x="90998" fg:w="1488"/><text x="66.7505%" y="943.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (725 samples, 0.53%)</title><rect x="67.0581%" y="917" width="0.5298%" height="15" fill="rgb(238,109,14)" fg:x="91761" fg:w="725"/><text x="67.3081%" y="927.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::server_handle_packet (19 samples, 0.01%)</title><rect x="67.5880%" y="933" width="0.0139%" height="15" fill="rgb(233,206,34)" fg:x="92486" fg:w="19"/><text x="67.8380%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.01%)</title><rect x="68.2179%" y="901" width="0.0146%" height="15" fill="rgb(220,167,47)" fg:x="93348" fg:w="20"/><text x="68.4679%" y="911.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (20 samples, 0.01%)</title><rect x="68.2179%" y="885" width="0.0146%" height="15" fill="rgb(238,105,10)" fg:x="93348" fg:w="20"/><text x="68.4679%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::freeze (17 samples, 0.01%)</title><rect x="68.2354%" y="901" width="0.0124%" height="15" fill="rgb(213,227,17)" fg:x="93372" fg:w="17"/><text x="68.4854%" y="911.50"></text></g><g><title>cache_bin_dalloc_easy (34 samples, 0.02%)</title><rect x="68.2807%" y="837" width="0.0248%" height="15" fill="rgb(217,132,38)" fg:x="93434" fg:w="34"/><text x="68.5307%" y="847.50"></text></g><g><title>cache_bin_full (15 samples, 0.01%)</title><rect x="68.2946%" y="821" width="0.0110%" height="15" fill="rgb(242,146,4)" fg:x="93453" fg:w="15"/><text x="68.5446%" y="831.50"></text></g><g><title>_rjem_sdallocx (63 samples, 0.05%)</title><rect x="68.2669%" y="869" width="0.0460%" height="15" fill="rgb(212,61,9)" fg:x="93415" fg:w="63"/><text x="68.5169%" y="879.50"></text></g><g><title>free_fastpath (63 samples, 0.05%)</title><rect x="68.2669%" y="853" width="0.0460%" height="15" fill="rgb(247,126,22)" fg:x="93415" fg:w="63"/><text x="68.5169%" y="863.50"></text></g><g><title>inallocx (82 samples, 0.06%)</title><rect x="68.3604%" y="661" width="0.0599%" height="15" fill="rgb(220,196,2)" fg:x="93543" fg:w="82"/><text x="68.6104%" y="671.50"></text></g><g><title>aligned_usize_get (67 samples, 0.05%)</title><rect x="68.3714%" y="645" width="0.0490%" height="15" fill="rgb(208,46,4)" fg:x="93558" fg:w="67"/><text x="68.6214%" y="655.50"></text></g><g><title>sz_s2u (62 samples, 0.05%)</title><rect x="68.3750%" y="629" width="0.0453%" height="15" fill="rgb(252,104,46)" fg:x="93563" fg:w="62"/><text x="68.6250%" y="639.50"></text></g><g><title>sz_s2u_compute (55 samples, 0.04%)</title><rect x="68.3801%" y="613" width="0.0402%" height="15" fill="rgb(237,152,48)" fg:x="93570" fg:w="55"/><text x="68.6301%" y="623.50"></text></g><g><title>arena_dalloc_large (29 samples, 0.02%)</title><rect x="68.4247%" y="613" width="0.0212%" height="15" fill="rgb(221,59,37)" fg:x="93631" fg:w="29"/><text x="68.6747%" y="623.50"></text></g><g><title>tcache_dalloc_large (28 samples, 0.02%)</title><rect x="68.4254%" y="597" width="0.0205%" height="15" fill="rgb(209,202,51)" fg:x="93632" fg:w="28"/><text x="68.6754%" y="607.50"></text></g><g><title>cache_bin_dalloc_easy (28 samples, 0.02%)</title><rect x="68.4254%" y="581" width="0.0205%" height="15" fill="rgb(228,81,30)" fg:x="93632" fg:w="28"/><text x="68.6754%" y="591.50"></text></g><g><title>isdalloct (116 samples, 0.08%)</title><rect x="68.4203%" y="645" width="0.0848%" height="15" fill="rgb(227,42,39)" fg:x="93625" fg:w="116"/><text x="68.6703%" y="655.50"></text></g><g><title>arena_sdalloc (116 samples, 0.08%)</title><rect x="68.4203%" y="629" width="0.0848%" height="15" fill="rgb(221,26,2)" fg:x="93625" fg:w="116"/><text x="68.6703%" y="639.50"></text></g><g><title>tcache_dalloc_small (81 samples, 0.06%)</title><rect x="68.4459%" y="613" width="0.0592%" height="15" fill="rgb(254,61,31)" fg:x="93660" fg:w="81"/><text x="68.6959%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (81 samples, 0.06%)</title><rect x="68.4459%" y="597" width="0.0592%" height="15" fill="rgb(222,173,38)" fg:x="93660" fg:w="81"/><text x="68.6959%" y="607.50"></text></g><g><title>cache_bin_full (69 samples, 0.05%)</title><rect x="68.4547%" y="581" width="0.0504%" height="15" fill="rgb(218,50,12)" fg:x="93672" fg:w="69"/><text x="68.7047%" y="591.50"></text></g><g><title>sz_size2index (46 samples, 0.03%)</title><rect x="68.5051%" y="645" width="0.0336%" height="15" fill="rgb(223,88,40)" fg:x="93741" fg:w="46"/><text x="68.7551%" y="655.50"></text></g><g><title>sz_size2index_compute (44 samples, 0.03%)</title><rect x="68.5066%" y="629" width="0.0322%" height="15" fill="rgb(237,54,19)" fg:x="93743" fg:w="44"/><text x="68.7566%" y="639.50"></text></g><g><title>_rjem_je_peak_dalloc_event_handler (18 samples, 0.01%)</title><rect x="68.5657%" y="613" width="0.0132%" height="15" fill="rgb(251,129,25)" fg:x="93824" fg:w="18"/><text x="68.8157%" y="623.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (18 samples, 0.01%)</title><rect x="68.6147%" y="597" width="0.0132%" height="15" fill="rgb(238,97,19)" fg:x="93891" fg:w="18"/><text x="68.8647%" y="607.50"></text></g><g><title>extent_try_coalesce_large (27 samples, 0.02%)</title><rect x="68.6973%" y="469" width="0.0197%" height="15" fill="rgb(240,169,18)" fg:x="94004" fg:w="27"/><text x="68.9473%" y="479.50"></text></g><g><title>extent_try_coalesce_impl (27 samples, 0.02%)</title><rect x="68.6973%" y="453" width="0.0197%" height="15" fill="rgb(230,187,49)" fg:x="94004" fg:w="27"/><text x="68.9473%" y="463.50"></text></g><g><title>extent_coalesce (20 samples, 0.01%)</title><rect x="68.7024%" y="437" width="0.0146%" height="15" fill="rgb(209,44,26)" fg:x="94011" fg:w="20"/><text x="68.9524%" y="447.50"></text></g><g><title>extent_merge_impl (14 samples, 0.01%)</title><rect x="68.7068%" y="421" width="0.0102%" height="15" fill="rgb(244,0,6)" fg:x="94017" fg:w="14"/><text x="68.9568%" y="431.50"></text></g><g><title>_rjem_je_large_dalloc_finish (45 samples, 0.03%)</title><rect x="68.6856%" y="533" width="0.0329%" height="15" fill="rgb(248,18,21)" fg:x="93988" fg:w="45"/><text x="68.9356%" y="543.50"></text></g><g><title>large_dalloc_finish_impl (45 samples, 0.03%)</title><rect x="68.6856%" y="517" width="0.0329%" height="15" fill="rgb(245,180,19)" fg:x="93988" fg:w="45"/><text x="68.9356%" y="527.50"></text></g><g><title>pac_dalloc_impl (44 samples, 0.03%)</title><rect x="68.6863%" y="501" width="0.0322%" height="15" fill="rgb(252,118,36)" fg:x="93989" fg:w="44"/><text x="68.9363%" y="511.50"></text></g><g><title>_rjem_je_extent_record (41 samples, 0.03%)</title><rect x="68.6885%" y="485" width="0.0300%" height="15" fill="rgb(210,224,19)" fg:x="93992" fg:w="41"/><text x="68.9385%" y="495.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (70 samples, 0.05%)</title><rect x="68.6790%" y="581" width="0.0512%" height="15" fill="rgb(218,30,24)" fg:x="93979" fg:w="70"/><text x="68.9290%" y="591.50"></text></g><g><title>tcache_bin_flush_bottom (70 samples, 0.05%)</title><rect x="68.6790%" y="565" width="0.0512%" height="15" fill="rgb(219,75,50)" fg:x="93979" fg:w="70"/><text x="68.9290%" y="575.50"></text></g><g><title>tcache_bin_flush_impl (69 samples, 0.05%)</title><rect x="68.6798%" y="549" width="0.0504%" height="15" fill="rgb(234,72,50)" fg:x="93980" fg:w="69"/><text x="68.9298%" y="559.50"></text></g><g><title>cache_bin_ncached_get_local (17 samples, 0.01%)</title><rect x="68.7375%" y="565" width="0.0124%" height="15" fill="rgb(219,100,48)" fg:x="94059" fg:w="17"/><text x="68.9875%" y="575.50"></text></g><g><title>cache_bin_ncached_get_internal (17 samples, 0.01%)</title><rect x="68.7375%" y="549" width="0.0124%" height="15" fill="rgb(253,5,41)" fg:x="94059" fg:w="17"/><text x="68.9875%" y="559.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (50 samples, 0.04%)</title><rect x="68.7302%" y="581" width="0.0365%" height="15" fill="rgb(247,181,11)" fg:x="94049" fg:w="50"/><text x="68.9802%" y="591.50"></text></g><g><title>cache_bin_nstashed_get_local (23 samples, 0.02%)</title><rect x="68.7499%" y="565" width="0.0168%" height="15" fill="rgb(222,223,25)" fg:x="94076" fg:w="23"/><text x="68.9999%" y="575.50"></text></g><g><title>cache_bin_nstashed_get_internal (23 samples, 0.02%)</title><rect x="68.7499%" y="549" width="0.0168%" height="15" fill="rgb(214,198,28)" fg:x="94076" fg:w="23"/><text x="68.9999%" y="559.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (21 samples, 0.02%)</title><rect x="68.7514%" y="533" width="0.0153%" height="15" fill="rgb(230,46,43)" fg:x="94078" fg:w="21"/><text x="69.0014%" y="543.50"></text></g><g><title>cache_bin_finish_flush (14 samples, 0.01%)</title><rect x="68.7682%" y="533" width="0.0102%" height="15" fill="rgb(233,65,53)" fg:x="94101" fg:w="14"/><text x="69.0182%" y="543.50"></text></g><g><title>extent_deactivate_locked (20 samples, 0.01%)</title><rect x="68.8054%" y="469" width="0.0146%" height="15" fill="rgb(221,121,27)" fg:x="94152" fg:w="20"/><text x="69.0554%" y="479.50"></text></g><g><title>extent_deactivate_locked_impl (20 samples, 0.01%)</title><rect x="68.8054%" y="453" width="0.0146%" height="15" fill="rgb(247,70,47)" fg:x="94152" fg:w="20"/><text x="69.0554%" y="463.50"></text></g><g><title>_rjem_je_eset_insert (15 samples, 0.01%)</title><rect x="68.8091%" y="437" width="0.0110%" height="15" fill="rgb(228,85,35)" fg:x="94157" fg:w="15"/><text x="69.0591%" y="447.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (16 samples, 0.01%)</title><rect x="68.8215%" y="437" width="0.0117%" height="15" fill="rgb(209,50,18)" fg:x="94174" fg:w="16"/><text x="69.0715%" y="447.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (14 samples, 0.01%)</title><rect x="68.8230%" y="421" width="0.0102%" height="15" fill="rgb(250,19,35)" fg:x="94176" fg:w="14"/><text x="69.0730%" y="431.50"></text></g><g><title>_rjem_je_edata_cache_put (16 samples, 0.01%)</title><rect x="68.8442%" y="389" width="0.0117%" height="15" fill="rgb(253,107,29)" fg:x="94205" fg:w="16"/><text x="69.0942%" y="399.50"></text></g><g><title>extent_try_coalesce_large (53 samples, 0.04%)</title><rect x="68.8201%" y="469" width="0.0387%" height="15" fill="rgb(252,179,29)" fg:x="94172" fg:w="53"/><text x="69.0701%" y="479.50"></text></g><g><title>extent_try_coalesce_impl (53 samples, 0.04%)</title><rect x="68.8201%" y="453" width="0.0387%" height="15" fill="rgb(238,194,6)" fg:x="94172" fg:w="53"/><text x="69.0701%" y="463.50"></text></g><g><title>extent_coalesce (35 samples, 0.03%)</title><rect x="68.8332%" y="437" width="0.0256%" height="15" fill="rgb(238,164,29)" fg:x="94190" fg:w="35"/><text x="69.0832%" y="447.50"></text></g><g><title>extent_merge_impl (31 samples, 0.02%)</title><rect x="68.8361%" y="421" width="0.0227%" height="15" fill="rgb(224,25,9)" fg:x="94194" fg:w="31"/><text x="69.0861%" y="431.50"></text></g><g><title>extent_merge_impl (27 samples, 0.02%)</title><rect x="68.8391%" y="405" width="0.0197%" height="15" fill="rgb(244,153,23)" fg:x="94198" fg:w="27"/><text x="69.0891%" y="415.50"></text></g><g><title>_rjem_je_extent_record (80 samples, 0.06%)</title><rect x="68.8047%" y="485" width="0.0585%" height="15" fill="rgb(212,203,14)" fg:x="94151" fg:w="80"/><text x="69.0547%" y="495.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (108 samples, 0.08%)</title><rect x="68.7872%" y="517" width="0.0789%" height="15" fill="rgb(220,164,20)" fg:x="94127" fg:w="108"/><text x="69.0372%" y="527.50"></text></g><g><title>pac_dalloc_impl (91 samples, 0.07%)</title><rect x="68.7996%" y="501" width="0.0665%" height="15" fill="rgb(222,203,48)" fg:x="94144" fg:w="91"/><text x="69.0496%" y="511.50"></text></g><g><title>arena_dalloc_bin_locked_step (27 samples, 0.02%)</title><rect x="68.8661%" y="517" width="0.0197%" height="15" fill="rgb(215,159,22)" fg:x="94235" fg:w="27"/><text x="69.1161%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (31 samples, 0.02%)</title><rect x="68.8990%" y="501" width="0.0227%" height="15" fill="rgb(216,183,47)" fg:x="94280" fg:w="31"/><text x="69.1490%" y="511.50"></text></g><g><title>pthread_mutex_trylock (31 samples, 0.02%)</title><rect x="68.8990%" y="485" width="0.0227%" height="15" fill="rgb(229,195,25)" fg:x="94280" fg:w="31"/><text x="69.1490%" y="495.50"></text></g><g><title>malloc_mutex_lock (32 samples, 0.02%)</title><rect x="68.8990%" y="517" width="0.0234%" height="15" fill="rgb(224,132,51)" fg:x="94280" fg:w="32"/><text x="69.1490%" y="527.50"></text></g><g><title>rtree_leaf_elm_read (29 samples, 0.02%)</title><rect x="68.9392%" y="485" width="0.0212%" height="15" fill="rgb(240,63,7)" fg:x="94335" fg:w="29"/><text x="69.1892%" y="495.50"></text></g><g><title>rtree_leaf_elm_bits_read (29 samples, 0.02%)</title><rect x="68.9392%" y="469" width="0.0212%" height="15" fill="rgb(249,182,41)" fg:x="94335" fg:w="29"/><text x="69.1892%" y="479.50"></text></g><g><title>atomic_load_p (29 samples, 0.02%)</title><rect x="68.9392%" y="453" width="0.0212%" height="15" fill="rgb(243,47,26)" fg:x="94335" fg:w="29"/><text x="69.1892%" y="463.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (48 samples, 0.04%)</title><rect x="68.9282%" y="517" width="0.0351%" height="15" fill="rgb(233,48,2)" fg:x="94320" fg:w="48"/><text x="69.1782%" y="527.50"></text></g><g><title>emap_edata_lookup_batch (48 samples, 0.04%)</title><rect x="68.9282%" y="501" width="0.0351%" height="15" fill="rgb(244,165,34)" fg:x="94320" fg:w="48"/><text x="69.1782%" y="511.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (459 samples, 0.34%)</title><rect x="68.6293%" y="597" width="0.3354%" height="15" fill="rgb(207,89,7)" fg:x="93911" fg:w="459"/><text x="68.8793%" y="607.50"></text></g><g><title>tcache_gc_small (271 samples, 0.20%)</title><rect x="68.7667%" y="581" width="0.1980%" height="15" fill="rgb(244,117,36)" fg:x="94099" fg:w="271"/><text x="69.0167%" y="591.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (271 samples, 0.20%)</title><rect x="68.7667%" y="565" width="0.1980%" height="15" fill="rgb(226,144,34)" fg:x="94099" fg:w="271"/><text x="69.0167%" y="575.50"></text></g><g><title>tcache_bin_flush_bottom (270 samples, 0.20%)</title><rect x="68.7674%" y="549" width="0.1973%" height="15" fill="rgb(213,23,19)" fg:x="94100" fg:w="270"/><text x="69.0174%" y="559.50"></text></g><g><title>tcache_bin_flush_impl (255 samples, 0.19%)</title><rect x="68.7784%" y="533" width="0.1864%" height="15" fill="rgb(217,75,12)" fg:x="94115" fg:w="255"/><text x="69.0284%" y="543.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_new_event_wait (17 samples, 0.01%)</title><rect x="68.9648%" y="597" width="0.0124%" height="15" fill="rgb(224,159,17)" fg:x="94370" fg:w="17"/><text x="69.2148%" y="607.50"></text></g><g><title>atomic_fence (30 samples, 0.02%)</title><rect x="68.9998%" y="533" width="0.0219%" height="15" fill="rgb(217,118,1)" fg:x="94418" fg:w="30"/><text x="69.2498%" y="543.50"></text></g><g><title>te_adjust_thresholds_helper (47 samples, 0.03%)</title><rect x="68.9925%" y="597" width="0.0343%" height="15" fill="rgb(232,180,48)" fg:x="94408" fg:w="47"/><text x="69.2425%" y="607.50"></text></g><g><title>te_ctx_next_event_set (42 samples, 0.03%)</title><rect x="68.9962%" y="581" width="0.0307%" height="15" fill="rgb(230,27,33)" fg:x="94413" fg:w="42"/><text x="69.2462%" y="591.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (39 samples, 0.03%)</title><rect x="68.9984%" y="565" width="0.0285%" height="15" fill="rgb(205,31,21)" fg:x="94416" fg:w="39"/><text x="69.2484%" y="575.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (39 samples, 0.03%)</title><rect x="68.9984%" y="549" width="0.0285%" height="15" fill="rgb(253,59,4)" fg:x="94416" fg:w="39"/><text x="69.2484%" y="559.50"></text></g><g><title>_rjem_je_te_event_trigger (621 samples, 0.45%)</title><rect x="68.5789%" y="613" width="0.4538%" height="15" fill="rgb(224,201,9)" fg:x="93842" fg:w="621"/><text x="68.8289%" y="623.50"></text></g><g><title>isfree (862 samples, 0.63%)</title><rect x="68.4203%" y="661" width="0.6299%" height="15" fill="rgb(229,206,30)" fg:x="93625" fg:w="862"/><text x="68.6703%" y="671.50"></text></g><g><title>thread_dalloc_event (700 samples, 0.51%)</title><rect x="68.5387%" y="645" width="0.5116%" height="15" fill="rgb(212,67,47)" fg:x="93787" fg:w="700"/><text x="68.7887%" y="655.50"></text></g><g><title>te_event_advance (700 samples, 0.51%)</title><rect x="68.5387%" y="629" width="0.5116%" height="15" fill="rgb(211,96,50)" fg:x="93787" fg:w="700"/><text x="68.7887%" y="639.50"></text></g><g><title>te_ctx_get (23 samples, 0.02%)</title><rect x="69.0335%" y="613" width="0.0168%" height="15" fill="rgb(252,114,18)" fg:x="94464" fg:w="23"/><text x="69.2835%" y="623.50"></text></g><g><title>_rjem_je_sdallocx_default (1,022 samples, 0.75%)</title><rect x="68.3312%" y="677" width="0.7469%" height="15" fill="rgb(223,58,37)" fg:x="93503" fg:w="1022"/><text x="68.5812%" y="687.50"></text></g><g><title>tsd_fetch_min (24 samples, 0.02%)</title><rect x="69.0605%" y="661" width="0.0175%" height="15" fill="rgb(237,70,4)" fg:x="94501" fg:w="24"/><text x="69.3105%" y="671.50"></text></g><g><title>tsd_fetch_impl (24 samples, 0.02%)</title><rect x="69.0605%" y="645" width="0.0175%" height="15" fill="rgb(244,85,46)" fg:x="94501" fg:w="24"/><text x="69.3105%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,035 samples, 0.76%)</title><rect x="68.3290%" y="741" width="0.7564%" height="15" fill="rgb(223,39,52)" fg:x="93500" fg:w="1035"/><text x="68.5790%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1,035 samples, 0.76%)</title><rect x="68.3290%" y="725" width="0.7564%" height="15" fill="rgb(218,200,14)" fg:x="93500" fg:w="1035"/><text x="68.5790%" y="735.50"></text></g><g><title>__rust_dealloc (1,035 samples, 0.76%)</title><rect x="68.3290%" y="709" width="0.7564%" height="15" fill="rgb(208,171,16)" fg:x="93500" fg:w="1035"/><text x="68.5790%" y="719.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,035 samples, 0.76%)</title><rect x="68.3290%" y="693" width="0.7564%" height="15" fill="rgb(234,200,18)" fg:x="93500" fg:w="1035"/><text x="68.5790%" y="703.50"></text></g><g><title>core::mem::drop (1,052 samples, 0.77%)</title><rect x="68.3180%" y="853" width="0.7688%" height="15" fill="rgb(228,45,11)" fg:x="93485" fg:w="1052"/><text x="68.5680%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1,052 samples, 0.77%)</title><rect x="68.3180%" y="837" width="0.7688%" height="15" fill="rgb(237,182,11)" fg:x="93485" fg:w="1052"/><text x="68.5680%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1,037 samples, 0.76%)</title><rect x="68.3290%" y="821" width="0.7578%" height="15" fill="rgb(241,175,49)" fg:x="93500" fg:w="1037"/><text x="68.5790%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,037 samples, 0.76%)</title><rect x="68.3290%" y="805" width="0.7578%" height="15" fill="rgb(247,38,35)" fg:x="93500" fg:w="1037"/><text x="68.5790%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,037 samples, 0.76%)</title><rect x="68.3290%" y="789" width="0.7578%" height="15" fill="rgb(228,39,49)" fg:x="93500" fg:w="1037"/><text x="68.5790%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,037 samples, 0.76%)</title><rect x="68.3290%" y="773" width="0.7578%" height="15" fill="rgb(226,101,26)" fg:x="93500" fg:w="1037"/><text x="68.5790%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,037 samples, 0.76%)</title><rect x="68.3290%" y="757" width="0.7578%" height="15" fill="rgb(206,141,19)" fg:x="93500" fg:w="1037"/><text x="68.5790%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (159 samples, 0.12%)</title><rect x="69.0868%" y="853" width="0.1162%" height="15" fill="rgb(211,200,13)" fg:x="94537" fg:w="159"/><text x="69.3368%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (159 samples, 0.12%)</title><rect x="69.0868%" y="837" width="0.1162%" height="15" fill="rgb(241,121,6)" fg:x="94537" fg:w="159"/><text x="69.3368%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,307 samples, 0.96%)</title><rect x="68.2574%" y="901" width="0.9551%" height="15" fill="rgb(234,221,29)" fg:x="93402" fg:w="1307"/><text x="68.5074%" y="911.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1,307 samples, 0.96%)</title><rect x="68.2574%" y="885" width="0.9551%" height="15" fill="rgb(229,136,5)" fg:x="93402" fg:w="1307"/><text x="68.5074%" y="895.50"></text></g><g><title>bytes::bytes_mut::release_shared (1,229 samples, 0.90%)</title><rect x="68.3144%" y="869" width="0.8981%" height="15" fill="rgb(238,36,11)" fg:x="93480" fg:w="1229"/><text x="68.5644%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (45 samples, 0.03%)</title><rect x="69.2213%" y="901" width="0.0329%" height="15" fill="rgb(251,55,41)" fg:x="94721" fg:w="45"/><text x="69.4713%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (45 samples, 0.03%)</title><rect x="69.2213%" y="885" width="0.0329%" height="15" fill="rgb(242,34,40)" fg:x="94721" fg:w="45"/><text x="69.4713%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="69.3082%" y="709" width="0.0110%" height="15" fill="rgb(215,42,17)" fg:x="94840" fg:w="15"/><text x="69.5582%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="69.3082%" y="693" width="0.0110%" height="15" fill="rgb(207,44,46)" fg:x="94840" fg:w="15"/><text x="69.5582%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (28 samples, 0.02%)</title><rect x="69.3192%" y="709" width="0.0205%" height="15" fill="rgb(211,206,28)" fg:x="94855" fg:w="28"/><text x="69.5692%" y="719.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (27 samples, 0.02%)</title><rect x="69.3199%" y="693" width="0.0197%" height="15" fill="rgb(237,167,16)" fg:x="94856" fg:w="27"/><text x="69.5699%" y="703.50"></text></g><g><title>clock_gettime (27 samples, 0.02%)</title><rect x="69.3199%" y="677" width="0.0197%" height="15" fill="rgb(233,66,6)" fg:x="94856" fg:w="27"/><text x="69.5699%" y="687.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (57 samples, 0.04%)</title><rect x="69.3082%" y="741" width="0.0417%" height="15" fill="rgb(246,123,29)" fg:x="94840" fg:w="57"/><text x="69.5582%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (57 samples, 0.04%)</title><rect x="69.3082%" y="725" width="0.0417%" height="15" fill="rgb(209,62,40)" fg:x="94840" fg:w="57"/><text x="69.5582%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (14 samples, 0.01%)</title><rect x="69.3535%" y="741" width="0.0102%" height="15" fill="rgb(218,4,25)" fg:x="94902" fg:w="14"/><text x="69.6035%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (14 samples, 0.01%)</title><rect x="69.3535%" y="725" width="0.0102%" height="15" fill="rgb(253,91,49)" fg:x="94902" fg:w="14"/><text x="69.6035%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (129 samples, 0.09%)</title><rect x="69.2900%" y="821" width="0.0943%" height="15" fill="rgb(228,155,29)" fg:x="94815" fg:w="129"/><text x="69.5400%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (129 samples, 0.09%)</title><rect x="69.2900%" y="805" width="0.0943%" height="15" fill="rgb(243,57,37)" fg:x="94815" fg:w="129"/><text x="69.5400%" y="815.50"></text></g><g><title>tokio::runtime::context::with_scheduler (129 samples, 0.09%)</title><rect x="69.2900%" y="789" width="0.0943%" height="15" fill="rgb(244,167,17)" fg:x="94815" fg:w="129"/><text x="69.5400%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (123 samples, 0.09%)</title><rect x="69.2943%" y="773" width="0.0899%" height="15" fill="rgb(207,181,38)" fg:x="94821" fg:w="123"/><text x="69.5443%" y="783.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (112 samples, 0.08%)</title><rect x="69.3024%" y="757" width="0.0818%" height="15" fill="rgb(211,8,23)" fg:x="94832" fg:w="112"/><text x="69.5524%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (24 samples, 0.02%)</title><rect x="69.3667%" y="741" width="0.0175%" height="15" fill="rgb(235,11,44)" fg:x="94920" fg:w="24"/><text x="69.6167%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (20 samples, 0.01%)</title><rect x="69.3696%" y="725" width="0.0146%" height="15" fill="rgb(248,18,52)" fg:x="94924" fg:w="20"/><text x="69.6196%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::load (39 samples, 0.03%)</title><rect x="69.3981%" y="757" width="0.0285%" height="15" fill="rgb(208,4,7)" fg:x="94963" fg:w="39"/><text x="69.6481%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39 samples, 0.03%)</title><rect x="69.3981%" y="741" width="0.0285%" height="15" fill="rgb(240,17,39)" fg:x="94963" fg:w="39"/><text x="69.6481%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.03%)</title><rect x="69.3981%" y="725" width="0.0285%" height="15" fill="rgb(207,170,3)" fg:x="94963" fg:w="39"/><text x="69.6481%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (191 samples, 0.14%)</title><rect x="69.2900%" y="837" width="0.1396%" height="15" fill="rgb(236,100,52)" fg:x="94815" fg:w="191"/><text x="69.5400%" y="847.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (52 samples, 0.04%)</title><rect x="69.3915%" y="821" width="0.0380%" height="15" fill="rgb(246,78,51)" fg:x="94954" fg:w="52"/><text x="69.6415%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (52 samples, 0.04%)</title><rect x="69.3915%" y="805" width="0.0380%" height="15" fill="rgb(211,17,15)" fg:x="94954" fg:w="52"/><text x="69.6415%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (47 samples, 0.03%)</title><rect x="69.3952%" y="789" width="0.0343%" height="15" fill="rgb(209,59,46)" fg:x="94959" fg:w="47"/><text x="69.6452%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (47 samples, 0.03%)</title><rect x="69.3952%" y="773" width="0.0343%" height="15" fill="rgb(210,92,25)" fg:x="94959" fg:w="47"/><text x="69.6452%" y="783.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (203 samples, 0.15%)</title><rect x="69.2870%" y="853" width="0.1484%" height="15" fill="rgb(238,174,52)" fg:x="94811" fg:w="203"/><text x="69.5370%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (24 samples, 0.02%)</title><rect x="69.4354%" y="853" width="0.0175%" height="15" fill="rgb(230,73,7)" fg:x="95014" fg:w="24"/><text x="69.6854%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (30 samples, 0.02%)</title><rect x="69.4529%" y="853" width="0.0219%" height="15" fill="rgb(243,124,40)" fg:x="95038" fg:w="30"/><text x="69.7029%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (27 samples, 0.02%)</title><rect x="69.4551%" y="837" width="0.0197%" height="15" fill="rgb(244,170,11)" fg:x="95041" fg:w="27"/><text x="69.7051%" y="847.50"></text></g><g><title>core::ptr::read (27 samples, 0.02%)</title><rect x="69.4551%" y="821" width="0.0197%" height="15" fill="rgb(207,114,54)" fg:x="95041" fg:w="27"/><text x="69.7051%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (51 samples, 0.04%)</title><rect x="69.4880%" y="837" width="0.0373%" height="15" fill="rgb(205,42,20)" fg:x="95086" fg:w="51"/><text x="69.7380%" y="847.50"></text></g><g><title>core::ptr::write (47 samples, 0.03%)</title><rect x="69.4909%" y="821" width="0.0343%" height="15" fill="rgb(230,30,28)" fg:x="95090" fg:w="47"/><text x="69.7409%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (91 samples, 0.07%)</title><rect x="69.4749%" y="853" width="0.0665%" height="15" fill="rgb(205,73,54)" fg:x="95068" fg:w="91"/><text x="69.7249%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (19 samples, 0.01%)</title><rect x="69.5479%" y="853" width="0.0139%" height="15" fill="rgb(254,227,23)" fg:x="95168" fg:w="19"/><text x="69.7979%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.01%)</title><rect x="69.5655%" y="821" width="0.0132%" height="15" fill="rgb(228,202,34)" fg:x="95192" fg:w="18"/><text x="69.8155%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (67 samples, 0.05%)</title><rect x="69.5618%" y="853" width="0.0490%" height="15" fill="rgb(222,225,37)" fg:x="95187" fg:w="67"/><text x="69.8118%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (63 samples, 0.05%)</title><rect x="69.5647%" y="837" width="0.0460%" height="15" fill="rgb(221,14,54)" fg:x="95191" fg:w="63"/><text x="69.8147%" y="847.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (37 samples, 0.03%)</title><rect x="69.5837%" y="821" width="0.0270%" height="15" fill="rgb(254,102,2)" fg:x="95217" fg:w="37"/><text x="69.8337%" y="831.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (35 samples, 0.03%)</title><rect x="69.5852%" y="805" width="0.0256%" height="15" fill="rgb(232,104,17)" fg:x="95219" fg:w="35"/><text x="69.8352%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (35 samples, 0.03%)</title><rect x="69.5852%" y="789" width="0.0256%" height="15" fill="rgb(250,220,14)" fg:x="95219" fg:w="35"/><text x="69.8352%" y="799.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="69.6188%" y="821" width="0.0102%" height="15" fill="rgb(241,158,9)" fg:x="95265" fg:w="14"/><text x="69.8688%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (342 samples, 0.25%)</title><rect x="69.6166%" y="853" width="0.2499%" height="15" fill="rgb(246,9,43)" fg:x="95262" fg:w="342"/><text x="69.8666%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (342 samples, 0.25%)</title><rect x="69.6166%" y="837" width="0.2499%" height="15" fill="rgb(206,73,33)" fg:x="95262" fg:w="342"/><text x="69.8666%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (325 samples, 0.24%)</title><rect x="69.6291%" y="821" width="0.2375%" height="15" fill="rgb(222,79,8)" fg:x="95279" fg:w="325"/><text x="69.8791%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (322 samples, 0.24%)</title><rect x="69.6312%" y="805" width="0.2353%" height="15" fill="rgb(234,8,54)" fg:x="95282" fg:w="322"/><text x="69.8812%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (322 samples, 0.24%)</title><rect x="69.6312%" y="789" width="0.2353%" height="15" fill="rgb(209,134,38)" fg:x="95282" fg:w="322"/><text x="69.8812%" y="799.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (27 samples, 0.02%)</title><rect x="69.8666%" y="853" width="0.0197%" height="15" fill="rgb(230,127,29)" fg:x="95604" fg:w="27"/><text x="70.1166%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (27 samples, 0.02%)</title><rect x="69.8666%" y="837" width="0.0197%" height="15" fill="rgb(242,44,41)" fg:x="95604" fg:w="27"/><text x="70.1166%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="69.8666%" y="821" width="0.0197%" height="15" fill="rgb(222,56,43)" fg:x="95604" fg:w="27"/><text x="70.1166%" y="831.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="69.8878%" y="821" width="0.0183%" height="15" fill="rgb(238,39,47)" fg:x="95633" fg:w="25"/><text x="70.1378%" y="831.50"></text></g><g><title>std::sync::poison::Flag::guard (25 samples, 0.02%)</title><rect x="69.8878%" y="805" width="0.0183%" height="15" fill="rgb(226,79,43)" fg:x="95633" fg:w="25"/><text x="70.1378%" y="815.50"></text></g><g><title>std::thread::panicking (14 samples, 0.01%)</title><rect x="69.8958%" y="789" width="0.0102%" height="15" fill="rgb(242,105,53)" fg:x="95644" fg:w="14"/><text x="70.1458%" y="799.50"></text></g><g><title>std::panicking::panicking (14 samples, 0.01%)</title><rect x="69.8958%" y="773" width="0.0102%" height="15" fill="rgb(251,132,46)" fg:x="95644" fg:w="14"/><text x="70.1458%" y="783.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (14 samples, 0.01%)</title><rect x="69.8958%" y="757" width="0.0102%" height="15" fill="rgb(231,77,14)" fg:x="95644" fg:w="14"/><text x="70.1458%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (472 samples, 0.34%)</title><rect x="69.9089%" y="805" width="0.3449%" height="15" fill="rgb(240,135,9)" fg:x="95662" fg:w="472"/><text x="70.1589%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (472 samples, 0.34%)</title><rect x="69.9089%" y="789" width="0.3449%" height="15" fill="rgb(248,109,14)" fg:x="95662" fg:w="472"/><text x="70.1589%" y="799.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (1,367 samples, 1.00%)</title><rect x="69.2563%" y="901" width="0.9990%" height="15" fill="rgb(227,146,52)" fg:x="94769" fg:w="1367"/><text x="69.5063%" y="911.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (1,351 samples, 0.99%)</title><rect x="69.2680%" y="885" width="0.9873%" height="15" fill="rgb(232,54,3)" fg:x="94785" fg:w="1351"/><text x="69.5180%" y="895.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (1,351 samples, 0.99%)</title><rect x="69.2680%" y="869" width="0.9873%" height="15" fill="rgb(229,201,43)" fg:x="94785" fg:w="1351"/><text x="69.5180%" y="879.50"></text></g><g><title>flume::wait_lock (505 samples, 0.37%)</title><rect x="69.8863%" y="853" width="0.3690%" height="15" fill="rgb(252,161,33)" fg:x="95631" fg:w="505"/><text x="70.1363%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (503 samples, 0.37%)</title><rect x="69.8878%" y="837" width="0.3676%" height="15" fill="rgb(226,146,40)" fg:x="95633" fg:w="503"/><text x="70.1378%" y="847.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (478 samples, 0.35%)</title><rect x="69.9060%" y="821" width="0.3493%" height="15" fill="rgb(219,47,25)" fg:x="95658" fg:w="478"/><text x="70.1560%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="70.2860%" y="805" width="0.0168%" height="15" fill="rgb(250,135,13)" fg:x="96178" fg:w="23"/><text x="70.5360%" y="815.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (23 samples, 0.02%)</title><rect x="70.2860%" y="789" width="0.0168%" height="15" fill="rgb(219,229,18)" fg:x="96178" fg:w="23"/><text x="70.5360%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (195 samples, 0.14%)</title><rect x="70.3028%" y="789" width="0.1425%" height="15" fill="rgb(217,152,27)" fg:x="96201" fg:w="195"/><text x="70.5528%" y="799.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (195 samples, 0.14%)</title><rect x="70.3028%" y="773" width="0.1425%" height="15" fill="rgb(225,71,47)" fg:x="96201" fg:w="195"/><text x="70.5528%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (195 samples, 0.14%)</title><rect x="70.3028%" y="757" width="0.1425%" height="15" fill="rgb(220,139,14)" fg:x="96201" fg:w="195"/><text x="70.5528%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (195 samples, 0.14%)</title><rect x="70.3028%" y="741" width="0.1425%" height="15" fill="rgb(247,54,32)" fg:x="96201" fg:w="195"/><text x="70.5528%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (219 samples, 0.16%)</title><rect x="70.3028%" y="805" width="0.1600%" height="15" fill="rgb(252,131,39)" fg:x="96201" fg:w="219"/><text x="70.5528%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (24 samples, 0.02%)</title><rect x="70.4453%" y="789" width="0.0175%" height="15" fill="rgb(210,108,39)" fg:x="96396" fg:w="24"/><text x="70.6953%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (24 samples, 0.02%)</title><rect x="70.4453%" y="773" width="0.0175%" height="15" fill="rgb(205,23,29)" fg:x="96396" fg:w="24"/><text x="70.6953%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (24 samples, 0.02%)</title><rect x="70.4453%" y="757" width="0.0175%" height="15" fill="rgb(246,139,46)" fg:x="96396" fg:w="24"/><text x="70.6953%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (24 samples, 0.02%)</title><rect x="70.4453%" y="741" width="0.0175%" height="15" fill="rgb(250,81,26)" fg:x="96396" fg:w="24"/><text x="70.6953%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (175 samples, 0.13%)</title><rect x="70.4717%" y="805" width="0.1279%" height="15" fill="rgb(214,104,7)" fg:x="96432" fg:w="175"/><text x="70.7217%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (175 samples, 0.13%)</title><rect x="70.4717%" y="789" width="0.1279%" height="15" fill="rgb(233,189,8)" fg:x="96432" fg:w="175"/><text x="70.7217%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (175 samples, 0.13%)</title><rect x="70.4717%" y="773" width="0.1279%" height="15" fill="rgb(228,141,17)" fg:x="96432" fg:w="175"/><text x="70.7217%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (528 samples, 0.39%)</title><rect x="70.2553%" y="901" width="0.3859%" height="15" fill="rgb(247,157,1)" fg:x="96136" fg:w="528"/><text x="70.5053%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (528 samples, 0.39%)</title><rect x="70.2553%" y="885" width="0.3859%" height="15" fill="rgb(249,225,5)" fg:x="96136" fg:w="528"/><text x="70.5053%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (528 samples, 0.39%)</title><rect x="70.2553%" y="869" width="0.3859%" height="15" fill="rgb(242,55,13)" fg:x="96136" fg:w="528"/><text x="70.5053%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (509 samples, 0.37%)</title><rect x="70.2692%" y="853" width="0.3720%" height="15" fill="rgb(230,49,50)" fg:x="96155" fg:w="509"/><text x="70.5192%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (509 samples, 0.37%)</title><rect x="70.2692%" y="837" width="0.3720%" height="15" fill="rgb(241,111,38)" fg:x="96155" fg:w="509"/><text x="70.5192%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (509 samples, 0.37%)</title><rect x="70.2692%" y="821" width="0.3720%" height="15" fill="rgb(252,155,4)" fg:x="96155" fg:w="509"/><text x="70.5192%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (57 samples, 0.04%)</title><rect x="70.5995%" y="805" width="0.0417%" height="15" fill="rgb(212,69,32)" fg:x="96607" fg:w="57"/><text x="70.8495%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (57 samples, 0.04%)</title><rect x="70.5995%" y="789" width="0.0417%" height="15" fill="rgb(243,107,47)" fg:x="96607" fg:w="57"/><text x="70.8495%" y="799.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (56,929 samples, 41.60%)</title><rect x="29.0526%" y="1013" width="41.6032%" height="15" fill="rgb(247,130,12)" fg:x="39755" fg:w="56929"/><text x="29.3026%" y="1023.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::futur..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (56,929 samples, 41.60%)</title><rect x="29.0526%" y="997" width="41.6032%" height="15" fill="rgb(233,74,16)" fg:x="39755" fg:w="56929"/><text x="29.3026%" y="1007.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::F..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (56,929 samples, 41.60%)</title><rect x="29.0526%" y="981" width="41.6032%" height="15" fill="rgb(208,58,18)" fg:x="39755" fg:w="56929"/><text x="29.3026%" y="991.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::futu..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (56,914 samples, 41.59%)</title><rect x="29.0636%" y="965" width="41.5922%" height="15" fill="rgb(242,225,1)" fg:x="39770" fg:w="56914"/><text x="29.3136%" y="975.50">wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}}</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (56,871 samples, 41.56%)</title><rect x="29.0950%" y="949" width="41.5608%" height="15" fill="rgb(249,39,40)" fg:x="39813" fg:w="56871"/><text x="29.3450%" y="959.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::server_handle_packet::_{{closure}} (4,179 samples, 3.05%)</title><rect x="67.6018%" y="933" width="3.0540%" height="15" fill="rgb(207,72,44)" fg:x="92505" fg:w="4179"/><text x="67.8518%" y="943.50">wis..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (3,477 samples, 2.54%)</title><rect x="68.1149%" y="917" width="2.5410%" height="15" fill="rgb(215,193,12)" fg:x="93207" fg:w="3477"/><text x="68.3649%" y="927.50">wi..</text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (20 samples, 0.01%)</title><rect x="70.6412%" y="901" width="0.0146%" height="15" fill="rgb(248,41,39)" fg:x="96664" fg:w="20"/><text x="70.8912%" y="911.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (56,941 samples, 41.61%)</title><rect x="29.0519%" y="1061" width="41.6120%" height="15" fill="rgb(253,85,4)" fg:x="39754" fg:w="56941"/><text x="29.3019%" y="1071.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::futur..</text></g><g><title>tokio::runtime::coop::with_unconstrained (56,941 samples, 41.61%)</title><rect x="29.0519%" y="1045" width="41.6120%" height="15" fill="rgb(243,70,31)" fg:x="39754" fg:w="56941"/><text x="29.3019%" y="1055.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (56,941 samples, 41.61%)</title><rect x="29.0519%" y="1029" width="41.6120%" height="15" fill="rgb(253,195,26)" fg:x="39754" fg:w="56941"/><text x="29.3019%" y="1039.50">tokio::runtime::coop::with_budget</text></g><g><title>core::ops::function::FnOnce::call_once (51 samples, 0.04%)</title><rect x="70.6639%" y="997" width="0.0373%" height="15" fill="rgb(243,42,11)" fg:x="96695" fg:w="51"/><text x="70.9139%" y="1007.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (51 samples, 0.04%)</title><rect x="70.6639%" y="981" width="0.0373%" height="15" fill="rgb(239,66,17)" fg:x="96695" fg:w="51"/><text x="70.9139%" y="991.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (51 samples, 0.04%)</title><rect x="70.6639%" y="965" width="0.0373%" height="15" fill="rgb(217,132,21)" fg:x="96695" fg:w="51"/><text x="70.9139%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (43 samples, 0.03%)</title><rect x="70.6697%" y="949" width="0.0314%" height="15" fill="rgb(252,202,21)" fg:x="96703" fg:w="43"/><text x="70.9197%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (54 samples, 0.04%)</title><rect x="70.6639%" y="1061" width="0.0395%" height="15" fill="rgb(233,98,36)" fg:x="96695" fg:w="54"/><text x="70.9139%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (54 samples, 0.04%)</title><rect x="70.6639%" y="1045" width="0.0395%" height="15" fill="rgb(216,153,54)" fg:x="96695" fg:w="54"/><text x="70.9139%" y="1055.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (54 samples, 0.04%)</title><rect x="70.6639%" y="1029" width="0.0395%" height="15" fill="rgb(250,99,7)" fg:x="96695" fg:w="54"/><text x="70.9139%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.04%)</title><rect x="70.6639%" y="1013" width="0.0395%" height="15" fill="rgb(207,56,50)" fg:x="96695" fg:w="54"/><text x="70.9139%" y="1023.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::listener_mut (24 samples, 0.02%)</title><rect x="70.8071%" y="997" width="0.0175%" height="15" fill="rgb(244,61,34)" fg:x="96891" fg:w="24"/><text x="71.0571%" y="1007.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (24 samples, 0.02%)</title><rect x="70.8071%" y="981" width="0.0175%" height="15" fill="rgb(241,50,38)" fg:x="96891" fg:w="24"/><text x="71.0571%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (24 samples, 0.02%)</title><rect x="70.8071%" y="965" width="0.0175%" height="15" fill="rgb(212,166,30)" fg:x="96891" fg:w="24"/><text x="71.0571%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (26 samples, 0.02%)</title><rect x="70.8977%" y="965" width="0.0190%" height="15" fill="rgb(249,127,32)" fg:x="97015" fg:w="26"/><text x="71.1477%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (19 samples, 0.01%)</title><rect x="70.9028%" y="949" width="0.0139%" height="15" fill="rgb(209,103,0)" fg:x="97022" fg:w="19"/><text x="71.1528%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="70.9028%" y="933" width="0.0139%" height="15" fill="rgb(238,209,51)" fg:x="97022" fg:w="19"/><text x="71.1528%" y="943.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (18 samples, 0.01%)</title><rect x="70.9036%" y="917" width="0.0132%" height="15" fill="rgb(237,56,23)" fg:x="97023" fg:w="18"/><text x="71.1536%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (18 samples, 0.01%)</title><rect x="70.9036%" y="901" width="0.0132%" height="15" fill="rgb(215,153,46)" fg:x="97023" fg:w="18"/><text x="71.1536%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.01%)</title><rect x="70.9036%" y="885" width="0.0132%" height="15" fill="rgb(224,49,31)" fg:x="97023" fg:w="18"/><text x="71.1536%" y="895.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (246 samples, 0.18%)</title><rect x="70.8071%" y="1013" width="0.1798%" height="15" fill="rgb(250,18,42)" fg:x="96891" fg:w="246"/><text x="71.0571%" y="1023.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (222 samples, 0.16%)</title><rect x="70.8246%" y="997" width="0.1622%" height="15" fill="rgb(215,176,39)" fg:x="96915" fg:w="222"/><text x="71.0746%" y="1007.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (131 samples, 0.10%)</title><rect x="70.8911%" y="981" width="0.0957%" height="15" fill="rgb(223,77,29)" fg:x="97006" fg:w="131"/><text x="71.1411%" y="991.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (91 samples, 0.07%)</title><rect x="70.9204%" y="965" width="0.0665%" height="15" fill="rgb(234,94,52)" fg:x="97046" fg:w="91"/><text x="71.1704%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (91 samples, 0.07%)</title><rect x="70.9204%" y="949" width="0.0665%" height="15" fill="rgb(220,154,50)" fg:x="97046" fg:w="91"/><text x="71.1704%" y="959.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (87 samples, 0.06%)</title><rect x="70.9233%" y="933" width="0.0636%" height="15" fill="rgb(212,11,10)" fg:x="97050" fg:w="87"/><text x="71.1733%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (87 samples, 0.06%)</title><rect x="70.9233%" y="917" width="0.0636%" height="15" fill="rgb(205,166,19)" fg:x="97050" fg:w="87"/><text x="71.1733%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.06%)</title><rect x="70.9233%" y="901" width="0.0636%" height="15" fill="rgb(244,198,16)" fg:x="97050" fg:w="87"/><text x="71.1733%" y="911.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (252 samples, 0.18%)</title><rect x="71.6358%" y="805" width="0.1842%" height="15" fill="rgb(219,69,12)" fg:x="98025" fg:w="252"/><text x="71.8858%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (58 samples, 0.04%)</title><rect x="71.7776%" y="789" width="0.0424%" height="15" fill="rgb(245,30,7)" fg:x="98219" fg:w="58"/><text x="72.0276%" y="799.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (290 samples, 0.21%)</title><rect x="71.8287%" y="805" width="0.2119%" height="15" fill="rgb(218,221,48)" fg:x="98289" fg:w="290"/><text x="72.0787%" y="815.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (38 samples, 0.03%)</title><rect x="72.0129%" y="789" width="0.0278%" height="15" fill="rgb(216,66,15)" fg:x="98541" fg:w="38"/><text x="72.2629%" y="799.50"></text></g><g><title>core::ptr::read (34 samples, 0.02%)</title><rect x="72.0158%" y="773" width="0.0248%" height="15" fill="rgb(226,122,50)" fg:x="98545" fg:w="34"/><text x="72.2658%" y="783.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (37 samples, 0.03%)</title><rect x="72.2650%" y="421" width="0.0270%" height="15" fill="rgb(239,156,16)" fg:x="98886" fg:w="37"/><text x="72.5150%" y="431.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (38 samples, 0.03%)</title><rect x="72.2650%" y="437" width="0.0278%" height="15" fill="rgb(224,27,38)" fg:x="98886" fg:w="38"/><text x="72.5150%" y="447.50"></text></g><g><title>_rjem_je_malloc_default (42 samples, 0.03%)</title><rect x="72.2643%" y="549" width="0.0307%" height="15" fill="rgb(224,39,27)" fg:x="98885" fg:w="42"/><text x="72.5143%" y="559.50"></text></g><g><title>imalloc (41 samples, 0.03%)</title><rect x="72.2650%" y="533" width="0.0300%" height="15" fill="rgb(215,92,29)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="543.50"></text></g><g><title>imalloc_body (41 samples, 0.03%)</title><rect x="72.2650%" y="517" width="0.0300%" height="15" fill="rgb(207,159,16)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="527.50"></text></g><g><title>imalloc_no_sample (41 samples, 0.03%)</title><rect x="72.2650%" y="501" width="0.0300%" height="15" fill="rgb(238,163,47)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="511.50"></text></g><g><title>iallocztm (41 samples, 0.03%)</title><rect x="72.2650%" y="485" width="0.0300%" height="15" fill="rgb(219,91,49)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="495.50"></text></g><g><title>arena_malloc (41 samples, 0.03%)</title><rect x="72.2650%" y="469" width="0.0300%" height="15" fill="rgb(227,167,31)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="479.50"></text></g><g><title>tcache_alloc_small (41 samples, 0.03%)</title><rect x="72.2650%" y="453" width="0.0300%" height="15" fill="rgb(234,80,54)" fg:x="98886" fg:w="41"/><text x="72.5150%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (57 samples, 0.04%)</title><rect x="72.2643%" y="709" width="0.0417%" height="15" fill="rgb(212,114,2)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (57 samples, 0.04%)</title><rect x="72.2643%" y="693" width="0.0417%" height="15" fill="rgb(234,50,24)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.04%)</title><rect x="72.2643%" y="677" width="0.0417%" height="15" fill="rgb(221,68,8)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (57 samples, 0.04%)</title><rect x="72.2643%" y="661" width="0.0417%" height="15" fill="rgb(254,180,31)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (57 samples, 0.04%)</title><rect x="72.2643%" y="645" width="0.0417%" height="15" fill="rgb(247,130,50)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.04%)</title><rect x="72.2643%" y="629" width="0.0417%" height="15" fill="rgb(211,109,4)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.04%)</title><rect x="72.2643%" y="613" width="0.0417%" height="15" fill="rgb(238,50,21)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="623.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.04%)</title><rect x="72.2643%" y="597" width="0.0417%" height="15" fill="rgb(225,57,45)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="607.50"></text></g><g><title>__rust_alloc (57 samples, 0.04%)</title><rect x="72.2643%" y="581" width="0.0417%" height="15" fill="rgb(209,196,50)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="591.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (57 samples, 0.04%)</title><rect x="72.2643%" y="565" width="0.0417%" height="15" fill="rgb(242,140,13)" fg:x="98885" fg:w="57"/><text x="72.5143%" y="575.50"></text></g><g><title>_rjem_malloc (15 samples, 0.01%)</title><rect x="72.2950%" y="549" width="0.0110%" height="15" fill="rgb(217,111,7)" fg:x="98927" fg:w="15"/><text x="72.5450%" y="559.50"></text></g><g><title>imalloc_fastpath (15 samples, 0.01%)</title><rect x="72.2950%" y="533" width="0.0110%" height="15" fill="rgb(253,193,51)" fg:x="98927" fg:w="15"/><text x="72.5450%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (14 samples, 0.01%)</title><rect x="72.2957%" y="517" width="0.0102%" height="15" fill="rgb(252,70,29)" fg:x="98928" fg:w="14"/><text x="72.5457%" y="527.50"></text></g><g><title>cache_bin_alloc_impl (14 samples, 0.01%)</title><rect x="72.2957%" y="501" width="0.0102%" height="15" fill="rgb(232,127,12)" fg:x="98928" fg:w="14"/><text x="72.5457%" y="511.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (58 samples, 0.04%)</title><rect x="72.2643%" y="725" width="0.0424%" height="15" fill="rgb(211,180,21)" fg:x="98885" fg:w="58"/><text x="72.5143%" y="735.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (77 samples, 0.06%)</title><rect x="72.2533%" y="773" width="0.0563%" height="15" fill="rgb(229,72,13)" fg:x="98870" fg:w="77"/><text x="72.5033%" y="783.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (77 samples, 0.06%)</title><rect x="72.2533%" y="757" width="0.0563%" height="15" fill="rgb(240,211,49)" fg:x="98870" fg:w="77"/><text x="72.5033%" y="767.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (77 samples, 0.06%)</title><rect x="72.2533%" y="741" width="0.0563%" height="15" fill="rgb(219,149,40)" fg:x="98870" fg:w="77"/><text x="72.5033%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (202 samples, 0.15%)</title><rect x="72.4952%" y="709" width="0.1476%" height="15" fill="rgb(210,127,46)" fg:x="99201" fg:w="202"/><text x="72.7452%" y="719.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (200 samples, 0.15%)</title><rect x="72.4967%" y="693" width="0.1462%" height="15" fill="rgb(220,106,7)" fg:x="99203" fg:w="200"/><text x="72.7467%" y="703.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (161 samples, 0.12%)</title><rect x="72.5252%" y="677" width="0.1177%" height="15" fill="rgb(249,31,22)" fg:x="99242" fg:w="161"/><text x="72.7752%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (161 samples, 0.12%)</title><rect x="72.5252%" y="661" width="0.1177%" height="15" fill="rgb(253,1,49)" fg:x="99242" fg:w="161"/><text x="72.7752%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (161 samples, 0.12%)</title><rect x="72.5252%" y="645" width="0.1177%" height="15" fill="rgb(227,144,33)" fg:x="99242" fg:w="161"/><text x="72.7752%" y="655.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (113 samples, 0.08%)</title><rect x="72.6428%" y="709" width="0.0826%" height="15" fill="rgb(249,163,44)" fg:x="99403" fg:w="113"/><text x="72.8928%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.02%)</title><rect x="72.7831%" y="645" width="0.0212%" height="15" fill="rgb(234,15,39)" fg:x="99595" fg:w="29"/><text x="73.0331%" y="655.50"></text></g><g><title>core::ops::function::FnOnce::call_once (29 samples, 0.02%)</title><rect x="72.7831%" y="629" width="0.0212%" height="15" fill="rgb(207,66,16)" fg:x="99595" fg:w="29"/><text x="73.0331%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.02%)</title><rect x="72.7831%" y="613" width="0.0212%" height="15" fill="rgb(233,112,24)" fg:x="99595" fg:w="29"/><text x="73.0331%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.02%)</title><rect x="72.7831%" y="597" width="0.0212%" height="15" fill="rgb(230,90,22)" fg:x="99595" fg:w="29"/><text x="73.0331%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.02%)</title><rect x="72.7831%" y="581" width="0.0212%" height="15" fill="rgb(229,61,13)" fg:x="99595" fg:w="29"/><text x="73.0331%" y="591.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (18 samples, 0.01%)</title><rect x="72.8058%" y="645" width="0.0132%" height="15" fill="rgb(225,57,24)" fg:x="99626" fg:w="18"/><text x="73.0558%" y="655.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (18 samples, 0.01%)</title><rect x="72.8058%" y="629" width="0.0132%" height="15" fill="rgb(208,169,48)" fg:x="99626" fg:w="18"/><text x="73.0558%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (18 samples, 0.01%)</title><rect x="72.8058%" y="613" width="0.0132%" height="15" fill="rgb(244,218,51)" fg:x="99626" fg:w="18"/><text x="73.0558%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="72.8453%" y="629" width="0.0110%" height="15" fill="rgb(214,148,10)" fg:x="99680" fg:w="15"/><text x="73.0953%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="72.8453%" y="613" width="0.0110%" height="15" fill="rgb(225,174,27)" fg:x="99680" fg:w="15"/><text x="73.0953%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="72.8453%" y="597" width="0.0110%" height="15" fill="rgb(230,96,26)" fg:x="99680" fg:w="15"/><text x="73.0953%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (83 samples, 0.06%)</title><rect x="72.8665%" y="613" width="0.0607%" height="15" fill="rgb(232,10,30)" fg:x="99709" fg:w="83"/><text x="73.1165%" y="623.50"></text></g><g><title>core::ptr::read (77 samples, 0.06%)</title><rect x="72.8708%" y="597" width="0.0563%" height="15" fill="rgb(222,8,50)" fg:x="99715" fg:w="77"/><text x="73.1208%" y="607.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (110 samples, 0.08%)</title><rect x="72.8570%" y="629" width="0.0804%" height="15" fill="rgb(213,81,27)" fg:x="99696" fg:w="110"/><text x="73.1070%" y="639.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::to_physical_idx (14 samples, 0.01%)</title><rect x="72.9271%" y="613" width="0.0102%" height="15" fill="rgb(245,50,10)" fg:x="99792" fg:w="14"/><text x="73.1771%" y="623.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::wrap_add (14 samples, 0.01%)</title><rect x="72.9271%" y="597" width="0.0102%" height="15" fill="rgb(216,100,18)" fg:x="99792" fg:w="14"/><text x="73.1771%" y="607.50"></text></g><g><title>core::mem::drop (195 samples, 0.14%)</title><rect x="72.9388%" y="629" width="0.1425%" height="15" fill="rgb(236,147,54)" fg:x="99808" fg:w="195"/><text x="73.1888%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (195 samples, 0.14%)</title><rect x="72.9388%" y="613" width="0.1425%" height="15" fill="rgb(205,143,26)" fg:x="99808" fg:w="195"/><text x="73.1888%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (195 samples, 0.14%)</title><rect x="72.9388%" y="597" width="0.1425%" height="15" fill="rgb(236,26,9)" fg:x="99808" fg:w="195"/><text x="73.1888%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (184 samples, 0.13%)</title><rect x="72.9468%" y="581" width="0.1345%" height="15" fill="rgb(221,165,53)" fg:x="99819" fg:w="184"/><text x="73.1968%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (180 samples, 0.13%)</title><rect x="72.9498%" y="565" width="0.1315%" height="15" fill="rgb(214,110,17)" fg:x="99823" fg:w="180"/><text x="73.1998%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (180 samples, 0.13%)</title><rect x="72.9498%" y="549" width="0.1315%" height="15" fill="rgb(237,197,12)" fg:x="99823" fg:w="180"/><text x="73.1998%" y="559.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (32 samples, 0.02%)</title><rect x="73.0813%" y="629" width="0.0234%" height="15" fill="rgb(205,84,17)" fg:x="100003" fg:w="32"/><text x="73.3313%" y="639.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (24 samples, 0.02%)</title><rect x="73.1105%" y="341" width="0.0175%" height="15" fill="rgb(237,18,45)" fg:x="100043" fg:w="24"/><text x="73.3605%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (25 samples, 0.02%)</title><rect x="73.1105%" y="357" width="0.0183%" height="15" fill="rgb(221,87,14)" fg:x="100043" fg:w="25"/><text x="73.3605%" y="367.50"></text></g><g><title>_rjem_je_malloc_default (26 samples, 0.02%)</title><rect x="73.1105%" y="469" width="0.0190%" height="15" fill="rgb(238,186,15)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="479.50"></text></g><g><title>imalloc (26 samples, 0.02%)</title><rect x="73.1105%" y="453" width="0.0190%" height="15" fill="rgb(208,115,11)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="463.50"></text></g><g><title>imalloc_body (26 samples, 0.02%)</title><rect x="73.1105%" y="437" width="0.0190%" height="15" fill="rgb(254,175,0)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="447.50"></text></g><g><title>imalloc_no_sample (26 samples, 0.02%)</title><rect x="73.1105%" y="421" width="0.0190%" height="15" fill="rgb(227,24,42)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="431.50"></text></g><g><title>iallocztm (26 samples, 0.02%)</title><rect x="73.1105%" y="405" width="0.0190%" height="15" fill="rgb(223,211,37)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="415.50"></text></g><g><title>arena_malloc (26 samples, 0.02%)</title><rect x="73.1105%" y="389" width="0.0190%" height="15" fill="rgb(235,49,27)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="399.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.02%)</title><rect x="73.1105%" y="373" width="0.0190%" height="15" fill="rgb(254,97,51)" fg:x="100043" fg:w="26"/><text x="73.3605%" y="383.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (40 samples, 0.03%)</title><rect x="73.1047%" y="613" width="0.0292%" height="15" fill="rgb(249,51,40)" fg:x="100035" fg:w="40"/><text x="73.3547%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (40 samples, 0.03%)</title><rect x="73.1047%" y="597" width="0.0292%" height="15" fill="rgb(210,128,45)" fg:x="100035" fg:w="40"/><text x="73.3547%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40 samples, 0.03%)</title><rect x="73.1047%" y="581" width="0.0292%" height="15" fill="rgb(224,137,50)" fg:x="100035" fg:w="40"/><text x="73.3547%" y="591.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.02%)</title><rect x="73.1105%" y="565" width="0.0234%" height="15" fill="rgb(242,15,9)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.02%)</title><rect x="73.1105%" y="549" width="0.0234%" height="15" fill="rgb(233,187,41)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.02%)</title><rect x="73.1105%" y="533" width="0.0234%" height="15" fill="rgb(227,2,29)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="543.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.02%)</title><rect x="73.1105%" y="517" width="0.0234%" height="15" fill="rgb(222,70,3)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="527.50"></text></g><g><title>__rust_alloc (32 samples, 0.02%)</title><rect x="73.1105%" y="501" width="0.0234%" height="15" fill="rgb(213,11,42)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="511.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (32 samples, 0.02%)</title><rect x="73.1105%" y="485" width="0.0234%" height="15" fill="rgb(225,150,9)" fg:x="100043" fg:w="32"/><text x="73.3605%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="73.1339%" y="597" width="0.0102%" height="15" fill="rgb(230,162,45)" fg:x="100075" fg:w="14"/><text x="73.3839%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (14 samples, 0.01%)</title><rect x="73.1339%" y="581" width="0.0102%" height="15" fill="rgb(222,14,52)" fg:x="100075" fg:w="14"/><text x="73.3839%" y="591.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (55 samples, 0.04%)</title><rect x="73.1047%" y="629" width="0.0402%" height="15" fill="rgb(254,198,14)" fg:x="100035" fg:w="55"/><text x="73.3547%" y="639.50"></text></g><g><title>flume::async::AsyncSignal::new (15 samples, 0.01%)</title><rect x="73.1339%" y="613" width="0.0110%" height="15" fill="rgb(220,217,30)" fg:x="100075" fg:w="15"/><text x="73.3839%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (373 samples, 0.27%)</title><rect x="73.1551%" y="581" width="0.2726%" height="15" fill="rgb(215,146,41)" fg:x="100104" fg:w="373"/><text x="73.4051%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (373 samples, 0.27%)</title><rect x="73.1551%" y="565" width="0.2726%" height="15" fill="rgb(217,27,36)" fg:x="100104" fg:w="373"/><text x="73.4051%" y="575.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (838 samples, 0.61%)</title><rect x="72.8190%" y="645" width="0.6124%" height="15" fill="rgb(219,218,39)" fg:x="99644" fg:w="838"/><text x="73.0690%" y="655.50"></text></g><g><title>flume::wait_lock (392 samples, 0.29%)</title><rect x="73.1449%" y="629" width="0.2865%" height="15" fill="rgb(219,4,42)" fg:x="100090" fg:w="392"/><text x="73.3949%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (392 samples, 0.29%)</title><rect x="73.1449%" y="613" width="0.2865%" height="15" fill="rgb(249,119,36)" fg:x="100090" fg:w="392"/><text x="73.3949%" y="623.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (379 samples, 0.28%)</title><rect x="73.1544%" y="597" width="0.2770%" height="15" fill="rgb(209,23,33)" fg:x="100103" fg:w="379"/><text x="73.4044%" y="607.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (62 samples, 0.05%)</title><rect x="73.4314%" y="645" width="0.0453%" height="15" fill="rgb(211,10,0)" fg:x="100482" fg:w="62"/><text x="73.6814%" y="655.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (62 samples, 0.05%)</title><rect x="73.4314%" y="629" width="0.0453%" height="15" fill="rgb(208,99,37)" fg:x="100482" fg:w="62"/><text x="73.6814%" y="639.50"></text></g><g><title>flume::wait_lock (27 samples, 0.02%)</title><rect x="73.4569%" y="613" width="0.0197%" height="15" fill="rgb(213,132,31)" fg:x="100517" fg:w="27"/><text x="73.7069%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="73.4577%" y="597" width="0.0190%" height="15" fill="rgb(243,129,40)" fg:x="100518" fg:w="26"/><text x="73.7077%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (26 samples, 0.02%)</title><rect x="73.4577%" y="581" width="0.0190%" height="15" fill="rgb(210,66,33)" fg:x="100518" fg:w="26"/><text x="73.7077%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (25 samples, 0.02%)</title><rect x="73.4584%" y="565" width="0.0183%" height="15" fill="rgb(209,189,4)" fg:x="100519" fg:w="25"/><text x="73.7084%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (25 samples, 0.02%)</title><rect x="73.4584%" y="549" width="0.0183%" height="15" fill="rgb(214,107,37)" fg:x="100519" fg:w="25"/><text x="73.7084%" y="559.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (1,000 samples, 0.73%)</title><rect x="72.7561%" y="677" width="0.7308%" height="15" fill="rgb(245,88,54)" fg:x="99558" fg:w="1000"/><text x="73.0061%" y="687.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (1,000 samples, 0.73%)</title><rect x="72.7561%" y="661" width="0.7308%" height="15" fill="rgb(205,146,20)" fg:x="99558" fg:w="1000"/><text x="73.0061%" y="671.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (14 samples, 0.01%)</title><rect x="73.4767%" y="645" width="0.0102%" height="15" fill="rgb(220,161,25)" fg:x="100544" fg:w="14"/><text x="73.7267%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="73.5497%" y="597" width="0.0110%" height="15" fill="rgb(215,152,15)" fg:x="100644" fg:w="15"/><text x="73.7997%" y="607.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="73.5497%" y="581" width="0.0110%" height="15" fill="rgb(233,192,44)" fg:x="100644" fg:w="15"/><text x="73.7997%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (16 samples, 0.01%)</title><rect x="73.5497%" y="613" width="0.0117%" height="15" fill="rgb(240,170,46)" fg:x="100644" fg:w="16"/><text x="73.7997%" y="623.50"></text></g><g><title>&lt;event_listener::sys::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="73.5644%" y="597" width="0.0153%" height="15" fill="rgb(207,104,33)" fg:x="100664" fg:w="21"/><text x="73.8144%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (122 samples, 0.09%)</title><rect x="73.5644%" y="613" width="0.0892%" height="15" fill="rgb(219,21,39)" fg:x="100664" fg:w="122"/><text x="73.8144%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (101 samples, 0.07%)</title><rect x="73.5797%" y="597" width="0.0738%" height="15" fill="rgb(214,133,29)" fg:x="100685" fg:w="101"/><text x="73.8297%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (101 samples, 0.07%)</title><rect x="73.5797%" y="581" width="0.0738%" height="15" fill="rgb(226,93,6)" fg:x="100685" fg:w="101"/><text x="73.8297%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (95 samples, 0.07%)</title><rect x="73.5841%" y="565" width="0.0694%" height="15" fill="rgb(252,222,34)" fg:x="100691" fg:w="95"/><text x="73.8341%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (94 samples, 0.07%)</title><rect x="73.5848%" y="549" width="0.0687%" height="15" fill="rgb(252,92,48)" fg:x="100692" fg:w="94"/><text x="73.8348%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (94 samples, 0.07%)</title><rect x="73.5848%" y="533" width="0.0687%" height="15" fill="rgb(245,223,24)" fg:x="100692" fg:w="94"/><text x="73.8348%" y="543.50"></text></g><g><title>event_listener::TaskRef::into_task (339 samples, 0.25%)</title><rect x="73.6542%" y="613" width="0.2477%" height="15" fill="rgb(205,176,3)" fg:x="100787" fg:w="339"/><text x="73.9042%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (339 samples, 0.25%)</title><rect x="73.6542%" y="597" width="0.2477%" height="15" fill="rgb(235,151,15)" fg:x="100787" fg:w="339"/><text x="73.9042%" y="607.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (334 samples, 0.24%)</title><rect x="73.6579%" y="581" width="0.2441%" height="15" fill="rgb(237,209,11)" fg:x="100792" fg:w="334"/><text x="73.9079%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (178 samples, 0.13%)</title><rect x="73.7719%" y="565" width="0.1301%" height="15" fill="rgb(243,227,24)" fg:x="100948" fg:w="178"/><text x="74.0219%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (174 samples, 0.13%)</title><rect x="73.7748%" y="549" width="0.1272%" height="15" fill="rgb(239,193,16)" fg:x="100952" fg:w="174"/><text x="74.0248%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (174 samples, 0.13%)</title><rect x="73.7748%" y="533" width="0.1272%" height="15" fill="rgb(231,27,9)" fg:x="100952" fg:w="174"/><text x="74.0248%" y="543.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (694 samples, 0.51%)</title><rect x="73.4869%" y="661" width="0.5072%" height="15" fill="rgb(219,169,10)" fg:x="100558" fg:w="694"/><text x="73.7369%" y="671.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (679 samples, 0.50%)</title><rect x="73.4979%" y="645" width="0.4962%" height="15" fill="rgb(244,229,43)" fg:x="100573" fg:w="679"/><text x="73.7479%" y="655.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (630 samples, 0.46%)</title><rect x="73.5337%" y="629" width="0.4604%" height="15" fill="rgb(254,38,20)" fg:x="100622" fg:w="630"/><text x="73.7837%" y="639.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (126 samples, 0.09%)</title><rect x="73.9020%" y="613" width="0.0921%" height="15" fill="rgb(250,47,30)" fg:x="101126" fg:w="126"/><text x="74.1520%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (126 samples, 0.09%)</title><rect x="73.9020%" y="597" width="0.0921%" height="15" fill="rgb(224,124,36)" fg:x="101126" fg:w="126"/><text x="74.1520%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (113 samples, 0.08%)</title><rect x="73.9115%" y="581" width="0.0826%" height="15" fill="rgb(246,68,51)" fg:x="101139" fg:w="113"/><text x="74.1615%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (112 samples, 0.08%)</title><rect x="73.9122%" y="565" width="0.0818%" height="15" fill="rgb(253,43,49)" fg:x="101140" fg:w="112"/><text x="74.1622%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (112 samples, 0.08%)</title><rect x="73.9122%" y="549" width="0.0818%" height="15" fill="rgb(219,54,36)" fg:x="101140" fg:w="112"/><text x="74.1622%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,176 samples, 1.59%)</title><rect x="72.4068%" y="741" width="1.5902%" height="15" fill="rgb(227,133,34)" fg:x="99080" fg:w="2176"/><text x="72.6568%" y="751.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (2,170 samples, 1.59%)</title><rect x="72.4112%" y="725" width="1.5858%" height="15" fill="rgb(247,227,15)" fg:x="99086" fg:w="2170"/><text x="72.6612%" y="735.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (1,740 samples, 1.27%)</title><rect x="72.7254%" y="709" width="1.2716%" height="15" fill="rgb(229,96,14)" fg:x="99516" fg:w="1740"/><text x="72.9754%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,698 samples, 1.24%)</title><rect x="72.7561%" y="693" width="1.2409%" height="15" fill="rgb(220,79,17)" fg:x="99558" fg:w="1698"/><text x="73.0061%" y="703.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (698 samples, 0.51%)</title><rect x="73.4869%" y="677" width="0.5101%" height="15" fill="rgb(205,131,53)" fg:x="100558" fg:w="698"/><text x="73.7369%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (195 samples, 0.14%)</title><rect x="73.9970%" y="725" width="0.1425%" height="15" fill="rgb(209,50,29)" fg:x="101256" fg:w="195"/><text x="74.2470%" y="735.50"></text></g><g><title>core::ptr::swap (191 samples, 0.14%)</title><rect x="73.9999%" y="709" width="0.1396%" height="15" fill="rgb(245,86,46)" fg:x="101260" fg:w="191"/><text x="74.2499%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (186 samples, 0.14%)</title><rect x="74.0036%" y="693" width="0.1359%" height="15" fill="rgb(235,66,46)" fg:x="101265" fg:w="186"/><text x="74.2536%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (25 samples, 0.02%)</title><rect x="74.1410%" y="661" width="0.0183%" height="15" fill="rgb(232,148,31)" fg:x="101453" fg:w="25"/><text x="74.3910%" y="671.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (25 samples, 0.02%)</title><rect x="74.1410%" y="645" width="0.0183%" height="15" fill="rgb(217,149,8)" fg:x="101453" fg:w="25"/><text x="74.3910%" y="655.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (25 samples, 0.02%)</title><rect x="74.1410%" y="629" width="0.0183%" height="15" fill="rgb(209,183,11)" fg:x="101453" fg:w="25"/><text x="74.3910%" y="639.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,562 samples, 1.87%)</title><rect x="72.3103%" y="773" width="1.8723%" height="15" fill="rgb(208,55,20)" fg:x="98948" fg:w="2562"/><text x="72.5603%" y="783.50">&lt;..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (2,562 samples, 1.87%)</title><rect x="72.3103%" y="757" width="1.8723%" height="15" fill="rgb(218,39,14)" fg:x="98948" fg:w="2562"/><text x="72.5603%" y="767.50">w..</text></g><g><title>futures_util::async_await::random::shuffle (254 samples, 0.19%)</title><rect x="73.9970%" y="741" width="0.1856%" height="15" fill="rgb(216,169,33)" fg:x="101256" fg:w="254"/><text x="74.2470%" y="751.50"></text></g><g><title>futures_util::async_await::random::gen_index (59 samples, 0.04%)</title><rect x="74.1395%" y="725" width="0.0431%" height="15" fill="rgb(233,80,24)" fg:x="101451" fg:w="59"/><text x="74.3895%" y="735.50"></text></g><g><title>futures_util::async_await::random::random (57 samples, 0.04%)</title><rect x="74.1410%" y="709" width="0.0417%" height="15" fill="rgb(213,179,31)" fg:x="101453" fg:w="57"/><text x="74.3910%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57 samples, 0.04%)</title><rect x="74.1410%" y="693" width="0.0417%" height="15" fill="rgb(209,19,5)" fg:x="101453" fg:w="57"/><text x="74.3910%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57 samples, 0.04%)</title><rect x="74.1410%" y="677" width="0.0417%" height="15" fill="rgb(219,18,35)" fg:x="101453" fg:w="57"/><text x="74.3910%" y="687.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (32 samples, 0.02%)</title><rect x="74.1592%" y="661" width="0.0234%" height="15" fill="rgb(209,169,16)" fg:x="101478" fg:w="32"/><text x="74.4092%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16 samples, 0.01%)</title><rect x="74.2067%" y="693" width="0.0117%" height="15" fill="rgb(245,90,51)" fg:x="101543" fg:w="16"/><text x="74.4567%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="74.2045%" y="725" width="0.0175%" height="15" fill="rgb(220,99,45)" fg:x="101540" fg:w="24"/><text x="74.4545%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="74.2045%" y="709" width="0.0175%" height="15" fill="rgb(249,89,25)" fg:x="101540" fg:w="24"/><text x="74.4545%" y="719.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.06%)</title><rect x="74.1863%" y="757" width="0.0592%" height="15" fill="rgb(239,193,0)" fg:x="101515" fg:w="81"/><text x="74.4363%" y="767.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (81 samples, 0.06%)</title><rect x="74.1863%" y="741" width="0.0592%" height="15" fill="rgb(231,126,1)" fg:x="101515" fg:w="81"/><text x="74.4363%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,flume::async::AsyncSignal&gt;&gt;&gt;&gt; (16 samples, 0.01%)</title><rect x="74.2455%" y="757" width="0.0117%" height="15" fill="rgb(243,166,3)" fg:x="101596" fg:w="16"/><text x="74.4955%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (108 samples, 0.08%)</title><rect x="74.1855%" y="773" width="0.0789%" height="15" fill="rgb(223,22,34)" fg:x="101514" fg:w="108"/><text x="74.4355%" y="783.50"></text></g><g><title>sz_index2size (15 samples, 0.01%)</title><rect x="74.2995%" y="709" width="0.0110%" height="15" fill="rgb(251,52,51)" fg:x="101670" fg:w="15"/><text x="74.5495%" y="719.50"></text></g><g><title>sz_index2size_lookup (15 samples, 0.01%)</title><rect x="74.2995%" y="693" width="0.0110%" height="15" fill="rgb(221,165,28)" fg:x="101670" fg:w="15"/><text x="74.5495%" y="703.50"></text></g><g><title>sz_index2size_lookup_impl (15 samples, 0.01%)</title><rect x="74.2995%" y="677" width="0.0110%" height="15" fill="rgb(218,121,47)" fg:x="101670" fg:w="15"/><text x="74.5495%" y="687.50"></text></g><g><title>_rjem_sdallocx (66 samples, 0.05%)</title><rect x="74.2652%" y="741" width="0.0482%" height="15" fill="rgb(209,120,9)" fg:x="101623" fg:w="66"/><text x="74.5152%" y="751.50"></text></g><g><title>free_fastpath (66 samples, 0.05%)</title><rect x="74.2652%" y="725" width="0.0482%" height="15" fill="rgb(236,68,12)" fg:x="101623" fg:w="66"/><text x="74.5152%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (143 samples, 0.10%)</title><rect x="74.3200%" y="677" width="0.1045%" height="15" fill="rgb(225,194,26)" fg:x="101698" fg:w="143"/><text x="74.5700%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (143 samples, 0.10%)</title><rect x="74.3200%" y="661" width="0.1045%" height="15" fill="rgb(231,84,39)" fg:x="101698" fg:w="143"/><text x="74.5700%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (135 samples, 0.10%)</title><rect x="74.3258%" y="645" width="0.0987%" height="15" fill="rgb(210,11,45)" fg:x="101706" fg:w="135"/><text x="74.5758%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_sub (135 samples, 0.10%)</title><rect x="74.3258%" y="629" width="0.0987%" height="15" fill="rgb(224,54,52)" fg:x="101706" fg:w="135"/><text x="74.5758%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (109 samples, 0.08%)</title><rect x="74.4428%" y="645" width="0.0797%" height="15" fill="rgb(238,102,14)" fg:x="101866" fg:w="109"/><text x="74.6928%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (96 samples, 0.07%)</title><rect x="74.4523%" y="629" width="0.0702%" height="15" fill="rgb(243,160,52)" fg:x="101879" fg:w="96"/><text x="74.7023%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (94 samples, 0.07%)</title><rect x="74.4537%" y="613" width="0.0687%" height="15" fill="rgb(216,114,19)" fg:x="101881" fg:w="94"/><text x="74.7037%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (86 samples, 0.06%)</title><rect x="74.4596%" y="597" width="0.0628%" height="15" fill="rgb(244,166,37)" fg:x="101889" fg:w="86"/><text x="74.7096%" y="607.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (86 samples, 0.06%)</title><rect x="74.4596%" y="581" width="0.0628%" height="15" fill="rgb(246,29,44)" fg:x="101889" fg:w="86"/><text x="74.7096%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (86 samples, 0.06%)</title><rect x="74.4596%" y="565" width="0.0628%" height="15" fill="rgb(215,56,53)" fg:x="101889" fg:w="86"/><text x="74.7096%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (81 samples, 0.06%)</title><rect x="74.4632%" y="549" width="0.0592%" height="15" fill="rgb(217,60,2)" fg:x="101894" fg:w="81"/><text x="74.7132%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (80 samples, 0.06%)</title><rect x="74.4640%" y="533" width="0.0585%" height="15" fill="rgb(207,26,24)" fg:x="101895" fg:w="80"/><text x="74.7140%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (76 samples, 0.06%)</title><rect x="74.4669%" y="517" width="0.0555%" height="15" fill="rgb(252,210,15)" fg:x="101899" fg:w="76"/><text x="74.7169%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (76 samples, 0.06%)</title><rect x="74.4669%" y="501" width="0.0555%" height="15" fill="rgb(253,209,26)" fg:x="101899" fg:w="76"/><text x="74.7169%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (185 samples, 0.14%)</title><rect x="74.5305%" y="629" width="0.1352%" height="15" fill="rgb(238,170,14)" fg:x="101986" fg:w="185"/><text x="74.7805%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (177 samples, 0.13%)</title><rect x="74.5363%" y="613" width="0.1294%" height="15" fill="rgb(216,178,15)" fg:x="101994" fg:w="177"/><text x="74.7863%" y="623.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (177 samples, 0.13%)</title><rect x="74.5363%" y="597" width="0.1294%" height="15" fill="rgb(250,197,2)" fg:x="101994" fg:w="177"/><text x="74.7863%" y="607.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (168 samples, 0.12%)</title><rect x="74.5429%" y="581" width="0.1228%" height="15" fill="rgb(212,70,42)" fg:x="102003" fg:w="168"/><text x="74.7929%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (164 samples, 0.12%)</title><rect x="74.5458%" y="565" width="0.1198%" height="15" fill="rgb(227,213,9)" fg:x="102007" fg:w="164"/><text x="74.7958%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_swap (164 samples, 0.12%)</title><rect x="74.5458%" y="549" width="0.1198%" height="15" fill="rgb(245,99,25)" fg:x="102007" fg:w="164"/><text x="74.7958%" y="559.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (17 samples, 0.01%)</title><rect x="74.6657%" y="597" width="0.0124%" height="15" fill="rgb(250,82,29)" fg:x="102171" fg:w="17"/><text x="74.9157%" y="607.50"></text></g><g><title>std::sync::poison::Flag::guard (17 samples, 0.01%)</title><rect x="74.6657%" y="581" width="0.0124%" height="15" fill="rgb(241,226,54)" fg:x="102171" fg:w="17"/><text x="74.9157%" y="591.50"></text></g><g><title>std::thread::panicking (15 samples, 0.01%)</title><rect x="74.6671%" y="565" width="0.0110%" height="15" fill="rgb(221,99,41)" fg:x="102173" fg:w="15"/><text x="74.9171%" y="575.50"></text></g><g><title>std::panicking::panicking (15 samples, 0.01%)</title><rect x="74.6671%" y="549" width="0.0110%" height="15" fill="rgb(213,90,21)" fg:x="102173" fg:w="15"/><text x="74.9171%" y="559.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (15 samples, 0.01%)</title><rect x="74.6671%" y="533" width="0.0110%" height="15" fill="rgb(205,208,24)" fg:x="102173" fg:w="15"/><text x="74.9171%" y="543.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (199 samples, 0.15%)</title><rect x="74.6657%" y="629" width="0.1454%" height="15" fill="rgb(246,31,12)" fg:x="102171" fg:w="199"/><text x="74.9157%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (199 samples, 0.15%)</title><rect x="74.6657%" y="613" width="0.1454%" height="15" fill="rgb(213,154,6)" fg:x="102171" fg:w="199"/><text x="74.9157%" y="623.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (182 samples, 0.13%)</title><rect x="74.6781%" y="597" width="0.1330%" height="15" fill="rgb(222,163,29)" fg:x="102188" fg:w="182"/><text x="74.9281%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (181 samples, 0.13%)</title><rect x="74.6788%" y="581" width="0.1323%" height="15" fill="rgb(227,201,8)" fg:x="102189" fg:w="181"/><text x="74.9288%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (181 samples, 0.13%)</title><rect x="74.6788%" y="565" width="0.1323%" height="15" fill="rgb(233,9,32)" fg:x="102189" fg:w="181"/><text x="74.9288%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (819 samples, 0.60%)</title><rect x="74.2645%" y="773" width="0.5985%" height="15" fill="rgb(217,54,24)" fg:x="101622" fg:w="819"/><text x="74.5145%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (819 samples, 0.60%)</title><rect x="74.2645%" y="757" width="0.5985%" height="15" fill="rgb(235,192,0)" fg:x="101622" fg:w="819"/><text x="74.5145%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (752 samples, 0.55%)</title><rect x="74.3134%" y="741" width="0.5496%" height="15" fill="rgb(235,45,9)" fg:x="101689" fg:w="752"/><text x="74.5634%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (750 samples, 0.55%)</title><rect x="74.3149%" y="725" width="0.5481%" height="15" fill="rgb(246,42,40)" fg:x="101691" fg:w="750"/><text x="74.5649%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (750 samples, 0.55%)</title><rect x="74.3149%" y="709" width="0.5481%" height="15" fill="rgb(248,111,24)" fg:x="101691" fg:w="750"/><text x="74.5649%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (743 samples, 0.54%)</title><rect x="74.3200%" y="693" width="0.5430%" height="15" fill="rgb(249,65,22)" fg:x="101698" fg:w="743"/><text x="74.5700%" y="703.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (597 samples, 0.44%)</title><rect x="74.4267%" y="677" width="0.4363%" height="15" fill="rgb(238,111,51)" fg:x="101844" fg:w="597"/><text x="74.6767%" y="687.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (597 samples, 0.44%)</title><rect x="74.4267%" y="661" width="0.4363%" height="15" fill="rgb(250,118,22)" fg:x="101844" fg:w="597"/><text x="74.6767%" y="671.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (466 samples, 0.34%)</title><rect x="74.5224%" y="645" width="0.3405%" height="15" fill="rgb(234,84,26)" fg:x="101975" fg:w="466"/><text x="74.7724%" y="655.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (71 samples, 0.05%)</title><rect x="74.8111%" y="629" width="0.0519%" height="15" fill="rgb(243,172,12)" fg:x="102370" fg:w="71"/><text x="75.0611%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (116 samples, 0.08%)</title><rect x="74.8659%" y="773" width="0.0848%" height="15" fill="rgb(236,150,49)" fg:x="102445" fg:w="116"/><text x="75.1159%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (112 samples, 0.08%)</title><rect x="74.8688%" y="757" width="0.0818%" height="15" fill="rgb(225,197,26)" fg:x="102449" fg:w="112"/><text x="75.1188%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (160 samples, 0.12%)</title><rect x="74.9507%" y="773" width="0.1169%" height="15" fill="rgb(214,17,42)" fg:x="102561" fg:w="160"/><text x="75.2007%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (160 samples, 0.12%)</title><rect x="74.9507%" y="757" width="0.1169%" height="15" fill="rgb(224,165,40)" fg:x="102561" fg:w="160"/><text x="75.2007%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (348 samples, 0.25%)</title><rect x="75.0727%" y="757" width="0.2543%" height="15" fill="rgb(246,100,4)" fg:x="102728" fg:w="348"/><text x="75.3227%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (339 samples, 0.25%)</title><rect x="75.0793%" y="741" width="0.2477%" height="15" fill="rgb(222,103,0)" fg:x="102737" fg:w="339"/><text x="75.3293%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (339 samples, 0.25%)</title><rect x="75.0793%" y="725" width="0.2477%" height="15" fill="rgb(227,189,26)" fg:x="102737" fg:w="339"/><text x="75.3293%" y="735.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (22 samples, 0.02%)</title><rect x="75.4023%" y="517" width="0.0161%" height="15" fill="rgb(214,202,17)" fg:x="103179" fg:w="22"/><text x="75.6523%" y="527.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (21 samples, 0.02%)</title><rect x="75.4030%" y="501" width="0.0153%" height="15" fill="rgb(229,111,3)" fg:x="103180" fg:w="21"/><text x="75.6530%" y="511.50"></text></g><g><title>imalloc_no_sample (24 samples, 0.02%)</title><rect x="75.4023%" y="581" width="0.0175%" height="15" fill="rgb(229,172,15)" fg:x="103179" fg:w="24"/><text x="75.6523%" y="591.50"></text></g><g><title>iallocztm (24 samples, 0.02%)</title><rect x="75.4023%" y="565" width="0.0175%" height="15" fill="rgb(230,224,35)" fg:x="103179" fg:w="24"/><text x="75.6523%" y="575.50"></text></g><g><title>arena_malloc (24 samples, 0.02%)</title><rect x="75.4023%" y="549" width="0.0175%" height="15" fill="rgb(251,141,6)" fg:x="103179" fg:w="24"/><text x="75.6523%" y="559.50"></text></g><g><title>tcache_alloc_small (24 samples, 0.02%)</title><rect x="75.4023%" y="533" width="0.0175%" height="15" fill="rgb(225,208,6)" fg:x="103179" fg:w="24"/><text x="75.6523%" y="543.50"></text></g><g><title>_rjem_je_malloc_default (37 samples, 0.03%)</title><rect x="75.4016%" y="629" width="0.0270%" height="15" fill="rgb(246,181,16)" fg:x="103178" fg:w="37"/><text x="75.6516%" y="639.50"></text></g><g><title>imalloc (36 samples, 0.03%)</title><rect x="75.4023%" y="613" width="0.0263%" height="15" fill="rgb(227,129,36)" fg:x="103179" fg:w="36"/><text x="75.6523%" y="623.50"></text></g><g><title>imalloc_body (36 samples, 0.03%)</title><rect x="75.4023%" y="597" width="0.0263%" height="15" fill="rgb(248,117,24)" fg:x="103179" fg:w="36"/><text x="75.6523%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (97 samples, 0.07%)</title><rect x="75.7085%" y="597" width="0.0709%" height="15" fill="rgb(214,185,35)" fg:x="103598" fg:w="97"/><text x="75.9585%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (97 samples, 0.07%)</title><rect x="75.7085%" y="581" width="0.0709%" height="15" fill="rgb(236,150,34)" fg:x="103598" fg:w="97"/><text x="75.9585%" y="591.50"></text></g><g><title>sz_index2size_lookup_impl (28 samples, 0.02%)</title><rect x="75.7830%" y="581" width="0.0205%" height="15" fill="rgb(243,228,27)" fg:x="103700" fg:w="28"/><text x="76.0330%" y="591.50"></text></g><g><title>sz_size2index_usize_fastpath (45 samples, 0.03%)</title><rect x="75.7830%" y="597" width="0.0329%" height="15" fill="rgb(245,77,44)" fg:x="103700" fg:w="45"/><text x="76.0330%" y="607.50"></text></g><g><title>sz_size2index_lookup_impl (17 samples, 0.01%)</title><rect x="75.8035%" y="581" width="0.0124%" height="15" fill="rgb(235,214,42)" fg:x="103728" fg:w="17"/><text x="76.0535%" y="591.50"></text></g><g><title>__rust_alloc (574 samples, 0.42%)</title><rect x="75.3986%" y="661" width="0.4195%" height="15" fill="rgb(221,74,3)" fg:x="103174" fg:w="574"/><text x="75.6486%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (574 samples, 0.42%)</title><rect x="75.3986%" y="645" width="0.4195%" height="15" fill="rgb(206,121,29)" fg:x="103174" fg:w="574"/><text x="75.6486%" y="655.50"></text></g><g><title>_rjem_malloc (533 samples, 0.39%)</title><rect x="75.4286%" y="629" width="0.3895%" height="15" fill="rgb(249,131,53)" fg:x="103215" fg:w="533"/><text x="75.6786%" y="639.50"></text></g><g><title>imalloc_fastpath (530 samples, 0.39%)</title><rect x="75.4308%" y="613" width="0.3873%" height="15" fill="rgb(236,170,29)" fg:x="103218" fg:w="530"/><text x="75.6808%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (675 samples, 0.49%)</title><rect x="75.3270%" y="757" width="0.4933%" height="15" fill="rgb(247,96,15)" fg:x="103076" fg:w="675"/><text x="75.5770%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (675 samples, 0.49%)</title><rect x="75.3270%" y="741" width="0.4933%" height="15" fill="rgb(211,210,7)" fg:x="103076" fg:w="675"/><text x="75.5770%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (581 samples, 0.42%)</title><rect x="75.3957%" y="725" width="0.4246%" height="15" fill="rgb(240,88,50)" fg:x="103170" fg:w="581"/><text x="75.6457%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (577 samples, 0.42%)</title><rect x="75.3986%" y="709" width="0.4217%" height="15" fill="rgb(209,229,26)" fg:x="103174" fg:w="577"/><text x="75.6486%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (577 samples, 0.42%)</title><rect x="75.3986%" y="693" width="0.4217%" height="15" fill="rgb(210,68,23)" fg:x="103174" fg:w="577"/><text x="75.6486%" y="703.50"></text></g><g><title>alloc::alloc::alloc (577 samples, 0.42%)</title><rect x="75.3986%" y="677" width="0.4217%" height="15" fill="rgb(229,180,13)" fg:x="103174" fg:w="577"/><text x="75.6486%" y="687.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (22 samples, 0.02%)</title><rect x="75.8488%" y="725" width="0.0161%" height="15" fill="rgb(236,53,44)" fg:x="103790" fg:w="22"/><text x="76.0988%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (14 samples, 0.01%)</title><rect x="75.8751%" y="677" width="0.0102%" height="15" fill="rgb(244,214,29)" fg:x="103826" fg:w="14"/><text x="76.1251%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (173 samples, 0.13%)</title><rect x="75.8649%" y="725" width="0.1264%" height="15" fill="rgb(220,75,29)" fg:x="103812" fg:w="173"/><text x="76.1149%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (160 samples, 0.12%)</title><rect x="75.8744%" y="709" width="0.1169%" height="15" fill="rgb(214,183,37)" fg:x="103825" fg:w="160"/><text x="76.1244%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.12%)</title><rect x="75.8744%" y="693" width="0.1169%" height="15" fill="rgb(239,117,29)" fg:x="103825" fg:w="160"/><text x="76.1244%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (145 samples, 0.11%)</title><rect x="75.8854%" y="677" width="0.1060%" height="15" fill="rgb(237,171,35)" fg:x="103840" fg:w="145"/><text x="76.1354%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (139 samples, 0.10%)</title><rect x="75.8897%" y="661" width="0.1016%" height="15" fill="rgb(229,178,53)" fg:x="103846" fg:w="139"/><text x="76.1397%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (139 samples, 0.10%)</title><rect x="75.8897%" y="645" width="0.1016%" height="15" fill="rgb(210,102,19)" fg:x="103846" fg:w="139"/><text x="76.1397%" y="655.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (1,492 samples, 1.09%)</title><rect x="75.0676%" y="773" width="1.0903%" height="15" fill="rgb(235,127,22)" fg:x="102721" fg:w="1492"/><text x="75.3176%" y="783.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (450 samples, 0.33%)</title><rect x="75.8291%" y="757" width="0.3289%" height="15" fill="rgb(244,31,31)" fg:x="103763" fg:w="450"/><text x="76.0791%" y="767.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (450 samples, 0.33%)</title><rect x="75.8291%" y="741" width="0.3289%" height="15" fill="rgb(231,43,21)" fg:x="103763" fg:w="450"/><text x="76.0791%" y="751.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (228 samples, 0.17%)</title><rect x="75.9913%" y="725" width="0.1666%" height="15" fill="rgb(217,131,35)" fg:x="103985" fg:w="228"/><text x="76.2413%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (228 samples, 0.17%)</title><rect x="75.9913%" y="709" width="0.1666%" height="15" fill="rgb(221,149,4)" fg:x="103985" fg:w="228"/><text x="76.2413%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (218 samples, 0.16%)</title><rect x="75.9986%" y="693" width="0.1593%" height="15" fill="rgb(232,170,28)" fg:x="103995" fg:w="218"/><text x="76.2486%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (214 samples, 0.16%)</title><rect x="76.0015%" y="677" width="0.1564%" height="15" fill="rgb(238,56,10)" fg:x="103999" fg:w="214"/><text x="76.2515%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (214 samples, 0.16%)</title><rect x="76.0015%" y="661" width="0.1564%" height="15" fill="rgb(235,196,14)" fg:x="103999" fg:w="214"/><text x="76.2515%" y="671.50"></text></g><g><title>extent_recycle_split (15 samples, 0.01%)</title><rect x="76.1996%" y="357" width="0.0110%" height="15" fill="rgb(216,45,48)" fg:x="104270" fg:w="15"/><text x="76.4496%" y="367.50"></text></g><g><title>extent_split_interior (14 samples, 0.01%)</title><rect x="76.2003%" y="341" width="0.0102%" height="15" fill="rgb(238,213,17)" fg:x="104271" fg:w="14"/><text x="76.4503%" y="351.50"></text></g><g><title>extent_split_impl (14 samples, 0.01%)</title><rect x="76.2003%" y="325" width="0.0102%" height="15" fill="rgb(212,13,2)" fg:x="104271" fg:w="14"/><text x="76.4503%" y="335.50"></text></g><g><title>_rjem_je_ecache_alloc (26 samples, 0.02%)</title><rect x="76.1937%" y="389" width="0.0190%" height="15" fill="rgb(240,114,20)" fg:x="104262" fg:w="26"/><text x="76.4437%" y="399.50"></text></g><g><title>extent_recycle (26 samples, 0.02%)</title><rect x="76.1937%" y="373" width="0.0190%" height="15" fill="rgb(228,41,40)" fg:x="104262" fg:w="26"/><text x="76.4437%" y="383.50"></text></g><g><title>pac_alloc_real (28 samples, 0.02%)</title><rect x="76.1930%" y="405" width="0.0205%" height="15" fill="rgb(244,132,35)" fg:x="104261" fg:w="28"/><text x="76.4430%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (31 samples, 0.02%)</title><rect x="76.1923%" y="453" width="0.0227%" height="15" fill="rgb(253,189,4)" fg:x="104260" fg:w="31"/><text x="76.4423%" y="463.50"></text></g><g><title>pai_alloc (31 samples, 0.02%)</title><rect x="76.1923%" y="437" width="0.0227%" height="15" fill="rgb(224,37,19)" fg:x="104260" fg:w="31"/><text x="76.4423%" y="447.50"></text></g><g><title>pac_alloc_impl (31 samples, 0.02%)</title><rect x="76.1923%" y="421" width="0.0227%" height="15" fill="rgb(235,223,18)" fg:x="104260" fg:w="31"/><text x="76.4423%" y="431.50"></text></g><g><title>arena_slab_alloc (33 samples, 0.02%)</title><rect x="76.1916%" y="469" width="0.0241%" height="15" fill="rgb(235,163,25)" fg:x="104259" fg:w="33"/><text x="76.4416%" y="479.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (48 samples, 0.04%)</title><rect x="76.1894%" y="501" width="0.0351%" height="15" fill="rgb(217,145,28)" fg:x="104256" fg:w="48"/><text x="76.4394%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (48 samples, 0.04%)</title><rect x="76.1894%" y="485" width="0.0351%" height="15" fill="rgb(223,223,32)" fg:x="104256" fg:w="48"/><text x="76.4394%" y="495.50"></text></g><g><title>imalloc_no_sample (50 samples, 0.04%)</title><rect x="76.1886%" y="565" width="0.0365%" height="15" fill="rgb(227,189,39)" fg:x="104255" fg:w="50"/><text x="76.4386%" y="575.50"></text></g><g><title>iallocztm (50 samples, 0.04%)</title><rect x="76.1886%" y="549" width="0.0365%" height="15" fill="rgb(248,10,22)" fg:x="104255" fg:w="50"/><text x="76.4386%" y="559.50"></text></g><g><title>arena_malloc (50 samples, 0.04%)</title><rect x="76.1886%" y="533" width="0.0365%" height="15" fill="rgb(248,46,39)" fg:x="104255" fg:w="50"/><text x="76.4386%" y="543.50"></text></g><g><title>tcache_alloc_small (50 samples, 0.04%)</title><rect x="76.1886%" y="517" width="0.0365%" height="15" fill="rgb(248,113,48)" fg:x="104255" fg:w="50"/><text x="76.4386%" y="527.50"></text></g><g><title>_rjem_je_malloc_default (52 samples, 0.04%)</title><rect x="76.1879%" y="613" width="0.0380%" height="15" fill="rgb(245,16,25)" fg:x="104254" fg:w="52"/><text x="76.4379%" y="623.50"></text></g><g><title>imalloc (51 samples, 0.04%)</title><rect x="76.1886%" y="597" width="0.0373%" height="15" fill="rgb(249,152,16)" fg:x="104255" fg:w="51"/><text x="76.4386%" y="607.50"></text></g><g><title>imalloc_body (51 samples, 0.04%)</title><rect x="76.1886%" y="581" width="0.0373%" height="15" fill="rgb(250,16,1)" fg:x="104255" fg:w="51"/><text x="76.4386%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (15 samples, 0.01%)</title><rect x="76.2310%" y="581" width="0.0110%" height="15" fill="rgb(249,138,3)" fg:x="104313" fg:w="15"/><text x="76.4810%" y="591.50"></text></g><g><title>cache_bin_alloc_impl (15 samples, 0.01%)</title><rect x="76.2310%" y="565" width="0.0110%" height="15" fill="rgb(227,71,41)" fg:x="104313" fg:w="15"/><text x="76.4810%" y="575.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame (86 samples, 0.06%)</title><rect x="76.1806%" y="757" width="0.0628%" height="15" fill="rgb(209,184,23)" fg:x="104244" fg:w="86"/><text x="76.4306%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (86 samples, 0.06%)</title><rect x="76.1806%" y="741" width="0.0628%" height="15" fill="rgb(223,215,31)" fg:x="104244" fg:w="86"/><text x="76.4306%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (86 samples, 0.06%)</title><rect x="76.1806%" y="725" width="0.0628%" height="15" fill="rgb(210,146,28)" fg:x="104244" fg:w="86"/><text x="76.4306%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (76 samples, 0.06%)</title><rect x="76.1879%" y="709" width="0.0555%" height="15" fill="rgb(209,183,41)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (76 samples, 0.06%)</title><rect x="76.1879%" y="693" width="0.0555%" height="15" fill="rgb(209,224,45)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (76 samples, 0.06%)</title><rect x="76.1879%" y="677" width="0.0555%" height="15" fill="rgb(224,209,51)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="687.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.06%)</title><rect x="76.1879%" y="661" width="0.0555%" height="15" fill="rgb(223,17,39)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="671.50"></text></g><g><title>__rust_alloc (76 samples, 0.06%)</title><rect x="76.1879%" y="645" width="0.0555%" height="15" fill="rgb(234,204,37)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (76 samples, 0.06%)</title><rect x="76.1879%" y="629" width="0.0555%" height="15" fill="rgb(236,120,5)" fg:x="104254" fg:w="76"/><text x="76.4379%" y="639.50"></text></g><g><title>_rjem_malloc (24 samples, 0.02%)</title><rect x="76.2259%" y="613" width="0.0175%" height="15" fill="rgb(248,97,27)" fg:x="104306" fg:w="24"/><text x="76.4759%" y="623.50"></text></g><g><title>imalloc_fastpath (24 samples, 0.02%)</title><rect x="76.2259%" y="597" width="0.0175%" height="15" fill="rgb(240,66,17)" fg:x="104306" fg:w="24"/><text x="76.4759%" y="607.50"></text></g><g><title>__send (17 samples, 0.01%)</title><rect x="76.3056%" y="437" width="0.0124%" height="15" fill="rgb(210,79,3)" fg:x="104415" fg:w="17"/><text x="76.5556%" y="447.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (18 samples, 0.01%)</title><rect x="76.3056%" y="533" width="0.0132%" height="15" fill="rgb(214,176,27)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="543.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (18 samples, 0.01%)</title><rect x="76.3056%" y="517" width="0.0132%" height="15" fill="rgb(235,185,3)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="527.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (18 samples, 0.01%)</title><rect x="76.3056%" y="501" width="0.0132%" height="15" fill="rgb(227,24,12)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (18 samples, 0.01%)</title><rect x="76.3056%" y="485" width="0.0132%" height="15" fill="rgb(252,169,48)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="495.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (18 samples, 0.01%)</title><rect x="76.3056%" y="469" width="0.0132%" height="15" fill="rgb(212,65,1)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="479.50"></text></g><g><title>std::sys_common::net::TcpStream::write (18 samples, 0.01%)</title><rect x="76.3056%" y="453" width="0.0132%" height="15" fill="rgb(242,39,24)" fg:x="104415" fg:w="18"/><text x="76.5556%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (28 samples, 0.02%)</title><rect x="76.3019%" y="613" width="0.0205%" height="15" fill="rgb(249,32,23)" fg:x="104410" fg:w="28"/><text x="76.5519%" y="623.50"></text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (28 samples, 0.02%)</title><rect x="76.3019%" y="597" width="0.0205%" height="15" fill="rgb(251,195,23)" fg:x="104410" fg:w="28"/><text x="76.5519%" y="607.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (26 samples, 0.02%)</title><rect x="76.3034%" y="581" width="0.0190%" height="15" fill="rgb(236,174,8)" fg:x="104412" fg:w="26"/><text x="76.5534%" y="591.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (25 samples, 0.02%)</title><rect x="76.3041%" y="565" width="0.0183%" height="15" fill="rgb(220,197,8)" fg:x="104413" fg:w="25"/><text x="76.5541%" y="575.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (24 samples, 0.02%)</title><rect x="76.3048%" y="549" width="0.0175%" height="15" fill="rgb(240,108,37)" fg:x="104414" fg:w="24"/><text x="76.5548%" y="559.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="76.3019%" y="629" width="0.0219%" height="15" fill="rgb(232,176,24)" fg:x="104410" fg:w="30"/><text x="76.5519%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (16 samples, 0.01%)</title><rect x="76.3326%" y="613" width="0.0117%" height="15" fill="rgb(243,35,29)" fg:x="104452" fg:w="16"/><text x="76.5826%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="76.3326%" y="597" width="0.0117%" height="15" fill="rgb(210,37,18)" fg:x="104452" fg:w="16"/><text x="76.5826%" y="607.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="76.3326%" y="581" width="0.0117%" height="15" fill="rgb(224,184,40)" fg:x="104452" fg:w="16"/><text x="76.5826%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (105 samples, 0.08%)</title><rect x="76.2683%" y="693" width="0.0767%" height="15" fill="rgb(236,39,29)" fg:x="104364" fg:w="105"/><text x="76.5183%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (105 samples, 0.08%)</title><rect x="76.2683%" y="677" width="0.0767%" height="15" fill="rgb(232,48,39)" fg:x="104364" fg:w="105"/><text x="76.5183%" y="687.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (85 samples, 0.06%)</title><rect x="76.2829%" y="661" width="0.0621%" height="15" fill="rgb(236,34,42)" fg:x="104384" fg:w="85"/><text x="76.5329%" y="671.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (68 samples, 0.05%)</title><rect x="76.2953%" y="645" width="0.0497%" height="15" fill="rgb(243,106,37)" fg:x="104401" fg:w="68"/><text x="76.5453%" y="655.50"></text></g><g><title>fastwebsockets::frame::Frame::write (18 samples, 0.01%)</title><rect x="76.3319%" y="629" width="0.0132%" height="15" fill="rgb(218,96,6)" fg:x="104451" fg:w="18"/><text x="76.5819%" y="639.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (24 samples, 0.02%)</title><rect x="76.3538%" y="437" width="0.0175%" height="15" fill="rgb(235,130,12)" fg:x="104481" fg:w="24"/><text x="76.6038%" y="447.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (22 samples, 0.02%)</title><rect x="76.3553%" y="421" width="0.0161%" height="15" fill="rgb(231,95,0)" fg:x="104483" fg:w="22"/><text x="76.6053%" y="431.50"></text></g><g><title>_rjem_je_malloc_default (27 samples, 0.02%)</title><rect x="76.3531%" y="549" width="0.0197%" height="15" fill="rgb(228,12,23)" fg:x="104480" fg:w="27"/><text x="76.6031%" y="559.50"></text></g><g><title>imalloc (27 samples, 0.02%)</title><rect x="76.3531%" y="533" width="0.0197%" height="15" fill="rgb(216,12,1)" fg:x="104480" fg:w="27"/><text x="76.6031%" y="543.50"></text></g><g><title>imalloc_body (27 samples, 0.02%)</title><rect x="76.3531%" y="517" width="0.0197%" height="15" fill="rgb(219,59,3)" fg:x="104480" fg:w="27"/><text x="76.6031%" y="527.50"></text></g><g><title>imalloc_no_sample (26 samples, 0.02%)</title><rect x="76.3538%" y="501" width="0.0190%" height="15" fill="rgb(215,208,46)" fg:x="104481" fg:w="26"/><text x="76.6038%" y="511.50"></text></g><g><title>iallocztm (26 samples, 0.02%)</title><rect x="76.3538%" y="485" width="0.0190%" height="15" fill="rgb(254,224,29)" fg:x="104481" fg:w="26"/><text x="76.6038%" y="495.50"></text></g><g><title>arena_malloc (26 samples, 0.02%)</title><rect x="76.3538%" y="469" width="0.0190%" height="15" fill="rgb(232,14,29)" fg:x="104481" fg:w="26"/><text x="76.6038%" y="479.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.02%)</title><rect x="76.3538%" y="453" width="0.0190%" height="15" fill="rgb(208,45,52)" fg:x="104481" fg:w="26"/><text x="76.6038%" y="463.50"></text></g><g><title>__rust_alloc (48 samples, 0.04%)</title><rect x="76.3531%" y="581" width="0.0351%" height="15" fill="rgb(234,191,28)" fg:x="104480" fg:w="48"/><text x="76.6031%" y="591.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (48 samples, 0.04%)</title><rect x="76.3531%" y="565" width="0.0351%" height="15" fill="rgb(244,67,43)" fg:x="104480" fg:w="48"/><text x="76.6031%" y="575.50"></text></g><g><title>_rjem_malloc (21 samples, 0.02%)</title><rect x="76.3728%" y="549" width="0.0153%" height="15" fill="rgb(236,189,24)" fg:x="104507" fg:w="21"/><text x="76.6228%" y="559.50"></text></g><g><title>imalloc_fastpath (21 samples, 0.02%)</title><rect x="76.3728%" y="533" width="0.0153%" height="15" fill="rgb(239,214,33)" fg:x="104507" fg:w="21"/><text x="76.6228%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (19 samples, 0.01%)</title><rect x="76.3743%" y="517" width="0.0139%" height="15" fill="rgb(226,176,41)" fg:x="104509" fg:w="19"/><text x="76.6243%" y="527.50"></text></g><g><title>cache_bin_alloc_impl (19 samples, 0.01%)</title><rect x="76.3743%" y="501" width="0.0139%" height="15" fill="rgb(248,47,8)" fg:x="104509" fg:w="19"/><text x="76.6243%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (179 samples, 0.13%)</title><rect x="76.2610%" y="725" width="0.1308%" height="15" fill="rgb(218,81,44)" fg:x="104354" fg:w="179"/><text x="76.5110%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (179 samples, 0.13%)</title><rect x="76.2610%" y="709" width="0.1308%" height="15" fill="rgb(213,98,6)" fg:x="104354" fg:w="179"/><text x="76.5110%" y="719.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (59 samples, 0.04%)</title><rect x="76.3487%" y="693" width="0.0431%" height="15" fill="rgb(222,85,22)" fg:x="104474" fg:w="59"/><text x="76.5987%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (59 samples, 0.04%)</title><rect x="76.3487%" y="677" width="0.0431%" height="15" fill="rgb(239,46,39)" fg:x="104474" fg:w="59"/><text x="76.5987%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (59 samples, 0.04%)</title><rect x="76.3487%" y="661" width="0.0431%" height="15" fill="rgb(237,12,29)" fg:x="104474" fg:w="59"/><text x="76.5987%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (53 samples, 0.04%)</title><rect x="76.3531%" y="645" width="0.0387%" height="15" fill="rgb(214,77,8)" fg:x="104480" fg:w="53"/><text x="76.6031%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (53 samples, 0.04%)</title><rect x="76.3531%" y="629" width="0.0387%" height="15" fill="rgb(217,168,37)" fg:x="104480" fg:w="53"/><text x="76.6031%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.04%)</title><rect x="76.3531%" y="613" width="0.0387%" height="15" fill="rgb(221,217,23)" fg:x="104480" fg:w="53"/><text x="76.6031%" y="623.50"></text></g><g><title>alloc::alloc::alloc (53 samples, 0.04%)</title><rect x="76.3531%" y="597" width="0.0387%" height="15" fill="rgb(243,229,36)" fg:x="104480" fg:w="53"/><text x="76.6031%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (208 samples, 0.15%)</title><rect x="76.2434%" y="757" width="0.1520%" height="15" fill="rgb(251,163,40)" fg:x="104330" fg:w="208"/><text x="76.4934%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (208 samples, 0.15%)</title><rect x="76.2434%" y="741" width="0.1520%" height="15" fill="rgb(237,222,12)" fg:x="104330" fg:w="208"/><text x="76.4934%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (18 samples, 0.01%)</title><rect x="76.4232%" y="741" width="0.0132%" height="15" fill="rgb(248,132,6)" fg:x="104576" fg:w="18"/><text x="76.6732%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (29 samples, 0.02%)</title><rect x="76.4364%" y="741" width="0.0212%" height="15" fill="rgb(227,167,50)" fg:x="104594" fg:w="29"/><text x="76.6864%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (29 samples, 0.02%)</title><rect x="76.4364%" y="725" width="0.0212%" height="15" fill="rgb(242,84,37)" fg:x="104594" fg:w="29"/><text x="76.6864%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (29 samples, 0.02%)</title><rect x="76.4364%" y="709" width="0.0212%" height="15" fill="rgb(212,4,50)" fg:x="104594" fg:w="29"/><text x="76.6864%" y="719.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 0.08%)</title><rect x="76.3954%" y="757" width="0.0775%" height="15" fill="rgb(230,228,32)" fg:x="104538" fg:w="106"/><text x="76.6454%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (25 samples, 0.02%)</title><rect x="76.4809%" y="709" width="0.0183%" height="15" fill="rgb(248,217,23)" fg:x="104655" fg:w="25"/><text x="76.7309%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="76.4817%" y="693" width="0.0175%" height="15" fill="rgb(238,197,32)" fg:x="104656" fg:w="24"/><text x="76.7317%" y="703.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (24 samples, 0.02%)</title><rect x="76.4817%" y="677" width="0.0175%" height="15" fill="rgb(236,106,1)" fg:x="104656" fg:w="24"/><text x="76.7317%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (24 samples, 0.02%)</title><rect x="76.4817%" y="661" width="0.0175%" height="15" fill="rgb(219,228,13)" fg:x="104656" fg:w="24"/><text x="76.7317%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (6,964 samples, 5.09%)</title><rect x="71.4144%" y="837" width="5.0892%" height="15" fill="rgb(238,30,35)" fg:x="97722" fg:w="6964"/><text x="71.6644%" y="847.50">&lt;core:..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (6,958 samples, 5.08%)</title><rect x="71.4188%" y="821" width="5.0848%" height="15" fill="rgb(236,70,23)" fg:x="97728" fg:w="6958"/><text x="71.6688%" y="831.50">&lt;futur..</text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (6,107 samples, 4.46%)</title><rect x="72.0407%" y="805" width="4.4629%" height="15" fill="rgb(249,104,48)" fg:x="98579" fg:w="6107"/><text x="72.2907%" y="815.50">wisp_..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (5,988 samples, 4.38%)</title><rect x="72.1276%" y="789" width="4.3760%" height="15" fill="rgb(254,117,50)" fg:x="98698" fg:w="5988"/><text x="72.3776%" y="799.50">wisp_..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_frame::_{{closure}} (459 samples, 0.34%)</title><rect x="76.1682%" y="773" width="0.3354%" height="15" fill="rgb(223,152,4)" fg:x="104227" fg:w="459"/><text x="76.4182%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (41 samples, 0.03%)</title><rect x="76.4736%" y="757" width="0.0300%" height="15" fill="rgb(245,6,2)" fg:x="104645" fg:w="41"/><text x="76.7236%" y="767.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.03%)</title><rect x="76.4736%" y="741" width="0.0300%" height="15" fill="rgb(249,150,24)" fg:x="104645" fg:w="41"/><text x="76.7236%" y="751.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (41 samples, 0.03%)</title><rect x="76.4736%" y="725" width="0.0300%" height="15" fill="rgb(228,185,42)" fg:x="104645" fg:w="41"/><text x="76.7236%" y="735.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (7,002 samples, 5.12%)</title><rect x="71.4144%" y="869" width="5.1170%" height="15" fill="rgb(226,39,33)" fg:x="97722" fg:w="7002"/><text x="71.6644%" y="879.50">&lt;S as ..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (7,002 samples, 5.12%)</title><rect x="71.4144%" y="853" width="5.1170%" height="15" fill="rgb(221,166,19)" fg:x="97722" fg:w="7002"/><text x="71.6644%" y="863.50">&lt;wisp_..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (38 samples, 0.03%)</title><rect x="76.5036%" y="837" width="0.0278%" height="15" fill="rgb(209,109,2)" fg:x="104686" fg:w="38"/><text x="76.7536%" y="847.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next::_{{closure}} (20 samples, 0.01%)</title><rect x="76.5168%" y="821" width="0.0146%" height="15" fill="rgb(252,216,26)" fg:x="104704" fg:w="20"/><text x="76.7668%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.01%)</title><rect x="76.5168%" y="805" width="0.0146%" height="15" fill="rgb(227,173,36)" fg:x="104704" fg:w="20"/><text x="76.7668%" y="815.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (7,216 samples, 5.27%)</title><rect x="71.2646%" y="917" width="5.2734%" height="15" fill="rgb(209,90,7)" fg:x="97517" fg:w="7216"/><text x="71.5146%" y="927.50">&lt;tokio..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (7,216 samples, 5.27%)</title><rect x="71.2646%" y="901" width="5.2734%" height="15" fill="rgb(250,194,11)" fg:x="97517" fg:w="7216"/><text x="71.5146%" y="911.50">&lt;wisp_..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (7,216 samples, 5.27%)</title><rect x="71.2646%" y="885" width="5.2734%" height="15" fill="rgb(220,72,50)" fg:x="97517" fg:w="7216"/><text x="71.5146%" y="895.50">&lt;futur..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (7,257 samples, 5.30%)</title><rect x="71.2448%" y="933" width="5.3034%" height="15" fill="rgb(222,106,48)" fg:x="97490" fg:w="7257"/><text x="71.4948%" y="943.50">&lt;tokio..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.01%)</title><rect x="76.5672%" y="885" width="0.0117%" height="15" fill="rgb(216,220,45)" fg:x="104773" fg:w="16"/><text x="76.8172%" y="895.50"></text></g><g><title>[libc.so.6] (495 samples, 0.36%)</title><rect x="77.1533%" y="741" width="0.3617%" height="15" fill="rgb(234,112,18)" fg:x="105575" fg:w="495"/><text x="77.4033%" y="751.50"></text></g><g><title>__send (1,313 samples, 0.96%)</title><rect x="76.6607%" y="757" width="0.9595%" height="15" fill="rgb(206,179,9)" fg:x="104901" fg:w="1313"/><text x="76.9107%" y="767.50"></text></g><g><title>[unknown] (144 samples, 0.11%)</title><rect x="77.5150%" y="741" width="0.1052%" height="15" fill="rgb(215,115,40)" fg:x="106070" fg:w="144"/><text x="77.7650%" y="751.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,329 samples, 0.97%)</title><rect x="76.6541%" y="853" width="0.9712%" height="15" fill="rgb(222,69,34)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="863.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,329 samples, 0.97%)</title><rect x="76.6541%" y="837" width="0.9712%" height="15" fill="rgb(209,161,10)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="847.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,329 samples, 0.97%)</title><rect x="76.6541%" y="821" width="0.9712%" height="15" fill="rgb(217,6,38)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1,329 samples, 0.97%)</title><rect x="76.6541%" y="805" width="0.9712%" height="15" fill="rgb(229,229,48)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,329 samples, 0.97%)</title><rect x="76.6541%" y="789" width="0.9712%" height="15" fill="rgb(225,21,28)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1,329 samples, 0.97%)</title><rect x="76.6541%" y="773" width="0.9712%" height="15" fill="rgb(206,33,13)" fg:x="104892" fg:w="1329"/><text x="76.9041%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="77.6480%" y="773" width="0.0110%" height="15" fill="rgb(242,178,17)" fg:x="106252" fg:w="15"/><text x="77.8980%" y="783.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (15 samples, 0.01%)</title><rect x="77.6480%" y="757" width="0.0110%" height="15" fill="rgb(220,162,5)" fg:x="106252" fg:w="15"/><text x="77.8980%" y="767.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="77.6480%" y="741" width="0.0110%" height="15" fill="rgb(210,33,43)" fg:x="106252" fg:w="15"/><text x="77.8980%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (48 samples, 0.04%)</title><rect x="77.6458%" y="821" width="0.0351%" height="15" fill="rgb(216,116,54)" fg:x="106249" fg:w="48"/><text x="77.8958%" y="831.50"></text></g><g><title>tokio::runtime::context::budget (48 samples, 0.04%)</title><rect x="77.6458%" y="805" width="0.0351%" height="15" fill="rgb(249,92,24)" fg:x="106249" fg:w="48"/><text x="77.8958%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (48 samples, 0.04%)</title><rect x="77.6458%" y="789" width="0.0351%" height="15" fill="rgb(231,189,14)" fg:x="106249" fg:w="48"/><text x="77.8958%" y="799.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (30 samples, 0.02%)</title><rect x="77.6590%" y="773" width="0.0219%" height="15" fill="rgb(230,8,41)" fg:x="106267" fg:w="30"/><text x="77.9090%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (30 samples, 0.02%)</title><rect x="77.6590%" y="757" width="0.0219%" height="15" fill="rgb(249,7,27)" fg:x="106267" fg:w="30"/><text x="77.9090%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (580 samples, 0.42%)</title><rect x="77.6882%" y="805" width="0.4239%" height="15" fill="rgb(232,86,5)" fg:x="106307" fg:w="580"/><text x="77.9382%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (580 samples, 0.42%)</title><rect x="77.6882%" y="789" width="0.4239%" height="15" fill="rgb(224,175,18)" fg:x="106307" fg:w="580"/><text x="77.9382%" y="799.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (2,157 samples, 1.58%)</title><rect x="76.5482%" y="933" width="1.5763%" height="15" fill="rgb(220,129,12)" fg:x="104747" fg:w="2157"/><text x="76.7982%" y="943.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,156 samples, 1.58%)</title><rect x="76.5489%" y="917" width="1.5756%" height="15" fill="rgb(210,19,36)" fg:x="104748" fg:w="2156"/><text x="76.7989%" y="927.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,156 samples, 1.58%)</title><rect x="76.5489%" y="901" width="1.5756%" height="15" fill="rgb(219,96,14)" fg:x="104748" fg:w="2156"/><text x="76.7989%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (2,115 samples, 1.55%)</title><rect x="76.5789%" y="885" width="1.5456%" height="15" fill="rgb(249,106,1)" fg:x="104789" fg:w="2115"/><text x="76.8289%" y="895.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2,050 samples, 1.50%)</title><rect x="76.6264%" y="869" width="1.4981%" height="15" fill="rgb(249,155,20)" fg:x="104854" fg:w="2050"/><text x="76.8764%" y="879.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (679 samples, 0.50%)</title><rect x="77.6283%" y="853" width="0.4962%" height="15" fill="rgb(244,168,9)" fg:x="106225" fg:w="679"/><text x="77.8783%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (673 samples, 0.49%)</title><rect x="77.6327%" y="837" width="0.4918%" height="15" fill="rgb(216,23,50)" fg:x="106231" fg:w="673"/><text x="77.8827%" y="847.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (607 samples, 0.44%)</title><rect x="77.6809%" y="821" width="0.4436%" height="15" fill="rgb(224,219,20)" fg:x="106297" fg:w="607"/><text x="77.9309%" y="831.50"></text></g><g><title>arena_dalloc_bin_locked_step (26 samples, 0.02%)</title><rect x="78.1852%" y="693" width="0.0190%" height="15" fill="rgb(222,156,15)" fg:x="106987" fg:w="26"/><text x="78.4352%" y="703.50"></text></g><g><title>arena_decay_dirty (17 samples, 0.01%)</title><rect x="78.2049%" y="661" width="0.0124%" height="15" fill="rgb(231,97,17)" fg:x="107014" fg:w="17"/><text x="78.4549%" y="671.50"></text></g><g><title>arena_decay_impl (17 samples, 0.01%)</title><rect x="78.2049%" y="645" width="0.0124%" height="15" fill="rgb(218,70,48)" fg:x="107014" fg:w="17"/><text x="78.4549%" y="655.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (17 samples, 0.01%)</title><rect x="78.2049%" y="629" width="0.0124%" height="15" fill="rgb(212,196,52)" fg:x="107014" fg:w="17"/><text x="78.4549%" y="639.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (17 samples, 0.01%)</title><rect x="78.2049%" y="613" width="0.0124%" height="15" fill="rgb(243,203,18)" fg:x="107014" fg:w="17"/><text x="78.4549%" y="623.50"></text></g><g><title>_rjem_je_arena_decay (19 samples, 0.01%)</title><rect x="78.2049%" y="677" width="0.0139%" height="15" fill="rgb(252,125,41)" fg:x="107014" fg:w="19"/><text x="78.4549%" y="687.50"></text></g><g><title>arena_decay_ticks (21 samples, 0.02%)</title><rect x="78.2042%" y="693" width="0.0153%" height="15" fill="rgb(223,180,33)" fg:x="107013" fg:w="21"/><text x="78.4542%" y="703.50"></text></g><g><title>pthread_mutex_trylock (22 samples, 0.02%)</title><rect x="78.2217%" y="661" width="0.0161%" height="15" fill="rgb(254,159,46)" fg:x="107037" fg:w="22"/><text x="78.4717%" y="671.50"></text></g><g><title>malloc_mutex_trylock_final (24 samples, 0.02%)</title><rect x="78.2210%" y="677" width="0.0175%" height="15" fill="rgb(254,38,10)" fg:x="107036" fg:w="24"/><text x="78.4710%" y="687.50"></text></g><g><title>malloc_mutex_lock (27 samples, 0.02%)</title><rect x="78.2210%" y="693" width="0.0197%" height="15" fill="rgb(208,217,32)" fg:x="107036" fg:w="27"/><text x="78.4710%" y="703.50"></text></g><g><title>rtree_leaf_elm_read (25 samples, 0.02%)</title><rect x="78.2699%" y="661" width="0.0183%" height="15" fill="rgb(221,120,13)" fg:x="107103" fg:w="25"/><text x="78.5199%" y="671.50"></text></g><g><title>rtree_leaf_elm_bits_read (23 samples, 0.02%)</title><rect x="78.2714%" y="645" width="0.0168%" height="15" fill="rgb(246,54,52)" fg:x="107105" fg:w="23"/><text x="78.5214%" y="655.50"></text></g><g><title>atomic_load_p (23 samples, 0.02%)</title><rect x="78.2714%" y="629" width="0.0168%" height="15" fill="rgb(242,34,25)" fg:x="107105" fg:w="23"/><text x="78.5214%" y="639.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (62 samples, 0.05%)</title><rect x="78.2473%" y="693" width="0.0453%" height="15" fill="rgb(247,209,9)" fg:x="107072" fg:w="62"/><text x="78.4973%" y="703.50"></text></g><g><title>emap_edata_lookup_batch (61 samples, 0.04%)</title><rect x="78.2480%" y="677" width="0.0446%" height="15" fill="rgb(228,71,26)" fg:x="107073" fg:w="61"/><text x="78.4980%" y="687.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (187 samples, 0.14%)</title><rect x="78.1618%" y="741" width="0.1367%" height="15" fill="rgb(222,145,49)" fg:x="106955" fg:w="187"/><text x="78.4118%" y="751.50"></text></g><g><title>tcache_bin_flush_bottom (187 samples, 0.14%)</title><rect x="78.1618%" y="725" width="0.1367%" height="15" fill="rgb(218,121,17)" fg:x="106955" fg:w="187"/><text x="78.4118%" y="735.50"></text></g><g><title>tcache_bin_flush_impl (174 samples, 0.13%)</title><rect x="78.1713%" y="709" width="0.1272%" height="15" fill="rgb(244,50,7)" fg:x="106968" fg:w="174"/><text x="78.4213%" y="719.50"></text></g><g><title>isdalloct (193 samples, 0.14%)</title><rect x="78.1603%" y="789" width="0.1410%" height="15" fill="rgb(246,229,37)" fg:x="106953" fg:w="193"/><text x="78.4103%" y="799.50"></text></g><g><title>arena_sdalloc (193 samples, 0.14%)</title><rect x="78.1603%" y="773" width="0.1410%" height="15" fill="rgb(225,18,5)" fg:x="106953" fg:w="193"/><text x="78.4103%" y="783.50"></text></g><g><title>tcache_dalloc_small (193 samples, 0.14%)</title><rect x="78.1603%" y="757" width="0.1410%" height="15" fill="rgb(213,204,8)" fg:x="106953" fg:w="193"/><text x="78.4103%" y="767.50"></text></g><g><title>_rjem_je_sdallocx_default (195 samples, 0.14%)</title><rect x="78.1596%" y="821" width="0.1425%" height="15" fill="rgb(238,103,6)" fg:x="106952" fg:w="195"/><text x="78.4096%" y="831.50"></text></g><g><title>isfree (194 samples, 0.14%)</title><rect x="78.1603%" y="805" width="0.1418%" height="15" fill="rgb(222,25,35)" fg:x="106953" fg:w="194"/><text x="78.4103%" y="815.50"></text></g><g><title>cache_bin_dalloc_easy (51 samples, 0.04%)</title><rect x="78.3298%" y="789" width="0.0373%" height="15" fill="rgb(213,203,35)" fg:x="107185" fg:w="51"/><text x="78.5798%" y="799.50"></text></g><g><title>cache_bin_full (29 samples, 0.02%)</title><rect x="78.3459%" y="773" width="0.0212%" height="15" fill="rgb(221,79,53)" fg:x="107207" fg:w="29"/><text x="78.5959%" y="783.50"></text></g><g><title>sz_index2size (15 samples, 0.01%)</title><rect x="78.3671%" y="789" width="0.0110%" height="15" fill="rgb(243,200,35)" fg:x="107236" fg:w="15"/><text x="78.6171%" y="799.50"></text></g><g><title>sz_index2size_lookup (15 samples, 0.01%)</title><rect x="78.3671%" y="773" width="0.0110%" height="15" fill="rgb(248,60,25)" fg:x="107236" fg:w="15"/><text x="78.6171%" y="783.50"></text></g><g><title>sz_index2size_lookup_impl (15 samples, 0.01%)</title><rect x="78.3671%" y="757" width="0.0110%" height="15" fill="rgb(227,53,46)" fg:x="107236" fg:w="15"/><text x="78.6171%" y="767.50"></text></g><g><title>_rjem_sdallocx (114 samples, 0.08%)</title><rect x="78.3021%" y="821" width="0.0833%" height="15" fill="rgb(216,120,32)" fg:x="107147" fg:w="114"/><text x="78.5521%" y="831.50"></text></g><g><title>free_fastpath (112 samples, 0.08%)</title><rect x="78.3035%" y="805" width="0.0818%" height="15" fill="rgb(220,134,1)" fg:x="107149" fg:w="112"/><text x="78.5535%" y="815.50"></text></g><g><title>inallocx (99 samples, 0.07%)</title><rect x="78.4935%" y="565" width="0.0723%" height="15" fill="rgb(237,168,5)" fg:x="107409" fg:w="99"/><text x="78.7435%" y="575.50"></text></g><g><title>aligned_usize_get (88 samples, 0.06%)</title><rect x="78.5016%" y="549" width="0.0643%" height="15" fill="rgb(231,100,33)" fg:x="107420" fg:w="88"/><text x="78.7516%" y="559.50"></text></g><g><title>sz_s2u (83 samples, 0.06%)</title><rect x="78.5052%" y="533" width="0.0607%" height="15" fill="rgb(236,177,47)" fg:x="107425" fg:w="83"/><text x="78.7552%" y="543.50"></text></g><g><title>sz_s2u_compute (78 samples, 0.06%)</title><rect x="78.5089%" y="517" width="0.0570%" height="15" fill="rgb(235,7,49)" fg:x="107430" fg:w="78"/><text x="78.7589%" y="527.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="78.6068%" y="437" width="0.0153%" height="15" fill="rgb(232,119,22)" fg:x="107564" fg:w="21"/><text x="78.8568%" y="447.50"></text></g><g><title>cache_bin_finish_flush (24 samples, 0.02%)</title><rect x="78.6068%" y="453" width="0.0175%" height="15" fill="rgb(254,73,53)" fg:x="107564" fg:w="24"/><text x="78.8568%" y="463.50"></text></g><g><title>locked_inc_u64 (34 samples, 0.02%)</title><rect x="78.6441%" y="405" width="0.0248%" height="15" fill="rgb(251,35,20)" fg:x="107615" fg:w="34"/><text x="78.8941%" y="415.50"></text></g><g><title>atomic_fetch_add_u64 (34 samples, 0.02%)</title><rect x="78.6441%" y="389" width="0.0248%" height="15" fill="rgb(241,119,20)" fg:x="107615" fg:w="34"/><text x="78.8941%" y="399.50"></text></g><g><title>arena_large_dalloc_stats_update (51 samples, 0.04%)</title><rect x="78.6404%" y="421" width="0.0373%" height="15" fill="rgb(207,102,14)" fg:x="107610" fg:w="51"/><text x="78.8904%" y="431.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (56 samples, 0.04%)</title><rect x="78.6397%" y="437" width="0.0409%" height="15" fill="rgb(248,201,50)" fg:x="107609" fg:w="56"/><text x="78.8897%" y="447.50"></text></g><g><title>_rjem_je_emap_remap (18 samples, 0.01%)</title><rect x="78.7026%" y="389" width="0.0132%" height="15" fill="rgb(222,185,44)" fg:x="107695" fg:w="18"/><text x="78.9526%" y="399.50"></text></g><g><title>pa_nactive_sub (89 samples, 0.07%)</title><rect x="78.7223%" y="389" width="0.0650%" height="15" fill="rgb(218,107,18)" fg:x="107722" fg:w="89"/><text x="78.9723%" y="399.50"></text></g><g><title>atomic_fetch_sub_zu (89 samples, 0.07%)</title><rect x="78.7223%" y="373" width="0.0650%" height="15" fill="rgb(237,177,39)" fg:x="107722" fg:w="89"/><text x="78.9723%" y="383.50"></text></g><g><title>_rjem_je_pa_dalloc (131 samples, 0.10%)</title><rect x="78.6952%" y="405" width="0.0957%" height="15" fill="rgb(246,69,6)" fg:x="107685" fg:w="131"/><text x="78.9452%" y="415.50"></text></g><g><title>[libc.so.6] (115 samples, 0.08%)</title><rect x="78.7983%" y="389" width="0.0840%" height="15" fill="rgb(234,208,37)" fg:x="107826" fg:w="115"/><text x="79.0483%" y="399.50"></text></g><g><title>_rjem_je_emap_update_edata_state (35 samples, 0.03%)</title><rect x="78.9123%" y="341" width="0.0256%" height="15" fill="rgb(225,4,6)" fg:x="107982" fg:w="35"/><text x="79.1623%" y="351.50"></text></g><g><title>_rjem_je_edata_heap_empty (23 samples, 0.02%)</title><rect x="78.9569%" y="325" width="0.0168%" height="15" fill="rgb(233,45,0)" fg:x="108043" fg:w="23"/><text x="79.2069%" y="335.50"></text></g><g><title>edata_heap_ph_cmp (25 samples, 0.02%)</title><rect x="78.9905%" y="293" width="0.0183%" height="15" fill="rgb(226,136,5)" fg:x="108089" fg:w="25"/><text x="79.2405%" y="303.50"></text></g><g><title>edata_snad_comp (25 samples, 0.02%)</title><rect x="78.9905%" y="277" width="0.0183%" height="15" fill="rgb(211,91,47)" fg:x="108089" fg:w="25"/><text x="79.2405%" y="287.50"></text></g><g><title>edata_cmp_summary_get (23 samples, 0.02%)</title><rect x="78.9919%" y="261" width="0.0168%" height="15" fill="rgb(242,88,51)" fg:x="108091" fg:w="23"/><text x="79.2419%" y="271.50"></text></g><g><title>edata_sn_get (23 samples, 0.02%)</title><rect x="78.9919%" y="245" width="0.0168%" height="15" fill="rgb(230,91,28)" fg:x="108091" fg:w="23"/><text x="79.2419%" y="255.50"></text></g><g><title>_rjem_je_edata_heap_insert (63 samples, 0.05%)</title><rect x="78.9737%" y="325" width="0.0460%" height="15" fill="rgb(254,186,29)" fg:x="108066" fg:w="63"/><text x="79.2237%" y="335.50"></text></g><g><title>ph_insert (58 samples, 0.04%)</title><rect x="78.9773%" y="309" width="0.0424%" height="15" fill="rgb(238,6,4)" fg:x="108071" fg:w="58"/><text x="79.2273%" y="319.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (19 samples, 0.01%)</title><rect x="79.0197%" y="325" width="0.0139%" height="15" fill="rgb(221,151,16)" fg:x="108129" fg:w="19"/><text x="79.2697%" y="335.50"></text></g><g><title>edata_list_inactive_append (30 samples, 0.02%)</title><rect x="79.0460%" y="325" width="0.0219%" height="15" fill="rgb(251,143,52)" fg:x="108165" fg:w="30"/><text x="79.2960%" y="335.50"></text></g><g><title>atomic_load_zu (25 samples, 0.02%)</title><rect x="79.0679%" y="309" width="0.0183%" height="15" fill="rgb(206,90,15)" fg:x="108195" fg:w="25"/><text x="79.3179%" y="319.50"></text></g><g><title>eset_stats_add (28 samples, 0.02%)</title><rect x="79.0679%" y="325" width="0.0205%" height="15" fill="rgb(218,35,8)" fg:x="108195" fg:w="28"/><text x="79.3179%" y="335.50"></text></g><g><title>fb_set (14 samples, 0.01%)</title><rect x="79.0884%" y="325" width="0.0102%" height="15" fill="rgb(239,215,6)" fg:x="108223" fg:w="14"/><text x="79.3384%" y="335.50"></text></g><g><title>extent_deactivate_locked (285 samples, 0.21%)</title><rect x="78.9064%" y="373" width="0.2083%" height="15" fill="rgb(245,116,39)" fg:x="107974" fg:w="285"/><text x="79.1564%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (285 samples, 0.21%)</title><rect x="78.9064%" y="357" width="0.2083%" height="15" fill="rgb(242,65,28)" fg:x="107974" fg:w="285"/><text x="79.1564%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (242 samples, 0.18%)</title><rect x="78.9379%" y="341" width="0.1769%" height="15" fill="rgb(252,132,53)" fg:x="108017" fg:w="242"/><text x="79.1879%" y="351.50"></text></g><g><title>sz_psz2ind (22 samples, 0.02%)</title><rect x="79.0986%" y="325" width="0.0161%" height="15" fill="rgb(224,159,50)" fg:x="108237" fg:w="22"/><text x="79.3486%" y="335.50"></text></g><g><title>_rjem_je_emap_update_edata_state (32 samples, 0.02%)</title><rect x="79.1893%" y="309" width="0.0234%" height="15" fill="rgb(224,93,4)" fg:x="108361" fg:w="32"/><text x="79.4393%" y="319.50"></text></g><g><title>edata_committed_get (19 samples, 0.01%)</title><rect x="79.2273%" y="293" width="0.0139%" height="15" fill="rgb(208,81,34)" fg:x="108413" fg:w="19"/><text x="79.4773%" y="303.50"></text></g><g><title>extent_can_acquire_neighbor (47 samples, 0.03%)</title><rect x="79.2141%" y="309" width="0.0343%" height="15" fill="rgb(233,92,54)" fg:x="108395" fg:w="47"/><text x="79.4641%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (17 samples, 0.01%)</title><rect x="79.2485%" y="309" width="0.0124%" height="15" fill="rgb(237,21,14)" fg:x="108442" fg:w="17"/><text x="79.4985%" y="319.50"></text></g><g><title>rtree_leaf_elm_read (18 samples, 0.01%)</title><rect x="79.2609%" y="309" width="0.0132%" height="15" fill="rgb(249,128,51)" fg:x="108459" fg:w="18"/><text x="79.5109%" y="319.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (162 samples, 0.12%)</title><rect x="79.1586%" y="341" width="0.1184%" height="15" fill="rgb(223,129,24)" fg:x="108319" fg:w="162"/><text x="79.4086%" y="351.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (158 samples, 0.12%)</title><rect x="79.1615%" y="325" width="0.1155%" height="15" fill="rgb(231,168,25)" fg:x="108323" fg:w="158"/><text x="79.4115%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_remove (51 samples, 0.04%)</title><rect x="79.2952%" y="309" width="0.0373%" height="15" fill="rgb(224,39,20)" fg:x="108506" fg:w="51"/><text x="79.5452%" y="319.50"></text></g><g><title>ph_remove (39 samples, 0.03%)</title><rect x="79.3040%" y="293" width="0.0285%" height="15" fill="rgb(225,152,53)" fg:x="108518" fg:w="39"/><text x="79.5540%" y="303.50"></text></g><g><title>edata_list_inactive_remove (23 samples, 0.02%)</title><rect x="79.3442%" y="309" width="0.0168%" height="15" fill="rgb(252,17,24)" fg:x="108573" fg:w="23"/><text x="79.5942%" y="319.50"></text></g><g><title>eset_stats_sub (20 samples, 0.01%)</title><rect x="79.3610%" y="309" width="0.0146%" height="15" fill="rgb(250,114,30)" fg:x="108596" fg:w="20"/><text x="79.6110%" y="319.50"></text></g><g><title>_rjem_je_eset_remove (146 samples, 0.11%)</title><rect x="79.2821%" y="325" width="0.1067%" height="15" fill="rgb(229,5,4)" fg:x="108488" fg:w="146"/><text x="79.5321%" y="335.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (14 samples, 0.01%)</title><rect x="79.4012%" y="293" width="0.0102%" height="15" fill="rgb(225,176,49)" fg:x="108651" fg:w="14"/><text x="79.6512%" y="303.50"></text></g><g><title>ehooks_merge (24 samples, 0.02%)</title><rect x="79.3968%" y="309" width="0.0175%" height="15" fill="rgb(224,221,49)" fg:x="108645" fg:w="24"/><text x="79.6468%" y="319.50"></text></g><g><title>[libc.so.6] (35 samples, 0.03%)</title><rect x="79.4238%" y="293" width="0.0256%" height="15" fill="rgb(253,169,27)" fg:x="108682" fg:w="35"/><text x="79.6738%" y="303.50"></text></g><g><title>edata_avail_ph_cmp (22 samples, 0.02%)</title><rect x="79.4670%" y="245" width="0.0161%" height="15" fill="rgb(211,206,16)" fg:x="108741" fg:w="22"/><text x="79.7170%" y="255.50"></text></g><g><title>edata_esnead_comp (22 samples, 0.02%)</title><rect x="79.4670%" y="229" width="0.0161%" height="15" fill="rgb(244,87,35)" fg:x="108741" fg:w="22"/><text x="79.7170%" y="239.50"></text></g><g><title>edata_esn_comp (20 samples, 0.01%)</title><rect x="79.4684%" y="213" width="0.0146%" height="15" fill="rgb(246,28,10)" fg:x="108743" fg:w="20"/><text x="79.7184%" y="223.50"></text></g><g><title>edata_esn_get (17 samples, 0.01%)</title><rect x="79.4706%" y="197" width="0.0124%" height="15" fill="rgb(229,12,44)" fg:x="108746" fg:w="17"/><text x="79.7206%" y="207.50"></text></g><g><title>phn_merge (18 samples, 0.01%)</title><rect x="79.4860%" y="229" width="0.0132%" height="15" fill="rgb(210,145,37)" fg:x="108767" fg:w="18"/><text x="79.7360%" y="239.50"></text></g><g><title>ph_try_aux_merge_pair (30 samples, 0.02%)</title><rect x="79.4852%" y="245" width="0.0219%" height="15" fill="rgb(227,112,52)" fg:x="108766" fg:w="30"/><text x="79.7352%" y="255.50"></text></g><g><title>_rjem_je_edata_avail_insert (74 samples, 0.05%)</title><rect x="79.4567%" y="277" width="0.0541%" height="15" fill="rgb(238,155,34)" fg:x="108727" fg:w="74"/><text x="79.7067%" y="287.50"></text></g><g><title>ph_insert (71 samples, 0.05%)</title><rect x="79.4589%" y="261" width="0.0519%" height="15" fill="rgb(239,226,36)" fg:x="108730" fg:w="71"/><text x="79.7089%" y="271.50"></text></g><g><title>malloc_mutex_trylock_final (91 samples, 0.07%)</title><rect x="79.5145%" y="261" width="0.0665%" height="15" fill="rgb(230,16,23)" fg:x="108806" fg:w="91"/><text x="79.7645%" y="271.50"></text></g><g><title>pthread_mutex_trylock (90 samples, 0.07%)</title><rect x="79.5152%" y="245" width="0.0658%" height="15" fill="rgb(236,171,36)" fg:x="108807" fg:w="90"/><text x="79.7652%" y="255.50"></text></g><g><title>malloc_mutex_lock (93 samples, 0.07%)</title><rect x="79.5137%" y="277" width="0.0680%" height="15" fill="rgb(221,22,14)" fg:x="108805" fg:w="93"/><text x="79.7637%" y="287.50"></text></g><g><title>_rjem_je_edata_cache_put (183 samples, 0.13%)</title><rect x="79.4494%" y="293" width="0.1337%" height="15" fill="rgb(242,43,11)" fg:x="108717" fg:w="183"/><text x="79.6994%" y="303.50"></text></g><g><title>_rjem_je_emap_merge_commit (16 samples, 0.01%)</title><rect x="79.5832%" y="293" width="0.0117%" height="15" fill="rgb(232,69,23)" fg:x="108900" fg:w="16"/><text x="79.8332%" y="303.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (22 samples, 0.02%)</title><rect x="79.6007%" y="277" width="0.0161%" height="15" fill="rgb(216,180,54)" fg:x="108924" fg:w="22"/><text x="79.8507%" y="287.50"></text></g><g><title>_rjem_je_emap_merge_prepare (31 samples, 0.02%)</title><rect x="79.5948%" y="293" width="0.0227%" height="15" fill="rgb(216,5,24)" fg:x="108916" fg:w="31"/><text x="79.8448%" y="303.50"></text></g><g><title>extent_try_coalesce_large (701 samples, 0.51%)</title><rect x="79.1147%" y="373" width="0.5123%" height="15" fill="rgb(225,89,9)" fg:x="108259" fg:w="701"/><text x="79.3647%" y="383.50"></text></g><g><title>extent_try_coalesce_impl (687 samples, 0.50%)</title><rect x="79.1250%" y="357" width="0.5021%" height="15" fill="rgb(243,75,33)" fg:x="108273" fg:w="687"/><text x="79.3750%" y="367.50"></text></g><g><title>extent_coalesce (478 samples, 0.35%)</title><rect x="79.2777%" y="341" width="0.3493%" height="15" fill="rgb(247,141,45)" fg:x="108482" fg:w="478"/><text x="79.5277%" y="351.50"></text></g><g><title>extent_merge_impl (326 samples, 0.24%)</title><rect x="79.3888%" y="325" width="0.2382%" height="15" fill="rgb(232,177,36)" fg:x="108634" fg:w="326"/><text x="79.6388%" y="335.50"></text></g><g><title>extent_merge_impl (291 samples, 0.21%)</title><rect x="79.4143%" y="309" width="0.2127%" height="15" fill="rgb(219,125,36)" fg:x="108669" fg:w="291"/><text x="79.6643%" y="319.50"></text></g><g><title>atomic_load_b (24 samples, 0.02%)</title><rect x="79.6365%" y="341" width="0.0175%" height="15" fill="rgb(227,94,9)" fg:x="108973" fg:w="24"/><text x="79.8865%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (17 samples, 0.01%)</title><rect x="79.6540%" y="341" width="0.0124%" height="15" fill="rgb(240,34,52)" fg:x="108997" fg:w="17"/><text x="79.9040%" y="351.50"></text></g><g><title>pthread_mutex_trylock (15 samples, 0.01%)</title><rect x="79.6555%" y="325" width="0.0110%" height="15" fill="rgb(216,45,12)" fg:x="108999" fg:w="15"/><text x="79.9055%" y="335.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (78 samples, 0.06%)</title><rect x="79.6292%" y="357" width="0.0570%" height="15" fill="rgb(246,21,19)" fg:x="108963" fg:w="78"/><text x="79.8792%" y="367.50"></text></g><g><title>spin_cpu_spinwait (27 samples, 0.02%)</title><rect x="79.6665%" y="341" width="0.0197%" height="15" fill="rgb(213,98,42)" fg:x="109014" fg:w="27"/><text x="79.9165%" y="351.50"></text></g><g><title>pthread_mutex_trylock (65 samples, 0.05%)</title><rect x="79.6862%" y="341" width="0.0475%" height="15" fill="rgb(250,136,47)" fg:x="109041" fg:w="65"/><text x="79.9362%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (69 samples, 0.05%)</title><rect x="79.6862%" y="357" width="0.0504%" height="15" fill="rgb(251,124,27)" fg:x="109041" fg:w="69"/><text x="79.9362%" y="367.50"></text></g><g><title>malloc_mutex_lock (153 samples, 0.11%)</title><rect x="79.6270%" y="373" width="0.1118%" height="15" fill="rgb(229,180,14)" fg:x="108960" fg:w="153"/><text x="79.8770%" y="383.50"></text></g><g><title>_rjem_je_extent_record (1,167 samples, 0.85%)</title><rect x="78.8882%" y="389" width="0.8528%" height="15" fill="rgb(245,216,25)" fg:x="107949" fg:w="1167"/><text x="79.1382%" y="399.50"></text></g><g><title>pac_ehooks_get (15 samples, 0.01%)</title><rect x="79.7410%" y="389" width="0.0110%" height="15" fill="rgb(251,43,5)" fg:x="109116" fg:w="15"/><text x="79.9910%" y="399.50"></text></g><g><title>_rjem_je_large_dalloc_finish (1,479 samples, 1.08%)</title><rect x="78.6806%" y="437" width="1.0808%" height="15" fill="rgb(250,128,24)" fg:x="107665" fg:w="1479"/><text x="78.9306%" y="447.50"></text></g><g><title>large_dalloc_finish_impl (1,472 samples, 1.08%)</title><rect x="78.6857%" y="421" width="1.0757%" height="15" fill="rgb(217,117,27)" fg:x="107672" fg:w="1472"/><text x="78.9357%" y="431.50"></text></g><g><title>pac_dalloc_impl (1,328 samples, 0.97%)</title><rect x="78.7910%" y="405" width="0.9705%" height="15" fill="rgb(245,147,4)" fg:x="107816" fg:w="1328"/><text x="79.0410%" y="415.50"></text></g><g><title>arena_stats_large_flush_nrequests_add (14 samples, 0.01%)</title><rect x="79.7746%" y="437" width="0.0102%" height="15" fill="rgb(242,201,35)" fg:x="109162" fg:w="14"/><text x="80.0246%" y="447.50"></text></g><g><title>locked_inc_u64 (14 samples, 0.01%)</title><rect x="79.7746%" y="421" width="0.0102%" height="15" fill="rgb(218,181,1)" fg:x="109162" fg:w="14"/><text x="80.0246%" y="431.50"></text></g><g><title>atomic_fetch_add_u64 (14 samples, 0.01%)</title><rect x="79.7746%" y="405" width="0.0102%" height="15" fill="rgb(222,6,29)" fg:x="109162" fg:w="14"/><text x="80.0246%" y="415.50"></text></g><g><title>rtree_leaf_elm_lookup (15 samples, 0.01%)</title><rect x="79.7987%" y="405" width="0.0110%" height="15" fill="rgb(208,186,3)" fg:x="109195" fg:w="15"/><text x="80.0487%" y="415.50"></text></g><g><title>rtree_leaf_elm_read (44 samples, 0.03%)</title><rect x="79.8097%" y="405" width="0.0322%" height="15" fill="rgb(216,36,26)" fg:x="109210" fg:w="44"/><text x="80.0597%" y="415.50"></text></g><g><title>rtree_leaf_elm_bits_read (43 samples, 0.03%)</title><rect x="79.8104%" y="389" width="0.0314%" height="15" fill="rgb(248,201,23)" fg:x="109211" fg:w="43"/><text x="80.0604%" y="399.50"></text></g><g><title>atomic_load_p (43 samples, 0.03%)</title><rect x="79.8104%" y="373" width="0.0314%" height="15" fill="rgb(251,170,31)" fg:x="109211" fg:w="43"/><text x="80.0604%" y="383.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (101 samples, 0.07%)</title><rect x="79.7885%" y="437" width="0.0738%" height="15" fill="rgb(207,110,25)" fg:x="109181" fg:w="101"/><text x="80.0385%" y="447.50"></text></g><g><title>emap_edata_lookup_batch (101 samples, 0.07%)</title><rect x="79.7885%" y="421" width="0.0738%" height="15" fill="rgb(250,54,15)" fg:x="109181" fg:w="101"/><text x="80.0385%" y="431.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (28 samples, 0.02%)</title><rect x="79.8419%" y="405" width="0.0205%" height="15" fill="rgb(227,68,33)" fg:x="109254" fg:w="28"/><text x="80.0919%" y="415.50"></text></g><g><title>util_prefetch_write_range (28 samples, 0.02%)</title><rect x="79.8419%" y="389" width="0.0205%" height="15" fill="rgb(238,34,41)" fg:x="109254" fg:w="28"/><text x="80.0919%" y="399.50"></text></g><g><title>util_prefetch_write (28 samples, 0.02%)</title><rect x="79.8419%" y="373" width="0.0205%" height="15" fill="rgb(220,11,15)" fg:x="109254" fg:w="28"/><text x="80.0919%" y="383.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (1,730 samples, 1.26%)</title><rect x="78.6010%" y="485" width="1.2643%" height="15" fill="rgb(246,111,35)" fg:x="107556" fg:w="1730"/><text x="78.8510%" y="495.50"></text></g><g><title>tcache_bin_flush_bottom (1,726 samples, 1.26%)</title><rect x="78.6039%" y="469" width="1.2613%" height="15" fill="rgb(209,88,53)" fg:x="107560" fg:w="1726"/><text x="78.8539%" y="479.50"></text></g><g><title>tcache_bin_flush_impl (1,697 samples, 1.24%)</title><rect x="78.6251%" y="453" width="1.2402%" height="15" fill="rgb(231,185,47)" fg:x="107589" fg:w="1697"/><text x="78.8751%" y="463.50"></text></g><g><title>cache_bin_dalloc_easy (91 samples, 0.07%)</title><rect x="79.8652%" y="485" width="0.0665%" height="15" fill="rgb(233,154,1)" fg:x="109286" fg:w="91"/><text x="80.1152%" y="495.50"></text></g><g><title>cache_bin_full (15 samples, 0.01%)</title><rect x="79.9208%" y="469" width="0.0110%" height="15" fill="rgb(225,15,46)" fg:x="109362" fg:w="15"/><text x="80.1708%" y="479.50"></text></g><g><title>arena_dalloc_large (1,859 samples, 1.36%)</title><rect x="78.5769%" y="517" width="1.3585%" height="15" fill="rgb(211,135,41)" fg:x="107523" fg:w="1859"/><text x="78.8269%" y="527.50"></text></g><g><title>tcache_dalloc_large (1,833 samples, 1.34%)</title><rect x="78.5959%" y="501" width="1.3395%" height="15" fill="rgb(208,54,0)" fg:x="107549" fg:w="1833"/><text x="78.8459%" y="511.50"></text></g><g><title>[libc.so.6] (57 samples, 0.04%)</title><rect x="79.9522%" y="453" width="0.0417%" height="15" fill="rgb(244,136,14)" fg:x="109405" fg:w="57"/><text x="80.2022%" y="463.50"></text></g><g><title>cache_bin_finish_flush (63 samples, 0.05%)</title><rect x="79.9507%" y="469" width="0.0460%" height="15" fill="rgb(241,56,14)" fg:x="109403" fg:w="63"/><text x="80.2007%" y="479.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (21 samples, 0.02%)</title><rect x="80.0640%" y="437" width="0.0153%" height="15" fill="rgb(205,80,24)" fg:x="109558" fg:w="21"/><text x="80.3140%" y="447.50"></text></g><g><title>rtree_clear_range (38 samples, 0.03%)</title><rect x="80.1291%" y="405" width="0.0278%" height="15" fill="rgb(220,57,4)" fg:x="109647" fg:w="38"/><text x="80.3791%" y="415.50"></text></g><g><title>rtree_write_range_impl (38 samples, 0.03%)</title><rect x="80.1291%" y="389" width="0.0278%" height="15" fill="rgb(226,193,50)" fg:x="109647" fg:w="38"/><text x="80.3791%" y="399.50"></text></g><g><title>_rjem_je_emap_deregister_interior (68 samples, 0.05%)</title><rect x="80.1086%" y="421" width="0.0497%" height="15" fill="rgb(231,168,22)" fg:x="109619" fg:w="68"/><text x="80.3586%" y="431.50"></text></g><g><title>_rjem_je_emap_remap (23 samples, 0.02%)</title><rect x="80.1583%" y="421" width="0.0168%" height="15" fill="rgb(254,215,14)" fg:x="109687" fg:w="23"/><text x="80.4083%" y="431.50"></text></g><g><title>pa_nactive_sub (137 samples, 0.10%)</title><rect x="80.1853%" y="421" width="0.1001%" height="15" fill="rgb(211,115,16)" fg:x="109724" fg:w="137"/><text x="80.4353%" y="431.50"></text></g><g><title>atomic_fetch_sub_zu (137 samples, 0.10%)</title><rect x="80.1853%" y="405" width="0.1001%" height="15" fill="rgb(236,210,16)" fg:x="109724" fg:w="137"/><text x="80.4353%" y="415.50"></text></g><g><title>_rjem_je_pa_dalloc (289 samples, 0.21%)</title><rect x="80.0794%" y="437" width="0.2112%" height="15" fill="rgb(221,94,12)" fg:x="109579" fg:w="289"/><text x="80.3294%" y="447.50"></text></g><g><title>[libc.so.6] (159 samples, 0.12%)</title><rect x="80.3125%" y="421" width="0.1162%" height="15" fill="rgb(235,218,49)" fg:x="109898" fg:w="159"/><text x="80.5625%" y="431.50"></text></g><g><title>_rjem_je_ecache_dalloc (21 samples, 0.02%)</title><rect x="80.4287%" y="421" width="0.0153%" height="15" fill="rgb(217,114,14)" fg:x="110057" fg:w="21"/><text x="80.6787%" y="431.50"></text></g><g><title>edata_base_get (20 samples, 0.01%)</title><rect x="80.4294%" y="405" width="0.0146%" height="15" fill="rgb(216,145,22)" fg:x="110058" fg:w="20"/><text x="80.6794%" y="415.50"></text></g><g><title>rtree_leaf_elm_lookup (21 samples, 0.02%)</title><rect x="80.5025%" y="357" width="0.0153%" height="15" fill="rgb(217,112,39)" fg:x="110158" fg:w="21"/><text x="80.7525%" y="367.50"></text></g><g><title>rtree_leaf_elm_state_update (15 samples, 0.01%)</title><rect x="80.5178%" y="357" width="0.0110%" height="15" fill="rgb(225,85,32)" fg:x="110179" fg:w="15"/><text x="80.7678%" y="367.50"></text></g><g><title>_rjem_je_emap_update_edata_state (61 samples, 0.04%)</title><rect x="80.4850%" y="373" width="0.0446%" height="15" fill="rgb(245,209,47)" fg:x="110134" fg:w="61"/><text x="80.7350%" y="383.50"></text></g><g><title>_rjem_je_edata_heap_empty (40 samples, 0.03%)</title><rect x="80.5741%" y="357" width="0.0292%" height="15" fill="rgb(218,220,15)" fg:x="110256" fg:w="40"/><text x="80.8241%" y="367.50"></text></g><g><title>edata_heap_ph_cmp (42 samples, 0.03%)</title><rect x="80.6326%" y="325" width="0.0307%" height="15" fill="rgb(222,202,31)" fg:x="110336" fg:w="42"/><text x="80.8826%" y="335.50"></text></g><g><title>edata_snad_comp (42 samples, 0.03%)</title><rect x="80.6326%" y="309" width="0.0307%" height="15" fill="rgb(243,203,4)" fg:x="110336" fg:w="42"/><text x="80.8826%" y="319.50"></text></g><g><title>edata_cmp_summary_get (37 samples, 0.03%)</title><rect x="80.6362%" y="293" width="0.0270%" height="15" fill="rgb(237,92,17)" fg:x="110341" fg:w="37"/><text x="80.8862%" y="303.50"></text></g><g><title>edata_sn_get (37 samples, 0.03%)</title><rect x="80.6362%" y="277" width="0.0270%" height="15" fill="rgb(231,119,7)" fg:x="110341" fg:w="37"/><text x="80.8862%" y="287.50"></text></g><g><title>edata_heap_ph_cmp (15 samples, 0.01%)</title><rect x="80.6698%" y="293" width="0.0110%" height="15" fill="rgb(237,82,41)" fg:x="110387" fg:w="15"/><text x="80.9198%" y="303.50"></text></g><g><title>edata_snad_comp (15 samples, 0.01%)</title><rect x="80.6698%" y="277" width="0.0110%" height="15" fill="rgb(226,81,48)" fg:x="110387" fg:w="15"/><text x="80.9198%" y="287.50"></text></g><g><title>phn_merge (34 samples, 0.02%)</title><rect x="80.6662%" y="309" width="0.0248%" height="15" fill="rgb(234,70,51)" fg:x="110382" fg:w="34"/><text x="80.9162%" y="319.50"></text></g><g><title>phn_merge_ordered (14 samples, 0.01%)</title><rect x="80.6808%" y="293" width="0.0102%" height="15" fill="rgb(251,86,4)" fg:x="110402" fg:w="14"/><text x="80.9308%" y="303.50"></text></g><g><title>ph_try_aux_merge_pair (48 samples, 0.04%)</title><rect x="80.6633%" y="325" width="0.0351%" height="15" fill="rgb(244,144,28)" fg:x="110378" fg:w="48"/><text x="80.9133%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_insert (145 samples, 0.11%)</title><rect x="80.6033%" y="357" width="0.1060%" height="15" fill="rgb(232,161,39)" fg:x="110296" fg:w="145"/><text x="80.8533%" y="367.50"></text></g><g><title>ph_insert (132 samples, 0.10%)</title><rect x="80.6128%" y="341" width="0.0965%" height="15" fill="rgb(247,34,51)" fg:x="110309" fg:w="132"/><text x="80.8628%" y="351.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (50 samples, 0.04%)</title><rect x="80.7093%" y="357" width="0.0365%" height="15" fill="rgb(225,132,2)" fg:x="110441" fg:w="50"/><text x="80.9593%" y="367.50"></text></g><g><title>sz_psz2ind (18 samples, 0.01%)</title><rect x="80.7327%" y="341" width="0.0132%" height="15" fill="rgb(209,159,44)" fg:x="110473" fg:w="18"/><text x="80.9827%" y="351.50"></text></g><g><title>edata_cmp_summary_comp (22 samples, 0.02%)</title><rect x="80.7473%" y="357" width="0.0161%" height="15" fill="rgb(251,214,1)" fg:x="110493" fg:w="22"/><text x="80.9973%" y="367.50"></text></g><g><title>edata_list_inactive_append (67 samples, 0.05%)</title><rect x="80.7692%" y="357" width="0.0490%" height="15" fill="rgb(247,84,47)" fg:x="110523" fg:w="67"/><text x="81.0192%" y="367.50"></text></g><g><title>atomic_load_zu (44 samples, 0.03%)</title><rect x="80.8204%" y="341" width="0.0322%" height="15" fill="rgb(240,111,43)" fg:x="110593" fg:w="44"/><text x="81.0704%" y="351.50"></text></g><g><title>eset_stats_add (51 samples, 0.04%)</title><rect x="80.8189%" y="357" width="0.0373%" height="15" fill="rgb(215,214,35)" fg:x="110591" fg:w="51"/><text x="81.0689%" y="367.50"></text></g><g><title>extent_deactivate_locked (568 samples, 0.42%)</title><rect x="80.4718%" y="405" width="0.4151%" height="15" fill="rgb(248,207,23)" fg:x="110116" fg:w="568"/><text x="80.7218%" y="415.50"></text></g><g><title>extent_deactivate_locked_impl (568 samples, 0.42%)</title><rect x="80.4718%" y="389" width="0.4151%" height="15" fill="rgb(214,186,4)" fg:x="110116" fg:w="568"/><text x="80.7218%" y="399.50"></text></g><g><title>_rjem_je_eset_insert (489 samples, 0.36%)</title><rect x="80.5295%" y="373" width="0.3574%" height="15" fill="rgb(220,133,22)" fg:x="110195" fg:w="489"/><text x="80.7795%" y="383.50"></text></g><g><title>sz_psz2ind (34 samples, 0.02%)</title><rect x="80.8620%" y="357" width="0.0248%" height="15" fill="rgb(239,134,19)" fg:x="110650" fg:w="34"/><text x="81.1120%" y="367.50"></text></g><g><title>_rjem_je_emap_update_edata_state (48 samples, 0.04%)</title><rect x="80.9739%" y="341" width="0.0351%" height="15" fill="rgb(250,140,9)" fg:x="110803" fg:w="48"/><text x="81.2239%" y="351.50"></text></g><g><title>rtree_leaf_elm_state_update (22 samples, 0.02%)</title><rect x="80.9929%" y="325" width="0.0161%" height="15" fill="rgb(225,59,14)" fg:x="110829" fg:w="22"/><text x="81.2429%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (19 samples, 0.01%)</title><rect x="80.9950%" y="309" width="0.0139%" height="15" fill="rgb(214,152,51)" fg:x="110832" fg:w="19"/><text x="81.2450%" y="319.50"></text></g><g><title>atomic_load_p (19 samples, 0.01%)</title><rect x="80.9950%" y="293" width="0.0139%" height="15" fill="rgb(251,227,43)" fg:x="110832" fg:w="19"/><text x="81.2450%" y="303.50"></text></g><g><title>edata_committed_get (32 samples, 0.02%)</title><rect x="81.0360%" y="325" width="0.0234%" height="15" fill="rgb(241,96,17)" fg:x="110888" fg:w="32"/><text x="81.2860%" y="335.50"></text></g><g><title>extent_can_acquire_neighbor (67 samples, 0.05%)</title><rect x="81.0140%" y="341" width="0.0490%" height="15" fill="rgb(234,198,43)" fg:x="110858" fg:w="67"/><text x="81.2640%" y="351.50"></text></g><g><title>rtree_leaf_elm_read (20 samples, 0.01%)</title><rect x="81.0725%" y="341" width="0.0146%" height="15" fill="rgb(220,108,29)" fg:x="110938" fg:w="20"/><text x="81.3225%" y="351.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (211 samples, 0.15%)</title><rect x="80.9351%" y="373" width="0.1542%" height="15" fill="rgb(226,163,33)" fg:x="110750" fg:w="211"/><text x="81.1851%" y="383.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (203 samples, 0.15%)</title><rect x="80.9410%" y="357" width="0.1484%" height="15" fill="rgb(205,194,45)" fg:x="110758" fg:w="203"/><text x="81.1910%" y="367.50"></text></g><g><title>ph_merge_children (23 samples, 0.02%)</title><rect x="81.1302%" y="309" width="0.0168%" height="15" fill="rgb(206,143,44)" fg:x="111017" fg:w="23"/><text x="81.3802%" y="319.50"></text></g><g><title>phn_merge_siblings (21 samples, 0.02%)</title><rect x="81.1317%" y="293" width="0.0153%" height="15" fill="rgb(236,136,36)" fg:x="111019" fg:w="21"/><text x="81.3817%" y="303.50"></text></g><g><title>phn_next_get (14 samples, 0.01%)</title><rect x="81.1368%" y="277" width="0.0102%" height="15" fill="rgb(249,172,42)" fg:x="111026" fg:w="14"/><text x="81.3868%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_remove (62 samples, 0.05%)</title><rect x="81.1069%" y="341" width="0.0453%" height="15" fill="rgb(216,139,23)" fg:x="110985" fg:w="62"/><text x="81.3569%" y="351.50"></text></g><g><title>ph_remove (60 samples, 0.04%)</title><rect x="81.1083%" y="325" width="0.0438%" height="15" fill="rgb(207,166,20)" fg:x="110987" fg:w="60"/><text x="81.3583%" y="335.50"></text></g><g><title>edata_list_inactive_remove (36 samples, 0.03%)</title><rect x="81.1639%" y="341" width="0.0263%" height="15" fill="rgb(210,209,22)" fg:x="111063" fg:w="36"/><text x="81.4139%" y="351.50"></text></g><g><title>atomic_load_zu (16 samples, 0.01%)</title><rect x="81.1924%" y="325" width="0.0117%" height="15" fill="rgb(232,118,20)" fg:x="111102" fg:w="16"/><text x="81.4424%" y="335.50"></text></g><g><title>eset_stats_sub (20 samples, 0.01%)</title><rect x="81.1916%" y="341" width="0.0146%" height="15" fill="rgb(238,113,42)" fg:x="111101" fg:w="20"/><text x="81.4416%" y="351.50"></text></g><g><title>_rjem_je_eset_remove (184 samples, 0.13%)</title><rect x="81.0930%" y="357" width="0.1345%" height="15" fill="rgb(231,42,5)" fg:x="110966" fg:w="184"/><text x="81.3430%" y="367.50"></text></g><g><title>sz_psz2ind (21 samples, 0.02%)</title><rect x="81.2121%" y="341" width="0.0153%" height="15" fill="rgb(243,166,24)" fg:x="111129" fg:w="21"/><text x="81.4621%" y="351.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (22 samples, 0.02%)</title><rect x="81.2435%" y="325" width="0.0161%" height="15" fill="rgb(237,226,12)" fg:x="111172" fg:w="22"/><text x="81.4935%" y="335.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (17 samples, 0.01%)</title><rect x="81.2472%" y="309" width="0.0124%" height="15" fill="rgb(229,133,24)" fg:x="111177" fg:w="17"/><text x="81.4972%" y="319.50"></text></g><g><title>ehooks_merge (38 samples, 0.03%)</title><rect x="81.2391%" y="341" width="0.0278%" height="15" fill="rgb(238,33,43)" fg:x="111166" fg:w="38"/><text x="81.4891%" y="351.50"></text></g><g><title>[libc.so.6] (43 samples, 0.03%)</title><rect x="81.2757%" y="325" width="0.0314%" height="15" fill="rgb(227,59,38)" fg:x="111216" fg:w="43"/><text x="81.5257%" y="335.50"></text></g><g><title>edata_avail_ph_cmp (34 samples, 0.02%)</title><rect x="81.3210%" y="277" width="0.0248%" height="15" fill="rgb(230,97,0)" fg:x="111278" fg:w="34"/><text x="81.5710%" y="287.50"></text></g><g><title>edata_esnead_comp (34 samples, 0.02%)</title><rect x="81.3210%" y="261" width="0.0248%" height="15" fill="rgb(250,173,50)" fg:x="111278" fg:w="34"/><text x="81.5710%" y="271.50"></text></g><g><title>edata_esn_comp (27 samples, 0.02%)</title><rect x="81.3261%" y="245" width="0.0197%" height="15" fill="rgb(240,15,50)" fg:x="111285" fg:w="27"/><text x="81.5761%" y="255.50"></text></g><g><title>edata_esn_get (24 samples, 0.02%)</title><rect x="81.3283%" y="229" width="0.0175%" height="15" fill="rgb(221,93,22)" fg:x="111288" fg:w="24"/><text x="81.5783%" y="239.50"></text></g><g><title>phn_merge (19 samples, 0.01%)</title><rect x="81.3487%" y="261" width="0.0139%" height="15" fill="rgb(245,180,53)" fg:x="111316" fg:w="19"/><text x="81.5987%" y="271.50"></text></g><g><title>ph_try_aux_merge_pair (30 samples, 0.02%)</title><rect x="81.3466%" y="277" width="0.0219%" height="15" fill="rgb(231,88,51)" fg:x="111313" fg:w="30"/><text x="81.5966%" y="287.50"></text></g><g><title>_rjem_je_edata_avail_insert (80 samples, 0.06%)</title><rect x="81.3159%" y="309" width="0.0585%" height="15" fill="rgb(240,58,21)" fg:x="111271" fg:w="80"/><text x="81.5659%" y="319.50"></text></g><g><title>ph_insert (80 samples, 0.06%)</title><rect x="81.3159%" y="293" width="0.0585%" height="15" fill="rgb(237,21,10)" fg:x="111271" fg:w="80"/><text x="81.5659%" y="303.50"></text></g><g><title>malloc_mutex_lock (98 samples, 0.07%)</title><rect x="81.3751%" y="309" width="0.0716%" height="15" fill="rgb(218,43,11)" fg:x="111352" fg:w="98"/><text x="81.6251%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (97 samples, 0.07%)</title><rect x="81.3758%" y="293" width="0.0709%" height="15" fill="rgb(218,221,29)" fg:x="111353" fg:w="97"/><text x="81.6258%" y="303.50"></text></g><g><title>pthread_mutex_trylock (97 samples, 0.07%)</title><rect x="81.3758%" y="277" width="0.0709%" height="15" fill="rgb(214,118,42)" fg:x="111353" fg:w="97"/><text x="81.6258%" y="287.50"></text></g><g><title>_rjem_je_edata_cache_put (193 samples, 0.14%)</title><rect x="81.3071%" y="325" width="0.1410%" height="15" fill="rgb(251,200,26)" fg:x="111259" fg:w="193"/><text x="81.5571%" y="335.50"></text></g><g><title>_rjem_je_emap_merge_commit (20 samples, 0.01%)</title><rect x="81.4481%" y="325" width="0.0146%" height="15" fill="rgb(237,101,39)" fg:x="111452" fg:w="20"/><text x="81.6981%" y="335.50"></text></g><g><title>_rjem_je_emap_merge_prepare (46 samples, 0.03%)</title><rect x="81.4628%" y="325" width="0.0336%" height="15" fill="rgb(251,117,11)" fg:x="111472" fg:w="46"/><text x="81.7128%" y="335.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (28 samples, 0.02%)</title><rect x="81.4759%" y="309" width="0.0205%" height="15" fill="rgb(216,223,23)" fg:x="111490" fg:w="28"/><text x="81.7259%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (19 samples, 0.01%)</title><rect x="81.4825%" y="293" width="0.0139%" height="15" fill="rgb(251,54,12)" fg:x="111499" fg:w="19"/><text x="81.7325%" y="303.50"></text></g><g><title>extent_try_coalesce_large (845 samples, 0.62%)</title><rect x="80.8883%" y="405" width="0.6175%" height="15" fill="rgb(254,176,54)" fg:x="110686" fg:w="845"/><text x="81.1383%" y="415.50"></text></g><g><title>extent_try_coalesce_impl (836 samples, 0.61%)</title><rect x="80.8949%" y="389" width="0.6109%" height="15" fill="rgb(210,32,8)" fg:x="110695" fg:w="836"/><text x="81.1449%" y="399.50"></text></g><g><title>extent_coalesce (570 samples, 0.42%)</title><rect x="81.0893%" y="373" width="0.4166%" height="15" fill="rgb(235,52,38)" fg:x="110961" fg:w="570"/><text x="81.3393%" y="383.50"></text></g><g><title>extent_merge_impl (381 samples, 0.28%)</title><rect x="81.2274%" y="357" width="0.2784%" height="15" fill="rgb(231,4,44)" fg:x="111150" fg:w="381"/><text x="81.4774%" y="367.50"></text></g><g><title>extent_merge_impl (327 samples, 0.24%)</title><rect x="81.2669%" y="341" width="0.2390%" height="15" fill="rgb(249,2,32)" fg:x="111204" fg:w="327"/><text x="81.5169%" y="351.50"></text></g><g><title>atomic_load_b (39 samples, 0.03%)</title><rect x="81.5124%" y="373" width="0.0285%" height="15" fill="rgb(224,65,26)" fg:x="111540" fg:w="39"/><text x="81.7624%" y="383.50"></text></g><g><title>pthread_mutex_trylock (32 samples, 0.02%)</title><rect x="81.5424%" y="357" width="0.0234%" height="15" fill="rgb(250,73,40)" fg:x="111581" fg:w="32"/><text x="81.7924%" y="367.50"></text></g><g><title>malloc_mutex_trylock_final (35 samples, 0.03%)</title><rect x="81.5409%" y="373" width="0.0256%" height="15" fill="rgb(253,177,16)" fg:x="111579" fg:w="35"/><text x="81.7909%" y="383.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (125 samples, 0.09%)</title><rect x="81.5059%" y="389" width="0.0913%" height="15" fill="rgb(217,32,34)" fg:x="111531" fg:w="125"/><text x="81.7559%" y="399.50"></text></g><g><title>spin_cpu_spinwait (42 samples, 0.03%)</title><rect x="81.5665%" y="373" width="0.0307%" height="15" fill="rgb(212,7,10)" fg:x="111614" fg:w="42"/><text x="81.8165%" y="383.50"></text></g><g><title>pthread_mutex_trylock (115 samples, 0.08%)</title><rect x="81.6001%" y="373" width="0.0840%" height="15" fill="rgb(245,89,8)" fg:x="111660" fg:w="115"/><text x="81.8501%" y="383.50"></text></g><g><title>malloc_mutex_trylock_final (122 samples, 0.09%)</title><rect x="81.5972%" y="389" width="0.0892%" height="15" fill="rgb(237,16,53)" fg:x="111656" fg:w="122"/><text x="81.8472%" y="399.50"></text></g><g><title>malloc_mutex_lock (254 samples, 0.19%)</title><rect x="81.5059%" y="405" width="0.1856%" height="15" fill="rgb(250,204,30)" fg:x="111531" fg:w="254"/><text x="81.7559%" y="415.50"></text></g><g><title>_rjem_je_extent_record (1,711 samples, 1.25%)</title><rect x="80.4448%" y="421" width="1.2504%" height="15" fill="rgb(208,77,27)" fg:x="110079" fg:w="1711"/><text x="80.6948%" y="431.50"></text></g><g><title>pac_ehooks_get (25 samples, 0.02%)</title><rect x="81.6959%" y="421" width="0.0183%" height="15" fill="rgb(250,204,28)" fg:x="111791" fg:w="25"/><text x="81.9459%" y="431.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (2,279 samples, 1.67%)</title><rect x="80.0523%" y="453" width="1.6655%" height="15" fill="rgb(244,63,21)" fg:x="109542" fg:w="2279"/><text x="80.3023%" y="463.50"></text></g><g><title>pac_dalloc_impl (1,953 samples, 1.43%)</title><rect x="80.2906%" y="437" width="1.4272%" height="15" fill="rgb(236,85,44)" fg:x="109868" fg:w="1953"/><text x="80.5406%" y="447.50"></text></g><g><title>ph_merge_children (17 samples, 0.01%)</title><rect x="81.8296%" y="357" width="0.0124%" height="15" fill="rgb(215,98,4)" fg:x="111974" fg:w="17"/><text x="82.0796%" y="367.50"></text></g><g><title>phn_merge_siblings (14 samples, 0.01%)</title><rect x="81.8318%" y="341" width="0.0102%" height="15" fill="rgb(235,38,11)" fg:x="111977" fg:w="14"/><text x="82.0818%" y="351.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (66 samples, 0.05%)</title><rect x="81.8055%" y="405" width="0.0482%" height="15" fill="rgb(254,186,25)" fg:x="111941" fg:w="66"/><text x="82.0555%" y="415.50"></text></g><g><title>_rjem_je_edata_heap_remove (57 samples, 0.04%)</title><rect x="81.8121%" y="389" width="0.0417%" height="15" fill="rgb(225,55,31)" fg:x="111950" fg:w="57"/><text x="82.0621%" y="399.50"></text></g><g><title>ph_remove (48 samples, 0.04%)</title><rect x="81.8186%" y="373" width="0.0351%" height="15" fill="rgb(211,15,21)" fg:x="111959" fg:w="48"/><text x="82.0686%" y="383.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (111 samples, 0.08%)</title><rect x="81.7741%" y="437" width="0.0811%" height="15" fill="rgb(215,187,41)" fg:x="111898" fg:w="111"/><text x="82.0241%" y="447.50"></text></g><g><title>arena_dissociate_bin_slab (89 samples, 0.07%)</title><rect x="81.7901%" y="421" width="0.0650%" height="15" fill="rgb(248,69,32)" fg:x="111920" fg:w="89"/><text x="82.0401%" y="431.50"></text></g><g><title>edata_heap_ph_cmp (22 samples, 0.02%)</title><rect x="81.8873%" y="357" width="0.0161%" height="15" fill="rgb(252,102,52)" fg:x="112053" fg:w="22"/><text x="82.1373%" y="367.50"></text></g><g><title>edata_snad_comp (22 samples, 0.02%)</title><rect x="81.8873%" y="341" width="0.0161%" height="15" fill="rgb(253,140,32)" fg:x="112053" fg:w="22"/><text x="82.1373%" y="351.50"></text></g><g><title>edata_cmp_summary_get (21 samples, 0.02%)</title><rect x="81.8881%" y="325" width="0.0153%" height="15" fill="rgb(216,56,42)" fg:x="112054" fg:w="21"/><text x="82.1381%" y="335.50"></text></g><g><title>edata_sn_get (20 samples, 0.01%)</title><rect x="81.8888%" y="309" width="0.0146%" height="15" fill="rgb(216,184,14)" fg:x="112055" fg:w="20"/><text x="82.1388%" y="319.50"></text></g><g><title>ph_try_aux_merge_pair (28 samples, 0.02%)</title><rect x="81.9049%" y="357" width="0.0205%" height="15" fill="rgb(237,187,27)" fg:x="112077" fg:w="28"/><text x="82.1549%" y="367.50"></text></g><g><title>arena_bin_slabs_nonfull_insert (102 samples, 0.07%)</title><rect x="81.8610%" y="405" width="0.0745%" height="15" fill="rgb(219,65,3)" fg:x="112017" fg:w="102"/><text x="82.1110%" y="415.50"></text></g><g><title>_rjem_je_edata_heap_insert (95 samples, 0.07%)</title><rect x="81.8661%" y="389" width="0.0694%" height="15" fill="rgb(245,83,25)" fg:x="112024" fg:w="95"/><text x="82.1161%" y="399.50"></text></g><g><title>ph_insert (78 samples, 0.06%)</title><rect x="81.8786%" y="373" width="0.0570%" height="15" fill="rgb(214,205,45)" fg:x="112041" fg:w="78"/><text x="82.1286%" y="383.50"></text></g><g><title>arena_bin_lower_slab (128 samples, 0.09%)</title><rect x="81.8588%" y="421" width="0.0935%" height="15" fill="rgb(241,20,18)" fg:x="112014" fg:w="128"/><text x="82.1088%" y="431.50"></text></g><g><title>edata_snad_comp (22 samples, 0.02%)</title><rect x="81.9363%" y="405" width="0.0161%" height="15" fill="rgb(232,163,23)" fg:x="112120" fg:w="22"/><text x="82.1863%" y="415.50"></text></g><g><title>edata_cmp_summary_get (19 samples, 0.01%)</title><rect x="81.9385%" y="389" width="0.0139%" height="15" fill="rgb(214,5,46)" fg:x="112123" fg:w="19"/><text x="82.1885%" y="399.50"></text></g><g><title>edata_sn_get (19 samples, 0.01%)</title><rect x="81.9385%" y="373" width="0.0139%" height="15" fill="rgb(229,78,17)" fg:x="112123" fg:w="19"/><text x="82.1885%" y="383.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_nonempty (144 samples, 0.11%)</title><rect x="81.8552%" y="437" width="0.1052%" height="15" fill="rgb(248,89,10)" fg:x="112009" fg:w="144"/><text x="82.1052%" y="447.50"></text></g><g><title>bitmap_unset (53 samples, 0.04%)</title><rect x="81.9685%" y="437" width="0.0387%" height="15" fill="rgb(248,54,15)" fg:x="112164" fg:w="53"/><text x="82.2185%" y="447.50"></text></g><g><title>arena_dalloc_bin_locked_step (387 samples, 0.28%)</title><rect x="81.7295%" y="453" width="0.2828%" height="15" fill="rgb(223,116,6)" fg:x="111837" fg:w="387"/><text x="81.9795%" y="463.50"></text></g><g><title>arena_decay_dirty (15 samples, 0.01%)</title><rect x="82.0130%" y="421" width="0.0110%" height="15" fill="rgb(205,125,38)" fg:x="112225" fg:w="15"/><text x="82.2630%" y="431.50"></text></g><g><title>arena_decay_impl (15 samples, 0.01%)</title><rect x="82.0130%" y="405" width="0.0110%" height="15" fill="rgb(251,78,38)" fg:x="112225" fg:w="15"/><text x="82.2630%" y="415.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (15 samples, 0.01%)</title><rect x="82.0130%" y="389" width="0.0110%" height="15" fill="rgb(253,78,28)" fg:x="112225" fg:w="15"/><text x="82.2630%" y="399.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (15 samples, 0.01%)</title><rect x="82.0130%" y="373" width="0.0110%" height="15" fill="rgb(209,120,3)" fg:x="112225" fg:w="15"/><text x="82.2630%" y="383.50"></text></g><g><title>_rjem_je_arena_decay (17 samples, 0.01%)</title><rect x="82.0130%" y="437" width="0.0124%" height="15" fill="rgb(238,229,9)" fg:x="112225" fg:w="17"/><text x="82.2630%" y="447.50"></text></g><g><title>arena_decay_ticks (23 samples, 0.02%)</title><rect x="82.0123%" y="453" width="0.0168%" height="15" fill="rgb(253,159,18)" fg:x="112224" fg:w="23"/><text x="82.2623%" y="463.50"></text></g><g><title>edata_arena_ind_get (31 samples, 0.02%)</title><rect x="82.0445%" y="453" width="0.0227%" height="15" fill="rgb(244,42,34)" fg:x="112268" fg:w="31"/><text x="82.2945%" y="463.50"></text></g><g><title>pthread_mutex_trylock (164 samples, 0.12%)</title><rect x="82.0708%" y="421" width="0.1198%" height="15" fill="rgb(224,8,7)" fg:x="112304" fg:w="164"/><text x="82.3208%" y="431.50"></text></g><g><title>malloc_mutex_trylock_final (166 samples, 0.12%)</title><rect x="82.0708%" y="437" width="0.1213%" height="15" fill="rgb(210,201,45)" fg:x="112304" fg:w="166"/><text x="82.3208%" y="447.50"></text></g><g><title>malloc_mutex_lock (182 samples, 0.13%)</title><rect x="82.0678%" y="453" width="0.1330%" height="15" fill="rgb(252,185,21)" fg:x="112300" fg:w="182"/><text x="82.3178%" y="463.50"></text></g><g><title>[libc.so.6] (46 samples, 0.03%)</title><rect x="82.2009%" y="437" width="0.0336%" height="15" fill="rgb(223,131,1)" fg:x="112482" fg:w="46"/><text x="82.4509%" y="447.50"></text></g><g><title>pthread_mutex_unlock (34 samples, 0.02%)</title><rect x="82.2352%" y="437" width="0.0248%" height="15" fill="rgb(245,141,16)" fg:x="112529" fg:w="34"/><text x="82.4852%" y="447.50"></text></g><g><title>malloc_mutex_unlock (85 samples, 0.06%)</title><rect x="82.2009%" y="453" width="0.0621%" height="15" fill="rgb(229,55,45)" fg:x="112482" fg:w="85"/><text x="82.4509%" y="463.50"></text></g><g><title>rtree_leaf_elm_lookup (34 samples, 0.02%)</title><rect x="82.2812%" y="421" width="0.0248%" height="15" fill="rgb(208,92,15)" fg:x="112592" fg:w="34"/><text x="82.5312%" y="431.50"></text></g><g><title>rtree_leaf_elm_read (106 samples, 0.08%)</title><rect x="82.3061%" y="421" width="0.0775%" height="15" fill="rgb(234,185,47)" fg:x="112626" fg:w="106"/><text x="82.5561%" y="431.50"></text></g><g><title>rtree_leaf_elm_bits_read (95 samples, 0.07%)</title><rect x="82.3141%" y="405" width="0.0694%" height="15" fill="rgb(253,104,50)" fg:x="112637" fg:w="95"/><text x="82.5641%" y="415.50"></text></g><g><title>atomic_load_p (95 samples, 0.07%)</title><rect x="82.3141%" y="389" width="0.0694%" height="15" fill="rgb(205,70,7)" fg:x="112637" fg:w="95"/><text x="82.5641%" y="399.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (41 samples, 0.03%)</title><rect x="82.3835%" y="421" width="0.0300%" height="15" fill="rgb(240,178,43)" fg:x="112732" fg:w="41"/><text x="82.6335%" y="431.50"></text></g><g><title>util_prefetch_write_range (41 samples, 0.03%)</title><rect x="82.3835%" y="405" width="0.0300%" height="15" fill="rgb(214,112,2)" fg:x="112732" fg:w="41"/><text x="82.6335%" y="415.50"></text></g><g><title>util_prefetch_write (41 samples, 0.03%)</title><rect x="82.3835%" y="389" width="0.0300%" height="15" fill="rgb(206,46,17)" fg:x="112732" fg:w="41"/><text x="82.6335%" y="399.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (209 samples, 0.15%)</title><rect x="82.2630%" y="453" width="0.1527%" height="15" fill="rgb(225,220,16)" fg:x="112567" fg:w="209"/><text x="82.5130%" y="463.50"></text></g><g><title>emap_edata_lookup_batch (202 samples, 0.15%)</title><rect x="82.2681%" y="437" width="0.1476%" height="15" fill="rgb(238,65,40)" fg:x="112574" fg:w="202"/><text x="82.5181%" y="447.50"></text></g><g><title>edata_arena_ind_get (17 samples, 0.01%)</title><rect x="82.4223%" y="437" width="0.0124%" height="15" fill="rgb(230,151,21)" fg:x="112785" fg:w="17"/><text x="82.6723%" y="447.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3,416 samples, 2.50%)</title><rect x="79.9412%" y="501" width="2.4964%" height="15" fill="rgb(218,58,49)" fg:x="109390" fg:w="3416"/><text x="80.1912%" y="511.50">_r..</text></g><g><title>tcache_bin_flush_bottom (3,411 samples, 2.49%)</title><rect x="79.9449%" y="485" width="2.4927%" height="15" fill="rgb(219,179,14)" fg:x="109395" fg:w="3411"/><text x="80.1949%" y="495.50">tc..</text></g><g><title>tcache_bin_flush_impl (3,339 samples, 2.44%)</title><rect x="79.9975%" y="469" width="2.4401%" height="15" fill="rgb(223,72,1)" fg:x="109467" fg:w="3339"/><text x="80.2475%" y="479.50">tc..</text></g><g><title>tcache_bin_flush_match (30 samples, 0.02%)</title><rect x="82.4157%" y="453" width="0.0219%" height="15" fill="rgb(238,126,10)" fg:x="112776" fg:w="30"/><text x="82.6657%" y="463.50"></text></g><g><title>cache_bin_dalloc_easy (108 samples, 0.08%)</title><rect x="82.4376%" y="501" width="0.0789%" height="15" fill="rgb(224,206,38)" fg:x="112806" fg:w="108"/><text x="82.6876%" y="511.50"></text></g><g><title>cache_bin_full (91 samples, 0.07%)</title><rect x="82.4501%" y="485" width="0.0665%" height="15" fill="rgb(212,201,54)" fg:x="112823" fg:w="91"/><text x="82.7001%" y="495.50"></text></g><g><title>isdalloct (5,457 samples, 3.99%)</title><rect x="78.5659%" y="549" width="3.9879%" height="15" fill="rgb(218,154,48)" fg:x="107508" fg:w="5457"/><text x="78.8159%" y="559.50">isda..</text></g><g><title>arena_sdalloc (5,457 samples, 3.99%)</title><rect x="78.5659%" y="533" width="3.9879%" height="15" fill="rgb(232,93,24)" fg:x="107508" fg:w="5457"/><text x="78.8159%" y="543.50">aren..</text></g><g><title>tcache_dalloc_small (3,583 samples, 2.62%)</title><rect x="79.9354%" y="517" width="2.6184%" height="15" fill="rgb(245,30,21)" fg:x="109382" fg:w="3583"/><text x="80.1854%" y="527.50">tc..</text></g><g><title>tcache_small_bin_disabled (50 samples, 0.04%)</title><rect x="82.5173%" y="501" width="0.0365%" height="15" fill="rgb(242,148,29)" fg:x="112915" fg:w="50"/><text x="82.7673%" y="511.50"></text></g><g><title>cache_bin_info_ncached_max (50 samples, 0.04%)</title><rect x="82.5173%" y="485" width="0.0365%" height="15" fill="rgb(244,153,54)" fg:x="112915" fg:w="50"/><text x="82.7673%" y="495.50"></text></g><g><title>sz_size2index (79 samples, 0.06%)</title><rect x="82.5538%" y="549" width="0.0577%" height="15" fill="rgb(252,87,22)" fg:x="112965" fg:w="79"/><text x="82.8038%" y="559.50"></text></g><g><title>sz_size2index_compute (73 samples, 0.05%)</title><rect x="82.5582%" y="533" width="0.0533%" height="15" fill="rgb(210,51,29)" fg:x="112971" fg:w="73"/><text x="82.8082%" y="543.50"></text></g><g><title>_rjem_je_peak_dalloc_event_handler (28 samples, 0.02%)</title><rect x="82.6327%" y="517" width="0.0205%" height="15" fill="rgb(242,136,47)" fg:x="113073" fg:w="28"/><text x="82.8827%" y="527.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (15 samples, 0.01%)</title><rect x="82.7102%" y="501" width="0.0110%" height="15" fill="rgb(238,68,4)" fg:x="113179" fg:w="15"/><text x="82.9602%" y="511.50"></text></g><g><title>arena_large_dalloc_stats_update (14 samples, 0.01%)</title><rect x="82.7826%" y="421" width="0.0102%" height="15" fill="rgb(242,161,30)" fg:x="113278" fg:w="14"/><text x="83.0326%" y="431.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (15 samples, 0.01%)</title><rect x="82.7826%" y="437" width="0.0110%" height="15" fill="rgb(218,58,44)" fg:x="113278" fg:w="15"/><text x="83.0326%" y="447.50"></text></g><g><title>extent_deactivate_locked (23 samples, 0.02%)</title><rect x="82.8103%" y="373" width="0.0168%" height="15" fill="rgb(252,125,32)" fg:x="113316" fg:w="23"/><text x="83.0603%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (23 samples, 0.02%)</title><rect x="82.8103%" y="357" width="0.0168%" height="15" fill="rgb(219,178,0)" fg:x="113316" fg:w="23"/><text x="83.0603%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (21 samples, 0.02%)</title><rect x="82.8118%" y="341" width="0.0153%" height="15" fill="rgb(213,152,7)" fg:x="113318" fg:w="21"/><text x="83.0618%" y="351.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (23 samples, 0.02%)</title><rect x="82.8286%" y="341" width="0.0168%" height="15" fill="rgb(249,109,34)" fg:x="113341" fg:w="23"/><text x="83.0786%" y="351.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (22 samples, 0.02%)</title><rect x="82.8293%" y="325" width="0.0161%" height="15" fill="rgb(232,96,21)" fg:x="113342" fg:w="22"/><text x="83.0793%" y="335.50"></text></g><g><title>_rjem_je_eset_remove (18 samples, 0.01%)</title><rect x="82.8461%" y="325" width="0.0132%" height="15" fill="rgb(228,27,39)" fg:x="113365" fg:w="18"/><text x="83.0961%" y="335.50"></text></g><g><title>_rjem_je_edata_cache_put (16 samples, 0.01%)</title><rect x="82.8673%" y="293" width="0.0117%" height="15" fill="rgb(211,182,52)" fg:x="113394" fg:w="16"/><text x="83.1173%" y="303.50"></text></g><g><title>extent_try_coalesce_large (73 samples, 0.05%)</title><rect x="82.8271%" y="373" width="0.0533%" height="15" fill="rgb(234,178,38)" fg:x="113339" fg:w="73"/><text x="83.0771%" y="383.50"></text></g><g><title>extent_try_coalesce_impl (73 samples, 0.05%)</title><rect x="82.8271%" y="357" width="0.0533%" height="15" fill="rgb(221,111,3)" fg:x="113339" fg:w="73"/><text x="83.0771%" y="367.50"></text></g><g><title>extent_coalesce (47 samples, 0.03%)</title><rect x="82.8461%" y="341" width="0.0343%" height="15" fill="rgb(228,175,21)" fg:x="113365" fg:w="47"/><text x="83.0961%" y="351.50"></text></g><g><title>extent_merge_impl (29 samples, 0.02%)</title><rect x="82.8593%" y="325" width="0.0212%" height="15" fill="rgb(228,174,43)" fg:x="113383" fg:w="29"/><text x="83.1093%" y="335.50"></text></g><g><title>extent_merge_impl (24 samples, 0.02%)</title><rect x="82.8629%" y="309" width="0.0175%" height="15" fill="rgb(211,191,0)" fg:x="113388" fg:w="24"/><text x="83.1129%" y="319.50"></text></g><g><title>_rjem_je_extent_record (114 samples, 0.08%)</title><rect x="82.8089%" y="389" width="0.0833%" height="15" fill="rgb(253,117,3)" fg:x="113314" fg:w="114"/><text x="83.0589%" y="399.50"></text></g><g><title>malloc_mutex_lock (16 samples, 0.01%)</title><rect x="82.8805%" y="373" width="0.0117%" height="15" fill="rgb(241,127,19)" fg:x="113412" fg:w="16"/><text x="83.1305%" y="383.50"></text></g><g><title>_rjem_je_large_dalloc_finish (136 samples, 0.10%)</title><rect x="82.7935%" y="437" width="0.0994%" height="15" fill="rgb(218,103,12)" fg:x="113293" fg:w="136"/><text x="83.0435%" y="447.50"></text></g><g><title>large_dalloc_finish_impl (132 samples, 0.10%)</title><rect x="82.7964%" y="421" width="0.0965%" height="15" fill="rgb(236,214,43)" fg:x="113297" fg:w="132"/><text x="83.0464%" y="431.50"></text></g><g><title>pac_dalloc_impl (123 samples, 0.09%)</title><rect x="82.8030%" y="405" width="0.0899%" height="15" fill="rgb(244,144,19)" fg:x="113306" fg:w="123"/><text x="83.0530%" y="415.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (195 samples, 0.14%)</title><rect x="82.7723%" y="485" width="0.1425%" height="15" fill="rgb(246,188,10)" fg:x="113264" fg:w="195"/><text x="83.0223%" y="495.50"></text></g><g><title>tcache_bin_flush_bottom (195 samples, 0.14%)</title><rect x="82.7723%" y="469" width="0.1425%" height="15" fill="rgb(212,193,33)" fg:x="113264" fg:w="195"/><text x="83.0223%" y="479.50"></text></g><g><title>tcache_bin_flush_impl (189 samples, 0.14%)</title><rect x="82.7767%" y="453" width="0.1381%" height="15" fill="rgb(241,51,29)" fg:x="113270" fg:w="189"/><text x="83.0267%" y="463.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (16 samples, 0.01%)</title><rect x="82.9031%" y="437" width="0.0117%" height="15" fill="rgb(211,58,19)" fg:x="113443" fg:w="16"/><text x="83.1531%" y="447.50"></text></g><g><title>emap_edata_lookup_batch (15 samples, 0.01%)</title><rect x="82.9039%" y="421" width="0.0110%" height="15" fill="rgb(229,111,26)" fg:x="113444" fg:w="15"/><text x="83.1539%" y="431.50"></text></g><g><title>cache_bin_ncached_get_local (22 samples, 0.02%)</title><rect x="82.9287%" y="469" width="0.0161%" height="15" fill="rgb(213,115,40)" fg:x="113478" fg:w="22"/><text x="83.1787%" y="479.50"></text></g><g><title>cache_bin_ncached_get_internal (22 samples, 0.02%)</title><rect x="82.9287%" y="453" width="0.0161%" height="15" fill="rgb(209,56,44)" fg:x="113478" fg:w="22"/><text x="83.1787%" y="463.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (64 samples, 0.05%)</title><rect x="82.9148%" y="485" width="0.0468%" height="15" fill="rgb(230,108,32)" fg:x="113459" fg:w="64"/><text x="83.1648%" y="495.50"></text></g><g><title>cache_bin_nstashed_get_local (23 samples, 0.02%)</title><rect x="82.9448%" y="469" width="0.0168%" height="15" fill="rgb(216,165,31)" fg:x="113500" fg:w="23"/><text x="83.1948%" y="479.50"></text></g><g><title>cache_bin_nstashed_get_internal (23 samples, 0.02%)</title><rect x="82.9448%" y="453" width="0.0168%" height="15" fill="rgb(218,122,21)" fg:x="113500" fg:w="23"/><text x="83.1948%" y="463.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (22 samples, 0.02%)</title><rect x="82.9455%" y="437" width="0.0161%" height="15" fill="rgb(223,224,47)" fg:x="113501" fg:w="22"/><text x="83.1955%" y="447.50"></text></g><g><title>[libc.so.6] (18 samples, 0.01%)</title><rect x="82.9682%" y="421" width="0.0132%" height="15" fill="rgb(238,102,44)" fg:x="113532" fg:w="18"/><text x="83.2182%" y="431.50"></text></g><g><title>cache_bin_finish_flush (24 samples, 0.02%)</title><rect x="82.9675%" y="437" width="0.0175%" height="15" fill="rgb(236,46,40)" fg:x="113531" fg:w="24"/><text x="83.2175%" y="447.50"></text></g><g><title>_rjem_je_pa_dalloc (26 samples, 0.02%)</title><rect x="83.0069%" y="405" width="0.0190%" height="15" fill="rgb(247,202,50)" fg:x="113585" fg:w="26"/><text x="83.2569%" y="415.50"></text></g><g><title>pa_nactive_sub (14 samples, 0.01%)</title><rect x="83.0157%" y="389" width="0.0102%" height="15" fill="rgb(209,99,20)" fg:x="113597" fg:w="14"/><text x="83.2657%" y="399.50"></text></g><g><title>atomic_fetch_sub_zu (14 samples, 0.01%)</title><rect x="83.0157%" y="373" width="0.0102%" height="15" fill="rgb(252,27,34)" fg:x="113597" fg:w="14"/><text x="83.2657%" y="383.50"></text></g><g><title>_rjem_je_edata_heap_insert (24 samples, 0.02%)</title><rect x="83.0493%" y="325" width="0.0175%" height="15" fill="rgb(215,206,23)" fg:x="113643" fg:w="24"/><text x="83.2993%" y="335.50"></text></g><g><title>ph_insert (23 samples, 0.02%)</title><rect x="83.0500%" y="309" width="0.0168%" height="15" fill="rgb(212,135,36)" fg:x="113644" fg:w="23"/><text x="83.3000%" y="319.50"></text></g><g><title>extent_deactivate_locked (52 samples, 0.04%)</title><rect x="83.0405%" y="373" width="0.0380%" height="15" fill="rgb(240,189,1)" fg:x="113631" fg:w="52"/><text x="83.2905%" y="383.50"></text></g><g><title>extent_deactivate_locked_impl (52 samples, 0.04%)</title><rect x="83.0405%" y="357" width="0.0380%" height="15" fill="rgb(242,56,20)" fg:x="113631" fg:w="52"/><text x="83.2905%" y="367.50"></text></g><g><title>_rjem_je_eset_insert (48 samples, 0.04%)</title><rect x="83.0435%" y="341" width="0.0351%" height="15" fill="rgb(247,132,33)" fg:x="113635" fg:w="48"/><text x="83.2935%" y="351.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (20 samples, 0.01%)</title><rect x="83.0822%" y="341" width="0.0146%" height="15" fill="rgb(208,149,11)" fg:x="113688" fg:w="20"/><text x="83.3322%" y="351.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (20 samples, 0.01%)</title><rect x="83.0822%" y="325" width="0.0146%" height="15" fill="rgb(211,33,11)" fg:x="113688" fg:w="20"/><text x="83.3322%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_remove (18 samples, 0.01%)</title><rect x="83.0990%" y="309" width="0.0132%" height="15" fill="rgb(221,29,38)" fg:x="113711" fg:w="18"/><text x="83.3490%" y="319.50"></text></g><g><title>ph_remove (17 samples, 0.01%)</title><rect x="83.0997%" y="293" width="0.0124%" height="15" fill="rgb(206,182,49)" fg:x="113712" fg:w="17"/><text x="83.3497%" y="303.50"></text></g><g><title>_rjem_je_eset_remove (43 samples, 0.03%)</title><rect x="83.0968%" y="325" width="0.0314%" height="15" fill="rgb(216,140,1)" fg:x="113708" fg:w="43"/><text x="83.3468%" y="335.50"></text></g><g><title>_rjem_je_edata_avail_insert (17 samples, 0.01%)</title><rect x="83.1421%" y="277" width="0.0124%" height="15" fill="rgb(232,57,40)" fg:x="113770" fg:w="17"/><text x="83.3921%" y="287.50"></text></g><g><title>ph_insert (16 samples, 0.01%)</title><rect x="83.1428%" y="261" width="0.0117%" height="15" fill="rgb(224,186,18)" fg:x="113771" fg:w="16"/><text x="83.3928%" y="271.50"></text></g><g><title>_rjem_je_edata_cache_put (35 samples, 0.03%)</title><rect x="83.1399%" y="293" width="0.0256%" height="15" fill="rgb(215,121,11)" fg:x="113767" fg:w="35"/><text x="83.3899%" y="303.50"></text></g><g><title>malloc_mutex_lock (15 samples, 0.01%)</title><rect x="83.1545%" y="277" width="0.0110%" height="15" fill="rgb(245,147,10)" fg:x="113787" fg:w="15"/><text x="83.4045%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (15 samples, 0.01%)</title><rect x="83.1545%" y="261" width="0.0110%" height="15" fill="rgb(238,153,13)" fg:x="113787" fg:w="15"/><text x="83.4045%" y="271.50"></text></g><g><title>pthread_mutex_trylock (15 samples, 0.01%)</title><rect x="83.1545%" y="245" width="0.0110%" height="15" fill="rgb(233,108,0)" fg:x="113787" fg:w="15"/><text x="83.4045%" y="255.50"></text></g><g><title>extent_try_coalesce_large (131 samples, 0.10%)</title><rect x="83.0785%" y="373" width="0.0957%" height="15" fill="rgb(212,157,17)" fg:x="113683" fg:w="131"/><text x="83.3285%" y="383.50"></text></g><g><title>extent_try_coalesce_impl (130 samples, 0.10%)</title><rect x="83.0793%" y="357" width="0.0950%" height="15" fill="rgb(225,213,38)" fg:x="113684" fg:w="130"/><text x="83.3293%" y="367.50"></text></g><g><title>extent_coalesce (106 samples, 0.08%)</title><rect x="83.0968%" y="341" width="0.0775%" height="15" fill="rgb(248,16,11)" fg:x="113708" fg:w="106"/><text x="83.3468%" y="351.50"></text></g><g><title>extent_merge_impl (63 samples, 0.05%)</title><rect x="83.1282%" y="325" width="0.0460%" height="15" fill="rgb(241,33,4)" fg:x="113751" fg:w="63"/><text x="83.3782%" y="335.50"></text></g><g><title>extent_merge_impl (60 samples, 0.04%)</title><rect x="83.1304%" y="309" width="0.0438%" height="15" fill="rgb(222,26,43)" fg:x="113754" fg:w="60"/><text x="83.3804%" y="319.50"></text></g><g><title>_rjem_je_extent_record (215 samples, 0.16%)</title><rect x="83.0347%" y="389" width="0.1571%" height="15" fill="rgb(243,29,36)" fg:x="113623" fg:w="215"/><text x="83.2847%" y="399.50"></text></g><g><title>malloc_mutex_lock (24 samples, 0.02%)</title><rect x="83.1743%" y="373" width="0.0175%" height="15" fill="rgb(241,9,27)" fg:x="113814" fg:w="24"/><text x="83.4243%" y="383.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (264 samples, 0.19%)</title><rect x="83.0033%" y="421" width="0.1929%" height="15" fill="rgb(205,117,26)" fg:x="113580" fg:w="264"/><text x="83.2533%" y="431.50"></text></g><g><title>pac_dalloc_impl (233 samples, 0.17%)</title><rect x="83.0259%" y="405" width="0.1703%" height="15" fill="rgb(209,80,39)" fg:x="113611" fg:w="233"/><text x="83.2759%" y="415.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_locked_handle_newly_empty (15 samples, 0.01%)</title><rect x="83.2145%" y="405" width="0.0110%" height="15" fill="rgb(239,155,6)" fg:x="113869" fg:w="15"/><text x="83.4645%" y="415.50"></text></g><g><title>arena_dissociate_bin_slab (15 samples, 0.01%)</title><rect x="83.2145%" y="389" width="0.0110%" height="15" fill="rgb(212,104,12)" fg:x="113869" fg:w="15"/><text x="83.4645%" y="399.50"></text></g><g><title>arena_dalloc_bin_locked_step (53 samples, 0.04%)</title><rect x="83.1991%" y="421" width="0.0387%" height="15" fill="rgb(234,204,3)" fg:x="113848" fg:w="53"/><text x="83.4491%" y="431.50"></text></g><g><title>edata_arena_ind_get (29 samples, 0.02%)</title><rect x="83.2488%" y="421" width="0.0212%" height="15" fill="rgb(251,218,7)" fg:x="113916" fg:w="29"/><text x="83.4988%" y="431.50"></text></g><g><title>pthread_mutex_trylock (73 samples, 0.05%)</title><rect x="83.2715%" y="389" width="0.0533%" height="15" fill="rgb(221,81,32)" fg:x="113947" fg:w="73"/><text x="83.5215%" y="399.50"></text></g><g><title>malloc_mutex_trylock_final (75 samples, 0.05%)</title><rect x="83.2707%" y="405" width="0.0548%" height="15" fill="rgb(214,152,26)" fg:x="113946" fg:w="75"/><text x="83.5207%" y="415.50"></text></g><g><title>malloc_mutex_lock (79 samples, 0.06%)</title><rect x="83.2700%" y="421" width="0.0577%" height="15" fill="rgb(223,22,3)" fg:x="113945" fg:w="79"/><text x="83.5200%" y="431.50"></text></g><g><title>[libc.so.6] (26 samples, 0.02%)</title><rect x="83.3277%" y="405" width="0.0190%" height="15" fill="rgb(207,174,7)" fg:x="114024" fg:w="26"/><text x="83.5777%" y="415.50"></text></g><g><title>malloc_mutex_unlock (39 samples, 0.03%)</title><rect x="83.3277%" y="421" width="0.0285%" height="15" fill="rgb(224,19,52)" fg:x="114024" fg:w="39"/><text x="83.5777%" y="431.50"></text></g><g><title>rtree_leaf_elm_read (45 samples, 0.03%)</title><rect x="83.3840%" y="389" width="0.0329%" height="15" fill="rgb(228,24,14)" fg:x="114101" fg:w="45"/><text x="83.6340%" y="399.50"></text></g><g><title>rtree_leaf_elm_bits_read (45 samples, 0.03%)</title><rect x="83.3840%" y="373" width="0.0329%" height="15" fill="rgb(230,153,43)" fg:x="114101" fg:w="45"/><text x="83.6340%" y="383.50"></text></g><g><title>atomic_load_p (45 samples, 0.03%)</title><rect x="83.3840%" y="357" width="0.0329%" height="15" fill="rgb(231,106,12)" fg:x="114101" fg:w="45"/><text x="83.6340%" y="367.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (93 samples, 0.07%)</title><rect x="83.3562%" y="421" width="0.0680%" height="15" fill="rgb(215,92,2)" fg:x="114063" fg:w="93"/><text x="83.6062%" y="431.50"></text></g><g><title>emap_edata_lookup_batch (91 samples, 0.07%)</title><rect x="83.3577%" y="405" width="0.0665%" height="15" fill="rgb(249,143,25)" fg:x="114065" fg:w="91"/><text x="83.6077%" y="415.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (633 samples, 0.46%)</title><rect x="82.9638%" y="469" width="0.4626%" height="15" fill="rgb(252,7,35)" fg:x="113526" fg:w="633"/><text x="83.2138%" y="479.50"></text></g><g><title>tcache_bin_flush_bottom (630 samples, 0.46%)</title><rect x="82.9660%" y="453" width="0.4604%" height="15" fill="rgb(216,69,40)" fg:x="113529" fg:w="630"/><text x="83.2160%" y="463.50"></text></g><g><title>tcache_bin_flush_impl (604 samples, 0.44%)</title><rect x="82.9850%" y="437" width="0.4414%" height="15" fill="rgb(240,36,33)" fg:x="113555" fg:w="604"/><text x="83.2350%" y="447.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (971 samples, 0.71%)</title><rect x="82.7219%" y="501" width="0.7096%" height="15" fill="rgb(231,128,14)" fg:x="113195" fg:w="971"/><text x="82.9719%" y="511.50"></text></g><g><title>tcache_gc_small (643 samples, 0.47%)</title><rect x="82.9616%" y="485" width="0.4699%" height="15" fill="rgb(245,143,14)" fg:x="113523" fg:w="643"/><text x="83.2116%" y="495.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_new_event_wait (26 samples, 0.02%)</title><rect x="83.4315%" y="501" width="0.0190%" height="15" fill="rgb(222,130,28)" fg:x="114166" fg:w="26"/><text x="83.6815%" y="511.50"></text></g><g><title>atomic_fence (32 samples, 0.02%)</title><rect x="83.4724%" y="437" width="0.0234%" height="15" fill="rgb(212,10,48)" fg:x="114222" fg:w="32"/><text x="83.7224%" y="447.50"></text></g><g><title>te_adjust_thresholds_helper (58 samples, 0.04%)</title><rect x="83.4637%" y="501" width="0.0424%" height="15" fill="rgb(254,118,45)" fg:x="114210" fg:w="58"/><text x="83.7137%" y="511.50"></text></g><g><title>te_ctx_next_event_set (56 samples, 0.04%)</title><rect x="83.4651%" y="485" width="0.0409%" height="15" fill="rgb(228,6,45)" fg:x="114212" fg:w="56"/><text x="83.7151%" y="495.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (49 samples, 0.04%)</title><rect x="83.4702%" y="469" width="0.0358%" height="15" fill="rgb(241,18,35)" fg:x="114219" fg:w="49"/><text x="83.7202%" y="479.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (49 samples, 0.04%)</title><rect x="83.4702%" y="453" width="0.0358%" height="15" fill="rgb(227,214,53)" fg:x="114219" fg:w="49"/><text x="83.7202%" y="463.50"></text></g><g><title>te_ctx_next_event_fast_update (14 samples, 0.01%)</title><rect x="83.4958%" y="437" width="0.0102%" height="15" fill="rgb(224,107,51)" fg:x="114254" fg:w="14"/><text x="83.7458%" y="447.50"></text></g><g><title>_rjem_je_te_event_trigger (1,185 samples, 0.87%)</title><rect x="82.6532%" y="517" width="0.8660%" height="15" fill="rgb(248,60,28)" fg:x="113101" fg:w="1185"/><text x="82.9032%" y="527.50"></text></g><g><title>te_ctx_last_event_get (18 samples, 0.01%)</title><rect x="83.5060%" y="501" width="0.0132%" height="15" fill="rgb(249,101,23)" fg:x="114268" fg:w="18"/><text x="83.7560%" y="511.50"></text></g><g><title>isfree (6,798 samples, 4.97%)</title><rect x="78.5659%" y="565" width="4.9679%" height="15" fill="rgb(228,51,19)" fg:x="107508" fg:w="6798"/><text x="78.8159%" y="575.50">isfree</text></g><g><title>thread_dalloc_event (1,262 samples, 0.92%)</title><rect x="82.6116%" y="549" width="0.9223%" height="15" fill="rgb(213,20,6)" fg:x="113044" fg:w="1262"/><text x="82.8616%" y="559.50"></text></g><g><title>te_event_advance (1,262 samples, 0.92%)</title><rect x="82.6116%" y="533" width="0.9223%" height="15" fill="rgb(212,124,10)" fg:x="113044" fg:w="1262"/><text x="82.8616%" y="543.50"></text></g><g><title>te_ctx_get (19 samples, 0.01%)</title><rect x="83.5199%" y="517" width="0.0139%" height="15" fill="rgb(248,3,40)" fg:x="114287" fg:w="19"/><text x="83.7699%" y="527.50"></text></g><g><title>_rjem_je_sdallocx_default (7,029 samples, 5.14%)</title><rect x="78.4453%" y="581" width="5.1367%" height="15" fill="rgb(223,178,23)" fg:x="107343" fg:w="7029"/><text x="78.6953%" y="591.50">_rjem_..</text></g><g><title>tsd_fetch_min (58 samples, 0.04%)</title><rect x="83.5397%" y="565" width="0.0424%" height="15" fill="rgb(240,132,45)" fg:x="114314" fg:w="58"/><text x="83.7897%" y="575.50"></text></g><g><title>tsd_fetch_impl (58 samples, 0.04%)</title><rect x="83.5397%" y="549" width="0.0424%" height="15" fill="rgb(245,164,36)" fg:x="114314" fg:w="58"/><text x="83.7897%" y="559.50"></text></g><g><title>tsd_state_get (46 samples, 0.03%)</title><rect x="83.5484%" y="533" width="0.0336%" height="15" fill="rgb(231,188,53)" fg:x="114326" fg:w="46"/><text x="83.7984%" y="543.50"></text></g><g><title>core::mem::drop (7,387 samples, 5.40%)</title><rect x="78.3942%" y="757" width="5.3984%" height="15" fill="rgb(237,198,39)" fg:x="107273" fg:w="7387"/><text x="78.6442%" y="767.50">core::m..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (7,387 samples, 5.40%)</title><rect x="78.3942%" y="741" width="5.3984%" height="15" fill="rgb(223,120,35)" fg:x="107273" fg:w="7387"/><text x="78.6442%" y="751.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (7,321 samples, 5.35%)</title><rect x="78.4424%" y="725" width="5.3501%" height="15" fill="rgb(253,107,49)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="735.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7,321 samples, 5.35%)</title><rect x="78.4424%" y="709" width="5.3501%" height="15" fill="rgb(216,44,31)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="719.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7,321 samples, 5.35%)</title><rect x="78.4424%" y="693" width="5.3501%" height="15" fill="rgb(253,87,21)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="703.50">core::p..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,321 samples, 5.35%)</title><rect x="78.4424%" y="677" width="5.3501%" height="15" fill="rgb(226,18,2)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="687.50">&lt;alloc:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (7,321 samples, 5.35%)</title><rect x="78.4424%" y="661" width="5.3501%" height="15" fill="rgb(216,8,46)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="671.50">alloc::..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,321 samples, 5.35%)</title><rect x="78.4424%" y="645" width="5.3501%" height="15" fill="rgb(226,140,39)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="655.50">&lt;alloc:..</text></g><g><title>alloc::alloc::dealloc (7,321 samples, 5.35%)</title><rect x="78.4424%" y="629" width="5.3501%" height="15" fill="rgb(221,194,54)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="639.50">alloc::..</text></g><g><title>__rust_dealloc (7,321 samples, 5.35%)</title><rect x="78.4424%" y="613" width="5.3501%" height="15" fill="rgb(213,92,11)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="623.50">__rust_..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7,321 samples, 5.35%)</title><rect x="78.4424%" y="597" width="5.3501%" height="15" fill="rgb(229,162,46)" fg:x="107339" fg:w="7321"/><text x="78.6924%" y="607.50">&lt;tikv_j..</text></g><g><title>_rjem_sdallocx (288 samples, 0.21%)</title><rect x="83.5820%" y="581" width="0.2105%" height="15" fill="rgb(214,111,36)" fg:x="114372" fg:w="288"/><text x="83.8320%" y="591.50"></text></g><g><title>free_fastpath (271 samples, 0.20%)</title><rect x="83.5945%" y="565" width="0.1980%" height="15" fill="rgb(207,6,21)" fg:x="114389" fg:w="271"/><text x="83.8445%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (485 samples, 0.35%)</title><rect x="83.7925%" y="757" width="0.3544%" height="15" fill="rgb(213,127,38)" fg:x="114660" fg:w="485"/><text x="84.0425%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (485 samples, 0.35%)</title><rect x="83.7925%" y="741" width="0.3544%" height="15" fill="rgb(238,118,32)" fg:x="114660" fg:w="485"/><text x="84.0425%" y="751.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (17,909 samples, 13.09%)</title><rect x="71.0819%" y="949" width="13.0877%" height="15" fill="rgb(240,139,39)" fg:x="97267" fg:w="17909"/><text x="71.3319%" y="959.50">epoxy_server::handle..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (8,267 samples, 6.04%)</title><rect x="78.1282%" y="933" width="6.0415%" height="15" fill="rgb(235,10,37)" fg:x="106909" fg:w="8267"/><text x="78.3782%" y="943.50">tokio::i..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (8,267 samples, 6.04%)</title><rect x="78.1282%" y="917" width="6.0415%" height="15" fill="rgb(249,171,38)" fg:x="106909" fg:w="8267"/><text x="78.3782%" y="927.50">&lt;tokio_u..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (8,267 samples, 6.04%)</title><rect x="78.1282%" y="901" width="6.0415%" height="15" fill="rgb(242,144,32)" fg:x="106909" fg:w="8267"/><text x="78.3782%" y="911.50">&lt;wisp_mu..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (8,267 samples, 6.04%)</title><rect x="78.1282%" y="885" width="6.0415%" height="15" fill="rgb(217,117,21)" fg:x="106909" fg:w="8267"/><text x="78.3782%" y="895.50">&lt;futures..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (8,240 samples, 6.02%)</title><rect x="78.1479%" y="869" width="6.0217%" height="15" fill="rgb(249,87,1)" fg:x="106936" fg:w="8240"/><text x="78.3979%" y="879.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8,240 samples, 6.02%)</title><rect x="78.1479%" y="853" width="6.0217%" height="15" fill="rgb(248,196,48)" fg:x="106936" fg:w="8240"/><text x="78.3979%" y="863.50">core::pt..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8,240 samples, 6.02%)</title><rect x="78.1479%" y="837" width="6.0217%" height="15" fill="rgb(251,206,33)" fg:x="106936" fg:w="8240"/><text x="78.3979%" y="847.50">&lt;bytes::..</text></g><g><title>bytes::bytes_mut::shared_v_drop (7,915 samples, 5.78%)</title><rect x="78.3854%" y="821" width="5.7842%" height="15" fill="rgb(232,141,28)" fg:x="107261" fg:w="7915"/><text x="78.6354%" y="831.50">bytes::..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (7,915 samples, 5.78%)</title><rect x="78.3854%" y="805" width="5.7842%" height="15" fill="rgb(209,167,14)" fg:x="107261" fg:w="7915"/><text x="78.6354%" y="815.50">&lt;core::..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (7,915 samples, 5.78%)</title><rect x="78.3854%" y="789" width="5.7842%" height="15" fill="rgb(225,11,50)" fg:x="107261" fg:w="7915"/><text x="78.6354%" y="799.50">bytes::..</text></g><g><title>bytes::bytes_mut::release_shared (7,911 samples, 5.78%)</title><rect x="78.3883%" y="773" width="5.7813%" height="15" fill="rgb(209,50,20)" fg:x="107265" fg:w="7911"/><text x="78.6383%" y="783.50">bytes::..</text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.02%)</title><rect x="84.1469%" y="757" width="0.0227%" height="15" fill="rgb(212,17,46)" fg:x="115145" fg:w="31"/><text x="84.3969%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.02%)</title><rect x="84.1469%" y="741" width="0.0227%" height="15" fill="rgb(216,101,39)" fg:x="115145" fg:w="31"/><text x="84.3969%" y="751.50"></text></g><g><title>[libc.so.6] (310 samples, 0.23%)</title><rect x="85.0378%" y="709" width="0.2265%" height="15" fill="rgb(212,228,48)" fg:x="116364" fg:w="310"/><text x="85.2878%" y="719.50"></text></g><g><title>recv (1,191 samples, 0.87%)</title><rect x="84.4860%" y="725" width="0.8704%" height="15" fill="rgb(250,6,50)" fg:x="115609" fg:w="1191"/><text x="84.7360%" y="735.50"></text></g><g><title>[unknown] (126 samples, 0.09%)</title><rect x="85.2643%" y="709" width="0.0921%" height="15" fill="rgb(250,160,48)" fg:x="116674" fg:w="126"/><text x="85.5143%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,211 samples, 0.88%)</title><rect x="84.4853%" y="853" width="0.8850%" height="15" fill="rgb(244,216,33)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="863.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,211 samples, 0.88%)</title><rect x="84.4853%" y="837" width="0.8850%" height="15" fill="rgb(207,157,5)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="847.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,211 samples, 0.88%)</title><rect x="84.4853%" y="821" width="0.8850%" height="15" fill="rgb(228,199,8)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="831.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,211 samples, 0.88%)</title><rect x="84.4853%" y="805" width="0.8850%" height="15" fill="rgb(227,80,20)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="815.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,211 samples, 0.88%)</title><rect x="84.4853%" y="789" width="0.8850%" height="15" fill="rgb(222,9,33)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="799.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,211 samples, 0.88%)</title><rect x="84.4853%" y="773" width="0.8850%" height="15" fill="rgb(239,44,28)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="783.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1,211 samples, 0.88%)</title><rect x="84.4853%" y="757" width="0.8850%" height="15" fill="rgb(249,187,43)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="767.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1,211 samples, 0.88%)</title><rect x="84.4853%" y="741" width="0.8850%" height="15" fill="rgb(216,141,28)" fg:x="115608" fg:w="1211"/><text x="84.7353%" y="751.50"></text></g><g><title>std::sys::pal::unix::cvt (19 samples, 0.01%)</title><rect x="85.3564%" y="725" width="0.0139%" height="15" fill="rgb(230,154,53)" fg:x="116800" fg:w="19"/><text x="85.6064%" y="735.50"></text></g><g><title>std::io::error::Error::last_os_error (16 samples, 0.01%)</title><rect x="85.3586%" y="709" width="0.0117%" height="15" fill="rgb(227,82,4)" fg:x="116803" fg:w="16"/><text x="85.6086%" y="719.50"></text></g><g><title>std::sys::pal::unix::os::errno (15 samples, 0.01%)</title><rect x="85.3593%" y="693" width="0.0110%" height="15" fill="rgb(220,107,16)" fg:x="116804" fg:w="15"/><text x="85.6093%" y="703.50"></text></g><g><title>__errno_location (15 samples, 0.01%)</title><rect x="85.3593%" y="677" width="0.0110%" height="15" fill="rgb(207,187,2)" fg:x="116804" fg:w="15"/><text x="85.6093%" y="687.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (26 samples, 0.02%)</title><rect x="85.3813%" y="853" width="0.0190%" height="15" fill="rgb(210,162,52)" fg:x="116834" fg:w="26"/><text x="85.6313%" y="863.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (19 samples, 0.01%)</title><rect x="85.3864%" y="837" width="0.0139%" height="15" fill="rgb(217,216,49)" fg:x="116841" fg:w="19"/><text x="85.6364%" y="847.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (25 samples, 0.02%)</title><rect x="85.4003%" y="853" width="0.0183%" height="15" fill="rgb(218,146,49)" fg:x="116860" fg:w="25"/><text x="85.6503%" y="863.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (14 samples, 0.01%)</title><rect x="85.4185%" y="853" width="0.0102%" height="15" fill="rgb(216,55,40)" fg:x="116885" fg:w="14"/><text x="85.6685%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.01%)</title><rect x="85.4529%" y="773" width="0.0117%" height="15" fill="rgb(208,196,21)" fg:x="116932" fg:w="16"/><text x="85.7029%" y="783.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (16 samples, 0.01%)</title><rect x="85.4529%" y="757" width="0.0117%" height="15" fill="rgb(242,117,42)" fg:x="116932" fg:w="16"/><text x="85.7029%" y="767.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (16 samples, 0.01%)</title><rect x="85.4529%" y="741" width="0.0117%" height="15" fill="rgb(210,11,23)" fg:x="116932" fg:w="16"/><text x="85.7029%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (54 samples, 0.04%)</title><rect x="85.4514%" y="821" width="0.0395%" height="15" fill="rgb(217,110,2)" fg:x="116930" fg:w="54"/><text x="85.7014%" y="831.50"></text></g><g><title>tokio::runtime::context::budget (54 samples, 0.04%)</title><rect x="85.4514%" y="805" width="0.0395%" height="15" fill="rgb(229,77,54)" fg:x="116930" fg:w="54"/><text x="85.7014%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.04%)</title><rect x="85.4514%" y="789" width="0.0395%" height="15" fill="rgb(218,53,16)" fg:x="116930" fg:w="54"/><text x="85.7014%" y="799.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (36 samples, 0.03%)</title><rect x="85.4646%" y="773" width="0.0263%" height="15" fill="rgb(215,38,13)" fg:x="116948" fg:w="36"/><text x="85.7146%" y="783.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (36 samples, 0.03%)</title><rect x="85.4646%" y="757" width="0.0263%" height="15" fill="rgb(235,42,18)" fg:x="116948" fg:w="36"/><text x="85.7146%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (109 samples, 0.08%)</title><rect x="85.5055%" y="805" width="0.0797%" height="15" fill="rgb(219,66,54)" fg:x="117004" fg:w="109"/><text x="85.7555%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (109 samples, 0.08%)</title><rect x="85.5055%" y="789" width="0.0797%" height="15" fill="rgb(222,205,4)" fg:x="117004" fg:w="109"/><text x="85.7555%" y="799.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (1,679 samples, 1.23%)</title><rect x="84.3647%" y="901" width="1.2270%" height="15" fill="rgb(227,213,46)" fg:x="115443" fg:w="1679"/><text x="84.6147%" y="911.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,671 samples, 1.22%)</title><rect x="84.3706%" y="885" width="1.2212%" height="15" fill="rgb(250,145,42)" fg:x="115451" fg:w="1671"/><text x="84.6206%" y="895.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,544 samples, 1.13%)</title><rect x="84.4634%" y="869" width="1.1283%" height="15" fill="rgb(219,15,2)" fg:x="115578" fg:w="1544"/><text x="84.7134%" y="879.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (219 samples, 0.16%)</title><rect x="85.4317%" y="853" width="0.1600%" height="15" fill="rgb(231,181,52)" fg:x="116903" fg:w="219"/><text x="85.6817%" y="863.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (213 samples, 0.16%)</title><rect x="85.4361%" y="837" width="0.1557%" height="15" fill="rgb(235,1,42)" fg:x="116909" fg:w="213"/><text x="85.6861%" y="847.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (138 samples, 0.10%)</title><rect x="85.4909%" y="821" width="0.1008%" height="15" fill="rgb(249,88,27)" fg:x="116984" fg:w="138"/><text x="85.7409%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (19 samples, 0.01%)</title><rect x="85.5961%" y="901" width="0.0139%" height="15" fill="rgb(235,145,16)" fg:x="117128" fg:w="19"/><text x="85.8461%" y="911.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,818 samples, 1.33%)</title><rect x="84.2931%" y="917" width="1.3286%" height="15" fill="rgb(237,114,19)" fg:x="115345" fg:w="1818"/><text x="84.5431%" y="927.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::new (16 samples, 0.01%)</title><rect x="85.6100%" y="901" width="0.0117%" height="15" fill="rgb(238,51,50)" fg:x="117147" fg:w="16"/><text x="85.8600%" y="911.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1,841 samples, 1.35%)</title><rect x="84.2924%" y="933" width="1.3454%" height="15" fill="rgb(205,194,25)" fg:x="115344" fg:w="1841"/><text x="84.5424%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (22 samples, 0.02%)</title><rect x="85.6217%" y="917" width="0.0161%" height="15" fill="rgb(215,203,17)" fg:x="117163" fg:w="22"/><text x="85.8717%" y="927.50"></text></g><g><title>core::mem::replace (22 samples, 0.02%)</title><rect x="85.6217%" y="901" width="0.0161%" height="15" fill="rgb(233,112,49)" fg:x="117163" fg:w="22"/><text x="85.8717%" y="911.50"></text></g><g><title>core::ptr::write (22 samples, 0.02%)</title><rect x="85.6217%" y="885" width="0.0161%" height="15" fill="rgb(241,130,26)" fg:x="117163" fg:w="22"/><text x="85.8717%" y="895.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (62 samples, 0.05%)</title><rect x="85.6378%" y="933" width="0.0453%" height="15" fill="rgb(252,223,19)" fg:x="117185" fg:w="62"/><text x="85.8878%" y="943.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (62 samples, 0.05%)</title><rect x="85.6378%" y="917" width="0.0453%" height="15" fill="rgb(211,95,25)" fg:x="117185" fg:w="62"/><text x="85.8878%" y="927.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (33 samples, 0.02%)</title><rect x="85.8336%" y="917" width="0.0241%" height="15" fill="rgb(251,182,27)" fg:x="117453" fg:w="33"/><text x="86.0836%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload::{{closure}}&gt; (15 samples, 0.01%)</title><rect x="85.8577%" y="917" width="0.0110%" height="15" fill="rgb(238,24,4)" fg:x="117486" fg:w="15"/><text x="86.1077%" y="927.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (47 samples, 0.03%)</title><rect x="86.1077%" y="821" width="0.0343%" height="15" fill="rgb(224,220,25)" fg:x="117828" fg:w="47"/><text x="86.3577%" y="831.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (369 samples, 0.27%)</title><rect x="86.1069%" y="837" width="0.2697%" height="15" fill="rgb(239,133,26)" fg:x="117827" fg:w="369"/><text x="86.3569%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (315 samples, 0.23%)</title><rect x="86.1464%" y="821" width="0.2302%" height="15" fill="rgb(211,94,48)" fg:x="117881" fg:w="315"/><text x="86.3964%" y="831.50"></text></g><g><title>[libc.so.6] (306 samples, 0.22%)</title><rect x="86.1530%" y="805" width="0.2236%" height="15" fill="rgb(239,87,6)" fg:x="117890" fg:w="306"/><text x="86.4030%" y="815.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (416 samples, 0.30%)</title><rect x="86.0806%" y="853" width="0.3040%" height="15" fill="rgb(227,62,0)" fg:x="117791" fg:w="416"/><text x="86.3306%" y="863.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (79 samples, 0.06%)</title><rect x="86.3934%" y="853" width="0.0577%" height="15" fill="rgb(211,226,4)" fg:x="118219" fg:w="79"/><text x="86.6434%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (79 samples, 0.06%)</title><rect x="86.3934%" y="837" width="0.0577%" height="15" fill="rgb(253,38,52)" fg:x="118219" fg:w="79"/><text x="86.6434%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (79 samples, 0.06%)</title><rect x="86.3934%" y="821" width="0.0577%" height="15" fill="rgb(229,126,40)" fg:x="118219" fg:w="79"/><text x="86.6434%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (72 samples, 0.05%)</title><rect x="86.3985%" y="805" width="0.0526%" height="15" fill="rgb(229,165,44)" fg:x="118226" fg:w="72"/><text x="86.6485%" y="815.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (512 samples, 0.37%)</title><rect x="86.0792%" y="869" width="0.3742%" height="15" fill="rgb(247,95,47)" fg:x="117789" fg:w="512"/><text x="86.3292%" y="879.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (35 samples, 0.03%)</title><rect x="86.4636%" y="565" width="0.0256%" height="15" fill="rgb(216,140,30)" fg:x="118315" fg:w="35"/><text x="86.7136%" y="575.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (37 samples, 0.03%)</title><rect x="86.4628%" y="581" width="0.0270%" height="15" fill="rgb(246,214,8)" fg:x="118314" fg:w="37"/><text x="86.7128%" y="591.50"></text></g><g><title>_rjem_je_malloc_default (40 samples, 0.03%)</title><rect x="86.4628%" y="693" width="0.0292%" height="15" fill="rgb(227,224,15)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="703.50"></text></g><g><title>imalloc (40 samples, 0.03%)</title><rect x="86.4628%" y="677" width="0.0292%" height="15" fill="rgb(233,175,4)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="687.50"></text></g><g><title>imalloc_body (40 samples, 0.03%)</title><rect x="86.4628%" y="661" width="0.0292%" height="15" fill="rgb(221,66,45)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="671.50"></text></g><g><title>imalloc_no_sample (40 samples, 0.03%)</title><rect x="86.4628%" y="645" width="0.0292%" height="15" fill="rgb(221,178,18)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="655.50"></text></g><g><title>iallocztm (40 samples, 0.03%)</title><rect x="86.4628%" y="629" width="0.0292%" height="15" fill="rgb(213,81,29)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="639.50"></text></g><g><title>arena_malloc (40 samples, 0.03%)</title><rect x="86.4628%" y="613" width="0.0292%" height="15" fill="rgb(220,89,49)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="623.50"></text></g><g><title>tcache_alloc_small (40 samples, 0.03%)</title><rect x="86.4628%" y="597" width="0.0292%" height="15" fill="rgb(227,60,33)" fg:x="118314" fg:w="40"/><text x="86.7128%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (152 samples, 0.11%)</title><rect x="86.7603%" y="661" width="0.1111%" height="15" fill="rgb(205,113,12)" fg:x="118721" fg:w="152"/><text x="87.0103%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (152 samples, 0.11%)</title><rect x="86.7603%" y="645" width="0.1111%" height="15" fill="rgb(211,32,1)" fg:x="118721" fg:w="152"/><text x="87.0103%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (38 samples, 0.03%)</title><rect x="86.8721%" y="645" width="0.0278%" height="15" fill="rgb(246,2,12)" fg:x="118874" fg:w="38"/><text x="87.1221%" y="655.50"></text></g><g><title>sz_size2index_usize_fastpath (48 samples, 0.04%)</title><rect x="86.8721%" y="661" width="0.0351%" height="15" fill="rgb(243,37,27)" fg:x="118874" fg:w="48"/><text x="87.1221%" y="671.50"></text></g><g><title>__rust_alloc (611 samples, 0.45%)</title><rect x="86.4614%" y="725" width="0.4465%" height="15" fill="rgb(248,211,31)" fg:x="118312" fg:w="611"/><text x="86.7114%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (611 samples, 0.45%)</title><rect x="86.4614%" y="709" width="0.4465%" height="15" fill="rgb(242,146,47)" fg:x="118312" fg:w="611"/><text x="86.7114%" y="719.50"></text></g><g><title>_rjem_malloc (569 samples, 0.42%)</title><rect x="86.4921%" y="693" width="0.4158%" height="15" fill="rgb(206,70,20)" fg:x="118354" fg:w="569"/><text x="86.7421%" y="703.50"></text></g><g><title>imalloc_fastpath (569 samples, 0.42%)</title><rect x="86.4921%" y="677" width="0.4158%" height="15" fill="rgb(215,10,51)" fg:x="118354" fg:w="569"/><text x="86.7421%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (615 samples, 0.45%)</title><rect x="86.4614%" y="773" width="0.4494%" height="15" fill="rgb(243,178,53)" fg:x="118312" fg:w="615"/><text x="86.7114%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (615 samples, 0.45%)</title><rect x="86.4614%" y="757" width="0.4494%" height="15" fill="rgb(233,221,20)" fg:x="118312" fg:w="615"/><text x="86.7114%" y="767.50"></text></g><g><title>alloc::alloc::alloc (615 samples, 0.45%)</title><rect x="86.4614%" y="741" width="0.4494%" height="15" fill="rgb(218,95,35)" fg:x="118312" fg:w="615"/><text x="86.7114%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (628 samples, 0.46%)</title><rect x="86.4533%" y="853" width="0.4589%" height="15" fill="rgb(229,13,5)" fg:x="118301" fg:w="628"/><text x="86.7033%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (628 samples, 0.46%)</title><rect x="86.4533%" y="837" width="0.4589%" height="15" fill="rgb(252,164,30)" fg:x="118301" fg:w="628"/><text x="86.7033%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (628 samples, 0.46%)</title><rect x="86.4533%" y="821" width="0.4589%" height="15" fill="rgb(232,68,36)" fg:x="118301" fg:w="628"/><text x="86.7033%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (628 samples, 0.46%)</title><rect x="86.4533%" y="805" width="0.4589%" height="15" fill="rgb(219,59,54)" fg:x="118301" fg:w="628"/><text x="86.7033%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (628 samples, 0.46%)</title><rect x="86.4533%" y="789" width="0.4589%" height="15" fill="rgb(250,92,33)" fg:x="118301" fg:w="628"/><text x="86.7033%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (653 samples, 0.48%)</title><rect x="86.4533%" y="869" width="0.4772%" height="15" fill="rgb(229,162,54)" fg:x="118301" fg:w="653"/><text x="86.7033%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (25 samples, 0.02%)</title><rect x="86.9123%" y="853" width="0.0183%" height="15" fill="rgb(244,114,52)" fg:x="118929" fg:w="25"/><text x="87.1623%" y="863.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (1,332 samples, 0.97%)</title><rect x="86.0353%" y="885" width="0.9734%" height="15" fill="rgb(212,211,43)" fg:x="117729" fg:w="1332"/><text x="86.2853%" y="895.50"></text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (107 samples, 0.08%)</title><rect x="86.9305%" y="869" width="0.0782%" height="15" fill="rgb(226,147,8)" fg:x="118954" fg:w="107"/><text x="87.1805%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (22 samples, 0.02%)</title><rect x="86.9926%" y="853" width="0.0161%" height="15" fill="rgb(226,23,13)" fg:x="119039" fg:w="22"/><text x="87.2426%" y="863.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (1,349 samples, 0.99%)</title><rect x="86.0346%" y="901" width="0.9858%" height="15" fill="rgb(240,63,4)" fg:x="117728" fg:w="1349"/><text x="86.2846%" y="911.50"></text></g><g><title>wisp_mux::ws::Frame::binary (16 samples, 0.01%)</title><rect x="87.0087%" y="885" width="0.0117%" height="15" fill="rgb(221,1,32)" fg:x="119061" fg:w="16"/><text x="87.2587%" y="895.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (22 samples, 0.02%)</title><rect x="87.3412%" y="885" width="0.0161%" height="15" fill="rgb(242,117,10)" fg:x="119516" fg:w="22"/><text x="87.5912%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (17 samples, 0.01%)</title><rect x="87.3573%" y="885" width="0.0124%" height="15" fill="rgb(249,172,44)" fg:x="119538" fg:w="17"/><text x="87.6073%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (166 samples, 0.12%)</title><rect x="87.3697%" y="885" width="0.1213%" height="15" fill="rgb(244,46,45)" fg:x="119555" fg:w="166"/><text x="87.6197%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (163 samples, 0.12%)</title><rect x="87.3719%" y="869" width="0.1191%" height="15" fill="rgb(206,43,17)" fg:x="119558" fg:w="163"/><text x="87.6219%" y="879.50"></text></g><g><title>extent_recycle_extract (16 samples, 0.01%)</title><rect x="87.8535%" y="469" width="0.0117%" height="15" fill="rgb(239,218,39)" fg:x="120217" fg:w="16"/><text x="88.1035%" y="479.50"></text></g><g><title>extent_recycle_split (16 samples, 0.01%)</title><rect x="87.8652%" y="469" width="0.0117%" height="15" fill="rgb(208,169,54)" fg:x="120233" fg:w="16"/><text x="88.1152%" y="479.50"></text></g><g><title>_rjem_je_ecache_alloc (35 samples, 0.03%)</title><rect x="87.8528%" y="501" width="0.0256%" height="15" fill="rgb(247,25,42)" fg:x="120216" fg:w="35"/><text x="88.1028%" y="511.50"></text></g><g><title>extent_recycle (35 samples, 0.03%)</title><rect x="87.8528%" y="485" width="0.0256%" height="15" fill="rgb(226,23,31)" fg:x="120216" fg:w="35"/><text x="88.1028%" y="495.50"></text></g><g><title>arena_slab_alloc (48 samples, 0.04%)</title><rect x="87.8440%" y="581" width="0.0351%" height="15" fill="rgb(247,16,28)" fg:x="120204" fg:w="48"/><text x="88.0940%" y="591.50"></text></g><g><title>_rjem_je_pa_alloc (40 samples, 0.03%)</title><rect x="87.8499%" y="565" width="0.0292%" height="15" fill="rgb(231,147,38)" fg:x="120212" fg:w="40"/><text x="88.0999%" y="575.50"></text></g><g><title>pai_alloc (37 samples, 0.03%)</title><rect x="87.8521%" y="549" width="0.0270%" height="15" fill="rgb(253,81,48)" fg:x="120215" fg:w="37"/><text x="88.1021%" y="559.50"></text></g><g><title>pac_alloc_impl (37 samples, 0.03%)</title><rect x="87.8521%" y="533" width="0.0270%" height="15" fill="rgb(249,222,43)" fg:x="120215" fg:w="37"/><text x="88.1021%" y="543.50"></text></g><g><title>pac_alloc_real (36 samples, 0.03%)</title><rect x="87.8528%" y="517" width="0.0263%" height="15" fill="rgb(221,3,27)" fg:x="120216" fg:w="36"/><text x="88.1028%" y="527.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (65 samples, 0.05%)</title><rect x="87.8426%" y="613" width="0.0475%" height="15" fill="rgb(228,180,5)" fg:x="120202" fg:w="65"/><text x="88.0926%" y="623.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (63 samples, 0.05%)</title><rect x="87.8440%" y="597" width="0.0460%" height="15" fill="rgb(227,131,42)" fg:x="120204" fg:w="63"/><text x="88.0940%" y="607.50"></text></g><g><title>imalloc_no_sample (66 samples, 0.05%)</title><rect x="87.8426%" y="677" width="0.0482%" height="15" fill="rgb(212,3,39)" fg:x="120202" fg:w="66"/><text x="88.0926%" y="687.50"></text></g><g><title>iallocztm (66 samples, 0.05%)</title><rect x="87.8426%" y="661" width="0.0482%" height="15" fill="rgb(226,45,5)" fg:x="120202" fg:w="66"/><text x="88.0926%" y="671.50"></text></g><g><title>arena_malloc (66 samples, 0.05%)</title><rect x="87.8426%" y="645" width="0.0482%" height="15" fill="rgb(215,167,45)" fg:x="120202" fg:w="66"/><text x="88.0926%" y="655.50"></text></g><g><title>tcache_alloc_small (66 samples, 0.05%)</title><rect x="87.8426%" y="629" width="0.0482%" height="15" fill="rgb(250,218,53)" fg:x="120202" fg:w="66"/><text x="88.0926%" y="639.50"></text></g><g><title>_rjem_je_malloc_default (89 samples, 0.07%)</title><rect x="87.8426%" y="725" width="0.0650%" height="15" fill="rgb(207,140,0)" fg:x="120202" fg:w="89"/><text x="88.0926%" y="735.50"></text></g><g><title>imalloc (89 samples, 0.07%)</title><rect x="87.8426%" y="709" width="0.0650%" height="15" fill="rgb(238,133,51)" fg:x="120202" fg:w="89"/><text x="88.0926%" y="719.50"></text></g><g><title>imalloc_body (89 samples, 0.07%)</title><rect x="87.8426%" y="693" width="0.0650%" height="15" fill="rgb(218,203,53)" fg:x="120202" fg:w="89"/><text x="88.0926%" y="703.50"></text></g><g><title>thread_alloc_event (23 samples, 0.02%)</title><rect x="87.8908%" y="677" width="0.0168%" height="15" fill="rgb(226,184,25)" fg:x="120268" fg:w="23"/><text x="88.1408%" y="687.50"></text></g><g><title>te_event_advance (23 samples, 0.02%)</title><rect x="87.8908%" y="661" width="0.0168%" height="15" fill="rgb(231,121,21)" fg:x="120268" fg:w="23"/><text x="88.1408%" y="671.50"></text></g><g><title>_rjem_je_te_event_trigger (23 samples, 0.02%)</title><rect x="87.8908%" y="645" width="0.0168%" height="15" fill="rgb(251,14,34)" fg:x="120268" fg:w="23"/><text x="88.1408%" y="655.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (21 samples, 0.02%)</title><rect x="87.8923%" y="629" width="0.0153%" height="15" fill="rgb(249,193,11)" fg:x="120270" fg:w="21"/><text x="88.1423%" y="639.50"></text></g><g><title>tcache_event (21 samples, 0.02%)</title><rect x="87.8923%" y="613" width="0.0153%" height="15" fill="rgb(220,172,37)" fg:x="120270" fg:w="21"/><text x="88.1423%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (57 samples, 0.04%)</title><rect x="87.9259%" y="693" width="0.0417%" height="15" fill="rgb(231,229,43)" fg:x="120316" fg:w="57"/><text x="88.1759%" y="703.50"></text></g><g><title>cache_bin_alloc_impl (57 samples, 0.04%)</title><rect x="87.9259%" y="677" width="0.0417%" height="15" fill="rgb(250,161,5)" fg:x="120316" fg:w="57"/><text x="88.1759%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (274 samples, 0.20%)</title><rect x="87.7739%" y="869" width="0.2002%" height="15" fill="rgb(218,225,18)" fg:x="120108" fg:w="274"/><text x="88.0239%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (274 samples, 0.20%)</title><rect x="87.7739%" y="853" width="0.2002%" height="15" fill="rgb(245,45,42)" fg:x="120108" fg:w="274"/><text x="88.0239%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (274 samples, 0.20%)</title><rect x="87.7739%" y="837" width="0.2002%" height="15" fill="rgb(211,115,1)" fg:x="120108" fg:w="274"/><text x="88.0239%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (183 samples, 0.13%)</title><rect x="87.8404%" y="821" width="0.1337%" height="15" fill="rgb(248,133,52)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (183 samples, 0.13%)</title><rect x="87.8404%" y="805" width="0.1337%" height="15" fill="rgb(238,100,21)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (183 samples, 0.13%)</title><rect x="87.8404%" y="789" width="0.1337%" height="15" fill="rgb(247,144,11)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="799.50"></text></g><g><title>alloc::alloc::alloc (183 samples, 0.13%)</title><rect x="87.8404%" y="773" width="0.1337%" height="15" fill="rgb(206,164,16)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="783.50"></text></g><g><title>__rust_alloc (183 samples, 0.13%)</title><rect x="87.8404%" y="757" width="0.1337%" height="15" fill="rgb(222,34,3)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="767.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (183 samples, 0.13%)</title><rect x="87.8404%" y="741" width="0.1337%" height="15" fill="rgb(248,82,4)" fg:x="120199" fg:w="183"/><text x="88.0904%" y="751.50"></text></g><g><title>_rjem_malloc (91 samples, 0.07%)</title><rect x="87.9076%" y="725" width="0.0665%" height="15" fill="rgb(228,81,46)" fg:x="120291" fg:w="91"/><text x="88.1576%" y="735.50"></text></g><g><title>imalloc_fastpath (88 samples, 0.06%)</title><rect x="87.9098%" y="709" width="0.0643%" height="15" fill="rgb(227,67,47)" fg:x="120294" fg:w="88"/><text x="88.1598%" y="719.50"></text></g><g><title>_rjem_je_malloc_default (16 samples, 0.01%)</title><rect x="88.2430%" y="693" width="0.0117%" height="15" fill="rgb(215,93,53)" fg:x="120750" fg:w="16"/><text x="88.4930%" y="703.50"></text></g><g><title>imalloc (16 samples, 0.01%)</title><rect x="88.2430%" y="677" width="0.0117%" height="15" fill="rgb(248,194,39)" fg:x="120750" fg:w="16"/><text x="88.4930%" y="687.50"></text></g><g><title>imalloc_body (16 samples, 0.01%)</title><rect x="88.2430%" y="661" width="0.0117%" height="15" fill="rgb(215,5,19)" fg:x="120750" fg:w="16"/><text x="88.4930%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (35 samples, 0.03%)</title><rect x="88.2737%" y="661" width="0.0256%" height="15" fill="rgb(226,215,51)" fg:x="120792" fg:w="35"/><text x="88.5237%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (35 samples, 0.03%)</title><rect x="88.2737%" y="645" width="0.0256%" height="15" fill="rgb(225,56,26)" fg:x="120792" fg:w="35"/><text x="88.5237%" y="655.50"></text></g><g><title>__rust_alloc (87 samples, 0.06%)</title><rect x="88.2430%" y="725" width="0.0636%" height="15" fill="rgb(222,75,29)" fg:x="120750" fg:w="87"/><text x="88.4930%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (87 samples, 0.06%)</title><rect x="88.2430%" y="709" width="0.0636%" height="15" fill="rgb(236,139,6)" fg:x="120750" fg:w="87"/><text x="88.4930%" y="719.50"></text></g><g><title>_rjem_malloc (71 samples, 0.05%)</title><rect x="88.2547%" y="693" width="0.0519%" height="15" fill="rgb(223,137,36)" fg:x="120766" fg:w="71"/><text x="88.5047%" y="703.50"></text></g><g><title>imalloc_fastpath (70 samples, 0.05%)</title><rect x="88.2555%" y="677" width="0.0512%" height="15" fill="rgb(226,99,2)" fg:x="120767" fg:w="70"/><text x="88.5055%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (171 samples, 0.12%)</title><rect x="88.1890%" y="837" width="0.1250%" height="15" fill="rgb(206,133,23)" fg:x="120676" fg:w="171"/><text x="88.4390%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (161 samples, 0.12%)</title><rect x="88.1963%" y="821" width="0.1177%" height="15" fill="rgb(243,173,15)" fg:x="120686" fg:w="161"/><text x="88.4463%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (161 samples, 0.12%)</title><rect x="88.1963%" y="805" width="0.1177%" height="15" fill="rgb(228,69,28)" fg:x="120686" fg:w="161"/><text x="88.4463%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (103 samples, 0.08%)</title><rect x="88.2386%" y="789" width="0.0753%" height="15" fill="rgb(212,51,22)" fg:x="120744" fg:w="103"/><text x="88.4886%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (97 samples, 0.07%)</title><rect x="88.2430%" y="773" width="0.0709%" height="15" fill="rgb(227,113,0)" fg:x="120750" fg:w="97"/><text x="88.4930%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (97 samples, 0.07%)</title><rect x="88.2430%" y="757" width="0.0709%" height="15" fill="rgb(252,84,27)" fg:x="120750" fg:w="97"/><text x="88.4930%" y="767.50"></text></g><g><title>alloc::alloc::alloc (97 samples, 0.07%)</title><rect x="88.2430%" y="741" width="0.0709%" height="15" fill="rgb(223,145,39)" fg:x="120750" fg:w="97"/><text x="88.4930%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (36 samples, 0.03%)</title><rect x="89.1799%" y="773" width="0.0263%" height="15" fill="rgb(239,219,30)" fg:x="122032" fg:w="36"/><text x="89.4299%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (27 samples, 0.02%)</title><rect x="89.2062%" y="773" width="0.0197%" height="15" fill="rgb(224,196,39)" fg:x="122068" fg:w="27"/><text x="89.4562%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (67 samples, 0.05%)</title><rect x="89.4291%" y="757" width="0.0490%" height="15" fill="rgb(205,35,43)" fg:x="122373" fg:w="67"/><text x="89.6791%" y="767.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (31 samples, 0.02%)</title><rect x="89.7112%" y="741" width="0.0227%" height="15" fill="rgb(228,201,21)" fg:x="122759" fg:w="31"/><text x="89.9612%" y="751.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (152 samples, 0.11%)</title><rect x="89.7338%" y="741" width="0.1111%" height="15" fill="rgb(237,118,16)" fg:x="122790" fg:w="152"/><text x="89.9838%" y="751.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="89.8449%" y="741" width="0.0124%" height="15" fill="rgb(241,17,19)" fg:x="122942" fg:w="17"/><text x="90.0949%" y="751.50"></text></g><g><title>[libc.so.6] (451 samples, 0.33%)</title><rect x="90.4274%" y="533" width="0.3296%" height="15" fill="rgb(214,10,25)" fg:x="123739" fg:w="451"/><text x="90.6774%" y="543.50"></text></g><g><title>__send (899 samples, 0.66%)</title><rect x="90.1760%" y="549" width="0.6570%" height="15" fill="rgb(238,37,29)" fg:x="123395" fg:w="899"/><text x="90.4260%" y="559.50"></text></g><g><title>[unknown] (104 samples, 0.08%)</title><rect x="90.7570%" y="533" width="0.0760%" height="15" fill="rgb(253,83,25)" fg:x="124190" fg:w="104"/><text x="91.0070%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,066 samples, 0.78%)</title><rect x="90.1738%" y="645" width="0.7790%" height="15" fill="rgb(234,192,12)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="655.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,066 samples, 0.78%)</title><rect x="90.1738%" y="629" width="0.7790%" height="15" fill="rgb(241,216,45)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="639.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,066 samples, 0.78%)</title><rect x="90.1738%" y="613" width="0.7790%" height="15" fill="rgb(242,22,33)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="623.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1,066 samples, 0.78%)</title><rect x="90.1738%" y="597" width="0.7790%" height="15" fill="rgb(231,105,49)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="607.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,066 samples, 0.78%)</title><rect x="90.1738%" y="581" width="0.7790%" height="15" fill="rgb(218,204,15)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1,066 samples, 0.78%)</title><rect x="90.1738%" y="565" width="0.7790%" height="15" fill="rgb(235,138,41)" fg:x="123392" fg:w="1066"/><text x="90.4238%" y="575.50"></text></g><g><title>std::sys::pal::unix::cvt (164 samples, 0.12%)</title><rect x="90.8330%" y="549" width="0.1198%" height="15" fill="rgb(246,0,9)" fg:x="124294" fg:w="164"/><text x="91.0830%" y="559.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (161 samples, 0.12%)</title><rect x="90.8351%" y="533" width="0.1177%" height="15" fill="rgb(210,74,4)" fg:x="124297" fg:w="161"/><text x="91.0851%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.01%)</title><rect x="90.9769%" y="565" width="0.0102%" height="15" fill="rgb(250,60,41)" fg:x="124491" fg:w="14"/><text x="91.2269%" y="575.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (14 samples, 0.01%)</title><rect x="90.9769%" y="549" width="0.0102%" height="15" fill="rgb(220,115,12)" fg:x="124491" fg:w="14"/><text x="91.2269%" y="559.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="90.9769%" y="533" width="0.0102%" height="15" fill="rgb(237,100,13)" fg:x="124491" fg:w="14"/><text x="91.2269%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (39 samples, 0.03%)</title><rect x="90.9747%" y="613" width="0.0285%" height="15" fill="rgb(213,55,26)" fg:x="124488" fg:w="39"/><text x="91.2247%" y="623.50"></text></g><g><title>tokio::runtime::context::budget (39 samples, 0.03%)</title><rect x="90.9747%" y="597" width="0.0285%" height="15" fill="rgb(216,17,4)" fg:x="124488" fg:w="39"/><text x="91.2247%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.03%)</title><rect x="90.9747%" y="581" width="0.0285%" height="15" fill="rgb(220,153,47)" fg:x="124488" fg:w="39"/><text x="91.2247%" y="591.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (22 samples, 0.02%)</title><rect x="90.9872%" y="565" width="0.0161%" height="15" fill="rgb(215,131,9)" fg:x="124505" fg:w="22"/><text x="91.2372%" y="575.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (22 samples, 0.02%)</title><rect x="90.9872%" y="549" width="0.0161%" height="15" fill="rgb(233,46,42)" fg:x="124505" fg:w="22"/><text x="91.2372%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (331 samples, 0.24%)</title><rect x="91.0113%" y="597" width="0.2419%" height="15" fill="rgb(226,86,7)" fg:x="124538" fg:w="331"/><text x="91.2613%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (331 samples, 0.24%)</title><rect x="91.0113%" y="581" width="0.2419%" height="15" fill="rgb(239,226,21)" fg:x="124538" fg:w="331"/><text x="91.2613%" y="591.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,742 samples, 1.27%)</title><rect x="89.9852%" y="725" width="1.2730%" height="15" fill="rgb(244,137,22)" fg:x="123134" fg:w="1742"/><text x="90.2352%" y="735.50"></text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,737 samples, 1.27%)</title><rect x="89.9889%" y="709" width="1.2694%" height="15" fill="rgb(211,139,35)" fg:x="123139" fg:w="1737"/><text x="90.2389%" y="719.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,688 samples, 1.23%)</title><rect x="90.0247%" y="693" width="1.2336%" height="15" fill="rgb(214,62,50)" fg:x="123188" fg:w="1688"/><text x="90.2747%" y="703.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,681 samples, 1.23%)</title><rect x="90.0298%" y="677" width="1.2285%" height="15" fill="rgb(212,113,44)" fg:x="123195" fg:w="1681"/><text x="90.2798%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1,559 samples, 1.14%)</title><rect x="90.1190%" y="661" width="1.1393%" height="15" fill="rgb(226,150,43)" fg:x="123317" fg:w="1559"/><text x="90.3690%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (413 samples, 0.30%)</title><rect x="90.9565%" y="645" width="0.3018%" height="15" fill="rgb(250,71,37)" fg:x="124463" fg:w="413"/><text x="91.2065%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (403 samples, 0.29%)</title><rect x="90.9638%" y="629" width="0.2945%" height="15" fill="rgb(219,76,19)" fg:x="124473" fg:w="403"/><text x="91.2138%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (349 samples, 0.26%)</title><rect x="91.0032%" y="613" width="0.2550%" height="15" fill="rgb(250,39,11)" fg:x="124527" fg:w="349"/><text x="91.2532%" y="623.50"></text></g><g><title>core::ptr::read (63 samples, 0.05%)</title><rect x="91.2634%" y="693" width="0.0460%" height="15" fill="rgb(230,64,31)" fg:x="124883" fg:w="63"/><text x="91.5134%" y="703.50"></text></g><g><title>core::mem::take (91 samples, 0.07%)</title><rect x="91.2634%" y="725" width="0.0665%" height="15" fill="rgb(208,222,23)" fg:x="124883" fg:w="91"/><text x="91.5134%" y="735.50"></text></g><g><title>core::mem::replace (91 samples, 0.07%)</title><rect x="91.2634%" y="709" width="0.0665%" height="15" fill="rgb(227,125,18)" fg:x="124883" fg:w="91"/><text x="91.5134%" y="719.50"></text></g><g><title>core::ptr::write (28 samples, 0.02%)</title><rect x="91.3094%" y="693" width="0.0205%" height="15" fill="rgb(234,210,9)" fg:x="124946" fg:w="28"/><text x="91.5594%" y="703.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (2,023 samples, 1.48%)</title><rect x="89.8573%" y="741" width="1.4784%" height="15" fill="rgb(217,127,24)" fg:x="122959" fg:w="2023"/><text x="90.1073%" y="751.50"></text></g><g><title>cache_bin_dalloc_easy (60 samples, 0.04%)</title><rect x="91.7231%" y="645" width="0.0438%" height="15" fill="rgb(239,141,48)" fg:x="125512" fg:w="60"/><text x="91.9731%" y="655.50"></text></g><g><title>cache_bin_full (14 samples, 0.01%)</title><rect x="91.7567%" y="629" width="0.0102%" height="15" fill="rgb(227,109,8)" fg:x="125558" fg:w="14"/><text x="92.0067%" y="639.50"></text></g><g><title>sz_index2size (54 samples, 0.04%)</title><rect x="91.7669%" y="645" width="0.0395%" height="15" fill="rgb(235,184,23)" fg:x="125572" fg:w="54"/><text x="92.0169%" y="655.50"></text></g><g><title>sz_index2size_lookup (54 samples, 0.04%)</title><rect x="91.7669%" y="629" width="0.0395%" height="15" fill="rgb(227,226,48)" fg:x="125572" fg:w="54"/><text x="92.0169%" y="639.50"></text></g><g><title>sz_index2size_lookup_impl (54 samples, 0.04%)</title><rect x="91.7669%" y="613" width="0.0395%" height="15" fill="rgb(206,150,11)" fg:x="125572" fg:w="54"/><text x="92.0169%" y="623.50"></text></g><g><title>_rjem_sdallocx (498 samples, 0.36%)</title><rect x="91.4490%" y="677" width="0.3639%" height="15" fill="rgb(254,2,33)" fg:x="125137" fg:w="498"/><text x="91.6990%" y="687.50"></text></g><g><title>free_fastpath (498 samples, 0.36%)</title><rect x="91.4490%" y="661" width="0.3639%" height="15" fill="rgb(243,160,20)" fg:x="125137" fg:w="498"/><text x="91.6990%" y="671.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (24 samples, 0.02%)</title><rect x="91.8129%" y="677" width="0.0175%" height="15" fill="rgb(218,208,30)" fg:x="125635" fg:w="24"/><text x="92.0629%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (20 samples, 0.01%)</title><rect x="91.8305%" y="677" width="0.0146%" height="15" fill="rgb(224,120,49)" fg:x="125659" fg:w="20"/><text x="92.0805%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (704 samples, 0.51%)</title><rect x="91.3357%" y="741" width="0.5145%" height="15" fill="rgb(246,12,2)" fg:x="124982" fg:w="704"/><text x="91.5857%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (704 samples, 0.51%)</title><rect x="91.3357%" y="725" width="0.5145%" height="15" fill="rgb(236,117,3)" fg:x="124982" fg:w="704"/><text x="91.5857%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (564 samples, 0.41%)</title><rect x="91.4381%" y="709" width="0.4122%" height="15" fill="rgb(216,128,52)" fg:x="125122" fg:w="564"/><text x="91.6881%" y="719.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (564 samples, 0.41%)</title><rect x="91.4381%" y="693" width="0.4122%" height="15" fill="rgb(246,145,19)" fg:x="125122" fg:w="564"/><text x="91.6881%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.01%)</title><rect x="91.8517%" y="725" width="0.0139%" height="15" fill="rgb(222,11,46)" fg:x="125688" fg:w="19"/><text x="92.1017%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (19 samples, 0.01%)</title><rect x="91.8517%" y="709" width="0.0139%" height="15" fill="rgb(245,82,36)" fg:x="125688" fg:w="19"/><text x="92.1017%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (19 samples, 0.01%)</title><rect x="91.8517%" y="693" width="0.0139%" height="15" fill="rgb(250,73,51)" fg:x="125688" fg:w="19"/><text x="92.1017%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (19 samples, 0.01%)</title><rect x="91.8517%" y="677" width="0.0139%" height="15" fill="rgb(221,189,23)" fg:x="125688" fg:w="19"/><text x="92.1017%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (19 samples, 0.01%)</title><rect x="91.8517%" y="661" width="0.0139%" height="15" fill="rgb(210,33,7)" fg:x="125688" fg:w="19"/><text x="92.1017%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (91 samples, 0.07%)</title><rect x="91.8692%" y="725" width="0.0665%" height="15" fill="rgb(210,107,22)" fg:x="125712" fg:w="91"/><text x="92.1192%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (91 samples, 0.07%)</title><rect x="91.8692%" y="709" width="0.0665%" height="15" fill="rgb(222,116,37)" fg:x="125712" fg:w="91"/><text x="92.1192%" y="719.50"></text></g><g><title>[libc.so.6] (88 samples, 0.06%)</title><rect x="91.8714%" y="693" width="0.0643%" height="15" fill="rgb(254,17,48)" fg:x="125715" fg:w="88"/><text x="92.1214%" y="703.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (53 samples, 0.04%)</title><rect x="91.9357%" y="725" width="0.0387%" height="15" fill="rgb(224,36,32)" fg:x="125803" fg:w="53"/><text x="92.1857%" y="735.50"></text></g><g><title>fastwebsockets::frame::Frame::write (174 samples, 0.13%)</title><rect x="91.8502%" y="741" width="0.1272%" height="15" fill="rgb(232,90,46)" fg:x="125686" fg:w="174"/><text x="92.1002%" y="751.50"></text></g><g><title>std::sys::pal::unix::cvt (63 samples, 0.05%)</title><rect x="92.2390%" y="485" width="0.0460%" height="15" fill="rgb(241,66,40)" fg:x="126218" fg:w="63"/><text x="92.4890%" y="495.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (59 samples, 0.04%)</title><rect x="92.2419%" y="469" width="0.0431%" height="15" fill="rgb(249,184,29)" fg:x="126222" fg:w="59"/><text x="92.4919%" y="479.50"></text></g><g><title>[libc.so.6] (412 samples, 0.30%)</title><rect x="92.8448%" y="469" width="0.3011%" height="15" fill="rgb(231,181,1)" fg:x="127047" fg:w="412"/><text x="93.0948%" y="479.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (1,378 samples, 1.01%)</title><rect x="92.2339%" y="613" width="1.0070%" height="15" fill="rgb(224,94,2)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="623.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (1,378 samples, 1.01%)</title><rect x="92.2339%" y="597" width="1.0070%" height="15" fill="rgb(229,170,15)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="607.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,378 samples, 1.01%)</title><rect x="92.2339%" y="581" width="1.0070%" height="15" fill="rgb(240,127,35)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="591.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,378 samples, 1.01%)</title><rect x="92.2339%" y="565" width="1.0070%" height="15" fill="rgb(248,196,34)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="575.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (1,378 samples, 1.01%)</title><rect x="92.2339%" y="549" width="1.0070%" height="15" fill="rgb(236,137,7)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="559.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (1,378 samples, 1.01%)</title><rect x="92.2339%" y="533" width="1.0070%" height="15" fill="rgb(235,127,16)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="543.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (1,378 samples, 1.01%)</title><rect x="92.2339%" y="517" width="1.0070%" height="15" fill="rgb(250,192,54)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="527.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (1,378 samples, 1.01%)</title><rect x="92.2339%" y="501" width="1.0070%" height="15" fill="rgb(218,98,20)" fg:x="126211" fg:w="1378"/><text x="92.4839%" y="511.50"></text></g><g><title>writev (1,308 samples, 0.96%)</title><rect x="92.2850%" y="485" width="0.9559%" height="15" fill="rgb(230,176,47)" fg:x="126281" fg:w="1308"/><text x="92.5350%" y="495.50"></text></g><g><title>[unknown] (130 samples, 0.10%)</title><rect x="93.1459%" y="469" width="0.0950%" height="15" fill="rgb(244,2,33)" fg:x="127459" fg:w="130"/><text x="93.3959%" y="479.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.01%)</title><rect x="93.2592%" y="549" width="0.0139%" height="15" fill="rgb(231,100,17)" fg:x="127614" fg:w="19"/><text x="93.5092%" y="559.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (19 samples, 0.01%)</title><rect x="93.2592%" y="533" width="0.0139%" height="15" fill="rgb(245,23,12)" fg:x="127614" fg:w="19"/><text x="93.5092%" y="543.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (19 samples, 0.01%)</title><rect x="93.2592%" y="517" width="0.0139%" height="15" fill="rgb(249,55,22)" fg:x="127614" fg:w="19"/><text x="93.5092%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="93.2628%" y="501" width="0.0102%" height="15" fill="rgb(207,134,9)" fg:x="127619" fg:w="14"/><text x="93.5128%" y="511.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (48 samples, 0.04%)</title><rect x="93.2592%" y="597" width="0.0351%" height="15" fill="rgb(218,134,0)" fg:x="127614" fg:w="48"/><text x="93.5092%" y="607.50"></text></g><g><title>tokio::runtime::context::budget (48 samples, 0.04%)</title><rect x="93.2592%" y="581" width="0.0351%" height="15" fill="rgb(213,212,33)" fg:x="127614" fg:w="48"/><text x="93.5092%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (48 samples, 0.04%)</title><rect x="93.2592%" y="565" width="0.0351%" height="15" fill="rgb(252,106,18)" fg:x="127614" fg:w="48"/><text x="93.5092%" y="575.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (29 samples, 0.02%)</title><rect x="93.2731%" y="549" width="0.0212%" height="15" fill="rgb(208,126,42)" fg:x="127633" fg:w="29"/><text x="93.5231%" y="559.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (29 samples, 0.02%)</title><rect x="93.2731%" y="533" width="0.0212%" height="15" fill="rgb(246,175,29)" fg:x="127633" fg:w="29"/><text x="93.5231%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (188 samples, 0.14%)</title><rect x="93.3016%" y="581" width="0.1374%" height="15" fill="rgb(215,13,50)" fg:x="127672" fg:w="188"/><text x="93.5516%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (188 samples, 0.14%)</title><rect x="93.3016%" y="565" width="0.1374%" height="15" fill="rgb(216,172,15)" fg:x="127672" fg:w="188"/><text x="93.5516%" y="575.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (1,863 samples, 1.36%)</title><rect x="92.0826%" y="725" width="1.3615%" height="15" fill="rgb(212,103,13)" fg:x="126004" fg:w="1863"/><text x="92.3326%" y="735.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,863 samples, 1.36%)</title><rect x="92.0826%" y="709" width="1.3615%" height="15" fill="rgb(231,171,36)" fg:x="126004" fg:w="1863"/><text x="92.3326%" y="719.50"></text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,857 samples, 1.36%)</title><rect x="92.0870%" y="693" width="1.3571%" height="15" fill="rgb(250,123,20)" fg:x="126010" fg:w="1857"/><text x="92.3370%" y="703.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1,783 samples, 1.30%)</title><rect x="92.1411%" y="677" width="1.3030%" height="15" fill="rgb(212,53,50)" fg:x="126084" fg:w="1783"/><text x="92.3911%" y="687.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (1,675 samples, 1.22%)</title><rect x="92.2200%" y="661" width="1.2241%" height="15" fill="rgb(243,54,12)" fg:x="126192" fg:w="1675"/><text x="92.4700%" y="671.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (1,675 samples, 1.22%)</title><rect x="92.2200%" y="645" width="1.2241%" height="15" fill="rgb(234,101,34)" fg:x="126192" fg:w="1675"/><text x="92.4700%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (1,675 samples, 1.22%)</title><rect x="92.2200%" y="629" width="1.2241%" height="15" fill="rgb(254,67,22)" fg:x="126192" fg:w="1675"/><text x="92.4700%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (278 samples, 0.20%)</title><rect x="93.2409%" y="613" width="0.2032%" height="15" fill="rgb(250,35,47)" fg:x="127589" fg:w="278"/><text x="93.4909%" y="623.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (205 samples, 0.15%)</title><rect x="93.2943%" y="597" width="0.1498%" height="15" fill="rgb(226,126,38)" fg:x="127662" fg:w="205"/><text x="93.5443%" y="607.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (5,808 samples, 4.24%)</title><rect x="89.2259%" y="773" width="4.2444%" height="15" fill="rgb(216,138,53)" fg:x="122095" fg:w="5808"/><text x="89.4759%" y="783.50">fastw..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (5,463 samples, 3.99%)</title><rect x="89.4781%" y="757" width="3.9923%" height="15" fill="rgb(246,199,43)" fg:x="122440" fg:w="5463"/><text x="89.7281%" y="767.50">fast..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (2,043 samples, 1.49%)</title><rect x="91.9774%" y="741" width="1.4930%" height="15" fill="rgb(232,125,11)" fg:x="125860" fg:w="2043"/><text x="92.2274%" y="751.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (36 samples, 0.03%)</title><rect x="93.4441%" y="725" width="0.0263%" height="15" fill="rgb(218,219,45)" fg:x="127867" fg:w="36"/><text x="93.6941%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6,659 samples, 4.87%)</title><rect x="88.6355%" y="805" width="4.8663%" height="15" fill="rgb(216,102,54)" fg:x="121287" fg:w="6659"/><text x="88.8855%" y="815.50">&lt;core:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (6,659 samples, 4.87%)</title><rect x="88.6355%" y="789" width="4.8663%" height="15" fill="rgb(250,228,7)" fg:x="121287" fg:w="6659"/><text x="88.8855%" y="799.50">wisp_m..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (43 samples, 0.03%)</title><rect x="93.4704%" y="773" width="0.0314%" height="15" fill="rgb(226,125,25)" fg:x="127903" fg:w="43"/><text x="93.7204%" y="783.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (35 samples, 0.03%)</title><rect x="93.4762%" y="757" width="0.0256%" height="15" fill="rgb(224,165,27)" fg:x="127911" fg:w="35"/><text x="93.7262%" y="767.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (23 samples, 0.02%)</title><rect x="93.6421%" y="581" width="0.0168%" height="15" fill="rgb(233,86,3)" fg:x="128138" fg:w="23"/><text x="93.8921%" y="591.50"></text></g><g><title>tcache_bin_flush_bottom (23 samples, 0.02%)</title><rect x="93.6421%" y="565" width="0.0168%" height="15" fill="rgb(228,116,20)" fg:x="128138" fg:w="23"/><text x="93.8921%" y="575.50"></text></g><g><title>tcache_bin_flush_impl (22 samples, 0.02%)</title><rect x="93.6428%" y="549" width="0.0161%" height="15" fill="rgb(209,192,17)" fg:x="128139" fg:w="22"/><text x="93.8928%" y="559.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (39 samples, 0.03%)</title><rect x="93.6312%" y="613" width="0.0285%" height="15" fill="rgb(224,88,34)" fg:x="128123" fg:w="39"/><text x="93.8812%" y="623.50"></text></g><g><title>tcache_gc_small (24 samples, 0.02%)</title><rect x="93.6421%" y="597" width="0.0175%" height="15" fill="rgb(233,38,6)" fg:x="128138" fg:w="24"/><text x="93.8921%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (52 samples, 0.04%)</title><rect x="93.6253%" y="629" width="0.0380%" height="15" fill="rgb(212,59,30)" fg:x="128115" fg:w="52"/><text x="93.8753%" y="639.50"></text></g><g><title>isfree (62 samples, 0.05%)</title><rect x="93.6187%" y="677" width="0.0453%" height="15" fill="rgb(213,80,3)" fg:x="128106" fg:w="62"/><text x="93.8687%" y="687.50"></text></g><g><title>thread_dalloc_event (54 samples, 0.04%)</title><rect x="93.6246%" y="661" width="0.0395%" height="15" fill="rgb(251,178,7)" fg:x="128114" fg:w="54"/><text x="93.8746%" y="671.50"></text></g><g><title>te_event_advance (54 samples, 0.04%)</title><rect x="93.6246%" y="645" width="0.0395%" height="15" fill="rgb(213,154,26)" fg:x="128114" fg:w="54"/><text x="93.8746%" y="655.50"></text></g><g><title>_rjem_je_sdallocx_default (66 samples, 0.05%)</title><rect x="93.6165%" y="693" width="0.0482%" height="15" fill="rgb(238,165,49)" fg:x="128103" fg:w="66"/><text x="93.8665%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (109 samples, 0.08%)</title><rect x="93.9344%" y="661" width="0.0797%" height="15" fill="rgb(248,91,46)" fg:x="128538" fg:w="109"/><text x="94.1844%" y="671.50"></text></g><g><title>cache_bin_full (36 samples, 0.03%)</title><rect x="93.9878%" y="645" width="0.0263%" height="15" fill="rgb(244,21,52)" fg:x="128611" fg:w="36"/><text x="94.2378%" y="655.50"></text></g><g><title>sz_index2size (78 samples, 0.06%)</title><rect x="94.0141%" y="661" width="0.0570%" height="15" fill="rgb(247,122,20)" fg:x="128647" fg:w="78"/><text x="94.2641%" y="671.50"></text></g><g><title>sz_index2size_lookup (78 samples, 0.06%)</title><rect x="94.0141%" y="645" width="0.0570%" height="15" fill="rgb(218,27,9)" fg:x="128647" fg:w="78"/><text x="94.2641%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (78 samples, 0.06%)</title><rect x="94.0141%" y="629" width="0.0570%" height="15" fill="rgb(246,7,6)" fg:x="128647" fg:w="78"/><text x="94.2641%" y="639.50"></text></g><g><title>_rjem_sdallocx (569 samples, 0.42%)</title><rect x="93.6648%" y="693" width="0.4158%" height="15" fill="rgb(227,135,54)" fg:x="128169" fg:w="569"/><text x="93.9148%" y="703.50"></text></g><g><title>free_fastpath (568 samples, 0.42%)</title><rect x="93.6655%" y="677" width="0.4151%" height="15" fill="rgb(247,14,11)" fg:x="128170" fg:w="568"/><text x="93.9155%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (650 samples, 0.48%)</title><rect x="93.6158%" y="757" width="0.4750%" height="15" fill="rgb(206,149,34)" fg:x="128102" fg:w="650"/><text x="93.8658%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (650 samples, 0.48%)</title><rect x="93.6158%" y="741" width="0.4750%" height="15" fill="rgb(227,228,4)" fg:x="128102" fg:w="650"/><text x="93.8658%" y="751.50"></text></g><g><title>__rust_dealloc (650 samples, 0.48%)</title><rect x="93.6158%" y="725" width="0.4750%" height="15" fill="rgb(238,218,28)" fg:x="128102" fg:w="650"/><text x="93.8658%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (650 samples, 0.48%)</title><rect x="93.6158%" y="709" width="0.4750%" height="15" fill="rgb(252,86,40)" fg:x="128102" fg:w="650"/><text x="93.8658%" y="719.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (14 samples, 0.01%)</title><rect x="94.0806%" y="693" width="0.0102%" height="15" fill="rgb(251,225,11)" fg:x="128738" fg:w="14"/><text x="94.3306%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (662 samples, 0.48%)</title><rect x="93.6107%" y="773" width="0.4838%" height="15" fill="rgb(206,46,49)" fg:x="128095" fg:w="662"/><text x="93.8607%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (851 samples, 0.62%)</title><rect x="93.5018%" y="805" width="0.6219%" height="15" fill="rgb(245,128,24)" fg:x="127946" fg:w="851"/><text x="93.7518%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (851 samples, 0.62%)</title><rect x="93.5018%" y="789" width="0.6219%" height="15" fill="rgb(219,177,34)" fg:x="127946" fg:w="851"/><text x="93.7518%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (40 samples, 0.03%)</title><rect x="94.0945%" y="773" width="0.0292%" height="15" fill="rgb(218,60,48)" fg:x="128757" fg:w="40"/><text x="94.3445%" y="783.50"></text></g><g><title>extent_recycle_extract (14 samples, 0.01%)</title><rect x="94.1785%" y="405" width="0.0102%" height="15" fill="rgb(221,11,5)" fg:x="128872" fg:w="14"/><text x="94.4285%" y="415.50"></text></g><g><title>arena_slab_alloc (25 samples, 0.02%)</title><rect x="94.1719%" y="517" width="0.0183%" height="15" fill="rgb(220,148,13)" fg:x="128863" fg:w="25"/><text x="94.4219%" y="527.50"></text></g><g><title>_rjem_je_pa_alloc (23 samples, 0.02%)</title><rect x="94.1734%" y="501" width="0.0168%" height="15" fill="rgb(210,16,3)" fg:x="128865" fg:w="23"/><text x="94.4234%" y="511.50"></text></g><g><title>pai_alloc (19 samples, 0.01%)</title><rect x="94.1763%" y="485" width="0.0139%" height="15" fill="rgb(236,80,2)" fg:x="128869" fg:w="19"/><text x="94.4263%" y="495.50"></text></g><g><title>pac_alloc_impl (19 samples, 0.01%)</title><rect x="94.1763%" y="469" width="0.0139%" height="15" fill="rgb(239,129,19)" fg:x="128869" fg:w="19"/><text x="94.4263%" y="479.50"></text></g><g><title>pac_alloc_real (19 samples, 0.01%)</title><rect x="94.1763%" y="453" width="0.0139%" height="15" fill="rgb(220,106,35)" fg:x="128869" fg:w="19"/><text x="94.4263%" y="463.50"></text></g><g><title>_rjem_je_ecache_alloc (18 samples, 0.01%)</title><rect x="94.1771%" y="437" width="0.0132%" height="15" fill="rgb(252,139,45)" fg:x="128870" fg:w="18"/><text x="94.4271%" y="447.50"></text></g><g><title>extent_recycle (18 samples, 0.01%)</title><rect x="94.1771%" y="421" width="0.0132%" height="15" fill="rgb(229,8,36)" fg:x="128870" fg:w="18"/><text x="94.4271%" y="431.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (46 samples, 0.03%)</title><rect x="94.1668%" y="549" width="0.0336%" height="15" fill="rgb(230,126,33)" fg:x="128856" fg:w="46"/><text x="94.4168%" y="559.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (46 samples, 0.03%)</title><rect x="94.1668%" y="533" width="0.0336%" height="15" fill="rgb(239,140,21)" fg:x="128856" fg:w="46"/><text x="94.4168%" y="543.50"></text></g><g><title>imalloc_no_sample (49 samples, 0.04%)</title><rect x="94.1668%" y="613" width="0.0358%" height="15" fill="rgb(254,104,9)" fg:x="128856" fg:w="49"/><text x="94.4168%" y="623.50"></text></g><g><title>iallocztm (49 samples, 0.04%)</title><rect x="94.1668%" y="597" width="0.0358%" height="15" fill="rgb(239,52,14)" fg:x="128856" fg:w="49"/><text x="94.4168%" y="607.50"></text></g><g><title>arena_malloc (49 samples, 0.04%)</title><rect x="94.1668%" y="581" width="0.0358%" height="15" fill="rgb(208,227,44)" fg:x="128856" fg:w="49"/><text x="94.4168%" y="591.50"></text></g><g><title>tcache_alloc_small (49 samples, 0.04%)</title><rect x="94.1668%" y="565" width="0.0358%" height="15" fill="rgb(246,18,19)" fg:x="128856" fg:w="49"/><text x="94.4168%" y="575.50"></text></g><g><title>tcache_gc_small (19 samples, 0.01%)</title><rect x="94.2209%" y="533" width="0.0139%" height="15" fill="rgb(235,228,25)" fg:x="128930" fg:w="19"/><text x="94.4709%" y="543.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (19 samples, 0.01%)</title><rect x="94.2209%" y="517" width="0.0139%" height="15" fill="rgb(240,156,20)" fg:x="128930" fg:w="19"/><text x="94.4709%" y="527.50"></text></g><g><title>tcache_bin_flush_bottom (19 samples, 0.01%)</title><rect x="94.2209%" y="501" width="0.0139%" height="15" fill="rgb(224,8,20)" fg:x="128930" fg:w="19"/><text x="94.4709%" y="511.50"></text></g><g><title>tcache_bin_flush_impl (19 samples, 0.01%)</title><rect x="94.2209%" y="485" width="0.0139%" height="15" fill="rgb(214,12,52)" fg:x="128930" fg:w="19"/><text x="94.4709%" y="495.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (37 samples, 0.03%)</title><rect x="94.2085%" y="565" width="0.0270%" height="15" fill="rgb(211,220,47)" fg:x="128913" fg:w="37"/><text x="94.4585%" y="575.50"></text></g><g><title>tcache_event (37 samples, 0.03%)</title><rect x="94.2085%" y="549" width="0.0270%" height="15" fill="rgb(250,173,5)" fg:x="128913" fg:w="37"/><text x="94.4585%" y="559.50"></text></g><g><title>_rjem_je_malloc_default (100 samples, 0.07%)</title><rect x="94.1668%" y="661" width="0.0731%" height="15" fill="rgb(250,125,52)" fg:x="128856" fg:w="100"/><text x="94.4168%" y="671.50"></text></g><g><title>imalloc (100 samples, 0.07%)</title><rect x="94.1668%" y="645" width="0.0731%" height="15" fill="rgb(209,133,18)" fg:x="128856" fg:w="100"/><text x="94.4168%" y="655.50"></text></g><g><title>imalloc_body (100 samples, 0.07%)</title><rect x="94.1668%" y="629" width="0.0731%" height="15" fill="rgb(216,173,22)" fg:x="128856" fg:w="100"/><text x="94.4168%" y="639.50"></text></g><g><title>thread_alloc_event (51 samples, 0.04%)</title><rect x="94.2026%" y="613" width="0.0373%" height="15" fill="rgb(205,3,22)" fg:x="128905" fg:w="51"/><text x="94.4526%" y="623.50"></text></g><g><title>te_event_advance (51 samples, 0.04%)</title><rect x="94.2026%" y="597" width="0.0373%" height="15" fill="rgb(248,22,20)" fg:x="128905" fg:w="51"/><text x="94.4526%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (48 samples, 0.04%)</title><rect x="94.2048%" y="581" width="0.0351%" height="15" fill="rgb(233,6,29)" fg:x="128908" fg:w="48"/><text x="94.4548%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (78 samples, 0.06%)</title><rect x="94.2691%" y="629" width="0.0570%" height="15" fill="rgb(240,22,54)" fg:x="128996" fg:w="78"/><text x="94.5191%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (78 samples, 0.06%)</title><rect x="94.2691%" y="613" width="0.0570%" height="15" fill="rgb(231,133,32)" fg:x="128996" fg:w="78"/><text x="94.5191%" y="623.50"></text></g><g><title>__rust_alloc (229 samples, 0.17%)</title><rect x="94.1661%" y="693" width="0.1674%" height="15" fill="rgb(248,193,4)" fg:x="128855" fg:w="229"/><text x="94.4161%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (229 samples, 0.17%)</title><rect x="94.1661%" y="677" width="0.1674%" height="15" fill="rgb(211,178,46)" fg:x="128855" fg:w="229"/><text x="94.4161%" y="687.50"></text></g><g><title>_rjem_malloc (128 samples, 0.09%)</title><rect x="94.2399%" y="661" width="0.0935%" height="15" fill="rgb(224,5,42)" fg:x="128956" fg:w="128"/><text x="94.4899%" y="671.50"></text></g><g><title>imalloc_fastpath (128 samples, 0.09%)</title><rect x="94.2399%" y="645" width="0.0935%" height="15" fill="rgb(239,176,25)" fg:x="128956" fg:w="128"/><text x="94.4899%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,238 samples, 6.02%)</title><rect x="88.3139%" y="837" width="6.0203%" height="15" fill="rgb(245,187,50)" fg:x="120847" fg:w="8238"/><text x="88.5639%" y="847.50">&lt;core::p..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (8,238 samples, 6.02%)</title><rect x="88.3139%" y="821" width="6.0203%" height="15" fill="rgb(248,24,15)" fg:x="120847" fg:w="8238"/><text x="88.5639%" y="831.50">&lt;alloc::..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (288 samples, 0.21%)</title><rect x="94.1237%" y="805" width="0.2105%" height="15" fill="rgb(205,166,13)" fg:x="128797" fg:w="288"/><text x="94.3737%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (278 samples, 0.20%)</title><rect x="94.1310%" y="789" width="0.2032%" height="15" fill="rgb(208,114,23)" fg:x="128807" fg:w="278"/><text x="94.3810%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (278 samples, 0.20%)</title><rect x="94.1310%" y="773" width="0.2032%" height="15" fill="rgb(239,127,18)" fg:x="128807" fg:w="278"/><text x="94.3810%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (236 samples, 0.17%)</title><rect x="94.1617%" y="757" width="0.1725%" height="15" fill="rgb(219,154,28)" fg:x="128849" fg:w="236"/><text x="94.4117%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (230 samples, 0.17%)</title><rect x="94.1661%" y="741" width="0.1681%" height="15" fill="rgb(225,157,23)" fg:x="128855" fg:w="230"/><text x="94.4161%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (230 samples, 0.17%)</title><rect x="94.1661%" y="725" width="0.1681%" height="15" fill="rgb(219,8,6)" fg:x="128855" fg:w="230"/><text x="94.4161%" y="735.50"></text></g><g><title>alloc::alloc::alloc (230 samples, 0.17%)</title><rect x="94.1661%" y="709" width="0.1681%" height="15" fill="rgb(212,47,6)" fg:x="128855" fg:w="230"/><text x="94.4161%" y="719.50"></text></g><g><title>_rjem_je_sdallocx_default (18 samples, 0.01%)</title><rect x="94.3897%" y="725" width="0.0132%" height="15" fill="rgb(224,190,4)" fg:x="129161" fg:w="18"/><text x="94.6397%" y="735.50"></text></g><g><title>isfree (18 samples, 0.01%)</title><rect x="94.3897%" y="709" width="0.0132%" height="15" fill="rgb(239,183,29)" fg:x="129161" fg:w="18"/><text x="94.6397%" y="719.50"></text></g><g><title>thread_dalloc_event (18 samples, 0.01%)</title><rect x="94.3897%" y="693" width="0.0132%" height="15" fill="rgb(213,57,7)" fg:x="129161" fg:w="18"/><text x="94.6397%" y="703.50"></text></g><g><title>te_event_advance (18 samples, 0.01%)</title><rect x="94.3897%" y="677" width="0.0132%" height="15" fill="rgb(216,148,1)" fg:x="129161" fg:w="18"/><text x="94.6397%" y="687.50"></text></g><g><title>_rjem_je_te_event_trigger (17 samples, 0.01%)</title><rect x="94.3904%" y="661" width="0.0124%" height="15" fill="rgb(236,182,29)" fg:x="129162" fg:w="17"/><text x="94.6404%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (75 samples, 0.05%)</title><rect x="94.4284%" y="693" width="0.0548%" height="15" fill="rgb(244,120,48)" fg:x="129214" fg:w="75"/><text x="94.6784%" y="703.50"></text></g><g><title>cache_bin_full (44 samples, 0.03%)</title><rect x="94.4511%" y="677" width="0.0322%" height="15" fill="rgb(206,71,34)" fg:x="129245" fg:w="44"/><text x="94.7011%" y="687.50"></text></g><g><title>_rjem_sdallocx (111 samples, 0.08%)</title><rect x="94.4029%" y="725" width="0.0811%" height="15" fill="rgb(242,32,6)" fg:x="129179" fg:w="111"/><text x="94.6529%" y="735.50"></text></g><g><title>free_fastpath (111 samples, 0.08%)</title><rect x="94.4029%" y="709" width="0.0811%" height="15" fill="rgb(241,35,3)" fg:x="129179" fg:w="111"/><text x="94.6529%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (138 samples, 0.10%)</title><rect x="94.3890%" y="789" width="0.1008%" height="15" fill="rgb(222,62,19)" fg:x="129160" fg:w="138"/><text x="94.6390%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (138 samples, 0.10%)</title><rect x="94.3890%" y="773" width="0.1008%" height="15" fill="rgb(223,110,41)" fg:x="129160" fg:w="138"/><text x="94.6390%" y="783.50"></text></g><g><title>__rust_dealloc (138 samples, 0.10%)</title><rect x="94.3890%" y="757" width="0.1008%" height="15" fill="rgb(208,224,4)" fg:x="129160" fg:w="138"/><text x="94.6390%" y="767.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (138 samples, 0.10%)</title><rect x="94.3890%" y="741" width="0.1008%" height="15" fill="rgb(241,137,19)" fg:x="129160" fg:w="138"/><text x="94.6390%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (142 samples, 0.10%)</title><rect x="94.3875%" y="805" width="0.1038%" height="15" fill="rgb(244,24,17)" fg:x="129158" fg:w="142"/><text x="94.6375%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8,926 samples, 6.52%)</title><rect x="87.9748%" y="869" width="6.5230%" height="15" fill="rgb(245,178,49)" fg:x="120383" fg:w="8926"/><text x="88.2248%" y="879.50">&lt;core::pi..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (8,922 samples, 6.52%)</title><rect x="87.9778%" y="853" width="6.5201%" height="15" fill="rgb(219,160,38)" fg:x="120387" fg:w="8922"/><text x="88.2278%" y="863.50">&lt;alloc::b..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (224 samples, 0.16%)</title><rect x="94.3342%" y="837" width="0.1637%" height="15" fill="rgb(228,137,14)" fg:x="129085" fg:w="224"/><text x="94.5842%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (224 samples, 0.16%)</title><rect x="94.3342%" y="821" width="0.1637%" height="15" fill="rgb(237,134,11)" fg:x="129085" fg:w="224"/><text x="94.5842%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="94.5205%" y="853" width="0.0102%" height="15" fill="rgb(211,126,44)" fg:x="129340" fg:w="14"/><text x="94.7705%" y="863.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (14 samples, 0.01%)</title><rect x="94.5205%" y="837" width="0.0102%" height="15" fill="rgb(226,171,33)" fg:x="129340" fg:w="14"/><text x="94.7705%" y="847.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (26 samples, 0.02%)</title><rect x="94.5308%" y="853" width="0.0190%" height="15" fill="rgb(253,99,13)" fg:x="129354" fg:w="26"/><text x="94.7808%" y="863.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (14 samples, 0.01%)</title><rect x="94.5739%" y="837" width="0.0102%" height="15" fill="rgb(244,48,7)" fg:x="129413" fg:w="14"/><text x="94.8239%" y="847.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (14 samples, 0.01%)</title><rect x="94.5739%" y="821" width="0.0102%" height="15" fill="rgb(244,217,54)" fg:x="129413" fg:w="14"/><text x="94.8239%" y="831.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (37 samples, 0.03%)</title><rect x="94.5629%" y="853" width="0.0270%" height="15" fill="rgb(224,15,18)" fg:x="129398" fg:w="37"/><text x="94.8129%" y="863.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (221 samples, 0.16%)</title><rect x="94.5900%" y="853" width="0.1615%" height="15" fill="rgb(244,99,12)" fg:x="129435" fg:w="221"/><text x="94.8400%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (221 samples, 0.16%)</title><rect x="94.5900%" y="837" width="0.1615%" height="15" fill="rgb(233,226,8)" fg:x="129435" fg:w="221"/><text x="94.8400%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (221 samples, 0.16%)</title><rect x="94.5900%" y="821" width="0.1615%" height="15" fill="rgb(229,211,3)" fg:x="129435" fg:w="221"/><text x="94.8400%" y="831.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (397 samples, 0.29%)</title><rect x="94.5001%" y="869" width="0.2901%" height="15" fill="rgb(216,140,21)" fg:x="129312" fg:w="397"/><text x="94.7501%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (32 samples, 0.02%)</title><rect x="94.7668%" y="853" width="0.0234%" height="15" fill="rgb(234,122,30)" fg:x="129677" fg:w="32"/><text x="95.0168%" y="863.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (31 samples, 0.02%)</title><rect x="94.7675%" y="837" width="0.0227%" height="15" fill="rgb(236,25,46)" fg:x="129678" fg:w="31"/><text x="95.0175%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (31 samples, 0.02%)</title><rect x="94.7675%" y="821" width="0.0227%" height="15" fill="rgb(217,52,54)" fg:x="129678" fg:w="31"/><text x="95.0175%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.02%)</title><rect x="94.7675%" y="805" width="0.0227%" height="15" fill="rgb(222,29,26)" fg:x="129678" fg:w="31"/><text x="95.0175%" y="815.50"></text></g><g><title>cache_bin_dalloc_easy (34 samples, 0.02%)</title><rect x="94.8216%" y="725" width="0.0248%" height="15" fill="rgb(216,177,29)" fg:x="129752" fg:w="34"/><text x="95.0716%" y="735.50"></text></g><g><title>_rjem_sdallocx (60 samples, 0.04%)</title><rect x="94.8085%" y="757" width="0.0438%" height="15" fill="rgb(247,136,51)" fg:x="129734" fg:w="60"/><text x="95.0585%" y="767.50"></text></g><g><title>free_fastpath (60 samples, 0.04%)</title><rect x="94.8085%" y="741" width="0.0438%" height="15" fill="rgb(231,47,47)" fg:x="129734" fg:w="60"/><text x="95.0585%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.06%)</title><rect x="94.7975%" y="837" width="0.0614%" height="15" fill="rgb(211,192,36)" fg:x="129719" fg:w="84"/><text x="95.0475%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (79 samples, 0.06%)</title><rect x="94.8012%" y="821" width="0.0577%" height="15" fill="rgb(229,156,32)" fg:x="129724" fg:w="79"/><text x="95.0512%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (79 samples, 0.06%)</title><rect x="94.8012%" y="805" width="0.0577%" height="15" fill="rgb(248,213,20)" fg:x="129724" fg:w="79"/><text x="95.0512%" y="815.50"></text></g><g><title>__rust_dealloc (79 samples, 0.06%)</title><rect x="94.8012%" y="789" width="0.0577%" height="15" fill="rgb(217,64,7)" fg:x="129724" fg:w="79"/><text x="95.0512%" y="799.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (79 samples, 0.06%)</title><rect x="94.8012%" y="773" width="0.0577%" height="15" fill="rgb(232,142,8)" fg:x="129724" fg:w="79"/><text x="95.0512%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (99 samples, 0.07%)</title><rect x="94.7902%" y="869" width="0.0723%" height="15" fill="rgb(224,92,44)" fg:x="129709" fg:w="99"/><text x="95.0402%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (99 samples, 0.07%)</title><rect x="94.7902%" y="853" width="0.0723%" height="15" fill="rgb(214,169,17)" fg:x="129709" fg:w="99"/><text x="95.0402%" y="863.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (130 samples, 0.10%)</title><rect x="94.8655%" y="821" width="0.0950%" height="15" fill="rgb(210,59,37)" fg:x="129812" fg:w="130"/><text x="95.1155%" y="831.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="94.9407%" y="805" width="0.0197%" height="15" fill="rgb(214,116,48)" fg:x="129915" fg:w="27"/><text x="95.1907%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="94.9407%" y="789" width="0.0197%" height="15" fill="rgb(244,191,6)" fg:x="129915" fg:w="27"/><text x="95.1907%" y="799.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="94.9407%" y="773" width="0.0197%" height="15" fill="rgb(241,50,52)" fg:x="129915" fg:w="27"/><text x="95.1907%" y="783.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="94.9495%" y="757" width="0.0110%" height="15" fill="rgb(236,75,39)" fg:x="129927" fg:w="15"/><text x="95.1995%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (135 samples, 0.10%)</title><rect x="94.9605%" y="821" width="0.0987%" height="15" fill="rgb(236,99,0)" fg:x="129942" fg:w="135"/><text x="95.2105%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.10%)</title><rect x="94.9605%" y="805" width="0.0987%" height="15" fill="rgb(207,202,15)" fg:x="129942" fg:w="135"/><text x="95.2105%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (125 samples, 0.09%)</title><rect x="94.9678%" y="789" width="0.0913%" height="15" fill="rgb(233,207,14)" fg:x="129952" fg:w="125"/><text x="95.2178%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (122 samples, 0.09%)</title><rect x="94.9700%" y="773" width="0.0892%" height="15" fill="rgb(226,27,51)" fg:x="129955" fg:w="122"/><text x="95.2200%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (122 samples, 0.09%)</title><rect x="94.9700%" y="757" width="0.0892%" height="15" fill="rgb(206,104,42)" fg:x="129955" fg:w="122"/><text x="95.2200%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (212 samples, 0.15%)</title><rect x="95.0620%" y="821" width="0.1549%" height="15" fill="rgb(212,225,4)" fg:x="130081" fg:w="212"/><text x="95.3120%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_and (212 samples, 0.15%)</title><rect x="95.0620%" y="805" width="0.1549%" height="15" fill="rgb(233,96,42)" fg:x="130081" fg:w="212"/><text x="95.3120%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="95.2338%" y="693" width="0.0102%" height="15" fill="rgb(229,21,32)" fg:x="130316" fg:w="14"/><text x="95.4838%" y="703.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (24 samples, 0.02%)</title><rect x="95.2601%" y="661" width="0.0175%" height="15" fill="rgb(226,216,24)" fg:x="130352" fg:w="24"/><text x="95.5101%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (24 samples, 0.02%)</title><rect x="95.2601%" y="645" width="0.0175%" height="15" fill="rgb(221,163,17)" fg:x="130352" fg:w="24"/><text x="95.5101%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (87 samples, 0.06%)</title><rect x="95.2338%" y="741" width="0.0636%" height="15" fill="rgb(216,216,42)" fg:x="130316" fg:w="87"/><text x="95.4838%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (87 samples, 0.06%)</title><rect x="95.2338%" y="725" width="0.0636%" height="15" fill="rgb(240,118,7)" fg:x="130316" fg:w="87"/><text x="95.4838%" y="735.50"></text></g><g><title>tokio::runtime::context::with_scheduler (87 samples, 0.06%)</title><rect x="95.2338%" y="709" width="0.0636%" height="15" fill="rgb(221,67,37)" fg:x="130316" fg:w="87"/><text x="95.4838%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (73 samples, 0.05%)</title><rect x="95.2440%" y="693" width="0.0533%" height="15" fill="rgb(241,32,44)" fg:x="130330" fg:w="73"/><text x="95.4940%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (59 samples, 0.04%)</title><rect x="95.2542%" y="677" width="0.0431%" height="15" fill="rgb(235,204,43)" fg:x="130344" fg:w="59"/><text x="95.5042%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (17 samples, 0.01%)</title><rect x="95.2849%" y="661" width="0.0124%" height="15" fill="rgb(213,116,10)" fg:x="130386" fg:w="17"/><text x="95.5349%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (16 samples, 0.01%)</title><rect x="95.2857%" y="645" width="0.0117%" height="15" fill="rgb(239,15,48)" fg:x="130387" fg:w="16"/><text x="95.5357%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (107 samples, 0.08%)</title><rect x="95.2338%" y="757" width="0.0782%" height="15" fill="rgb(207,123,36)" fg:x="130316" fg:w="107"/><text x="95.4838%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::schedule (20 samples, 0.01%)</title><rect x="95.2974%" y="741" width="0.0146%" height="15" fill="rgb(209,103,30)" fg:x="130403" fg:w="20"/><text x="95.5474%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::load (41 samples, 0.03%)</title><rect x="95.3186%" y="725" width="0.0300%" height="15" fill="rgb(238,100,19)" fg:x="130432" fg:w="41"/><text x="95.5686%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (41 samples, 0.03%)</title><rect x="95.3186%" y="709" width="0.0300%" height="15" fill="rgb(244,30,14)" fg:x="130432" fg:w="41"/><text x="95.5686%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.03%)</title><rect x="95.3186%" y="693" width="0.0300%" height="15" fill="rgb(249,174,6)" fg:x="130432" fg:w="41"/><text x="95.5686%" y="703.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (184 samples, 0.13%)</title><rect x="95.2170%" y="821" width="0.1345%" height="15" fill="rgb(235,213,41)" fg:x="130293" fg:w="184"/><text x="95.4670%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (167 samples, 0.12%)</title><rect x="95.2294%" y="805" width="0.1220%" height="15" fill="rgb(213,118,6)" fg:x="130310" fg:w="167"/><text x="95.4794%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (167 samples, 0.12%)</title><rect x="95.2294%" y="789" width="0.1220%" height="15" fill="rgb(235,44,51)" fg:x="130310" fg:w="167"/><text x="95.4794%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (167 samples, 0.12%)</title><rect x="95.2294%" y="773" width="0.1220%" height="15" fill="rgb(217,9,53)" fg:x="130310" fg:w="167"/><text x="95.4794%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (54 samples, 0.04%)</title><rect x="95.3120%" y="757" width="0.0395%" height="15" fill="rgb(237,172,34)" fg:x="130423" fg:w="54"/><text x="95.5620%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (54 samples, 0.04%)</title><rect x="95.3120%" y="741" width="0.0395%" height="15" fill="rgb(206,206,11)" fg:x="130423" fg:w="54"/><text x="95.5620%" y="751.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (18 samples, 0.01%)</title><rect x="95.3551%" y="805" width="0.0132%" height="15" fill="rgb(214,149,29)" fg:x="130482" fg:w="18"/><text x="95.6051%" y="815.50"></text></g><g><title>std::sync::poison::Flag::guard (18 samples, 0.01%)</title><rect x="95.3551%" y="789" width="0.0132%" height="15" fill="rgb(208,123,3)" fg:x="130482" fg:w="18"/><text x="95.6051%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (140 samples, 0.10%)</title><rect x="95.3697%" y="789" width="0.1023%" height="15" fill="rgb(229,126,4)" fg:x="130502" fg:w="140"/><text x="95.6197%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (140 samples, 0.10%)</title><rect x="95.3697%" y="773" width="0.1023%" height="15" fill="rgb(222,92,36)" fg:x="130502" fg:w="140"/><text x="95.6197%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (837 samples, 0.61%)</title><rect x="94.8625%" y="869" width="0.6117%" height="15" fill="rgb(216,39,41)" fg:x="129808" fg:w="837"/><text x="95.1125%" y="879.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (835 samples, 0.61%)</title><rect x="94.8640%" y="853" width="0.6102%" height="15" fill="rgb(253,127,28)" fg:x="129810" fg:w="835"/><text x="95.1140%" y="863.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (835 samples, 0.61%)</title><rect x="94.8640%" y="837" width="0.6102%" height="15" fill="rgb(249,152,51)" fg:x="129810" fg:w="835"/><text x="95.1140%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (163 samples, 0.12%)</title><rect x="95.3551%" y="821" width="0.1191%" height="15" fill="rgb(209,123,42)" fg:x="130482" fg:w="163"/><text x="95.6051%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (145 samples, 0.11%)</title><rect x="95.3682%" y="805" width="0.1060%" height="15" fill="rgb(241,118,22)" fg:x="130500" fg:w="145"/><text x="95.6182%" y="815.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (15,475 samples, 11.31%)</title><rect x="84.1696%" y="949" width="11.3090%" height="15" fill="rgb(208,25,7)" fg:x="115176" fg:w="15475"/><text x="84.4196%" y="959.50">epoxy_server::han..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (13,404 samples, 9.80%)</title><rect x="85.6831%" y="933" width="9.7955%" height="15" fill="rgb(243,144,39)" fg:x="117247" fg:w="13404"/><text x="85.9331%" y="943.50">wisp_mux::stre..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (13,150 samples, 9.61%)</title><rect x="85.8687%" y="917" width="9.6099%" height="15" fill="rgb(250,50,5)" fg:x="117501" fg:w="13150"/><text x="86.1187%" y="927.50">wisp_mux::stre..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (11,566 samples, 8.45%)</title><rect x="87.0263%" y="901" width="8.4523%" height="15" fill="rgb(207,67,11)" fg:x="119085" fg:w="11566"/><text x="87.2763%" y="911.50">wisp_mux::st..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (10,930 samples, 7.99%)</title><rect x="87.4910%" y="885" width="7.9875%" height="15" fill="rgb(245,204,40)" fg:x="119721" fg:w="10930"/><text x="87.7410%" y="895.50">wisp_mux::w..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (33,531 samples, 24.50%)</title><rect x="70.9891%" y="1013" width="24.5042%" height="15" fill="rgb(238,228,24)" fg:x="97140" fg:w="33531"/><text x="71.2391%" y="1023.50">epoxy_server::handle::wisp::handle_stre..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (33,515 samples, 24.49%)</title><rect x="71.0007%" y="997" width="24.4925%" height="15" fill="rgb(217,116,22)" fg:x="97156" fg:w="33515"/><text x="71.2507%" y="1007.50">epoxy_server::handle::wisp::handle_stre..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33,470 samples, 24.46%)</title><rect x="71.0336%" y="981" width="24.4596%" height="15" fill="rgb(234,98,12)" fg:x="97201" fg:w="33470"/><text x="71.2836%" y="991.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as c..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (33,470 samples, 24.46%)</title><rect x="71.0336%" y="965" width="24.4596%" height="15" fill="rgb(242,170,50)" fg:x="97201" fg:w="33470"/><text x="71.2836%" y="975.50">epoxy_server::handle::wisp::handle_stre..</text></g><g><title>tokio::macros::support::thread_rng_n (20 samples, 0.01%)</title><rect x="95.4786%" y="949" width="0.0146%" height="15" fill="rgb(235,7,5)" fg:x="130651" fg:w="20"/><text x="95.7286%" y="959.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (20 samples, 0.01%)</title><rect x="95.4786%" y="933" width="0.0146%" height="15" fill="rgb(241,114,28)" fg:x="130651" fg:w="20"/><text x="95.7286%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.01%)</title><rect x="95.4786%" y="917" width="0.0146%" height="15" fill="rgb(246,112,42)" fg:x="130651" fg:w="20"/><text x="95.7286%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.01%)</title><rect x="95.4786%" y="901" width="0.0146%" height="15" fill="rgb(248,228,14)" fg:x="130651" fg:w="20"/><text x="95.7286%" y="911.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (14 samples, 0.01%)</title><rect x="95.4830%" y="885" width="0.0102%" height="15" fill="rgb(208,133,18)" fg:x="130657" fg:w="14"/><text x="95.7330%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (28 samples, 0.02%)</title><rect x="95.4939%" y="933" width="0.0205%" height="15" fill="rgb(207,35,49)" fg:x="130672" fg:w="28"/><text x="95.7439%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (28 samples, 0.02%)</title><rect x="95.4939%" y="917" width="0.0205%" height="15" fill="rgb(205,68,36)" fg:x="130672" fg:w="28"/><text x="95.7439%" y="927.50"></text></g><g><title>core::mem::replace (28 samples, 0.02%)</title><rect x="95.4939%" y="901" width="0.0205%" height="15" fill="rgb(245,62,40)" fg:x="130672" fg:w="28"/><text x="95.7439%" y="911.50"></text></g><g><title>core::ptr::write (28 samples, 0.02%)</title><rect x="95.4939%" y="885" width="0.0205%" height="15" fill="rgb(228,27,24)" fg:x="130672" fg:w="28"/><text x="95.7439%" y="895.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33,853 samples, 24.74%)</title><rect x="70.7837%" y="1045" width="24.7395%" height="15" fill="rgb(253,19,12)" fg:x="96859" fg:w="33853"/><text x="71.0337%" y="1055.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as c..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (33,853 samples, 24.74%)</title><rect x="70.7837%" y="1029" width="24.7395%" height="15" fill="rgb(232,28,20)" fg:x="96859" fg:w="33853"/><text x="71.0337%" y="1039.50">epoxy_server::handle::wisp::handle_stre..</text></g><g><title>tokio::macros::support::thread_rng_n (41 samples, 0.03%)</title><rect x="95.4932%" y="1013" width="0.0300%" height="15" fill="rgb(218,35,51)" fg:x="130671" fg:w="41"/><text x="95.7432%" y="1023.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (41 samples, 0.03%)</title><rect x="95.4932%" y="997" width="0.0300%" height="15" fill="rgb(212,90,40)" fg:x="130671" fg:w="41"/><text x="95.7432%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.03%)</title><rect x="95.4932%" y="981" width="0.0300%" height="15" fill="rgb(220,172,12)" fg:x="130671" fg:w="41"/><text x="95.7432%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.03%)</title><rect x="95.4932%" y="965" width="0.0300%" height="15" fill="rgb(226,159,20)" fg:x="130671" fg:w="41"/><text x="95.7432%" y="975.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (41 samples, 0.03%)</title><rect x="95.4932%" y="949" width="0.0300%" height="15" fill="rgb(234,205,16)" fg:x="130671" fg:w="41"/><text x="95.7432%" y="959.50"></text></g><g><title>&lt;wisp_mux::packet::ConnectPacket as core::clone::Clone&gt;::clone (20 samples, 0.01%)</title><rect x="95.5232%" y="1045" width="0.0146%" height="15" fill="rgb(207,9,39)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.01%)</title><rect x="95.5232%" y="1029" width="0.0146%" height="15" fill="rgb(249,143,15)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.01%)</title><rect x="95.5232%" y="1013" width="0.0146%" height="15" fill="rgb(253,133,29)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.01%)</title><rect x="95.5232%" y="997" width="0.0146%" height="15" fill="rgb(221,187,0)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.01%)</title><rect x="95.5232%" y="981" width="0.0146%" height="15" fill="rgb(205,204,26)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.01%)</title><rect x="95.5232%" y="965" width="0.0146%" height="15" fill="rgb(224,68,54)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.01%)</title><rect x="95.5232%" y="949" width="0.0146%" height="15" fill="rgb(209,67,4)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.01%)</title><rect x="95.5232%" y="933" width="0.0146%" height="15" fill="rgb(228,229,18)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (20 samples, 0.01%)</title><rect x="95.5232%" y="917" width="0.0146%" height="15" fill="rgb(231,89,13)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (20 samples, 0.01%)</title><rect x="95.5232%" y="901" width="0.0146%" height="15" fill="rgb(210,182,18)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.01%)</title><rect x="95.5232%" y="885" width="0.0146%" height="15" fill="rgb(240,105,2)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.01%)</title><rect x="95.5232%" y="869" width="0.0146%" height="15" fill="rgb(207,170,50)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="879.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.01%)</title><rect x="95.5232%" y="853" width="0.0146%" height="15" fill="rgb(232,133,24)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="863.50"></text></g><g><title>__rust_alloc (20 samples, 0.01%)</title><rect x="95.5232%" y="837" width="0.0146%" height="15" fill="rgb(235,166,27)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="847.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (20 samples, 0.01%)</title><rect x="95.5232%" y="821" width="0.0146%" height="15" fill="rgb(209,19,13)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="831.50"></text></g><g><title>_rjem_je_malloc_default (20 samples, 0.01%)</title><rect x="95.5232%" y="805" width="0.0146%" height="15" fill="rgb(226,79,39)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="815.50"></text></g><g><title>imalloc (20 samples, 0.01%)</title><rect x="95.5232%" y="789" width="0.0146%" height="15" fill="rgb(222,163,10)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="799.50"></text></g><g><title>tsd_fetch (20 samples, 0.01%)</title><rect x="95.5232%" y="773" width="0.0146%" height="15" fill="rgb(214,44,19)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="783.50"></text></g><g><title>tsd_fetch_impl (20 samples, 0.01%)</title><rect x="95.5232%" y="757" width="0.0146%" height="15" fill="rgb(210,217,13)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="767.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (20 samples, 0.01%)</title><rect x="95.5232%" y="741" width="0.0146%" height="15" fill="rgb(237,61,54)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="751.50"></text></g><g><title>tsd_data_init (20 samples, 0.01%)</title><rect x="95.5232%" y="725" width="0.0146%" height="15" fill="rgb(226,184,24)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="735.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (20 samples, 0.01%)</title><rect x="95.5232%" y="709" width="0.0146%" height="15" fill="rgb(223,226,4)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="719.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (20 samples, 0.01%)</title><rect x="95.5232%" y="693" width="0.0146%" height="15" fill="rgb(210,26,41)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="703.50"></text></g><g><title>arena_choose (20 samples, 0.01%)</title><rect x="95.5232%" y="677" width="0.0146%" height="15" fill="rgb(220,221,6)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="687.50"></text></g><g><title>arena_choose_impl (20 samples, 0.01%)</title><rect x="95.5232%" y="661" width="0.0146%" height="15" fill="rgb(225,89,49)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="671.50"></text></g><g><title>_rjem_je_arena_choose_hard (20 samples, 0.01%)</title><rect x="95.5232%" y="645" width="0.0146%" height="15" fill="rgb(218,70,45)" fg:x="130712" fg:w="20"/><text x="95.7732%" y="655.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (18 samples, 0.01%)</title><rect x="95.5378%" y="1045" width="0.0132%" height="15" fill="rgb(238,166,21)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="1055.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (18 samples, 0.01%)</title><rect x="95.5378%" y="1029" width="0.0132%" height="15" fill="rgb(224,141,44)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="1039.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (18 samples, 0.01%)</title><rect x="95.5378%" y="1013" width="0.0132%" height="15" fill="rgb(230,12,49)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="1023.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (18 samples, 0.01%)</title><rect x="95.5378%" y="997" width="0.0132%" height="15" fill="rgb(212,174,12)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="1007.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find_or_find_insert_slot (18 samples, 0.01%)</title><rect x="95.5378%" y="981" width="0.0132%" height="15" fill="rgb(246,67,9)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="991.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (18 samples, 0.01%)</title><rect x="95.5378%" y="965" width="0.0132%" height="15" fill="rgb(239,35,23)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.01%)</title><rect x="95.5378%" y="949" width="0.0132%" height="15" fill="rgb(211,167,0)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="959.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::reserve_rehash_inner (18 samples, 0.01%)</title><rect x="95.5378%" y="933" width="0.0132%" height="15" fill="rgb(225,119,45)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::resize_inner (18 samples, 0.01%)</title><rect x="95.5378%" y="917" width="0.0132%" height="15" fill="rgb(210,162,6)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="927.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::prepare_resize (18 samples, 0.01%)</title><rect x="95.5378%" y="901" width="0.0132%" height="15" fill="rgb(208,118,35)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="911.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::fallible_with_capacity (18 samples, 0.01%)</title><rect x="95.5378%" y="885" width="0.0132%" height="15" fill="rgb(239,4,53)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="895.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::new_uninitialized (18 samples, 0.01%)</title><rect x="95.5378%" y="869" width="0.0132%" height="15" fill="rgb(213,130,21)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="879.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (18 samples, 0.01%)</title><rect x="95.5378%" y="853" width="0.0132%" height="15" fill="rgb(235,148,0)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (18 samples, 0.01%)</title><rect x="95.5378%" y="837" width="0.0132%" height="15" fill="rgb(244,224,18)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="847.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.01%)</title><rect x="95.5378%" y="821" width="0.0132%" height="15" fill="rgb(211,214,4)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="831.50"></text></g><g><title>__rust_alloc (18 samples, 0.01%)</title><rect x="95.5378%" y="805" width="0.0132%" height="15" fill="rgb(206,119,25)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="815.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (18 samples, 0.01%)</title><rect x="95.5378%" y="789" width="0.0132%" height="15" fill="rgb(243,93,47)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="799.50"></text></g><g><title>_rjem_je_malloc_default (18 samples, 0.01%)</title><rect x="95.5378%" y="773" width="0.0132%" height="15" fill="rgb(224,194,6)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="783.50"></text></g><g><title>imalloc (18 samples, 0.01%)</title><rect x="95.5378%" y="757" width="0.0132%" height="15" fill="rgb(243,229,6)" fg:x="130732" fg:w="18"/><text x="95.7878%" y="767.50"></text></g><g><title>tsd_fetch (17 samples, 0.01%)</title><rect x="95.5385%" y="741" width="0.0124%" height="15" fill="rgb(207,23,50)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="751.50"></text></g><g><title>tsd_fetch_impl (17 samples, 0.01%)</title><rect x="95.5385%" y="725" width="0.0124%" height="15" fill="rgb(253,192,32)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="735.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (17 samples, 0.01%)</title><rect x="95.5385%" y="709" width="0.0124%" height="15" fill="rgb(213,21,6)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="719.50"></text></g><g><title>tsd_data_init (17 samples, 0.01%)</title><rect x="95.5385%" y="693" width="0.0124%" height="15" fill="rgb(243,151,13)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="703.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (17 samples, 0.01%)</title><rect x="95.5385%" y="677" width="0.0124%" height="15" fill="rgb(233,165,41)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="687.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (17 samples, 0.01%)</title><rect x="95.5385%" y="661" width="0.0124%" height="15" fill="rgb(246,176,45)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="671.50"></text></g><g><title>arena_choose (17 samples, 0.01%)</title><rect x="95.5385%" y="645" width="0.0124%" height="15" fill="rgb(217,170,52)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="655.50"></text></g><g><title>arena_choose_impl (17 samples, 0.01%)</title><rect x="95.5385%" y="629" width="0.0124%" height="15" fill="rgb(214,203,54)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="639.50"></text></g><g><title>_rjem_je_arena_choose_hard (17 samples, 0.01%)</title><rect x="95.5385%" y="613" width="0.0124%" height="15" fill="rgb(248,215,49)" fg:x="130733" fg:w="17"/><text x="95.7885%" y="623.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (34,003 samples, 24.85%)</title><rect x="70.7033%" y="1061" width="24.8491%" height="15" fill="rgb(208,46,10)" fg:x="96749" fg:w="34003"/><text x="70.9533%" y="1071.50">epoxy_server::handle::wisp::handle_strea..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (91,015 samples, 66.51%)</title><rect x="29.0453%" y="1141" width="66.5130%" height="15" fill="rgb(254,5,31)" fg:x="39745" fg:w="91015"/><text x="29.2953%" y="1151.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (91,015 samples, 66.51%)</title><rect x="29.0453%" y="1125" width="66.5130%" height="15" fill="rgb(222,104,33)" fg:x="39745" fg:w="91015"/><text x="29.2953%" y="1135.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (91,015 samples, 66.51%)</title><rect x="29.0453%" y="1109" width="66.5130%" height="15" fill="rgb(248,49,16)" fg:x="39745" fg:w="91015"/><text x="29.2953%" y="1119.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (91,011 samples, 66.51%)</title><rect x="29.0482%" y="1093" width="66.5100%" height="15" fill="rgb(232,198,41)" fg:x="39749" fg:w="91011"/><text x="29.2982%" y="1103.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (91,011 samples, 66.51%)</title><rect x="29.0482%" y="1077" width="66.5100%" height="15" fill="rgb(214,125,3)" fg:x="39749" fg:w="91011"/><text x="29.2982%" y="1087.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::harness::poll_future (91,016 samples, 66.51%)</title><rect x="29.0453%" y="1205" width="66.5137%" height="15" fill="rgb(229,220,28)" fg:x="39745" fg:w="91016"/><text x="29.2953%" y="1215.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (91,016 samples, 66.51%)</title><rect x="29.0453%" y="1189" width="66.5137%" height="15" fill="rgb(222,64,37)" fg:x="39745" fg:w="91016"/><text x="29.2953%" y="1199.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (91,016 samples, 66.51%)</title><rect x="29.0453%" y="1173" width="66.5137%" height="15" fill="rgb(249,184,13)" fg:x="39745" fg:w="91016"/><text x="29.2953%" y="1183.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (91,016 samples, 66.51%)</title><rect x="29.0453%" y="1157" width="66.5137%" height="15" fill="rgb(252,176,6)" fg:x="39745" fg:w="91016"/><text x="29.2953%" y="1167.50">std::panicking::try::do_call</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.01%)</title><rect x="95.5619%" y="1173" width="0.0124%" height="15" fill="rgb(228,153,7)" fg:x="130765" fg:w="17"/><text x="95.8119%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.01%)</title><rect x="95.5619%" y="1157" width="0.0124%" height="15" fill="rgb(242,193,5)" fg:x="130765" fg:w="17"/><text x="95.8119%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (43 samples, 0.03%)</title><rect x="95.5590%" y="1205" width="0.0314%" height="15" fill="rgb(232,140,9)" fg:x="130761" fg:w="43"/><text x="95.8090%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (43 samples, 0.03%)</title><rect x="95.5590%" y="1189" width="0.0314%" height="15" fill="rgb(213,222,16)" fg:x="130761" fg:w="43"/><text x="95.8090%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (21 samples, 0.02%)</title><rect x="95.5751%" y="1173" width="0.0153%" height="15" fill="rgb(222,75,50)" fg:x="130783" fg:w="21"/><text x="95.8251%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (27 samples, 0.02%)</title><rect x="95.5911%" y="1173" width="0.0197%" height="15" fill="rgb(205,180,2)" fg:x="130805" fg:w="27"/><text x="95.8411%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="95.5911%" y="1157" width="0.0197%" height="15" fill="rgb(216,34,7)" fg:x="130805" fg:w="27"/><text x="95.8411%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (38 samples, 0.03%)</title><rect x="95.5904%" y="1205" width="0.0278%" height="15" fill="rgb(253,16,32)" fg:x="130804" fg:w="38"/><text x="95.8404%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (38 samples, 0.03%)</title><rect x="95.5904%" y="1189" width="0.0278%" height="15" fill="rgb(208,97,28)" fg:x="130804" fg:w="38"/><text x="95.8404%" y="1199.50"></text></g><g><title>tokio::runtime::coop::budget (91,841 samples, 67.12%)</title><rect x="28.5023%" y="1333" width="67.1166%" height="15" fill="rgb(225,92,11)" fg:x="39002" fg:w="91841"/><text x="28.7523%" y="1343.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (91,841 samples, 67.12%)</title><rect x="28.5023%" y="1317" width="67.1166%" height="15" fill="rgb(243,38,12)" fg:x="39002" fg:w="91841"/><text x="28.7523%" y="1327.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (91,818 samples, 67.10%)</title><rect x="28.5191%" y="1301" width="67.0998%" height="15" fill="rgb(208,139,16)" fg:x="39025" fg:w="91818"/><text x="28.7691%" y="1311.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (91,738 samples, 67.04%)</title><rect x="28.5776%" y="1285" width="67.0413%" height="15" fill="rgb(227,24,9)" fg:x="39105" fg:w="91738"/><text x="28.8276%" y="1295.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (91,738 samples, 67.04%)</title><rect x="28.5776%" y="1269" width="67.0413%" height="15" fill="rgb(206,62,11)" fg:x="39105" fg:w="91738"/><text x="28.8276%" y="1279.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (91,711 samples, 67.02%)</title><rect x="28.5973%" y="1253" width="67.0216%" height="15" fill="rgb(228,134,27)" fg:x="39132" fg:w="91711"/><text x="28.8473%" y="1263.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (91,711 samples, 67.02%)</title><rect x="28.5973%" y="1237" width="67.0216%" height="15" fill="rgb(205,55,33)" fg:x="39132" fg:w="91711"/><text x="28.8473%" y="1247.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (91,145 samples, 66.61%)</title><rect x="29.0109%" y="1221" width="66.6080%" height="15" fill="rgb(243,75,43)" fg:x="39698" fg:w="91145"/><text x="29.2609%" y="1231.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>core::sync::atomic::AtomicUsize::load (105 samples, 0.08%)</title><rect x="95.6357%" y="1269" width="0.0767%" height="15" fill="rgb(223,27,42)" fg:x="130866" fg:w="105"/><text x="95.8857%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (105 samples, 0.08%)</title><rect x="95.6357%" y="1253" width="0.0767%" height="15" fill="rgb(232,189,33)" fg:x="130866" fg:w="105"/><text x="95.8857%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (62 samples, 0.05%)</title><rect x="95.7183%" y="1269" width="0.0453%" height="15" fill="rgb(210,9,39)" fg:x="130979" fg:w="62"/><text x="95.9683%" y="1279.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (46 samples, 0.03%)</title><rect x="95.7300%" y="1253" width="0.0336%" height="15" fill="rgb(242,85,26)" fg:x="130995" fg:w="46"/><text x="95.9800%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (46 samples, 0.03%)</title><rect x="95.7300%" y="1237" width="0.0336%" height="15" fill="rgb(248,44,4)" fg:x="130995" fg:w="46"/><text x="95.9800%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (46 samples, 0.03%)</title><rect x="95.7300%" y="1221" width="0.0336%" height="15" fill="rgb(250,96,46)" fg:x="130995" fg:w="46"/><text x="95.9800%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (190 samples, 0.14%)</title><rect x="95.6299%" y="1301" width="0.1389%" height="15" fill="rgb(229,116,26)" fg:x="130858" fg:w="190"/><text x="95.8799%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (190 samples, 0.14%)</title><rect x="95.6299%" y="1285" width="0.1389%" height="15" fill="rgb(246,94,34)" fg:x="130858" fg:w="190"/><text x="95.8799%" y="1295.50"></text></g><g><title>syscall (17 samples, 0.01%)</title><rect x="95.7687%" y="1301" width="0.0124%" height="15" fill="rgb(251,73,21)" fg:x="131048" fg:w="17"/><text x="96.0187%" y="1311.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="95.7980%" y="1173" width="0.0153%" height="15" fill="rgb(254,121,25)" fg:x="131088" fg:w="21"/><text x="96.0480%" y="1183.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (48 samples, 0.04%)</title><rect x="95.7811%" y="1301" width="0.0351%" height="15" fill="rgb(215,161,49)" fg:x="131065" fg:w="48"/><text x="96.0311%" y="1311.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (46 samples, 0.03%)</title><rect x="95.7826%" y="1285" width="0.0336%" height="15" fill="rgb(221,43,13)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1295.50"></text></g><g><title>mio::waker::Waker::wake (46 samples, 0.03%)</title><rect x="95.7826%" y="1269" width="0.0336%" height="15" fill="rgb(249,5,37)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1279.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (46 samples, 0.03%)</title><rect x="95.7826%" y="1253" width="0.0336%" height="15" fill="rgb(226,25,44)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1263.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (46 samples, 0.03%)</title><rect x="95.7826%" y="1237" width="0.0336%" height="15" fill="rgb(238,189,16)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1247.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (46 samples, 0.03%)</title><rect x="95.7826%" y="1221" width="0.0336%" height="15" fill="rgb(251,186,8)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1231.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (46 samples, 0.03%)</title><rect x="95.7826%" y="1205" width="0.0336%" height="15" fill="rgb(254,34,31)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1215.50"></text></g><g><title>write (46 samples, 0.03%)</title><rect x="95.7826%" y="1189" width="0.0336%" height="15" fill="rgb(225,215,27)" fg:x="131067" fg:w="46"/><text x="96.0326%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.01%)</title><rect x="95.8345%" y="1269" width="0.0110%" height="15" fill="rgb(221,192,48)" fg:x="131138" fg:w="15"/><text x="96.0845%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.01%)</title><rect x="95.8345%" y="1253" width="0.0110%" height="15" fill="rgb(219,137,20)" fg:x="131138" fg:w="15"/><text x="96.0845%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (53 samples, 0.04%)</title><rect x="95.8191%" y="1301" width="0.0387%" height="15" fill="rgb(219,84,11)" fg:x="131117" fg:w="53"/><text x="96.0691%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (53 samples, 0.04%)</title><rect x="95.8191%" y="1285" width="0.0387%" height="15" fill="rgb(224,10,23)" fg:x="131117" fg:w="53"/><text x="96.0691%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (92,206 samples, 67.38%)</title><rect x="28.4943%" y="1349" width="67.3833%" height="15" fill="rgb(248,22,39)" fg:x="38991" fg:w="92206"/><text x="28.7443%" y="1359.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (343 samples, 0.25%)</title><rect x="95.6269%" y="1333" width="0.2507%" height="15" fill="rgb(212,154,20)" fg:x="130854" fg:w="343"/><text x="95.8769%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (339 samples, 0.25%)</title><rect x="95.6299%" y="1317" width="0.2477%" height="15" fill="rgb(236,199,50)" fg:x="130858" fg:w="339"/><text x="95.8799%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (27 samples, 0.02%)</title><rect x="95.8579%" y="1301" width="0.0197%" height="15" fill="rgb(211,9,17)" fg:x="131170" fg:w="27"/><text x="96.1079%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (25 samples, 0.02%)</title><rect x="95.8593%" y="1285" width="0.0183%" height="15" fill="rgb(243,216,36)" fg:x="131172" fg:w="25"/><text x="96.1093%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (15 samples, 0.01%)</title><rect x="95.9295%" y="1269" width="0.0110%" height="15" fill="rgb(250,2,10)" fg:x="131268" fg:w="15"/><text x="96.1795%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="95.9295%" y="1253" width="0.0110%" height="15" fill="rgb(226,50,48)" fg:x="131268" fg:w="15"/><text x="96.1795%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (28 samples, 0.02%)</title><rect x="95.9215%" y="1317" width="0.0205%" height="15" fill="rgb(243,81,16)" fg:x="131257" fg:w="28"/><text x="96.1715%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (28 samples, 0.02%)</title><rect x="95.9215%" y="1301" width="0.0205%" height="15" fill="rgb(250,14,2)" fg:x="131257" fg:w="28"/><text x="96.1715%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (28 samples, 0.02%)</title><rect x="95.9215%" y="1285" width="0.0205%" height="15" fill="rgb(233,135,29)" fg:x="131257" fg:w="28"/><text x="96.1715%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (33 samples, 0.02%)</title><rect x="95.9215%" y="1333" width="0.0241%" height="15" fill="rgb(224,64,43)" fg:x="131257" fg:w="33"/><text x="96.1715%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (79 samples, 0.06%)</title><rect x="95.9456%" y="1333" width="0.0577%" height="15" fill="rgb(238,84,13)" fg:x="131290" fg:w="79"/><text x="96.1956%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (76 samples, 0.06%)</title><rect x="95.9478%" y="1317" width="0.0555%" height="15" fill="rgb(253,48,26)" fg:x="131293" fg:w="76"/><text x="96.1978%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (173 samples, 0.13%)</title><rect x="95.8776%" y="1349" width="0.1264%" height="15" fill="rgb(205,223,31)" fg:x="131197" fg:w="173"/><text x="96.1276%" y="1359.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.02%)</title><rect x="96.1137%" y="1301" width="0.0248%" height="15" fill="rgb(221,41,32)" fg:x="131520" fg:w="34"/><text x="96.3637%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (34 samples, 0.02%)</title><rect x="96.1137%" y="1285" width="0.0248%" height="15" fill="rgb(213,158,31)" fg:x="131520" fg:w="34"/><text x="96.3637%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (34 samples, 0.02%)</title><rect x="96.1137%" y="1269" width="0.0248%" height="15" fill="rgb(245,126,43)" fg:x="131520" fg:w="34"/><text x="96.3637%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (195 samples, 0.14%)</title><rect x="96.1451%" y="1301" width="0.1425%" height="15" fill="rgb(227,7,22)" fg:x="131563" fg:w="195"/><text x="96.3951%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (195 samples, 0.14%)</title><rect x="96.1451%" y="1285" width="0.1425%" height="15" fill="rgb(252,90,44)" fg:x="131563" fg:w="195"/><text x="96.3951%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (37 samples, 0.03%)</title><rect x="96.2876%" y="1301" width="0.0270%" height="15" fill="rgb(253,91,0)" fg:x="131758" fg:w="37"/><text x="96.5376%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (37 samples, 0.03%)</title><rect x="96.2876%" y="1285" width="0.0270%" height="15" fill="rgb(252,175,49)" fg:x="131758" fg:w="37"/><text x="96.5376%" y="1295.50"></text></g><g><title>core::ptr::read (37 samples, 0.03%)</title><rect x="96.2876%" y="1269" width="0.0270%" height="15" fill="rgb(246,150,1)" fg:x="131758" fg:w="37"/><text x="96.5376%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (317 samples, 0.23%)</title><rect x="96.0932%" y="1317" width="0.2317%" height="15" fill="rgb(241,192,25)" fg:x="131492" fg:w="317"/><text x="96.3432%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (348 samples, 0.25%)</title><rect x="96.0757%" y="1333" width="0.2543%" height="15" fill="rgb(239,187,11)" fg:x="131468" fg:w="348"/><text x="96.3257%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (15 samples, 0.01%)</title><rect x="96.3358%" y="1301" width="0.0110%" height="15" fill="rgb(218,202,51)" fg:x="131824" fg:w="15"/><text x="96.5858%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="96.3358%" y="1285" width="0.0110%" height="15" fill="rgb(225,176,8)" fg:x="131824" fg:w="15"/><text x="96.5858%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="96.3358%" y="1269" width="0.0110%" height="15" fill="rgb(219,122,41)" fg:x="131824" fg:w="15"/><text x="96.5858%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (20 samples, 0.01%)</title><rect x="96.3336%" y="1333" width="0.0146%" height="15" fill="rgb(248,140,20)" fg:x="131821" fg:w="20"/><text x="96.5836%" y="1343.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (18 samples, 0.01%)</title><rect x="96.3351%" y="1317" width="0.0132%" height="15" fill="rgb(245,41,37)" fg:x="131823" fg:w="18"/><text x="96.5851%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (474 samples, 0.35%)</title><rect x="96.0040%" y="1349" width="0.3464%" height="15" fill="rgb(235,82,39)" fg:x="131370" fg:w="474"/><text x="96.2540%" y="1359.50"></text></g><g><title>[libc.so.6] (123,741 samples, 90.43%)</title><rect x="5.9369%" y="2021" width="90.4288%" height="15" fill="rgb(230,108,42)" fg:x="8124" fg:w="123741"/><text x="6.1869%" y="2031.50">[libc.so.6]</text></g><g><title>[libc.so.6] (123,736 samples, 90.43%)</title><rect x="5.9406%" y="2005" width="90.4252%" height="15" fill="rgb(215,150,50)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="2015.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1989" width="90.4252%" height="15" fill="rgb(233,212,5)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1999.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1973" width="90.4252%" height="15" fill="rgb(245,80,22)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1983.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1957" width="90.4252%" height="15" fill="rgb(238,129,16)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1967.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1941" width="90.4252%" height="15" fill="rgb(240,19,0)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1951.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1925" width="90.4252%" height="15" fill="rgb(232,42,35)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1935.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1909" width="90.4252%" height="15" fill="rgb(223,130,24)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1893" width="90.4252%" height="15" fill="rgb(237,16,22)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1877" width="90.4252%" height="15" fill="rgb(248,192,20)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1887.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1861" width="90.4252%" height="15" fill="rgb(233,167,2)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1871.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1845" width="90.4252%" height="15" fill="rgb(252,71,44)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1855.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1829" width="90.4252%" height="15" fill="rgb(238,37,47)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1839.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1813" width="90.4252%" height="15" fill="rgb(214,202,54)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1823.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (123,736 samples, 90.43%)</title><rect x="5.9406%" y="1797" width="90.4252%" height="15" fill="rgb(254,165,40)" fg:x="8129" fg:w="123736"/><text x="6.1906%" y="1807.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1781" width="90.4113%" height="15" fill="rgb(246,173,38)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1791.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1765" width="90.4113%" height="15" fill="rgb(215,3,27)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1775.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1749" width="90.4113%" height="15" fill="rgb(239,169,51)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1759.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1733" width="90.4113%" height="15" fill="rgb(212,5,25)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1743.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1717" width="90.4113%" height="15" fill="rgb(243,45,17)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1727.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1701" width="90.4113%" height="15" fill="rgb(242,97,9)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1711.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1685" width="90.4113%" height="15" fill="rgb(228,71,31)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1695.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1669" width="90.4113%" height="15" fill="rgb(252,184,16)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1679.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1653" width="90.4113%" height="15" fill="rgb(236,169,46)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1663.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1637" width="90.4113%" height="15" fill="rgb(207,17,47)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1647.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1621" width="90.4113%" height="15" fill="rgb(206,201,28)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1631.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1605" width="90.4113%" height="15" fill="rgb(224,184,23)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1615.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1589" width="90.4113%" height="15" fill="rgb(208,139,48)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1599.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1573" width="90.4113%" height="15" fill="rgb(208,130,10)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1583.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1557" width="90.4113%" height="15" fill="rgb(211,213,45)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1567.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1541" width="90.4113%" height="15" fill="rgb(235,100,30)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1551.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1525" width="90.4113%" height="15" fill="rgb(206,144,31)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1535.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1509" width="90.4113%" height="15" fill="rgb(224,200,26)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1519.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1493" width="90.4113%" height="15" fill="rgb(247,104,53)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1503.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1477" width="90.4113%" height="15" fill="rgb(220,14,17)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1461" width="90.4113%" height="15" fill="rgb(230,140,40)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1471.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1445" width="90.4113%" height="15" fill="rgb(229,2,41)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1455.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1429" width="90.4113%" height="15" fill="rgb(232,89,16)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1439.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1413" width="90.4113%" height="15" fill="rgb(247,59,52)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1423.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1397" width="90.4113%" height="15" fill="rgb(226,110,21)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1407.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1381" width="90.4113%" height="15" fill="rgb(224,176,43)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1391.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (123,717 samples, 90.41%)</title><rect x="5.9545%" y="1365" width="90.4113%" height="15" fill="rgb(221,73,6)" fg:x="8148" fg:w="123717"/><text x="6.2045%" y="1375.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (21 samples, 0.02%)</title><rect x="96.3504%" y="1349" width="0.0153%" height="15" fill="rgb(232,78,19)" fg:x="131844" fg:w="21"/><text x="96.6004%" y="1359.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (208 samples, 0.15%)</title><rect x="97.4269%" y="2005" width="0.1520%" height="15" fill="rgb(233,112,48)" fg:x="133317" fg:w="208"/><text x="97.6769%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (35 samples, 0.03%)</title><rect x="97.5533%" y="1989" width="0.0256%" height="15" fill="rgb(243,131,47)" fg:x="133490" fg:w="35"/><text x="97.8033%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (35 samples, 0.03%)</title><rect x="97.5533%" y="1973" width="0.0256%" height="15" fill="rgb(226,51,1)" fg:x="133490" fg:w="35"/><text x="97.8033%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.02%)</title><rect x="97.5555%" y="1957" width="0.0234%" height="15" fill="rgb(247,58,7)" fg:x="133493" fg:w="32"/><text x="97.8055%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.02%)</title><rect x="97.5555%" y="1941" width="0.0234%" height="15" fill="rgb(209,7,32)" fg:x="133493" fg:w="32"/><text x="97.8055%" y="1951.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.02%)</title><rect x="97.5555%" y="1925" width="0.0234%" height="15" fill="rgb(209,39,41)" fg:x="133493" fg:w="32"/><text x="97.8055%" y="1935.50"></text></g><g><title>__rust_dealloc (32 samples, 0.02%)</title><rect x="97.5555%" y="1909" width="0.0234%" height="15" fill="rgb(226,182,46)" fg:x="133493" fg:w="32"/><text x="97.8055%" y="1919.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (32 samples, 0.02%)</title><rect x="97.5555%" y="1893" width="0.0234%" height="15" fill="rgb(230,219,10)" fg:x="133493" fg:w="32"/><text x="97.8055%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (17 samples, 0.01%)</title><rect x="97.5818%" y="2005" width="0.0124%" height="15" fill="rgb(227,175,30)" fg:x="133529" fg:w="17"/><text x="97.8318%" y="2015.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (30 samples, 0.02%)</title><rect x="97.5942%" y="2005" width="0.0219%" height="15" fill="rgb(217,2,50)" fg:x="133546" fg:w="30"/><text x="97.8442%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (63 samples, 0.05%)</title><rect x="97.6220%" y="2005" width="0.0460%" height="15" fill="rgb(229,160,0)" fg:x="133584" fg:w="63"/><text x="97.8720%" y="2015.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (68 samples, 0.05%)</title><rect x="97.6680%" y="2005" width="0.0497%" height="15" fill="rgb(207,78,37)" fg:x="133647" fg:w="68"/><text x="97.9180%" y="2015.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="97.7177%" y="2005" width="0.0153%" height="15" fill="rgb(225,57,0)" fg:x="133715" fg:w="21"/><text x="97.9677%" y="2015.50"></text></g><g><title>_rjem_je_sdallocx_default (18 samples, 0.01%)</title><rect x="97.7835%" y="2005" width="0.0132%" height="15" fill="rgb(232,154,2)" fg:x="133805" fg:w="18"/><text x="98.0335%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (24 samples, 0.02%)</title><rect x="97.8084%" y="2005" width="0.0175%" height="15" fill="rgb(241,212,25)" fg:x="133839" fg:w="24"/><text x="98.0584%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (31 samples, 0.02%)</title><rect x="97.8259%" y="2005" width="0.0227%" height="15" fill="rgb(226,69,20)" fg:x="133863" fg:w="31"/><text x="98.0759%" y="2015.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (31 samples, 0.02%)</title><rect x="97.8486%" y="2005" width="0.0227%" height="15" fill="rgb(247,184,54)" fg:x="133894" fg:w="31"/><text x="98.0986%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (42 samples, 0.03%)</title><rect x="97.8887%" y="2005" width="0.0307%" height="15" fill="rgb(210,145,0)" fg:x="133949" fg:w="42"/><text x="98.1387%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="97.9194%" y="2005" width="0.0168%" height="15" fill="rgb(253,82,12)" fg:x="133991" fg:w="23"/><text x="98.1694%" y="2015.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (21 samples, 0.02%)</title><rect x="97.9370%" y="2005" width="0.0153%" height="15" fill="rgb(245,42,11)" fg:x="134015" fg:w="21"/><text x="98.1870%" y="2015.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (24 samples, 0.02%)</title><rect x="97.9669%" y="2005" width="0.0175%" height="15" fill="rgb(219,147,32)" fg:x="134056" fg:w="24"/><text x="98.2169%" y="2015.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (21 samples, 0.02%)</title><rect x="97.9845%" y="2005" width="0.0153%" height="15" fill="rgb(246,12,7)" fg:x="134080" fg:w="21"/><text x="98.2345%" y="2015.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (66 samples, 0.05%)</title><rect x="98.0013%" y="2005" width="0.0482%" height="15" fill="rgb(243,50,9)" fg:x="134103" fg:w="66"/><text x="98.2513%" y="2015.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (37 samples, 0.03%)</title><rect x="98.0605%" y="2005" width="0.0270%" height="15" fill="rgb(219,149,6)" fg:x="134184" fg:w="37"/><text x="98.3105%" y="2015.50"></text></g><g><title>recv (23 samples, 0.02%)</title><rect x="98.1029%" y="2005" width="0.0168%" height="15" fill="rgb(241,51,42)" fg:x="134242" fg:w="23"/><text x="98.3529%" y="2015.50"></text></g><g><title>std::time::Instant::elapsed (29 samples, 0.02%)</title><rect x="98.1211%" y="2005" width="0.0212%" height="15" fill="rgb(226,128,27)" fg:x="134267" fg:w="29"/><text x="98.3711%" y="2015.50"></text></g><g><title>syscall (62 samples, 0.05%)</title><rect x="98.1423%" y="2005" width="0.0453%" height="15" fill="rgb(244,144,4)" fg:x="134296" fg:w="62"/><text x="98.3923%" y="2015.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (46 samples, 0.03%)</title><rect x="98.1876%" y="2005" width="0.0336%" height="15" fill="rgb(221,4,13)" fg:x="134358" fg:w="46"/><text x="98.4376%" y="2015.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (65 samples, 0.05%)</title><rect x="98.2381%" y="2005" width="0.0475%" height="15" fill="rgb(208,170,28)" fg:x="134427" fg:w="65"/><text x="98.4881%" y="2015.50"></text></g><g><title>tokio::runtime::task::raw::poll (18 samples, 0.01%)</title><rect x="98.2987%" y="2005" width="0.0132%" height="15" fill="rgb(226,131,13)" fg:x="134510" fg:w="18"/><text x="98.5487%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (27 samples, 0.02%)</title><rect x="98.3806%" y="1989" width="0.0197%" height="15" fill="rgb(215,72,41)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (27 samples, 0.02%)</title><rect x="98.3806%" y="1973" width="0.0197%" height="15" fill="rgb(243,108,20)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (27 samples, 0.02%)</title><rect x="98.3806%" y="1957" width="0.0197%" height="15" fill="rgb(230,189,17)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1967.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.02%)</title><rect x="98.3806%" y="1941" width="0.0197%" height="15" fill="rgb(220,50,17)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1951.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (27 samples, 0.02%)</title><rect x="98.3806%" y="1925" width="0.0197%" height="15" fill="rgb(248,152,48)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (27 samples, 0.02%)</title><rect x="98.3806%" y="1909" width="0.0197%" height="15" fill="rgb(244,91,11)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1919.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (27 samples, 0.02%)</title><rect x="98.3806%" y="1893" width="0.0197%" height="15" fill="rgb(220,157,5)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1903.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (27 samples, 0.02%)</title><rect x="98.3806%" y="1877" width="0.0197%" height="15" fill="rgb(253,137,8)" fg:x="134622" fg:w="27"/><text x="98.6306%" y="1887.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (149 samples, 0.11%)</title><rect x="98.3214%" y="2005" width="0.1089%" height="15" fill="rgb(217,137,51)" fg:x="134541" fg:w="149"/><text x="98.5714%" y="2015.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (32 samples, 0.02%)</title><rect x="98.4069%" y="1989" width="0.0234%" height="15" fill="rgb(218,209,53)" fg:x="134658" fg:w="32"/><text x="98.6569%" y="1999.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (30 samples, 0.02%)</title><rect x="98.4083%" y="1973" width="0.0219%" height="15" fill="rgb(249,137,25)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (30 samples, 0.02%)</title><rect x="98.4083%" y="1957" width="0.0219%" height="15" fill="rgb(239,155,26)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (30 samples, 0.02%)</title><rect x="98.4083%" y="1941" width="0.0219%" height="15" fill="rgb(227,85,46)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (30 samples, 0.02%)</title><rect x="98.4083%" y="1925" width="0.0219%" height="15" fill="rgb(251,107,43)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.02%)</title><rect x="98.4083%" y="1909" width="0.0219%" height="15" fill="rgb(234,170,33)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (30 samples, 0.02%)</title><rect x="98.4083%" y="1893" width="0.0219%" height="15" fill="rgb(206,29,35)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1903.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (30 samples, 0.02%)</title><rect x="98.4083%" y="1877" width="0.0219%" height="15" fill="rgb(227,138,25)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1887.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (30 samples, 0.02%)</title><rect x="98.4083%" y="1861" width="0.0219%" height="15" fill="rgb(249,131,35)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1871.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (30 samples, 0.02%)</title><rect x="98.4083%" y="1845" width="0.0219%" height="15" fill="rgb(239,6,40)" fg:x="134660" fg:w="30"/><text x="98.6583%" y="1855.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (158 samples, 0.12%)</title><rect x="98.4303%" y="2005" width="0.1155%" height="15" fill="rgb(246,136,47)" fg:x="134690" fg:w="158"/><text x="98.6803%" y="2015.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (31 samples, 0.02%)</title><rect x="98.5231%" y="1989" width="0.0227%" height="15" fill="rgb(253,58,26)" fg:x="134817" fg:w="31"/><text x="98.7731%" y="1999.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (31 samples, 0.02%)</title><rect x="98.5231%" y="1973" width="0.0227%" height="15" fill="rgb(237,141,10)" fg:x="134817" fg:w="31"/><text x="98.7731%" y="1983.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (124 samples, 0.09%)</title><rect x="98.5457%" y="2005" width="0.0906%" height="15" fill="rgb(234,156,12)" fg:x="134848" fg:w="124"/><text x="98.7957%" y="2015.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (124 samples, 0.09%)</title><rect x="98.5457%" y="1989" width="0.0906%" height="15" fill="rgb(243,224,36)" fg:x="134848" fg:w="124"/><text x="98.7957%" y="1999.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (124 samples, 0.09%)</title><rect x="98.5457%" y="1973" width="0.0906%" height="15" fill="rgb(205,229,51)" fg:x="134848" fg:w="124"/><text x="98.7957%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (41 samples, 0.03%)</title><rect x="98.6407%" y="2005" width="0.0300%" height="15" fill="rgb(223,189,4)" fg:x="134978" fg:w="41"/><text x="98.8907%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (54 samples, 0.04%)</title><rect x="98.6707%" y="2005" width="0.0395%" height="15" fill="rgb(249,167,54)" fg:x="135019" fg:w="54"/><text x="98.9207%" y="2015.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (64 samples, 0.05%)</title><rect x="98.7102%" y="2005" width="0.0468%" height="15" fill="rgb(218,34,28)" fg:x="135073" fg:w="64"/><text x="98.9602%" y="2015.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (153 samples, 0.11%)</title><rect x="98.7606%" y="2005" width="0.1118%" height="15" fill="rgb(232,109,42)" fg:x="135142" fg:w="153"/><text x="99.0106%" y="2015.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (32 samples, 0.02%)</title><rect x="98.8490%" y="1989" width="0.0234%" height="15" fill="rgb(248,214,46)" fg:x="135263" fg:w="32"/><text x="99.0990%" y="1999.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="98.8490%" y="1973" width="0.0234%" height="15" fill="rgb(244,216,40)" fg:x="135263" fg:w="32"/><text x="99.0990%" y="1983.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (32 samples, 0.02%)</title><rect x="98.8490%" y="1957" width="0.0234%" height="15" fill="rgb(231,226,31)" fg:x="135263" fg:w="32"/><text x="99.0990%" y="1967.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (20 samples, 0.01%)</title><rect x="98.8578%" y="1941" width="0.0146%" height="15" fill="rgb(238,38,43)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (20 samples, 0.01%)</title><rect x="98.8578%" y="1925" width="0.0146%" height="15" fill="rgb(208,88,43)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1935.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (20 samples, 0.01%)</title><rect x="98.8578%" y="1909" width="0.0146%" height="15" fill="rgb(205,136,37)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt;&gt; (20 samples, 0.01%)</title><rect x="98.8578%" y="1893" width="0.0146%" height="15" fill="rgb(237,34,14)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (20 samples, 0.01%)</title><rect x="98.8578%" y="1877" width="0.0146%" height="15" fill="rgb(236,193,44)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (20 samples, 0.01%)</title><rect x="98.8578%" y="1861" width="0.0146%" height="15" fill="rgb(231,48,10)" fg:x="135275" fg:w="20"/><text x="99.1078%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="98.8622%" y="1845" width="0.0102%" height="15" fill="rgb(213,141,34)" fg:x="135281" fg:w="14"/><text x="99.1122%" y="1855.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="98.8622%" y="1829" width="0.0102%" height="15" fill="rgb(249,130,34)" fg:x="135281" fg:w="14"/><text x="99.1122%" y="1839.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="98.8622%" y="1813" width="0.0102%" height="15" fill="rgb(219,42,41)" fg:x="135281" fg:w="14"/><text x="99.1122%" y="1823.50"></text></g><g><title>__rust_dealloc (14 samples, 0.01%)</title><rect x="98.8622%" y="1797" width="0.0102%" height="15" fill="rgb(224,100,54)" fg:x="135281" fg:w="14"/><text x="99.1122%" y="1807.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (14 samples, 0.01%)</title><rect x="98.8622%" y="1781" width="0.0102%" height="15" fill="rgb(229,200,27)" fg:x="135281" fg:w="14"/><text x="99.1122%" y="1791.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (44 samples, 0.03%)</title><rect x="98.8753%" y="2005" width="0.0322%" height="15" fill="rgb(217,118,10)" fg:x="135299" fg:w="44"/><text x="99.1253%" y="2015.50"></text></g><g><title>[unknown] (3,487 samples, 2.55%)</title><rect x="96.3658%" y="2021" width="2.5483%" height="15" fill="rgb(206,22,3)" fg:x="131865" fg:w="3487"/><text x="96.6158%" y="2031.50">[u..</text></g><g><title>__send (15 samples, 0.01%)</title><rect x="98.9140%" y="2021" width="0.0110%" height="15" fill="rgb(232,163,46)" fg:x="135352" fg:w="15"/><text x="99.1640%" y="2031.50"></text></g><g><title>_rjem_je_sdallocx_default (38 samples, 0.03%)</title><rect x="98.9352%" y="2021" width="0.0278%" height="15" fill="rgb(206,95,13)" fg:x="135381" fg:w="38"/><text x="99.1852%" y="2031.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::process_wisp_message::{{closure}}&gt; (29 samples, 0.02%)</title><rect x="98.9864%" y="2021" width="0.0212%" height="15" fill="rgb(253,154,18)" fg:x="135451" fg:w="29"/><text x="99.2364%" y="2031.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (83 samples, 0.06%)</title><rect x="99.0412%" y="1893" width="0.0607%" height="15" fill="rgb(219,32,23)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1903.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (83 samples, 0.06%)</title><rect x="99.0412%" y="1877" width="0.0607%" height="15" fill="rgb(230,191,45)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1887.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (83 samples, 0.06%)</title><rect x="99.0412%" y="1861" width="0.0607%" height="15" fill="rgb(229,64,36)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (83 samples, 0.06%)</title><rect x="99.0412%" y="1845" width="0.0607%" height="15" fill="rgb(205,129,25)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1855.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (83 samples, 0.06%)</title><rect x="99.0412%" y="1829" width="0.0607%" height="15" fill="rgb(254,112,7)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1839.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (83 samples, 0.06%)</title><rect x="99.0412%" y="1813" width="0.0607%" height="15" fill="rgb(226,53,48)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1823.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (83 samples, 0.06%)</title><rect x="99.0412%" y="1797" width="0.0607%" height="15" fill="rgb(214,153,38)" fg:x="135526" fg:w="83"/><text x="99.2912%" y="1807.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (193 samples, 0.14%)</title><rect x="99.0412%" y="1909" width="0.1410%" height="15" fill="rgb(243,101,7)" fg:x="135526" fg:w="193"/><text x="99.2912%" y="1919.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (108 samples, 0.08%)</title><rect x="99.1033%" y="1893" width="0.0789%" height="15" fill="rgb(240,140,22)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1903.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (108 samples, 0.08%)</title><rect x="99.1033%" y="1877" width="0.0789%" height="15" fill="rgb(235,114,2)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1887.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (108 samples, 0.08%)</title><rect x="99.1033%" y="1861" width="0.0789%" height="15" fill="rgb(242,59,12)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (108 samples, 0.08%)</title><rect x="99.1033%" y="1845" width="0.0789%" height="15" fill="rgb(252,134,9)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1855.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (108 samples, 0.08%)</title><rect x="99.1033%" y="1829" width="0.0789%" height="15" fill="rgb(236,4,44)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (108 samples, 0.08%)</title><rect x="99.1033%" y="1813" width="0.0789%" height="15" fill="rgb(254,172,41)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1823.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (108 samples, 0.08%)</title><rect x="99.1033%" y="1797" width="0.0789%" height="15" fill="rgb(244,63,20)" fg:x="135611" fg:w="108"/><text x="99.3533%" y="1807.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (227 samples, 0.17%)</title><rect x="99.0185%" y="2021" width="0.1659%" height="15" fill="rgb(250,73,31)" fg:x="135495" fg:w="227"/><text x="99.2685%" y="2031.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (197 samples, 0.14%)</title><rect x="99.0405%" y="2005" width="0.1440%" height="15" fill="rgb(241,38,36)" fg:x="135525" fg:w="197"/><text x="99.2905%" y="2015.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (197 samples, 0.14%)</title><rect x="99.0405%" y="1989" width="0.1440%" height="15" fill="rgb(245,211,2)" fg:x="135525" fg:w="197"/><text x="99.2905%" y="1999.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (196 samples, 0.14%)</title><rect x="99.0412%" y="1973" width="0.1432%" height="15" fill="rgb(206,120,28)" fg:x="135526" fg:w="196"/><text x="99.2912%" y="1983.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (196 samples, 0.14%)</title><rect x="99.0412%" y="1957" width="0.1432%" height="15" fill="rgb(211,59,34)" fg:x="135526" fg:w="196"/><text x="99.2912%" y="1967.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (196 samples, 0.14%)</title><rect x="99.0412%" y="1941" width="0.1432%" height="15" fill="rgb(233,168,5)" fg:x="135526" fg:w="196"/><text x="99.2912%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (196 samples, 0.14%)</title><rect x="99.0412%" y="1925" width="0.1432%" height="15" fill="rgb(234,33,13)" fg:x="135526" fg:w="196"/><text x="99.2912%" y="1935.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (25 samples, 0.02%)</title><rect x="99.2042%" y="2021" width="0.0183%" height="15" fill="rgb(231,150,26)" fg:x="135749" fg:w="25"/><text x="99.4542%" y="2031.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (23 samples, 0.02%)</title><rect x="99.2677%" y="2021" width="0.0168%" height="15" fill="rgb(217,191,4)" fg:x="135836" fg:w="23"/><text x="99.5177%" y="2031.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (38 samples, 0.03%)</title><rect x="99.2926%" y="2021" width="0.0278%" height="15" fill="rgb(246,198,38)" fg:x="135870" fg:w="38"/><text x="99.5426%" y="2031.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (35 samples, 0.03%)</title><rect x="99.3284%" y="2021" width="0.0256%" height="15" fill="rgb(245,64,37)" fg:x="135919" fg:w="35"/><text x="99.5784%" y="2031.50"></text></g><g><title>mio::poll::Poll::poll (19 samples, 0.01%)</title><rect x="99.3401%" y="2005" width="0.0139%" height="15" fill="rgb(250,30,36)" fg:x="135935" fg:w="19"/><text x="99.5901%" y="2015.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (19 samples, 0.01%)</title><rect x="99.3401%" y="1989" width="0.0139%" height="15" fill="rgb(217,86,53)" fg:x="135935" fg:w="19"/><text x="99.5901%" y="1999.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (40 samples, 0.03%)</title><rect x="99.3628%" y="2021" width="0.0292%" height="15" fill="rgb(228,157,16)" fg:x="135966" fg:w="40"/><text x="99.6128%" y="2031.50"></text></g><g><title>tokio::runtime::signal::Driver::process (22 samples, 0.02%)</title><rect x="99.4000%" y="2021" width="0.0161%" height="15" fill="rgb(217,59,31)" fg:x="136017" fg:w="22"/><text x="99.6500%" y="2031.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (22 samples, 0.02%)</title><rect x="99.4000%" y="2005" width="0.0161%" height="15" fill="rgb(237,138,41)" fg:x="136017" fg:w="22"/><text x="99.6500%" y="2015.50"></text></g><g><title>tokio::runtime::task::raw::poll (88 samples, 0.06%)</title><rect x="99.4161%" y="2021" width="0.0643%" height="15" fill="rgb(227,91,49)" fg:x="136039" fg:w="88"/><text x="99.6661%" y="2031.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (30 samples, 0.02%)</title><rect x="99.4884%" y="2021" width="0.0219%" height="15" fill="rgb(247,21,44)" fg:x="136138" fg:w="30"/><text x="99.7384%" y="2031.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (19 samples, 0.01%)</title><rect x="99.5104%" y="2021" width="0.0139%" height="15" fill="rgb(219,210,51)" fg:x="136168" fg:w="19"/><text x="99.7604%" y="2031.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (341 samples, 0.25%)</title><rect x="99.5243%" y="2021" width="0.2492%" height="15" fill="rgb(209,140,6)" fg:x="136187" fg:w="341"/><text x="99.7743%" y="2031.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (132 samples, 0.10%)</title><rect x="99.6770%" y="2005" width="0.0965%" height="15" fill="rgb(221,188,24)" fg:x="136396" fg:w="132"/><text x="99.9270%" y="2015.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (132 samples, 0.10%)</title><rect x="99.6770%" y="1989" width="0.0965%" height="15" fill="rgb(232,154,20)" fg:x="136396" fg:w="132"/><text x="99.9270%" y="1999.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (21 samples, 0.02%)</title><rect x="99.7735%" y="2021" width="0.0153%" height="15" fill="rgb(244,137,50)" fg:x="136528" fg:w="21"/><text x="100.0235%" y="2031.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (37 samples, 0.03%)</title><rect x="99.7968%" y="2021" width="0.0270%" height="15" fill="rgb(225,185,43)" fg:x="136560" fg:w="37"/><text x="100.0468%" y="2031.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (82 samples, 0.06%)</title><rect x="99.8239%" y="2005" width="0.0599%" height="15" fill="rgb(213,205,38)" fg:x="136597" fg:w="82"/><text x="100.0739%" y="2015.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (82 samples, 0.06%)</title><rect x="99.8239%" y="1989" width="0.0599%" height="15" fill="rgb(236,73,12)" fg:x="136597" fg:w="82"/><text x="100.0739%" y="1999.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (82 samples, 0.06%)</title><rect x="99.8239%" y="1973" width="0.0599%" height="15" fill="rgb(235,219,13)" fg:x="136597" fg:w="82"/><text x="100.0739%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (34 samples, 0.02%)</title><rect x="99.8838%" y="2005" width="0.0248%" height="15" fill="rgb(218,59,36)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="2015.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (34 samples, 0.02%)</title><rect x="99.8838%" y="1989" width="0.0248%" height="15" fill="rgb(205,110,39)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1999.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (34 samples, 0.02%)</title><rect x="99.8838%" y="1973" width="0.0248%" height="15" fill="rgb(218,206,42)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1983.50"></text></g><g><title>alloc::alloc::exchange_malloc (34 samples, 0.02%)</title><rect x="99.8838%" y="1957" width="0.0248%" height="15" fill="rgb(248,125,24)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1967.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (34 samples, 0.02%)</title><rect x="99.8838%" y="1941" width="0.0248%" height="15" fill="rgb(242,28,27)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1951.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (34 samples, 0.02%)</title><rect x="99.8838%" y="1925" width="0.0248%" height="15" fill="rgb(216,228,15)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1935.50"></text></g><g><title>alloc::alloc::alloc (34 samples, 0.02%)</title><rect x="99.8838%" y="1909" width="0.0248%" height="15" fill="rgb(235,116,46)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1919.50"></text></g><g><title>__rust_alloc (34 samples, 0.02%)</title><rect x="99.8838%" y="1893" width="0.0248%" height="15" fill="rgb(224,18,32)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1903.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (34 samples, 0.02%)</title><rect x="99.8838%" y="1877" width="0.0248%" height="15" fill="rgb(252,5,12)" fg:x="136679" fg:w="34"/><text x="100.1338%" y="1887.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (21 samples, 0.02%)</title><rect x="99.9087%" y="2005" width="0.0153%" height="15" fill="rgb(251,36,5)" fg:x="136713" fg:w="21"/><text x="100.1587%" y="2015.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (21 samples, 0.02%)</title><rect x="99.9087%" y="1989" width="0.0153%" height="15" fill="rgb(217,53,14)" fg:x="136713" fg:w="21"/><text x="100.1587%" y="1999.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (151 samples, 0.11%)</title><rect x="99.8239%" y="2021" width="0.1103%" height="15" fill="rgb(215,86,45)" fg:x="136597" fg:w="151"/><text x="100.0739%" y="2031.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::server_handle_packet::_{{closure}} (14 samples, 0.01%)</title><rect x="99.9240%" y="2005" width="0.0102%" height="15" fill="rgb(242,169,11)" fg:x="136734" fg:w="14"/><text x="100.1740%" y="2015.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (38 samples, 0.03%)</title><rect x="99.9342%" y="2021" width="0.0278%" height="15" fill="rgb(211,213,45)" fg:x="136748" fg:w="38"/><text x="100.1842%" y="2031.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (15 samples, 0.01%)</title><rect x="99.9510%" y="2005" width="0.0110%" height="15" fill="rgb(205,88,11)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.01%)</title><rect x="99.9510%" y="1989" width="0.0110%" height="15" fill="rgb(252,69,26)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="99.9510%" y="1973" width="0.0110%" height="15" fill="rgb(246,123,37)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="99.9510%" y="1957" width="0.0110%" height="15" fill="rgb(212,205,5)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="99.9510%" y="1941" width="0.0110%" height="15" fill="rgb(253,148,0)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15 samples, 0.01%)</title><rect x="99.9510%" y="1925" width="0.0110%" height="15" fill="rgb(239,22,4)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="99.9510%" y="1909" width="0.0110%" height="15" fill="rgb(226,26,53)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="99.9510%" y="1893" width="0.0110%" height="15" fill="rgb(225,229,45)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="99.9510%" y="1877" width="0.0110%" height="15" fill="rgb(220,60,37)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1887.50"></text></g><g><title>__rust_alloc (15 samples, 0.01%)</title><rect x="99.9510%" y="1861" width="0.0110%" height="15" fill="rgb(217,180,35)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.01%)</title><rect x="99.9510%" y="1845" width="0.0110%" height="15" fill="rgb(229,7,53)" fg:x="136771" fg:w="15"/><text x="100.2010%" y="1855.50"></text></g><g><title>all (136,838 samples, 100%)</title><rect x="0.0000%" y="2053" width="100.0000%" height="15" fill="rgb(254,137,3)" fg:x="0" fg:w="136838"/><text x="0.2500%" y="2063.50"></text></g><g><title>tokio-runtime-w (136,747 samples, 99.93%)</title><rect x="0.0665%" y="2037" width="99.9335%" height="15" fill="rgb(215,140,41)" fg:x="91" fg:w="136747"/><text x="0.3165%" y="2047.50">tokio-runtime-w</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (46 samples, 0.03%)</title><rect x="99.9664%" y="2021" width="0.0336%" height="15" fill="rgb(250,80,15)" fg:x="136792" fg:w="46"/><text x="100.2164%" y="2031.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (18 samples, 0.01%)</title><rect x="99.9868%" y="2005" width="0.0132%" height="15" fill="rgb(252,191,6)" fg:x="136820" fg:w="18"/><text x="100.2368%" y="2015.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (17 samples, 0.01%)</title><rect x="99.9876%" y="1989" width="0.0124%" height="15" fill="rgb(246,217,18)" fg:x="136821" fg:w="17"/><text x="100.2376%" y="1999.50"></text></g></svg></svg>