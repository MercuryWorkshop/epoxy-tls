<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2053.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="249035"><g><title>[libc.so.6] (58 samples, 0.02%)</title><rect x="0.0020%" y="1989" width="0.0233%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="58"/><text x="0.2520%" y="1999.50"></text></g><g><title>epoxy-server (80 samples, 0.03%)</title><rect x="0.0000%" y="2005" width="0.0321%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="80"/><text x="0.2500%" y="2015.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (63 samples, 0.03%)</title><rect x="0.1277%" y="1941" width="0.0253%" height="15" fill="rgb(221,193,54)" fg:x="318" fg:w="63"/><text x="0.3777%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (63 samples, 0.03%)</title><rect x="0.1277%" y="1925" width="0.0253%" height="15" fill="rgb(248,212,6)" fg:x="318" fg:w="63"/><text x="0.3777%" y="1935.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (63 samples, 0.03%)</title><rect x="0.1277%" y="1909" width="0.0253%" height="15" fill="rgb(208,68,35)" fg:x="318" fg:w="63"/><text x="0.3777%" y="1919.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (250 samples, 0.10%)</title><rect x="0.0538%" y="1989" width="0.1004%" height="15" fill="rgb(232,128,0)" fg:x="134" fg:w="250"/><text x="0.3038%" y="1999.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (67 samples, 0.03%)</title><rect x="0.1273%" y="1973" width="0.0269%" height="15" fill="rgb(207,160,47)" fg:x="317" fg:w="67"/><text x="0.3773%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (67 samples, 0.03%)</title><rect x="0.1273%" y="1957" width="0.0269%" height="15" fill="rgb(228,23,34)" fg:x="317" fg:w="67"/><text x="0.3773%" y="1967.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (94 samples, 0.04%)</title><rect x="0.1550%" y="1989" width="0.0377%" height="15" fill="rgb(218,30,26)" fg:x="386" fg:w="94"/><text x="0.4050%" y="1999.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (76 samples, 0.03%)</title><rect x="0.1927%" y="1989" width="0.0305%" height="15" fill="rgb(220,122,19)" fg:x="480" fg:w="76"/><text x="0.4427%" y="1999.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75 samples, 0.03%)</title><rect x="0.3353%" y="1957" width="0.0301%" height="15" fill="rgb(250,228,42)" fg:x="835" fg:w="75"/><text x="0.5853%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (391 samples, 0.16%)</title><rect x="0.2233%" y="1973" width="0.1570%" height="15" fill="rgb(240,193,28)" fg:x="556" fg:w="391"/><text x="0.4733%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (37 samples, 0.01%)</title><rect x="0.3654%" y="1957" width="0.0149%" height="15" fill="rgb(216,20,37)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (37 samples, 0.01%)</title><rect x="0.3654%" y="1941" width="0.0149%" height="15" fill="rgb(206,188,39)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="0.3654%" y="1925" width="0.0149%" height="15" fill="rgb(217,207,13)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.01%)</title><rect x="0.3654%" y="1909" width="0.0149%" height="15" fill="rgb(231,73,38)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.01%)</title><rect x="0.3654%" y="1893" width="0.0149%" height="15" fill="rgb(225,20,46)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1903.50"></text></g><g><title>__rust_dealloc (37 samples, 0.01%)</title><rect x="0.3654%" y="1877" width="0.0149%" height="15" fill="rgb(210,31,41)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (37 samples, 0.01%)</title><rect x="0.3654%" y="1861" width="0.0149%" height="15" fill="rgb(221,200,47)" fg:x="910" fg:w="37"/><text x="0.6154%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (1,395 samples, 0.56%)</title><rect x="0.3891%" y="1973" width="0.5602%" height="15" fill="rgb(226,26,5)" fg:x="969" fg:w="1395"/><text x="0.6391%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="1.2685%" y="1957" width="0.0141%" height="15" fill="rgb(249,33,26)" fg:x="3159" fg:w="35"/><text x="1.5185%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (854 samples, 0.34%)</title><rect x="0.9493%" y="1973" width="0.3429%" height="15" fill="rgb(235,183,28)" fg:x="2364" fg:w="854"/><text x="1.1993%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (89 samples, 0.04%)</title><rect x="1.2922%" y="1973" width="0.0357%" height="15" fill="rgb(221,5,38)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (89 samples, 0.04%)</title><rect x="1.2922%" y="1957" width="0.0357%" height="15" fill="rgb(247,18,42)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (89 samples, 0.04%)</title><rect x="1.2922%" y="1941" width="0.0357%" height="15" fill="rgb(241,131,45)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1951.50"></text></g><g><title>alloc::alloc::exchange_malloc (89 samples, 0.04%)</title><rect x="1.2922%" y="1925" width="0.0357%" height="15" fill="rgb(249,31,29)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (89 samples, 0.04%)</title><rect x="1.2922%" y="1909" width="0.0357%" height="15" fill="rgb(225,111,53)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (89 samples, 0.04%)</title><rect x="1.2922%" y="1893" width="0.0357%" height="15" fill="rgb(238,160,17)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (89 samples, 0.04%)</title><rect x="1.2922%" y="1877" width="0.0357%" height="15" fill="rgb(214,148,48)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1887.50"></text></g><g><title>__rust_alloc (89 samples, 0.04%)</title><rect x="1.2922%" y="1861" width="0.0357%" height="15" fill="rgb(232,36,49)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (89 samples, 0.04%)</title><rect x="1.2922%" y="1845" width="0.0357%" height="15" fill="rgb(209,103,24)" fg:x="3218" fg:w="89"/><text x="1.5422%" y="1855.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (91 samples, 0.04%)</title><rect x="1.3279%" y="1973" width="0.0365%" height="15" fill="rgb(229,88,8)" fg:x="3307" fg:w="91"/><text x="1.5779%" y="1983.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (179 samples, 0.07%)</title><rect x="1.3645%" y="1973" width="0.0719%" height="15" fill="rgb(213,181,19)" fg:x="3398" fg:w="179"/><text x="1.6145%" y="1983.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (163 samples, 0.07%)</title><rect x="1.4363%" y="1973" width="0.0655%" height="15" fill="rgb(254,191,54)" fg:x="3577" fg:w="163"/><text x="1.6863%" y="1983.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (114 samples, 0.05%)</title><rect x="1.5018%" y="1973" width="0.0458%" height="15" fill="rgb(241,83,37)" fg:x="3740" fg:w="114"/><text x="1.7518%" y="1983.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (49 samples, 0.02%)</title><rect x="1.5279%" y="1957" width="0.0197%" height="15" fill="rgb(233,36,39)" fg:x="3805" fg:w="49"/><text x="1.7779%" y="1967.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (49 samples, 0.02%)</title><rect x="1.5279%" y="1941" width="0.0197%" height="15" fill="rgb(226,3,54)" fg:x="3805" fg:w="49"/><text x="1.7779%" y="1951.50"></text></g><g><title>event_listener::TaskRef::into_task (49 samples, 0.02%)</title><rect x="1.5279%" y="1925" width="0.0197%" height="15" fill="rgb(245,192,40)" fg:x="3805" fg:w="49"/><text x="1.7779%" y="1935.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (49 samples, 0.02%)</title><rect x="1.5279%" y="1909" width="0.0197%" height="15" fill="rgb(238,167,29)" fg:x="3805" fg:w="49"/><text x="1.7779%" y="1919.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (97 samples, 0.04%)</title><rect x="1.5476%" y="1973" width="0.0390%" height="15" fill="rgb(232,182,51)" fg:x="3854" fg:w="97"/><text x="1.7976%" y="1983.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (336 samples, 0.13%)</title><rect x="1.5865%" y="1973" width="0.1349%" height="15" fill="rgb(231,60,39)" fg:x="3951" fg:w="336"/><text x="1.8365%" y="1983.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (62 samples, 0.02%)</title><rect x="1.8142%" y="1925" width="0.0249%" height="15" fill="rgb(208,69,12)" fg:x="4518" fg:w="62"/><text x="2.0642%" y="1935.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (62 samples, 0.02%)</title><rect x="1.8142%" y="1909" width="0.0249%" height="15" fill="rgb(235,93,37)" fg:x="4518" fg:w="62"/><text x="2.0642%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (62 samples, 0.02%)</title><rect x="1.8142%" y="1893" width="0.0249%" height="15" fill="rgb(213,116,39)" fg:x="4518" fg:w="62"/><text x="2.0642%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (296 samples, 0.12%)</title><rect x="1.7214%" y="1973" width="0.1189%" height="15" fill="rgb(222,207,29)" fg:x="4287" fg:w="296"/><text x="1.9714%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (66 samples, 0.03%)</title><rect x="1.8138%" y="1957" width="0.0265%" height="15" fill="rgb(206,96,30)" fg:x="4517" fg:w="66"/><text x="2.0638%" y="1967.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (66 samples, 0.03%)</title><rect x="1.8138%" y="1941" width="0.0265%" height="15" fill="rgb(218,138,4)" fg:x="4517" fg:w="66"/><text x="2.0638%" y="1951.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="1.8411%" y="1973" width="0.0229%" height="15" fill="rgb(250,191,14)" fg:x="4585" fg:w="57"/><text x="2.0911%" y="1983.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (55 samples, 0.02%)</title><rect x="1.8419%" y="1957" width="0.0221%" height="15" fill="rgb(239,60,40)" fg:x="4587" fg:w="55"/><text x="2.0919%" y="1967.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (55 samples, 0.02%)</title><rect x="1.8419%" y="1941" width="0.0221%" height="15" fill="rgb(206,27,48)" fg:x="4587" fg:w="55"/><text x="2.0919%" y="1951.50"></text></g><g><title>[epoxy-server] (83 samples, 0.03%)</title><rect x="1.8809%" y="1973" width="0.0333%" height="15" fill="rgb(225,35,8)" fg:x="4684" fg:w="83"/><text x="2.1309%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (63 samples, 0.03%)</title><rect x="1.8889%" y="1957" width="0.0253%" height="15" fill="rgb(250,213,24)" fg:x="4704" fg:w="63"/><text x="2.1389%" y="1967.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.02%)</title><rect x="1.8901%" y="1941" width="0.0241%" height="15" fill="rgb(247,123,22)" fg:x="4707" fg:w="60"/><text x="2.1401%" y="1951.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (60 samples, 0.02%)</title><rect x="1.8901%" y="1925" width="0.0241%" height="15" fill="rgb(231,138,38)" fg:x="4707" fg:w="60"/><text x="2.1401%" y="1935.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (58 samples, 0.02%)</title><rect x="1.8909%" y="1909" width="0.0233%" height="15" fill="rgb(231,145,46)" fg:x="4709" fg:w="58"/><text x="2.1409%" y="1919.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (58 samples, 0.02%)</title><rect x="1.8909%" y="1893" width="0.0233%" height="15" fill="rgb(251,118,11)" fg:x="4709" fg:w="58"/><text x="2.1409%" y="1903.50"></text></g><g><title>[libc.so.6] (168 samples, 0.07%)</title><rect x="1.9142%" y="1973" width="0.0675%" height="15" fill="rgb(217,147,25)" fg:x="4767" fg:w="168"/><text x="2.1642%" y="1983.50"></text></g><g><title>_ZN4core3ptr1946drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Quintet$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..tcp..stream..TcpStream$GT$$GT$$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..io..split..ReadHalf$LT$tokio_rustls..server..TlsStream$LT$tokio..net..unix..stream..UnixStream$GT$$GT$$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h2aa71437609d7393E (165 samples, 0.07%)</title><rect x="1.9816%" y="1973" width="0.0663%" height="15" fill="rgb(247,81,37)" fg:x="4935" fg:w="165"/><text x="2.2316%" y="1983.50"></text></g><g><title>__floattidf (298 samples, 0.12%)</title><rect x="2.0479%" y="1973" width="0.1197%" height="15" fill="rgb(209,12,38)" fg:x="5100" fg:w="298"/><text x="2.2979%" y="1983.50"></text></g><g><title>__vdso_clock_gettime (91 samples, 0.04%)</title><rect x="2.1712%" y="1973" width="0.0365%" height="15" fill="rgb(227,1,9)" fg:x="5407" fg:w="91"/><text x="2.4212%" y="1983.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (62 samples, 0.02%)</title><rect x="2.2081%" y="1973" width="0.0249%" height="15" fill="rgb(248,47,43)" fg:x="5499" fg:w="62"/><text x="2.4581%" y="1983.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (60 samples, 0.02%)</title><rect x="2.2386%" y="1973" width="0.0241%" height="15" fill="rgb(221,10,30)" fg:x="5575" fg:w="60"/><text x="2.4886%" y="1983.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (45 samples, 0.02%)</title><rect x="2.2627%" y="1973" width="0.0181%" height="15" fill="rgb(210,229,1)" fg:x="5635" fg:w="45"/><text x="2.5127%" y="1983.50"></text></g><g><title>_rjem_je_arena_malloc_hard (125 samples, 0.05%)</title><rect x="2.2808%" y="1973" width="0.0502%" height="15" fill="rgb(222,148,37)" fg:x="5680" fg:w="125"/><text x="2.5308%" y="1983.50"></text></g><g><title>_rjem_je_ecache_alloc (99 samples, 0.04%)</title><rect x="2.3487%" y="1973" width="0.0398%" height="15" fill="rgb(234,67,33)" fg:x="5849" fg:w="99"/><text x="2.5987%" y="1983.50"></text></g><g><title>_rjem_je_edata_avail_remove (28 samples, 0.01%)</title><rect x="2.3932%" y="1973" width="0.0112%" height="15" fill="rgb(247,98,35)" fg:x="5960" fg:w="28"/><text x="2.6432%" y="1983.50"></text></g><g><title>_rjem_je_edata_cache_put (44 samples, 0.02%)</title><rect x="2.4137%" y="1973" width="0.0177%" height="15" fill="rgb(247,138,52)" fg:x="6011" fg:w="44"/><text x="2.6637%" y="1983.50"></text></g><g><title>_rjem_je_edata_heap_remove (25 samples, 0.01%)</title><rect x="2.4442%" y="1973" width="0.0100%" height="15" fill="rgb(213,79,30)" fg:x="6087" fg:w="25"/><text x="2.6942%" y="1983.50"></text></g><g><title>_rjem_je_emap_merge_prepare (42 samples, 0.02%)</title><rect x="2.4683%" y="1973" width="0.0169%" height="15" fill="rgb(246,177,23)" fg:x="6147" fg:w="42"/><text x="2.7183%" y="1983.50"></text></g><g><title>_rjem_je_emap_remap (83 samples, 0.03%)</title><rect x="2.4900%" y="1973" width="0.0333%" height="15" fill="rgb(230,62,27)" fg:x="6201" fg:w="83"/><text x="2.7400%" y="1983.50"></text></g><g><title>_rjem_je_emap_split_prepare (91 samples, 0.04%)</title><rect x="2.5233%" y="1973" width="0.0365%" height="15" fill="rgb(216,154,8)" fg:x="6284" fg:w="91"/><text x="2.7733%" y="1983.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (58 samples, 0.02%)</title><rect x="2.5599%" y="1973" width="0.0233%" height="15" fill="rgb(244,35,45)" fg:x="6375" fg:w="58"/><text x="2.8099%" y="1983.50"></text></g><g><title>_rjem_je_emap_update_edata_state (34 samples, 0.01%)</title><rect x="2.5848%" y="1973" width="0.0137%" height="15" fill="rgb(251,115,12)" fg:x="6437" fg:w="34"/><text x="2.8348%" y="1983.50"></text></g><g><title>_rjem_je_eset_insert (77 samples, 0.03%)</title><rect x="2.6073%" y="1973" width="0.0309%" height="15" fill="rgb(240,54,50)" fg:x="6493" fg:w="77"/><text x="2.8573%" y="1983.50"></text></g><g><title>_rjem_je_eset_remove (68 samples, 0.03%)</title><rect x="2.6382%" y="1973" width="0.0273%" height="15" fill="rgb(233,84,52)" fg:x="6570" fg:w="68"/><text x="2.8882%" y="1983.50"></text></g><g><title>_rjem_je_extent_record (46 samples, 0.02%)</title><rect x="2.6799%" y="1973" width="0.0185%" height="15" fill="rgb(207,117,47)" fg:x="6674" fg:w="46"/><text x="2.9299%" y="1983.50"></text></g><g><title>_rjem_je_large_palloc (70 samples, 0.03%)</title><rect x="2.7101%" y="1973" width="0.0281%" height="15" fill="rgb(249,43,39)" fg:x="6749" fg:w="70"/><text x="2.9601%" y="1983.50"></text></g><g><title>_rjem_je_large_ralloc (25 samples, 0.01%)</title><rect x="2.7382%" y="1973" width="0.0100%" height="15" fill="rgb(209,38,44)" fg:x="6819" fg:w="25"/><text x="2.9882%" y="1983.50"></text></g><g><title>_rjem_je_malloc_default (186 samples, 0.07%)</title><rect x="2.7506%" y="1973" width="0.0747%" height="15" fill="rgb(236,212,23)" fg:x="6850" fg:w="186"/><text x="3.0006%" y="1983.50"></text></g><g><title>_rjem_je_pa_alloc (75 samples, 0.03%)</title><rect x="2.8329%" y="1973" width="0.0301%" height="15" fill="rgb(242,79,21)" fg:x="7055" fg:w="75"/><text x="3.0829%" y="1983.50"></text></g><g><title>_rjem_je_sdallocx_default (102 samples, 0.04%)</title><rect x="2.8883%" y="1973" width="0.0410%" height="15" fill="rgb(211,96,35)" fg:x="7193" fg:w="102"/><text x="3.1383%" y="1983.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (54 samples, 0.02%)</title><rect x="2.9410%" y="1973" width="0.0217%" height="15" fill="rgb(253,215,40)" fg:x="7324" fg:w="54"/><text x="3.1910%" y="1983.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (31 samples, 0.01%)</title><rect x="2.9626%" y="1973" width="0.0124%" height="15" fill="rgb(211,81,21)" fg:x="7378" fg:w="31"/><text x="3.2126%" y="1983.50"></text></g><g><title>_rjem_je_te_event_trigger (104 samples, 0.04%)</title><rect x="2.9831%" y="1973" width="0.0418%" height="15" fill="rgb(208,190,38)" fg:x="7429" fg:w="104"/><text x="3.2331%" y="1983.50"></text></g><g><title>_rjem_malloc (31 samples, 0.01%)</title><rect x="3.0249%" y="1973" width="0.0124%" height="15" fill="rgb(235,213,38)" fg:x="7533" fg:w="31"/><text x="3.2749%" y="1983.50"></text></g><g><title>_rjem_realloc (53 samples, 0.02%)</title><rect x="3.0373%" y="1973" width="0.0213%" height="15" fill="rgb(237,122,38)" fg:x="7564" fg:w="53"/><text x="3.2873%" y="1983.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (58 samples, 0.02%)</title><rect x="3.0727%" y="1973" width="0.0233%" height="15" fill="rgb(244,218,35)" fg:x="7652" fg:w="58"/><text x="3.3227%" y="1983.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (50 samples, 0.02%)</title><rect x="3.0759%" y="1957" width="0.0201%" height="15" fill="rgb(240,68,47)" fg:x="7660" fg:w="50"/><text x="3.3259%" y="1967.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (50 samples, 0.02%)</title><rect x="3.0759%" y="1941" width="0.0201%" height="15" fill="rgb(210,16,53)" fg:x="7660" fg:w="50"/><text x="3.3259%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (111 samples, 0.04%)</title><rect x="3.0960%" y="1973" width="0.0446%" height="15" fill="rgb(235,124,12)" fg:x="7710" fg:w="111"/><text x="3.3460%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (84 samples, 0.03%)</title><rect x="3.1405%" y="1973" width="0.0337%" height="15" fill="rgb(224,169,11)" fg:x="7821" fg:w="84"/><text x="3.3905%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (118 samples, 0.05%)</title><rect x="3.1743%" y="1973" width="0.0474%" height="15" fill="rgb(250,166,2)" fg:x="7905" fg:w="118"/><text x="3.4243%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (28 samples, 0.01%)</title><rect x="3.2104%" y="1957" width="0.0112%" height="15" fill="rgb(242,216,29)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1967.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (28 samples, 0.01%)</title><rect x="3.2104%" y="1941" width="0.0112%" height="15" fill="rgb(230,116,27)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1951.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.01%)</title><rect x="3.2104%" y="1925" width="0.0112%" height="15" fill="rgb(228,99,48)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1935.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.01%)</title><rect x="3.2104%" y="1909" width="0.0112%" height="15" fill="rgb(253,11,6)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="3.2104%" y="1893" width="0.0112%" height="15" fill="rgb(247,143,39)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="3.2104%" y="1877" width="0.0112%" height="15" fill="rgb(236,97,10)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="3.2104%" y="1861" width="0.0112%" height="15" fill="rgb(233,208,19)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1871.50"></text></g><g><title>__rust_alloc (28 samples, 0.01%)</title><rect x="3.2104%" y="1845" width="0.0112%" height="15" fill="rgb(216,164,2)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1855.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.01%)</title><rect x="3.2104%" y="1829" width="0.0112%" height="15" fill="rgb(220,129,5)" fg:x="7995" fg:w="28"/><text x="3.4604%" y="1839.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (269 samples, 0.11%)</title><rect x="3.2216%" y="1973" width="0.1080%" height="15" fill="rgb(242,17,10)" fg:x="8023" fg:w="269"/><text x="3.4716%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (269 samples, 0.11%)</title><rect x="3.2216%" y="1957" width="0.1080%" height="15" fill="rgb(242,107,0)" fg:x="8023" fg:w="269"/><text x="3.4716%" y="1967.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (269 samples, 0.11%)</title><rect x="3.2216%" y="1941" width="0.1080%" height="15" fill="rgb(251,28,31)" fg:x="8023" fg:w="269"/><text x="3.4716%" y="1951.50"></text></g><g><title>clock_gettime (28 samples, 0.01%)</title><rect x="3.3297%" y="1973" width="0.0112%" height="15" fill="rgb(233,223,10)" fg:x="8292" fg:w="28"/><text x="3.5797%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_frame::{{closure}}&gt; (70 samples, 0.03%)</title><rect x="3.3409%" y="1973" width="0.0281%" height="15" fill="rgb(215,21,27)" fg:x="8320" fg:w="70"/><text x="3.5909%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (120 samples, 0.05%)</title><rect x="3.3710%" y="1973" width="0.0482%" height="15" fill="rgb(232,23,21)" fg:x="8395" fg:w="120"/><text x="3.6210%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (320 samples, 0.13%)</title><rect x="3.4224%" y="1973" width="0.1285%" height="15" fill="rgb(244,5,23)" fg:x="8523" fg:w="320"/><text x="3.6724%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (87 samples, 0.03%)</title><rect x="3.5525%" y="1973" width="0.0349%" height="15" fill="rgb(226,81,46)" fg:x="8847" fg:w="87"/><text x="3.8025%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (54 samples, 0.02%)</title><rect x="3.5874%" y="1973" width="0.0217%" height="15" fill="rgb(247,70,30)" fg:x="8934" fg:w="54"/><text x="3.8374%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio::io::util::chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedReadHalf,tokio::io::split::ReadHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (480 samples, 0.19%)</title><rect x="3.6091%" y="1973" width="0.1927%" height="15" fill="rgb(212,68,19)" fg:x="8988" fg:w="480"/><text x="3.8591%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (1,287 samples, 0.52%)</title><rect x="3.8075%" y="1973" width="0.5168%" height="15" fill="rgb(240,187,13)" fg:x="9482" fg:w="1287"/><text x="4.0575%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (28 samples, 0.01%)</title><rect x="4.3335%" y="1973" width="0.0112%" height="15" fill="rgb(223,113,26)" fg:x="10792" fg:w="28"/><text x="4.5835%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (197 samples, 0.08%)</title><rect x="4.3448%" y="1973" width="0.0791%" height="15" fill="rgb(206,192,2)" fg:x="10820" fg:w="197"/><text x="4.5948%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (70 samples, 0.03%)</title><rect x="4.4239%" y="1973" width="0.0281%" height="15" fill="rgb(241,108,4)" fg:x="11017" fg:w="70"/><text x="4.6739%" y="1983.50"></text></g><g><title>do_rallocx (32 samples, 0.01%)</title><rect x="4.4520%" y="1973" width="0.0128%" height="15" fill="rgb(247,173,49)" fg:x="11087" fg:w="32"/><text x="4.7020%" y="1983.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (63 samples, 0.03%)</title><rect x="4.4648%" y="1973" width="0.0253%" height="15" fill="rgb(224,114,35)" fg:x="11119" fg:w="63"/><text x="4.7148%" y="1983.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (83 samples, 0.03%)</title><rect x="4.5014%" y="1973" width="0.0333%" height="15" fill="rgb(245,159,27)" fg:x="11210" fg:w="83"/><text x="4.7514%" y="1983.50"></text></g><g><title>extent_recycle (44 samples, 0.02%)</title><rect x="4.5455%" y="1973" width="0.0177%" height="15" fill="rgb(245,172,44)" fg:x="11320" fg:w="44"/><text x="4.7955%" y="1983.50"></text></g><g><title>extent_try_coalesce_impl (58 samples, 0.02%)</title><rect x="4.5724%" y="1973" width="0.0233%" height="15" fill="rgb(236,23,11)" fg:x="11387" fg:w="58"/><text x="4.8224%" y="1983.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (150 samples, 0.06%)</title><rect x="4.5957%" y="1973" width="0.0602%" height="15" fill="rgb(205,117,38)" fg:x="11445" fg:w="150"/><text x="4.8457%" y="1983.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (36 samples, 0.01%)</title><rect x="4.6415%" y="1957" width="0.0145%" height="15" fill="rgb(237,72,25)" fg:x="11559" fg:w="36"/><text x="4.8915%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (92 samples, 0.04%)</title><rect x="4.7327%" y="1941" width="0.0369%" height="15" fill="rgb(244,70,9)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (92 samples, 0.04%)</title><rect x="4.7327%" y="1925" width="0.0369%" height="15" fill="rgb(217,125,39)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (92 samples, 0.04%)</title><rect x="4.7327%" y="1909" width="0.0369%" height="15" fill="rgb(235,36,10)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1919.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (92 samples, 0.04%)</title><rect x="4.7327%" y="1893" width="0.0369%" height="15" fill="rgb(251,123,47)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (92 samples, 0.04%)</title><rect x="4.7327%" y="1877" width="0.0369%" height="15" fill="rgb(221,13,13)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (92 samples, 0.04%)</title><rect x="4.7327%" y="1861" width="0.0369%" height="15" fill="rgb(238,131,9)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1871.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.04%)</title><rect x="4.7327%" y="1845" width="0.0369%" height="15" fill="rgb(211,50,8)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1855.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (92 samples, 0.04%)</title><rect x="4.7327%" y="1829" width="0.0369%" height="15" fill="rgb(245,182,24)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1839.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (92 samples, 0.04%)</title><rect x="4.7327%" y="1813" width="0.0369%" height="15" fill="rgb(242,14,37)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1823.50"></text></g><g><title>alloc::alloc::dealloc (92 samples, 0.04%)</title><rect x="4.7327%" y="1797" width="0.0369%" height="15" fill="rgb(246,228,12)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1807.50"></text></g><g><title>__rust_dealloc (92 samples, 0.04%)</title><rect x="4.7327%" y="1781" width="0.0369%" height="15" fill="rgb(213,55,15)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1791.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (92 samples, 0.04%)</title><rect x="4.7327%" y="1765" width="0.0369%" height="15" fill="rgb(209,9,3)" fg:x="11786" fg:w="92"/><text x="4.9827%" y="1775.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (285 samples, 0.11%)</title><rect x="4.6560%" y="1973" width="0.1144%" height="15" fill="rgb(230,59,30)" fg:x="11595" fg:w="285"/><text x="4.9060%" y="1983.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (110 samples, 0.04%)</title><rect x="4.7262%" y="1957" width="0.0442%" height="15" fill="rgb(209,121,21)" fg:x="11770" fg:w="110"/><text x="4.9762%" y="1967.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (148 samples, 0.06%)</title><rect x="4.7792%" y="1957" width="0.0594%" height="15" fill="rgb(220,109,13)" fg:x="11902" fg:w="148"/><text x="5.0292%" y="1967.50"></text></g><g><title>fastwebsockets::frame::Frame::write (197 samples, 0.08%)</title><rect x="4.7704%" y="1973" width="0.0791%" height="15" fill="rgb(232,18,1)" fg:x="11880" fg:w="197"/><text x="5.0204%" y="1983.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (27 samples, 0.01%)</title><rect x="4.8387%" y="1957" width="0.0108%" height="15" fill="rgb(215,41,42)" fg:x="12050" fg:w="27"/><text x="5.0887%" y="1967.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.01%)</title><rect x="4.8387%" y="1941" width="0.0108%" height="15" fill="rgb(224,123,36)" fg:x="12050" fg:w="27"/><text x="5.0887%" y="1951.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (39 samples, 0.02%)</title><rect x="4.8495%" y="1973" width="0.0157%" height="15" fill="rgb(240,125,3)" fg:x="12077" fg:w="39"/><text x="5.0995%" y="1983.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (42 samples, 0.02%)</title><rect x="4.8652%" y="1973" width="0.0169%" height="15" fill="rgb(205,98,50)" fg:x="12116" fg:w="42"/><text x="5.1152%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (113 samples, 0.05%)</title><rect x="4.8820%" y="1973" width="0.0454%" height="15" fill="rgb(205,185,37)" fg:x="12158" fg:w="113"/><text x="5.1320%" y="1983.50"></text></g><g><title>large_ralloc_no_move_expand (29 samples, 0.01%)</title><rect x="4.9274%" y="1973" width="0.0116%" height="15" fill="rgb(238,207,15)" fg:x="12271" fg:w="29"/><text x="5.1774%" y="1983.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (31 samples, 0.01%)</title><rect x="4.9391%" y="1973" width="0.0124%" height="15" fill="rgb(213,199,42)" fg:x="12300" fg:w="31"/><text x="5.1891%" y="1983.50"></text></g><g><title>pac_alloc_impl (369 samples, 0.15%)</title><rect x="4.9519%" y="1973" width="0.1482%" height="15" fill="rgb(235,201,11)" fg:x="12332" fg:w="369"/><text x="5.2019%" y="1983.50"></text></g><g><title>pac_alloc_real (46 samples, 0.02%)</title><rect x="5.1001%" y="1973" width="0.0185%" height="15" fill="rgb(207,46,11)" fg:x="12701" fg:w="46"/><text x="5.3501%" y="1983.50"></text></g><g><title>pac_dalloc_impl (72 samples, 0.03%)</title><rect x="5.1186%" y="1973" width="0.0289%" height="15" fill="rgb(241,35,35)" fg:x="12747" fg:w="72"/><text x="5.3686%" y="1983.50"></text></g><g><title>pac_expand_impl (33 samples, 0.01%)</title><rect x="5.1479%" y="1973" width="0.0133%" height="15" fill="rgb(243,32,47)" fg:x="12820" fg:w="33"/><text x="5.3979%" y="1983.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (63 samples, 0.03%)</title><rect x="5.1611%" y="1973" width="0.0253%" height="15" fill="rgb(247,202,23)" fg:x="12853" fg:w="63"/><text x="5.4111%" y="1983.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (44 samples, 0.02%)</title><rect x="5.1900%" y="1973" width="0.0177%" height="15" fill="rgb(219,102,11)" fg:x="12925" fg:w="44"/><text x="5.4400%" y="1983.50"></text></g><g><title>pow (34 samples, 0.01%)</title><rect x="5.2077%" y="1973" width="0.0137%" height="15" fill="rgb(243,110,44)" fg:x="12969" fg:w="34"/><text x="5.4577%" y="1983.50"></text></g><g><title>pthread_mutex_trylock (73 samples, 0.03%)</title><rect x="5.2214%" y="1973" width="0.0293%" height="15" fill="rgb(222,74,54)" fg:x="13003" fg:w="73"/><text x="5.4714%" y="1983.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (117 samples, 0.05%)</title><rect x="5.2515%" y="1973" width="0.0470%" height="15" fill="rgb(216,99,12)" fg:x="13078" fg:w="117"/><text x="5.5015%" y="1983.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (30 samples, 0.01%)</title><rect x="5.2985%" y="1973" width="0.0120%" height="15" fill="rgb(226,22,26)" fg:x="13195" fg:w="30"/><text x="5.5485%" y="1983.50"></text></g><g><title>std::time::Instant::now (46 samples, 0.02%)</title><rect x="5.3105%" y="1973" width="0.0185%" height="15" fill="rgb(217,163,10)" fg:x="13225" fg:w="46"/><text x="5.5605%" y="1983.50"></text></g><g><title>syscall (309 samples, 0.12%)</title><rect x="5.3290%" y="1973" width="0.1241%" height="15" fill="rgb(213,25,53)" fg:x="13271" fg:w="309"/><text x="5.5790%" y="1983.50"></text></g><g><title>tcache_gc_small (47 samples, 0.02%)</title><rect x="5.4535%" y="1973" width="0.0189%" height="15" fill="rgb(252,105,26)" fg:x="13581" fg:w="47"/><text x="5.7035%" y="1983.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (38 samples, 0.02%)</title><rect x="5.5221%" y="1941" width="0.0153%" height="15" fill="rgb(220,39,43)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1951.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (38 samples, 0.02%)</title><rect x="5.5221%" y="1925" width="0.0153%" height="15" fill="rgb(229,68,48)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1935.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (38 samples, 0.02%)</title><rect x="5.5221%" y="1909" width="0.0153%" height="15" fill="rgb(252,8,32)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (38 samples, 0.02%)</title><rect x="5.5221%" y="1893" width="0.0153%" height="15" fill="rgb(223,20,43)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1903.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (38 samples, 0.02%)</title><rect x="5.5221%" y="1877" width="0.0153%" height="15" fill="rgb(229,81,49)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1887.50"></text></g><g><title>std::sys_common::net::TcpStream::read (38 samples, 0.02%)</title><rect x="5.5221%" y="1861" width="0.0153%" height="15" fill="rgb(236,28,36)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1871.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (38 samples, 0.02%)</title><rect x="5.5221%" y="1845" width="0.0153%" height="15" fill="rgb(249,185,26)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1855.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (38 samples, 0.02%)</title><rect x="5.5221%" y="1829" width="0.0153%" height="15" fill="rgb(249,174,33)" fg:x="13752" fg:w="38"/><text x="5.7721%" y="1839.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (166 samples, 0.07%)</title><rect x="5.4723%" y="1973" width="0.0667%" height="15" fill="rgb(233,201,37)" fg:x="13628" fg:w="166"/><text x="5.7223%" y="1983.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (42 samples, 0.02%)</title><rect x="5.5221%" y="1957" width="0.0169%" height="15" fill="rgb(221,78,26)" fg:x="13752" fg:w="42"/><text x="5.7721%" y="1967.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (41 samples, 0.02%)</title><rect x="5.5888%" y="1941" width="0.0165%" height="15" fill="rgb(250,127,30)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1951.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (41 samples, 0.02%)</title><rect x="5.5888%" y="1925" width="0.0165%" height="15" fill="rgb(230,49,44)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1935.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (41 samples, 0.02%)</title><rect x="5.5888%" y="1909" width="0.0165%" height="15" fill="rgb(229,67,23)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (41 samples, 0.02%)</title><rect x="5.5888%" y="1893" width="0.0165%" height="15" fill="rgb(249,83,47)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1903.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (41 samples, 0.02%)</title><rect x="5.5888%" y="1877" width="0.0165%" height="15" fill="rgb(215,43,3)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1887.50"></text></g><g><title>std::sys_common::net::TcpStream::write (41 samples, 0.02%)</title><rect x="5.5888%" y="1861" width="0.0165%" height="15" fill="rgb(238,154,13)" fg:x="13918" fg:w="41"/><text x="5.8388%" y="1871.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (172 samples, 0.07%)</title><rect x="5.5390%" y="1973" width="0.0691%" height="15" fill="rgb(219,56,2)" fg:x="13794" fg:w="172"/><text x="5.7890%" y="1983.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (48 samples, 0.02%)</title><rect x="5.5888%" y="1957" width="0.0193%" height="15" fill="rgb(233,0,4)" fg:x="13918" fg:w="48"/><text x="5.8388%" y="1967.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (249 samples, 0.10%)</title><rect x="5.6080%" y="1973" width="0.1000%" height="15" fill="rgb(235,30,7)" fg:x="13966" fg:w="249"/><text x="5.8580%" y="1983.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (152 samples, 0.06%)</title><rect x="5.6470%" y="1957" width="0.0610%" height="15" fill="rgb(250,79,13)" fg:x="14063" fg:w="152"/><text x="5.8970%" y="1967.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (152 samples, 0.06%)</title><rect x="5.6470%" y="1941" width="0.0610%" height="15" fill="rgb(211,146,34)" fg:x="14063" fg:w="152"/><text x="5.8970%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (152 samples, 0.06%)</title><rect x="5.6470%" y="1925" width="0.0610%" height="15" fill="rgb(228,22,38)" fg:x="14063" fg:w="152"/><text x="5.8970%" y="1935.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (149 samples, 0.06%)</title><rect x="5.6482%" y="1909" width="0.0598%" height="15" fill="rgb(235,168,5)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (149 samples, 0.06%)</title><rect x="5.6482%" y="1893" width="0.0598%" height="15" fill="rgb(221,155,16)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1903.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (149 samples, 0.06%)</title><rect x="5.6482%" y="1877" width="0.0598%" height="15" fill="rgb(215,215,53)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1887.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (149 samples, 0.06%)</title><rect x="5.6482%" y="1861" width="0.0598%" height="15" fill="rgb(223,4,10)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1871.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (149 samples, 0.06%)</title><rect x="5.6482%" y="1845" width="0.0598%" height="15" fill="rgb(234,103,6)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1855.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (149 samples, 0.06%)</title><rect x="5.6482%" y="1829" width="0.0598%" height="15" fill="rgb(227,97,0)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1839.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (149 samples, 0.06%)</title><rect x="5.6482%" y="1813" width="0.0598%" height="15" fill="rgb(234,150,53)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1823.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (149 samples, 0.06%)</title><rect x="5.6482%" y="1797" width="0.0598%" height="15" fill="rgb(228,201,54)" fg:x="14066" fg:w="149"/><text x="5.8982%" y="1807.50"></text></g><g><title>tokio::runtime::driver::Driver::park (101 samples, 0.04%)</title><rect x="5.7116%" y="1973" width="0.0406%" height="15" fill="rgb(222,22,37)" fg:x="14224" fg:w="101"/><text x="5.9616%" y="1983.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (27 samples, 0.01%)</title><rect x="5.7522%" y="1973" width="0.0108%" height="15" fill="rgb(237,53,32)" fg:x="14325" fg:w="27"/><text x="6.0022%" y="1983.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (55 samples, 0.02%)</title><rect x="5.7630%" y="1973" width="0.0221%" height="15" fill="rgb(233,25,53)" fg:x="14352" fg:w="55"/><text x="6.0130%" y="1983.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (28 samples, 0.01%)</title><rect x="5.7851%" y="1973" width="0.0112%" height="15" fill="rgb(210,40,34)" fg:x="14407" fg:w="28"/><text x="6.0351%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (184 samples, 0.07%)</title><rect x="5.7964%" y="1973" width="0.0739%" height="15" fill="rgb(241,220,44)" fg:x="14435" fg:w="184"/><text x="6.0464%" y="1983.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (32 samples, 0.01%)</title><rect x="5.8574%" y="1957" width="0.0128%" height="15" fill="rgb(235,28,35)" fg:x="14587" fg:w="32"/><text x="6.1074%" y="1967.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="5.8574%" y="1941" width="0.0128%" height="15" fill="rgb(210,56,17)" fg:x="14587" fg:w="32"/><text x="6.1074%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (28 samples, 0.01%)</title><rect x="5.8791%" y="1973" width="0.0112%" height="15" fill="rgb(224,130,29)" fg:x="14641" fg:w="28"/><text x="6.1291%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (36 samples, 0.01%)</title><rect x="5.8992%" y="1973" width="0.0145%" height="15" fill="rgb(235,212,8)" fg:x="14691" fg:w="36"/><text x="6.1492%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (32 samples, 0.01%)</title><rect x="5.9008%" y="1957" width="0.0128%" height="15" fill="rgb(223,33,50)" fg:x="14695" fg:w="32"/><text x="6.1508%" y="1967.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (32 samples, 0.01%)</title><rect x="5.9008%" y="1941" width="0.0128%" height="15" fill="rgb(219,149,13)" fg:x="14695" fg:w="32"/><text x="6.1508%" y="1951.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.01%)</title><rect x="5.9008%" y="1925" width="0.0128%" height="15" fill="rgb(250,156,29)" fg:x="14695" fg:w="32"/><text x="6.1508%" y="1935.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.01%)</title><rect x="5.9008%" y="1909" width="0.0128%" height="15" fill="rgb(216,193,19)" fg:x="14695" fg:w="32"/><text x="6.1508%" y="1919.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (118 samples, 0.05%)</title><rect x="5.9136%" y="1973" width="0.0474%" height="15" fill="rgb(216,135,14)" fg:x="14727" fg:w="118"/><text x="6.1636%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (28 samples, 0.01%)</title><rect x="5.9903%" y="1957" width="0.0112%" height="15" fill="rgb(241,47,5)" fg:x="14918" fg:w="28"/><text x="6.2403%" y="1967.50"></text></g><g><title>core::mem::replace (28 samples, 0.01%)</title><rect x="5.9903%" y="1941" width="0.0112%" height="15" fill="rgb(233,42,35)" fg:x="14918" fg:w="28"/><text x="6.2403%" y="1951.50"></text></g><g><title>core::ptr::read (28 samples, 0.01%)</title><rect x="5.9903%" y="1925" width="0.0112%" height="15" fill="rgb(231,13,6)" fg:x="14918" fg:w="28"/><text x="6.2403%" y="1935.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (106 samples, 0.04%)</title><rect x="5.9610%" y="1973" width="0.0426%" height="15" fill="rgb(207,181,40)" fg:x="14845" fg:w="106"/><text x="6.2110%" y="1983.50"></text></g><g><title>tokio::runtime::coop::budget (163 samples, 0.07%)</title><rect x="6.0321%" y="1957" width="0.0655%" height="15" fill="rgb(254,173,49)" fg:x="15022" fg:w="163"/><text x="6.2821%" y="1967.50"></text></g><g><title>tokio::runtime::coop::with_budget (163 samples, 0.07%)</title><rect x="6.0321%" y="1941" width="0.0655%" height="15" fill="rgb(221,1,38)" fg:x="15022" fg:w="163"/><text x="6.2821%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (163 samples, 0.07%)</title><rect x="6.0321%" y="1925" width="0.0655%" height="15" fill="rgb(206,124,46)" fg:x="15022" fg:w="163"/><text x="6.2821%" y="1935.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (162 samples, 0.07%)</title><rect x="6.0325%" y="1909" width="0.0651%" height="15" fill="rgb(249,21,11)" fg:x="15023" fg:w="162"/><text x="6.2825%" y="1919.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (162 samples, 0.07%)</title><rect x="6.0325%" y="1893" width="0.0651%" height="15" fill="rgb(222,201,40)" fg:x="15023" fg:w="162"/><text x="6.2825%" y="1903.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (237 samples, 0.10%)</title><rect x="6.0036%" y="1973" width="0.0952%" height="15" fill="rgb(235,61,29)" fg:x="14951" fg:w="237"/><text x="6.2536%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (38 samples, 0.02%)</title><rect x="6.0987%" y="1973" width="0.0153%" height="15" fill="rgb(219,207,3)" fg:x="15188" fg:w="38"/><text x="6.3487%" y="1983.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (66 samples, 0.03%)</title><rect x="6.1626%" y="1573" width="0.0265%" height="15" fill="rgb(222,56,46)" fg:x="15347" fg:w="66"/><text x="6.4126%" y="1583.50"></text></g><g><title>std::time::Instant::duration_since (66 samples, 0.03%)</title><rect x="6.1626%" y="1557" width="0.0265%" height="15" fill="rgb(239,76,54)" fg:x="15347" fg:w="66"/><text x="6.4126%" y="1567.50"></text></g><g><title>std::time::Instant::checked_duration_since (66 samples, 0.03%)</title><rect x="6.1626%" y="1541" width="0.0265%" height="15" fill="rgb(231,124,27)" fg:x="15347" fg:w="66"/><text x="6.4126%" y="1551.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (66 samples, 0.03%)</title><rect x="6.1626%" y="1525" width="0.0265%" height="15" fill="rgb(249,195,6)" fg:x="15347" fg:w="66"/><text x="6.4126%" y="1535.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (167 samples, 0.07%)</title><rect x="6.1264%" y="1589" width="0.0671%" height="15" fill="rgb(237,174,47)" fg:x="15257" fg:w="167"/><text x="6.3764%" y="1599.50"></text></g><g><title>tokio::runtime::task::raw::poll (183 samples, 0.07%)</title><rect x="6.1236%" y="1973" width="0.0735%" height="15" fill="rgb(206,201,31)" fg:x="15250" fg:w="183"/><text x="6.3736%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (182 samples, 0.07%)</title><rect x="6.1240%" y="1957" width="0.0731%" height="15" fill="rgb(231,57,52)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1967.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (182 samples, 0.07%)</title><rect x="6.1240%" y="1941" width="0.0731%" height="15" fill="rgb(248,177,22)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1951.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (182 samples, 0.07%)</title><rect x="6.1240%" y="1925" width="0.0731%" height="15" fill="rgb(215,211,37)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1935.50"></text></g><g><title>std::panic::catch_unwind (182 samples, 0.07%)</title><rect x="6.1240%" y="1909" width="0.0731%" height="15" fill="rgb(241,128,51)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1919.50"></text></g><g><title>std::panicking::try (182 samples, 0.07%)</title><rect x="6.1240%" y="1893" width="0.0731%" height="15" fill="rgb(227,165,31)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1903.50"></text></g><g><title>std::panicking::try::do_call (182 samples, 0.07%)</title><rect x="6.1240%" y="1877" width="0.0731%" height="15" fill="rgb(228,167,24)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1887.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (182 samples, 0.07%)</title><rect x="6.1240%" y="1861" width="0.0731%" height="15" fill="rgb(228,143,12)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1871.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1845" width="0.0731%" height="15" fill="rgb(249,149,8)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1855.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (182 samples, 0.07%)</title><rect x="6.1240%" y="1829" width="0.0731%" height="15" fill="rgb(243,35,44)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1839.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (182 samples, 0.07%)</title><rect x="6.1240%" y="1813" width="0.0731%" height="15" fill="rgb(246,89,9)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1823.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1797" width="0.0731%" height="15" fill="rgb(233,213,13)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1807.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (182 samples, 0.07%)</title><rect x="6.1240%" y="1781" width="0.0731%" height="15" fill="rgb(233,141,41)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1791.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1765" width="0.0731%" height="15" fill="rgb(239,167,4)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1775.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (182 samples, 0.07%)</title><rect x="6.1240%" y="1749" width="0.0731%" height="15" fill="rgb(209,217,16)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1759.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (182 samples, 0.07%)</title><rect x="6.1240%" y="1733" width="0.0731%" height="15" fill="rgb(219,88,35)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1743.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1717" width="0.0731%" height="15" fill="rgb(220,193,23)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1727.50"></text></g><g><title>tokio::runtime::context::set_scheduler (182 samples, 0.07%)</title><rect x="6.1240%" y="1701" width="0.0731%" height="15" fill="rgb(230,90,52)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1711.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (182 samples, 0.07%)</title><rect x="6.1240%" y="1685" width="0.0731%" height="15" fill="rgb(252,106,19)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1695.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (182 samples, 0.07%)</title><rect x="6.1240%" y="1669" width="0.0731%" height="15" fill="rgb(206,74,20)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1679.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1653" width="0.0731%" height="15" fill="rgb(230,138,44)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1663.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (182 samples, 0.07%)</title><rect x="6.1240%" y="1637" width="0.0731%" height="15" fill="rgb(235,182,43)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1647.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (182 samples, 0.07%)</title><rect x="6.1240%" y="1621" width="0.0731%" height="15" fill="rgb(242,16,51)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1631.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (182 samples, 0.07%)</title><rect x="6.1240%" y="1605" width="0.0731%" height="15" fill="rgb(248,9,4)" fg:x="15251" fg:w="182"/><text x="6.3740%" y="1615.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (76 samples, 0.03%)</title><rect x="6.1975%" y="1973" width="0.0305%" height="15" fill="rgb(210,31,22)" fg:x="15434" fg:w="76"/><text x="6.4475%" y="1983.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (132 samples, 0.05%)</title><rect x="6.2292%" y="1941" width="0.0530%" height="15" fill="rgb(239,54,39)" fg:x="15513" fg:w="132"/><text x="6.4792%" y="1951.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (310 samples, 0.12%)</title><rect x="6.2280%" y="1973" width="0.1245%" height="15" fill="rgb(230,99,41)" fg:x="15510" fg:w="310"/><text x="6.4780%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (307 samples, 0.12%)</title><rect x="6.2292%" y="1957" width="0.1233%" height="15" fill="rgb(253,106,12)" fg:x="15513" fg:w="307"/><text x="6.4792%" y="1967.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (175 samples, 0.07%)</title><rect x="6.2822%" y="1941" width="0.0703%" height="15" fill="rgb(213,46,41)" fg:x="15645" fg:w="175"/><text x="6.5322%" y="1951.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (175 samples, 0.07%)</title><rect x="6.2822%" y="1925" width="0.0703%" height="15" fill="rgb(215,133,35)" fg:x="15645" fg:w="175"/><text x="6.5322%" y="1935.50"></text></g><g><title>tokio::runtime::task::state::State::load (175 samples, 0.07%)</title><rect x="6.2822%" y="1909" width="0.0703%" height="15" fill="rgb(213,28,5)" fg:x="15645" fg:w="175"/><text x="6.5322%" y="1919.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (175 samples, 0.07%)</title><rect x="6.2822%" y="1893" width="0.0703%" height="15" fill="rgb(215,77,49)" fg:x="15645" fg:w="175"/><text x="6.5322%" y="1903.50"></text></g><g><title>core::sync::atomic::atomic_load (175 samples, 0.07%)</title><rect x="6.2822%" y="1877" width="0.0703%" height="15" fill="rgb(248,100,22)" fg:x="15645" fg:w="175"/><text x="6.5322%" y="1887.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (408 samples, 0.16%)</title><rect x="6.3561%" y="1973" width="0.1638%" height="15" fill="rgb(208,67,9)" fg:x="15829" fg:w="408"/><text x="6.6061%" y="1983.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (37 samples, 0.01%)</title><rect x="6.5051%" y="1957" width="0.0149%" height="15" fill="rgb(219,133,21)" fg:x="16200" fg:w="37"/><text x="6.7551%" y="1967.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (37 samples, 0.01%)</title><rect x="6.5051%" y="1941" width="0.0149%" height="15" fill="rgb(246,46,29)" fg:x="16200" fg:w="37"/><text x="6.7551%" y="1951.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (81 samples, 0.03%)</title><rect x="6.5204%" y="1973" width="0.0325%" height="15" fill="rgb(246,185,52)" fg:x="16238" fg:w="81"/><text x="6.7704%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (321 samples, 0.13%)</title><rect x="6.5529%" y="1973" width="0.1289%" height="15" fill="rgb(252,136,11)" fg:x="16319" fg:w="321"/><text x="6.8029%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (557 samples, 0.22%)</title><rect x="6.6898%" y="1973" width="0.2237%" height="15" fill="rgb(219,138,53)" fg:x="16660" fg:w="557"/><text x="6.9398%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (51 samples, 0.02%)</title><rect x="6.8930%" y="1957" width="0.0205%" height="15" fill="rgb(211,51,23)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (51 samples, 0.02%)</title><rect x="6.8930%" y="1941" width="0.0205%" height="15" fill="rgb(247,221,28)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1951.50"></text></g><g><title>alloc::alloc::exchange_malloc (51 samples, 0.02%)</title><rect x="6.8930%" y="1925" width="0.0205%" height="15" fill="rgb(251,222,45)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.02%)</title><rect x="6.8930%" y="1909" width="0.0205%" height="15" fill="rgb(217,162,53)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.02%)</title><rect x="6.8930%" y="1893" width="0.0205%" height="15" fill="rgb(229,93,14)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (51 samples, 0.02%)</title><rect x="6.8930%" y="1877" width="0.0205%" height="15" fill="rgb(209,67,49)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1887.50"></text></g><g><title>__rust_alloc (51 samples, 0.02%)</title><rect x="6.8930%" y="1861" width="0.0205%" height="15" fill="rgb(213,87,29)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (51 samples, 0.02%)</title><rect x="6.8930%" y="1845" width="0.0205%" height="15" fill="rgb(205,151,52)" fg:x="17166" fg:w="51"/><text x="7.1430%" y="1855.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (26 samples, 0.01%)</title><rect x="6.9135%" y="1973" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="17217" fg:w="26"/><text x="7.1635%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (126 samples, 0.05%)</title><rect x="6.9243%" y="1973" width="0.0506%" height="15" fill="rgb(221,220,41)" fg:x="17244" fg:w="126"/><text x="7.1743%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (121 samples, 0.05%)</title><rect x="6.9749%" y="1973" width="0.0486%" height="15" fill="rgb(218,133,21)" fg:x="17370" fg:w="121"/><text x="7.2249%" y="1983.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (46 samples, 0.02%)</title><rect x="7.1026%" y="1957" width="0.0185%" height="15" fill="rgb(221,193,43)" fg:x="17688" fg:w="46"/><text x="7.3526%" y="1967.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (46 samples, 0.02%)</title><rect x="7.1026%" y="1941" width="0.0185%" height="15" fill="rgb(240,128,52)" fg:x="17688" fg:w="46"/><text x="7.3526%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (46 samples, 0.02%)</title><rect x="7.1026%" y="1925" width="0.0185%" height="15" fill="rgb(253,114,12)" fg:x="17688" fg:w="46"/><text x="7.3526%" y="1935.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (46 samples, 0.02%)</title><rect x="7.1026%" y="1909" width="0.0185%" height="15" fill="rgb(215,223,47)" fg:x="17688" fg:w="46"/><text x="7.3526%" y="1919.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (232 samples, 0.09%)</title><rect x="7.0396%" y="1973" width="0.0932%" height="15" fill="rgb(248,225,23)" fg:x="17531" fg:w="232"/><text x="7.2896%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (29 samples, 0.01%)</title><rect x="7.1211%" y="1957" width="0.0116%" height="15" fill="rgb(250,108,0)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.01%)</title><rect x="7.1211%" y="1941" width="0.0116%" height="15" fill="rgb(228,208,7)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="7.1211%" y="1925" width="0.0116%" height="15" fill="rgb(244,45,10)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="7.1211%" y="1909" width="0.0116%" height="15" fill="rgb(207,125,25)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="7.1211%" y="1893" width="0.0116%" height="15" fill="rgb(210,195,18)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (29 samples, 0.01%)</title><rect x="7.1211%" y="1877" width="0.0116%" height="15" fill="rgb(249,80,12)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.01%)</title><rect x="7.1211%" y="1861" width="0.0116%" height="15" fill="rgb(221,65,9)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.01%)</title><rect x="7.1211%" y="1845" width="0.0116%" height="15" fill="rgb(235,49,36)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="7.1211%" y="1829" width="0.0116%" height="15" fill="rgb(225,32,20)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1839.50"></text></g><g><title>__rust_alloc (29 samples, 0.01%)</title><rect x="7.1211%" y="1813" width="0.0116%" height="15" fill="rgb(215,141,46)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (29 samples, 0.01%)</title><rect x="7.1211%" y="1797" width="0.0116%" height="15" fill="rgb(250,160,47)" fg:x="17734" fg:w="29"/><text x="7.3711%" y="1807.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (496 samples, 0.20%)</title><rect x="7.1327%" y="1973" width="0.1992%" height="15" fill="rgb(216,222,40)" fg:x="17763" fg:w="496"/><text x="7.3827%" y="1983.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (25 samples, 0.01%)</title><rect x="7.3219%" y="1957" width="0.0100%" height="15" fill="rgb(234,217,39)" fg:x="18234" fg:w="25"/><text x="7.5719%" y="1967.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (25 samples, 0.01%)</title><rect x="7.3219%" y="1941" width="0.0100%" height="15" fill="rgb(207,178,40)" fg:x="18234" fg:w="25"/><text x="7.5719%" y="1951.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (33 samples, 0.01%)</title><rect x="7.3905%" y="1925" width="0.0133%" height="15" fill="rgb(221,136,13)" fg:x="18405" fg:w="33"/><text x="7.6405%" y="1935.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (191 samples, 0.08%)</title><rect x="7.3319%" y="1973" width="0.0767%" height="15" fill="rgb(249,199,10)" fg:x="18259" fg:w="191"/><text x="7.5819%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (74 samples, 0.03%)</title><rect x="7.3789%" y="1957" width="0.0297%" height="15" fill="rgb(249,222,13)" fg:x="18376" fg:w="74"/><text x="7.6289%" y="1967.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (69 samples, 0.03%)</title><rect x="7.3809%" y="1941" width="0.0277%" height="15" fill="rgb(244,185,38)" fg:x="18381" fg:w="69"/><text x="7.6309%" y="1951.50"></text></g><g><title>[anon] (17,897 samples, 7.19%)</title><rect x="0.2233%" y="1989" width="7.1865%" height="15" fill="rgb(236,202,9)" fg:x="556" fg:w="17897"/><text x="0.4733%" y="1999.50">[anon]</text></g><g><title>futures_util::lock::mutex::Waiter::wake (44 samples, 0.02%)</title><rect x="7.4584%" y="1925" width="0.0177%" height="15" fill="rgb(250,229,37)" fg:x="18574" fg:w="44"/><text x="7.7084%" y="1935.50"></text></g><g><title>core::task::wake::Waker::wake (44 samples, 0.02%)</title><rect x="7.4584%" y="1909" width="0.0177%" height="15" fill="rgb(206,174,23)" fg:x="18574" fg:w="44"/><text x="7.7084%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (99 samples, 0.04%)</title><rect x="7.4367%" y="1973" width="0.0398%" height="15" fill="rgb(211,33,43)" fg:x="18520" fg:w="99"/><text x="7.6867%" y="1983.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="7.4584%" y="1957" width="0.0181%" height="15" fill="rgb(245,58,50)" fg:x="18574" fg:w="45"/><text x="7.7084%" y="1967.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (45 samples, 0.02%)</title><rect x="7.4584%" y="1941" width="0.0181%" height="15" fill="rgb(244,68,36)" fg:x="18574" fg:w="45"/><text x="7.7084%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (44 samples, 0.02%)</title><rect x="7.4833%" y="1973" width="0.0177%" height="15" fill="rgb(232,229,15)" fg:x="18636" fg:w="44"/><text x="7.7333%" y="1983.50"></text></g><g><title>[epoxy-server] (237 samples, 0.10%)</title><rect x="7.4098%" y="1989" width="0.0952%" height="15" fill="rgb(254,30,23)" fg:x="18453" fg:w="237"/><text x="7.6598%" y="1999.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.02%)</title><rect x="7.5608%" y="1317" width="0.0157%" height="15" fill="rgb(235,160,14)" fg:x="18829" fg:w="39"/><text x="7.8108%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (39 samples, 0.02%)</title><rect x="7.5608%" y="1301" width="0.0157%" height="15" fill="rgb(212,155,44)" fg:x="18829" fg:w="39"/><text x="7.8108%" y="1311.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (39 samples, 0.02%)</title><rect x="7.5608%" y="1285" width="0.0157%" height="15" fill="rgb(226,2,50)" fg:x="18829" fg:w="39"/><text x="7.8108%" y="1295.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (77 samples, 0.03%)</title><rect x="7.5764%" y="1317" width="0.0309%" height="15" fill="rgb(234,177,6)" fg:x="18868" fg:w="77"/><text x="7.8264%" y="1327.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (53 samples, 0.02%)</title><rect x="7.7451%" y="1301" width="0.0213%" height="15" fill="rgb(217,24,9)" fg:x="19288" fg:w="53"/><text x="7.9951%" y="1311.50"></text></g><g><title>std::time::Instant::duration_since (53 samples, 0.02%)</title><rect x="7.7451%" y="1285" width="0.0213%" height="15" fill="rgb(220,13,46)" fg:x="19288" fg:w="53"/><text x="7.9951%" y="1295.50"></text></g><g><title>std::time::Instant::checked_duration_since (53 samples, 0.02%)</title><rect x="7.7451%" y="1269" width="0.0213%" height="15" fill="rgb(239,221,27)" fg:x="19288" fg:w="53"/><text x="7.9951%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (53 samples, 0.02%)</title><rect x="7.7451%" y="1253" width="0.0213%" height="15" fill="rgb(222,198,25)" fg:x="19288" fg:w="53"/><text x="7.9951%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (43 samples, 0.02%)</title><rect x="7.7491%" y="1237" width="0.0173%" height="15" fill="rgb(211,99,13)" fg:x="19298" fg:w="43"/><text x="7.9991%" y="1247.50"></text></g><g><title>core::num::&lt;impl u128&gt;::leading_zeros (38 samples, 0.02%)</title><rect x="7.7905%" y="1253" width="0.0153%" height="15" fill="rgb(232,111,31)" fg:x="19401" fg:w="38"/><text x="8.0405%" y="1263.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (117 samples, 0.05%)</title><rect x="7.7680%" y="1269" width="0.0470%" height="15" fill="rgb(245,82,37)" fg:x="19345" fg:w="117"/><text x="8.0180%" y="1279.50"></text></g><g><title>__floattidf (143 samples, 0.06%)</title><rect x="7.7664%" y="1301" width="0.0574%" height="15" fill="rgb(227,149,46)" fg:x="19341" fg:w="143"/><text x="8.0164%" y="1311.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (140 samples, 0.06%)</title><rect x="7.7676%" y="1285" width="0.0562%" height="15" fill="rgb(218,36,50)" fg:x="19344" fg:w="140"/><text x="8.0176%" y="1295.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (2,111 samples, 0.85%)</title><rect x="7.8294%" y="1301" width="0.8477%" height="15" fill="rgb(226,80,48)" fg:x="19498" fg:w="2111"/><text x="8.0794%" y="1311.50"></text></g><g><title>pow (2,096 samples, 0.84%)</title><rect x="7.8354%" y="1285" width="0.8416%" height="15" fill="rgb(238,224,15)" fg:x="19513" fg:w="2096"/><text x="8.0854%" y="1295.50"></text></g><g><title>[libm.so.6] (1,367 samples, 0.55%)</title><rect x="8.1282%" y="1269" width="0.5489%" height="15" fill="rgb(241,136,10)" fg:x="20242" fg:w="1367"/><text x="8.3782%" y="1279.50"></text></g><g><title>clock_gettime (810 samples, 0.33%)</title><rect x="8.6976%" y="1285" width="0.3253%" height="15" fill="rgb(208,32,45)" fg:x="21660" fg:w="810"/><text x="8.9476%" y="1295.50"></text></g><g><title>__vdso_clock_gettime (387 samples, 0.16%)</title><rect x="8.8674%" y="1269" width="0.1554%" height="15" fill="rgb(207,135,9)" fg:x="22083" fg:w="387"/><text x="9.1174%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (867 samples, 0.35%)</title><rect x="8.6771%" y="1301" width="0.3481%" height="15" fill="rgb(206,86,44)" fg:x="21609" fg:w="867"/><text x="8.9271%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (3,525 samples, 1.42%)</title><rect x="7.6114%" y="1317" width="1.4155%" height="15" fill="rgb(245,177,15)" fg:x="18955" fg:w="3525"/><text x="7.8614%" y="1327.50"></text></g><g><title>clock_gettime (865 samples, 0.35%)</title><rect x="9.0674%" y="1285" width="0.3473%" height="15" fill="rgb(206,64,50)" fg:x="22581" fg:w="865"/><text x="9.3174%" y="1295.50"></text></g><g><title>__vdso_clock_gettime (439 samples, 0.18%)</title><rect x="9.2385%" y="1269" width="0.1763%" height="15" fill="rgb(234,36,40)" fg:x="23007" fg:w="439"/><text x="9.4885%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (962 samples, 0.39%)</title><rect x="9.0301%" y="1301" width="0.3863%" height="15" fill="rgb(213,64,8)" fg:x="22488" fg:w="962"/><text x="9.2801%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (972 samples, 0.39%)</title><rect x="9.0268%" y="1317" width="0.3903%" height="15" fill="rgb(210,75,36)" fg:x="22480" fg:w="972"/><text x="9.2768%" y="1327.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (57 samples, 0.02%)</title><rect x="9.4485%" y="1285" width="0.0229%" height="15" fill="rgb(229,88,21)" fg:x="23530" fg:w="57"/><text x="9.6985%" y="1295.50"></text></g><g><title>pow (57 samples, 0.02%)</title><rect x="9.4485%" y="1269" width="0.0229%" height="15" fill="rgb(252,204,47)" fg:x="23530" fg:w="57"/><text x="9.6985%" y="1279.50"></text></g><g><title>[libm.so.6] (40 samples, 0.02%)</title><rect x="9.4553%" y="1253" width="0.0161%" height="15" fill="rgb(208,77,27)" fg:x="23547" fg:w="40"/><text x="9.7053%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (86 samples, 0.03%)</title><rect x="9.4445%" y="1301" width="0.0345%" height="15" fill="rgb(221,76,26)" fg:x="23520" fg:w="86"/><text x="9.6945%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.02%)</title><rect x="9.4951%" y="1205" width="0.0221%" height="15" fill="rgb(225,139,18)" fg:x="23646" fg:w="55"/><text x="9.7451%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (55 samples, 0.02%)</title><rect x="9.4951%" y="1189" width="0.0221%" height="15" fill="rgb(230,137,11)" fg:x="23646" fg:w="55"/><text x="9.7451%" y="1199.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (53 samples, 0.02%)</title><rect x="9.4959%" y="1173" width="0.0213%" height="15" fill="rgb(212,28,1)" fg:x="23648" fg:w="53"/><text x="9.7459%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (53 samples, 0.02%)</title><rect x="9.4959%" y="1157" width="0.0213%" height="15" fill="rgb(248,164,17)" fg:x="23648" fg:w="53"/><text x="9.7459%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (53 samples, 0.02%)</title><rect x="9.4959%" y="1141" width="0.0213%" height="15" fill="rgb(222,171,42)" fg:x="23648" fg:w="53"/><text x="9.7459%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (50 samples, 0.02%)</title><rect x="9.4971%" y="1125" width="0.0201%" height="15" fill="rgb(243,84,45)" fg:x="23651" fg:w="50"/><text x="9.7471%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (71 samples, 0.03%)</title><rect x="9.4951%" y="1253" width="0.0285%" height="15" fill="rgb(252,49,23)" fg:x="23646" fg:w="71"/><text x="9.7451%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (71 samples, 0.03%)</title><rect x="9.4951%" y="1237" width="0.0285%" height="15" fill="rgb(215,19,7)" fg:x="23646" fg:w="71"/><text x="9.7451%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (71 samples, 0.03%)</title><rect x="9.4951%" y="1221" width="0.0285%" height="15" fill="rgb(238,81,41)" fg:x="23646" fg:w="71"/><text x="9.7451%" y="1231.50"></text></g><g><title>mio::poll::Poll::poll (26 samples, 0.01%)</title><rect x="9.5348%" y="1237" width="0.0104%" height="15" fill="rgb(210,199,37)" fg:x="23745" fg:w="26"/><text x="9.7848%" y="1247.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (25 samples, 0.01%)</title><rect x="9.5352%" y="1221" width="0.0100%" height="15" fill="rgb(244,192,49)" fg:x="23746" fg:w="25"/><text x="9.7852%" y="1231.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (87 samples, 0.03%)</title><rect x="9.5332%" y="1253" width="0.0349%" height="15" fill="rgb(226,211,11)" fg:x="23741" fg:w="87"/><text x="9.7832%" y="1263.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (38 samples, 0.02%)</title><rect x="9.5529%" y="1237" width="0.0153%" height="15" fill="rgb(236,162,54)" fg:x="23790" fg:w="38"/><text x="9.8029%" y="1247.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (27 samples, 0.01%)</title><rect x="9.5573%" y="1221" width="0.0108%" height="15" fill="rgb(220,229,9)" fg:x="23801" fg:w="27"/><text x="9.8073%" y="1231.50"></text></g><g><title>core::task::wake::Waker::wake (25 samples, 0.01%)</title><rect x="9.5581%" y="1205" width="0.0100%" height="15" fill="rgb(250,87,22)" fg:x="23803" fg:w="25"/><text x="9.8081%" y="1215.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (25 samples, 0.01%)</title><rect x="9.5581%" y="1189" width="0.0100%" height="15" fill="rgb(239,43,17)" fg:x="23803" fg:w="25"/><text x="9.8081%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (25 samples, 0.01%)</title><rect x="9.5581%" y="1173" width="0.0100%" height="15" fill="rgb(231,177,25)" fg:x="23803" fg:w="25"/><text x="9.8081%" y="1183.50"></text></g><g><title>core::mem::drop (25 samples, 0.01%)</title><rect x="9.5726%" y="1093" width="0.0100%" height="15" fill="rgb(219,179,1)" fg:x="23839" fg:w="25"/><text x="9.8226%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.03%)</title><rect x="9.5701%" y="1173" width="0.0273%" height="15" fill="rgb(238,219,53)" fg:x="23833" fg:w="68"/><text x="9.8201%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (68 samples, 0.03%)</title><rect x="9.5701%" y="1157" width="0.0273%" height="15" fill="rgb(232,167,36)" fg:x="23833" fg:w="68"/><text x="9.8201%" y="1167.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (68 samples, 0.03%)</title><rect x="9.5701%" y="1141" width="0.0273%" height="15" fill="rgb(244,19,51)" fg:x="23833" fg:w="68"/><text x="9.8201%" y="1151.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (67 samples, 0.03%)</title><rect x="9.5705%" y="1125" width="0.0269%" height="15" fill="rgb(224,6,22)" fg:x="23834" fg:w="67"/><text x="9.8205%" y="1135.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (67 samples, 0.03%)</title><rect x="9.5705%" y="1109" width="0.0269%" height="15" fill="rgb(224,145,5)" fg:x="23834" fg:w="67"/><text x="9.8205%" y="1119.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (119 samples, 0.05%)</title><rect x="9.5697%" y="1237" width="0.0478%" height="15" fill="rgb(234,130,49)" fg:x="23832" fg:w="119"/><text x="9.8197%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (118 samples, 0.05%)</title><rect x="9.5701%" y="1221" width="0.0474%" height="15" fill="rgb(254,6,2)" fg:x="23833" fg:w="118"/><text x="9.8201%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (118 samples, 0.05%)</title><rect x="9.5701%" y="1205" width="0.0474%" height="15" fill="rgb(208,96,46)" fg:x="23833" fg:w="118"/><text x="9.8201%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (118 samples, 0.05%)</title><rect x="9.5701%" y="1189" width="0.0474%" height="15" fill="rgb(239,3,39)" fg:x="23833" fg:w="118"/><text x="9.8201%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="9.5974%" y="1173" width="0.0201%" height="15" fill="rgb(233,210,1)" fg:x="23901" fg:w="50"/><text x="9.8474%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (50 samples, 0.02%)</title><rect x="9.5974%" y="1157" width="0.0201%" height="15" fill="rgb(244,137,37)" fg:x="23901" fg:w="50"/><text x="9.8474%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (50 samples, 0.02%)</title><rect x="9.5974%" y="1141" width="0.0201%" height="15" fill="rgb(240,136,2)" fg:x="23901" fg:w="50"/><text x="9.8474%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (49 samples, 0.02%)</title><rect x="9.5978%" y="1125" width="0.0197%" height="15" fill="rgb(239,18,37)" fg:x="23902" fg:w="49"/><text x="9.8478%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (49 samples, 0.02%)</title><rect x="9.5978%" y="1109" width="0.0197%" height="15" fill="rgb(218,185,22)" fg:x="23902" fg:w="49"/><text x="9.8478%" y="1119.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (49 samples, 0.02%)</title><rect x="9.5978%" y="1093" width="0.0197%" height="15" fill="rgb(225,218,4)" fg:x="23902" fg:w="49"/><text x="9.8478%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (48 samples, 0.02%)</title><rect x="9.5982%" y="1077" width="0.0193%" height="15" fill="rgb(230,182,32)" fg:x="23903" fg:w="48"/><text x="9.8482%" y="1087.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (128 samples, 0.05%)</title><rect x="9.5689%" y="1253" width="0.0514%" height="15" fill="rgb(242,56,43)" fg:x="23830" fg:w="128"/><text x="9.8189%" y="1263.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (329 samples, 0.13%)</title><rect x="9.4938%" y="1269" width="0.1321%" height="15" fill="rgb(233,99,24)" fg:x="23643" fg:w="329"/><text x="9.7438%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (349 samples, 0.14%)</title><rect x="9.4902%" y="1285" width="0.1401%" height="15" fill="rgb(234,209,42)" fg:x="23634" fg:w="349"/><text x="9.7402%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (369 samples, 0.15%)</title><rect x="9.4826%" y="1301" width="0.1482%" height="15" fill="rgb(227,7,12)" fg:x="23615" fg:w="369"/><text x="9.7326%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (554 samples, 0.22%)</title><rect x="9.4172%" y="1317" width="0.2225%" height="15" fill="rgb(245,203,43)" fg:x="23452" fg:w="554"/><text x="9.6672%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (65 samples, 0.03%)</title><rect x="9.8480%" y="1301" width="0.0261%" height="15" fill="rgb(238,205,33)" fg:x="24525" fg:w="65"/><text x="10.0980%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (65 samples, 0.03%)</title><rect x="9.8480%" y="1285" width="0.0261%" height="15" fill="rgb(231,56,7)" fg:x="24525" fg:w="65"/><text x="10.0980%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (65 samples, 0.03%)</title><rect x="9.8480%" y="1269" width="0.0261%" height="15" fill="rgb(244,186,29)" fg:x="24525" fg:w="65"/><text x="10.0980%" y="1279.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (25 samples, 0.01%)</title><rect x="9.9665%" y="1285" width="0.0100%" height="15" fill="rgb(234,111,31)" fg:x="24820" fg:w="25"/><text x="10.2165%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (25 samples, 0.01%)</title><rect x="9.9665%" y="1269" width="0.0100%" height="15" fill="rgb(241,149,10)" fg:x="24820" fg:w="25"/><text x="10.2165%" y="1279.50"></text></g><g><title>core::cell::BorrowRefMut::new (25 samples, 0.01%)</title><rect x="9.9665%" y="1253" width="0.0100%" height="15" fill="rgb(249,206,44)" fg:x="24820" fg:w="25"/><text x="10.2165%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (25 samples, 0.01%)</title><rect x="9.9765%" y="1285" width="0.0100%" height="15" fill="rgb(251,153,30)" fg:x="24845" fg:w="25"/><text x="10.2265%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (211 samples, 0.08%)</title><rect x="10.0006%" y="1285" width="0.0847%" height="15" fill="rgb(239,152,38)" fg:x="24905" fg:w="211"/><text x="10.2506%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (79 samples, 0.03%)</title><rect x="10.0885%" y="1253" width="0.0317%" height="15" fill="rgb(249,139,47)" fg:x="25124" fg:w="79"/><text x="10.3385%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (79 samples, 0.03%)</title><rect x="10.0885%" y="1237" width="0.0317%" height="15" fill="rgb(244,64,35)" fg:x="25124" fg:w="79"/><text x="10.3385%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (46 samples, 0.02%)</title><rect x="10.1219%" y="1253" width="0.0185%" height="15" fill="rgb(216,46,15)" fg:x="25207" fg:w="46"/><text x="10.3719%" y="1263.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (31 samples, 0.01%)</title><rect x="10.1279%" y="1237" width="0.0124%" height="15" fill="rgb(250,74,19)" fg:x="25222" fg:w="31"/><text x="10.3779%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.01%)</title><rect x="10.1279%" y="1221" width="0.0124%" height="15" fill="rgb(249,42,33)" fg:x="25222" fg:w="31"/><text x="10.3779%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.01%)</title><rect x="10.1279%" y="1205" width="0.0124%" height="15" fill="rgb(242,149,17)" fg:x="25222" fg:w="31"/><text x="10.3779%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (140 samples, 0.06%)</title><rect x="10.0853%" y="1285" width="0.0562%" height="15" fill="rgb(244,29,21)" fg:x="25116" fg:w="140"/><text x="10.3353%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (140 samples, 0.06%)</title><rect x="10.0853%" y="1269" width="0.0562%" height="15" fill="rgb(220,130,37)" fg:x="25116" fg:w="140"/><text x="10.3353%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (32 samples, 0.01%)</title><rect x="10.1484%" y="1269" width="0.0128%" height="15" fill="rgb(211,67,2)" fg:x="25273" fg:w="32"/><text x="10.3984%" y="1279.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (137 samples, 0.06%)</title><rect x="10.1612%" y="1269" width="0.0550%" height="15" fill="rgb(235,68,52)" fg:x="25305" fg:w="137"/><text x="10.4112%" y="1279.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (137 samples, 0.06%)</title><rect x="10.1612%" y="1253" width="0.0550%" height="15" fill="rgb(246,142,3)" fg:x="25305" fg:w="137"/><text x="10.4112%" y="1263.50"></text></g><g><title>core::cell::BorrowRefMut::new (137 samples, 0.06%)</title><rect x="10.1612%" y="1237" width="0.0550%" height="15" fill="rgb(241,25,7)" fg:x="25305" fg:w="137"/><text x="10.4112%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (173 samples, 0.07%)</title><rect x="10.1484%" y="1285" width="0.0695%" height="15" fill="rgb(242,119,39)" fg:x="25273" fg:w="173"/><text x="10.3984%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (299 samples, 0.12%)</title><rect x="10.2259%" y="1253" width="0.1201%" height="15" fill="rgb(241,98,45)" fg:x="25466" fg:w="299"/><text x="10.4759%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (299 samples, 0.12%)</title><rect x="10.2259%" y="1237" width="0.1201%" height="15" fill="rgb(254,28,30)" fg:x="25466" fg:w="299"/><text x="10.4759%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;()&gt;&gt; (32 samples, 0.01%)</title><rect x="10.3532%" y="1237" width="0.0128%" height="15" fill="rgb(241,142,54)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (32 samples, 0.01%)</title><rect x="10.3532%" y="1221" width="0.0128%" height="15" fill="rgb(222,85,15)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="10.3532%" y="1205" width="0.0128%" height="15" fill="rgb(210,85,47)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (32 samples, 0.01%)</title><rect x="10.3532%" y="1189" width="0.0128%" height="15" fill="rgb(224,206,25)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (32 samples, 0.01%)</title><rect x="10.3532%" y="1173" width="0.0128%" height="15" fill="rgb(243,201,19)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.01%)</title><rect x="10.3532%" y="1157" width="0.0128%" height="15" fill="rgb(236,59,4)" fg:x="25783" fg:w="32"/><text x="10.6032%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (339 samples, 0.14%)</title><rect x="10.3668%" y="1237" width="0.1361%" height="15" fill="rgb(254,179,45)" fg:x="25817" fg:w="339"/><text x="10.6168%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (339 samples, 0.14%)</title><rect x="10.3668%" y="1221" width="0.1361%" height="15" fill="rgb(226,14,10)" fg:x="25817" fg:w="339"/><text x="10.6168%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (325 samples, 0.13%)</title><rect x="10.5082%" y="1189" width="0.1305%" height="15" fill="rgb(244,27,41)" fg:x="26169" fg:w="325"/><text x="10.7582%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (321 samples, 0.13%)</title><rect x="10.5098%" y="1173" width="0.1289%" height="15" fill="rgb(235,35,32)" fg:x="26173" fg:w="321"/><text x="10.7598%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (321 samples, 0.13%)</title><rect x="10.5098%" y="1157" width="0.1289%" height="15" fill="rgb(218,68,31)" fg:x="26173" fg:w="321"/><text x="10.7598%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (762 samples, 0.31%)</title><rect x="10.7025%" y="1125" width="0.3060%" height="15" fill="rgb(207,120,37)" fg:x="26653" fg:w="762"/><text x="10.9525%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (762 samples, 0.31%)</title><rect x="10.7025%" y="1109" width="0.3060%" height="15" fill="rgb(227,98,0)" fg:x="26653" fg:w="762"/><text x="10.9525%" y="1119.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,099 samples, 0.44%)</title><rect x="10.6869%" y="1141" width="0.4413%" height="15" fill="rgb(207,7,3)" fg:x="26614" fg:w="1099"/><text x="10.9369%" y="1151.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (298 samples, 0.12%)</title><rect x="11.0085%" y="1125" width="0.1197%" height="15" fill="rgb(206,98,19)" fg:x="27415" fg:w="298"/><text x="11.2585%" y="1135.50"></text></g><g><title>syscall (295 samples, 0.12%)</title><rect x="11.0097%" y="1109" width="0.1185%" height="15" fill="rgb(217,5,26)" fg:x="27418" fg:w="295"/><text x="11.2597%" y="1119.50"></text></g><g><title>[unknown] (34 samples, 0.01%)</title><rect x="11.1145%" y="1093" width="0.0137%" height="15" fill="rgb(235,190,38)" fg:x="27679" fg:w="34"/><text x="11.3645%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (180 samples, 0.07%)</title><rect x="11.1298%" y="1141" width="0.0723%" height="15" fill="rgb(247,86,24)" fg:x="27717" fg:w="180"/><text x="11.3798%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (180 samples, 0.07%)</title><rect x="11.1298%" y="1125" width="0.0723%" height="15" fill="rgb(205,101,16)" fg:x="27717" fg:w="180"/><text x="11.3798%" y="1135.50"></text></g><g><title>core::mem::replace (179 samples, 0.07%)</title><rect x="11.1302%" y="1109" width="0.0719%" height="15" fill="rgb(246,168,33)" fg:x="27718" fg:w="179"/><text x="11.3802%" y="1119.50"></text></g><g><title>core::ptr::write (179 samples, 0.07%)</title><rect x="11.1302%" y="1093" width="0.0719%" height="15" fill="rgb(231,114,1)" fg:x="27718" fg:w="179"/><text x="11.3802%" y="1103.50"></text></g><g><title>core::ops::function::FnOnce::call_once (28 samples, 0.01%)</title><rect x="11.2020%" y="1141" width="0.0112%" height="15" fill="rgb(207,184,53)" fg:x="27897" fg:w="28"/><text x="11.4520%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (28 samples, 0.01%)</title><rect x="11.2020%" y="1125" width="0.0112%" height="15" fill="rgb(224,95,51)" fg:x="27897" fg:w="28"/><text x="11.4520%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (63 samples, 0.03%)</title><rect x="11.2193%" y="1125" width="0.0253%" height="15" fill="rgb(212,188,45)" fg:x="27940" fg:w="63"/><text x="11.4693%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (62 samples, 0.02%)</title><rect x="11.2197%" y="1109" width="0.0249%" height="15" fill="rgb(223,154,38)" fg:x="27941" fg:w="62"/><text x="11.4697%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (62 samples, 0.02%)</title><rect x="11.2197%" y="1093" width="0.0249%" height="15" fill="rgb(251,22,52)" fg:x="27941" fg:w="62"/><text x="11.4697%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::hash (95 samples, 0.04%)</title><rect x="11.2446%" y="1125" width="0.0381%" height="15" fill="rgb(229,209,22)" fg:x="28003" fg:w="95"/><text x="11.4946%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (470 samples, 0.19%)</title><rect x="11.2133%" y="1141" width="0.1887%" height="15" fill="rgb(234,138,34)" fg:x="27925" fg:w="470"/><text x="11.4633%" y="1151.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (297 samples, 0.12%)</title><rect x="11.2828%" y="1125" width="0.1193%" height="15" fill="rgb(212,95,11)" fg:x="28098" fg:w="297"/><text x="11.5328%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (296 samples, 0.12%)</title><rect x="11.2832%" y="1109" width="0.1189%" height="15" fill="rgb(240,179,47)" fg:x="28099" fg:w="296"/><text x="11.5332%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (296 samples, 0.12%)</title><rect x="11.2832%" y="1093" width="0.1189%" height="15" fill="rgb(240,163,11)" fg:x="28099" fg:w="296"/><text x="11.5332%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (2,015 samples, 0.81%)</title><rect x="10.6804%" y="1157" width="0.8091%" height="15" fill="rgb(236,37,12)" fg:x="26598" fg:w="2015"/><text x="10.9304%" y="1167.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (218 samples, 0.09%)</title><rect x="11.4020%" y="1141" width="0.0875%" height="15" fill="rgb(232,164,16)" fg:x="28395" fg:w="218"/><text x="11.6520%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (215 samples, 0.09%)</title><rect x="11.4032%" y="1125" width="0.0863%" height="15" fill="rgb(244,205,15)" fg:x="28398" fg:w="215"/><text x="11.6532%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (215 samples, 0.09%)</title><rect x="11.4032%" y="1109" width="0.0863%" height="15" fill="rgb(223,117,47)" fg:x="28398" fg:w="215"/><text x="11.6532%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (2,518 samples, 1.01%)</title><rect x="10.5029%" y="1237" width="1.0111%" height="15" fill="rgb(244,107,35)" fg:x="26156" fg:w="2518"/><text x="10.7529%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (2,518 samples, 1.01%)</title><rect x="10.5029%" y="1221" width="1.0111%" height="15" fill="rgb(205,140,8)" fg:x="26156" fg:w="2518"/><text x="10.7529%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2,518 samples, 1.01%)</title><rect x="10.5029%" y="1205" width="1.0111%" height="15" fill="rgb(228,84,46)" fg:x="26156" fg:w="2518"/><text x="10.7529%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::park (2,178 samples, 0.87%)</title><rect x="10.6395%" y="1189" width="0.8746%" height="15" fill="rgb(254,188,9)" fg:x="26496" fg:w="2178"/><text x="10.8895%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2,178 samples, 0.87%)</title><rect x="10.6395%" y="1173" width="0.8746%" height="15" fill="rgb(206,112,54)" fg:x="26496" fg:w="2178"/><text x="10.8895%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.02%)</title><rect x="11.4895%" y="1157" width="0.0245%" height="15" fill="rgb(216,84,49)" fg:x="28613" fg:w="61"/><text x="11.7395%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (61 samples, 0.02%)</title><rect x="11.4895%" y="1141" width="0.0245%" height="15" fill="rgb(214,194,35)" fg:x="28613" fg:w="61"/><text x="11.7395%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (61 samples, 0.02%)</title><rect x="11.4895%" y="1125" width="0.0245%" height="15" fill="rgb(249,28,3)" fg:x="28613" fg:w="61"/><text x="11.7395%" y="1135.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (61 samples, 0.02%)</title><rect x="11.4895%" y="1109" width="0.0245%" height="15" fill="rgb(222,56,52)" fg:x="28613" fg:w="61"/><text x="11.7395%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (3,032 samples, 1.22%)</title><rect x="10.3459%" y="1253" width="1.2175%" height="15" fill="rgb(245,217,50)" fg:x="25765" fg:w="3032"/><text x="10.5959%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (123 samples, 0.05%)</title><rect x="11.5140%" y="1237" width="0.0494%" height="15" fill="rgb(213,201,24)" fg:x="28674" fg:w="123"/><text x="11.7640%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (117 samples, 0.05%)</title><rect x="11.5165%" y="1221" width="0.0470%" height="15" fill="rgb(248,116,28)" fg:x="28680" fg:w="117"/><text x="11.7665%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (117 samples, 0.05%)</title><rect x="11.5165%" y="1205" width="0.0470%" height="15" fill="rgb(219,72,43)" fg:x="28680" fg:w="117"/><text x="11.7665%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (117 samples, 0.05%)</title><rect x="11.5165%" y="1189" width="0.0470%" height="15" fill="rgb(209,138,14)" fg:x="28680" fg:w="117"/><text x="11.7665%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (117 samples, 0.05%)</title><rect x="11.5165%" y="1173" width="0.0470%" height="15" fill="rgb(222,18,33)" fg:x="28680" fg:w="117"/><text x="11.7665%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (121 samples, 0.05%)</title><rect x="11.6337%" y="1237" width="0.0486%" height="15" fill="rgb(213,199,7)" fg:x="28972" fg:w="121"/><text x="11.8837%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (121 samples, 0.05%)</title><rect x="11.6337%" y="1221" width="0.0486%" height="15" fill="rgb(250,110,10)" fg:x="28972" fg:w="121"/><text x="11.8837%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (411 samples, 0.17%)</title><rect x="11.6823%" y="1237" width="0.1650%" height="15" fill="rgb(248,123,6)" fg:x="29093" fg:w="411"/><text x="11.9323%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (411 samples, 0.17%)</title><rect x="11.6823%" y="1221" width="0.1650%" height="15" fill="rgb(206,91,31)" fg:x="29093" fg:w="411"/><text x="11.9323%" y="1231.50"></text></g><g><title>tokio::runtime::driver::Driver::park (100 samples, 0.04%)</title><rect x="11.8473%" y="1237" width="0.0402%" height="15" fill="rgb(211,154,13)" fg:x="29504" fg:w="100"/><text x="12.0973%" y="1247.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (99 samples, 0.04%)</title><rect x="11.8477%" y="1221" width="0.0398%" height="15" fill="rgb(225,148,7)" fg:x="29505" fg:w="99"/><text x="12.0977%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (42 samples, 0.02%)</title><rect x="12.0722%" y="1093" width="0.0169%" height="15" fill="rgb(220,160,43)" fg:x="30064" fg:w="42"/><text x="12.3222%" y="1103.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (376 samples, 0.15%)</title><rect x="12.8376%" y="1061" width="0.1510%" height="15" fill="rgb(213,52,39)" fg:x="31970" fg:w="376"/><text x="13.0876%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (409 samples, 0.16%)</title><rect x="12.8335%" y="1077" width="0.1642%" height="15" fill="rgb(243,137,7)" fg:x="31960" fg:w="409"/><text x="13.0835%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (88 samples, 0.04%)</title><rect x="12.9978%" y="1061" width="0.0353%" height="15" fill="rgb(230,79,13)" fg:x="32369" fg:w="88"/><text x="13.2478%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (88 samples, 0.04%)</title><rect x="12.9978%" y="1045" width="0.0353%" height="15" fill="rgb(247,105,23)" fg:x="32369" fg:w="88"/><text x="13.2478%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,776 samples, 1.11%)</title><rect x="11.9859%" y="1173" width="1.1147%" height="15" fill="rgb(223,179,41)" fg:x="29849" fg:w="2776"/><text x="12.2359%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,776 samples, 1.11%)</title><rect x="11.9859%" y="1157" width="1.1147%" height="15" fill="rgb(218,9,34)" fg:x="29849" fg:w="2776"/><text x="12.2359%" y="1167.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (2,671 samples, 1.07%)</title><rect x="12.0280%" y="1141" width="1.0725%" height="15" fill="rgb(222,106,8)" fg:x="29954" fg:w="2671"/><text x="12.2780%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (2,603 samples, 1.05%)</title><rect x="12.0553%" y="1125" width="1.0452%" height="15" fill="rgb(211,220,0)" fg:x="30022" fg:w="2603"/><text x="12.3053%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2,603 samples, 1.05%)</title><rect x="12.0553%" y="1109" width="1.0452%" height="15" fill="rgb(229,52,16)" fg:x="30022" fg:w="2603"/><text x="12.3053%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2,519 samples, 1.01%)</title><rect x="12.0891%" y="1093" width="1.0115%" height="15" fill="rgb(212,155,18)" fg:x="30106" fg:w="2519"/><text x="12.3391%" y="1103.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (256 samples, 0.10%)</title><rect x="12.9978%" y="1077" width="0.1028%" height="15" fill="rgb(242,21,14)" fg:x="32369" fg:w="256"/><text x="13.2478%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (168 samples, 0.07%)</title><rect x="13.0331%" y="1061" width="0.0675%" height="15" fill="rgb(222,19,48)" fg:x="32457" fg:w="168"/><text x="13.2831%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (54 samples, 0.02%)</title><rect x="13.1704%" y="1061" width="0.0217%" height="15" fill="rgb(232,45,27)" fg:x="32799" fg:w="54"/><text x="13.4204%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (32 samples, 0.01%)</title><rect x="13.1921%" y="1061" width="0.0128%" height="15" fill="rgb(249,103,42)" fg:x="32853" fg:w="32"/><text x="13.4421%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (117 samples, 0.05%)</title><rect x="13.1640%" y="1077" width="0.0470%" height="15" fill="rgb(246,81,33)" fg:x="32783" fg:w="117"/><text x="13.4140%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (3,167 samples, 1.27%)</title><rect x="11.9823%" y="1221" width="1.2717%" height="15" fill="rgb(252,33,42)" fg:x="29840" fg:w="3167"/><text x="12.2323%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (3,167 samples, 1.27%)</title><rect x="11.9823%" y="1205" width="1.2717%" height="15" fill="rgb(209,212,41)" fg:x="29840" fg:w="3167"/><text x="12.2323%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (3,167 samples, 1.27%)</title><rect x="11.9823%" y="1189" width="1.2717%" height="15" fill="rgb(207,154,6)" fg:x="29840" fg:w="3167"/><text x="12.2323%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (382 samples, 0.15%)</title><rect x="13.1006%" y="1173" width="0.1534%" height="15" fill="rgb(223,64,47)" fg:x="32625" fg:w="382"/><text x="13.3506%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (382 samples, 0.15%)</title><rect x="13.1006%" y="1157" width="0.1534%" height="15" fill="rgb(211,161,38)" fg:x="32625" fg:w="382"/><text x="13.3506%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (363 samples, 0.15%)</title><rect x="13.1082%" y="1141" width="0.1458%" height="15" fill="rgb(219,138,40)" fg:x="32644" fg:w="363"/><text x="13.3582%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (363 samples, 0.15%)</title><rect x="13.1082%" y="1125" width="0.1458%" height="15" fill="rgb(241,228,46)" fg:x="32644" fg:w="363"/><text x="13.3582%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (363 samples, 0.15%)</title><rect x="13.1082%" y="1109" width="0.1458%" height="15" fill="rgb(223,209,38)" fg:x="32644" fg:w="363"/><text x="13.3582%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (362 samples, 0.15%)</title><rect x="13.1086%" y="1093" width="0.1454%" height="15" fill="rgb(236,164,45)" fg:x="32645" fg:w="362"/><text x="13.3586%" y="1103.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (107 samples, 0.04%)</title><rect x="13.2110%" y="1077" width="0.0430%" height="15" fill="rgb(231,15,5)" fg:x="32900" fg:w="107"/><text x="13.4610%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (99 samples, 0.04%)</title><rect x="13.2142%" y="1061" width="0.0398%" height="15" fill="rgb(252,35,15)" fg:x="32908" fg:w="99"/><text x="13.4642%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (197 samples, 0.08%)</title><rect x="13.2612%" y="1221" width="0.0791%" height="15" fill="rgb(248,181,18)" fg:x="33025" fg:w="197"/><text x="13.5112%" y="1231.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.08%)</title><rect x="13.2612%" y="1205" width="0.0791%" height="15" fill="rgb(233,39,42)" fg:x="33025" fg:w="197"/><text x="13.5112%" y="1215.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (181 samples, 0.07%)</title><rect x="13.2676%" y="1189" width="0.0727%" height="15" fill="rgb(238,110,33)" fg:x="33041" fg:w="181"/><text x="13.5176%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (175 samples, 0.07%)</title><rect x="13.2700%" y="1173" width="0.0703%" height="15" fill="rgb(233,195,10)" fg:x="33047" fg:w="175"/><text x="13.5200%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (175 samples, 0.07%)</title><rect x="13.2700%" y="1157" width="0.0703%" height="15" fill="rgb(254,105,3)" fg:x="33047" fg:w="175"/><text x="13.5200%" y="1167.50"></text></g><g><title>std::sync::rwlock::RwLockWriteGuard&lt;T&gt;::new (45 samples, 0.02%)</title><rect x="13.3475%" y="1205" width="0.0181%" height="15" fill="rgb(221,225,9)" fg:x="33240" fg:w="45"/><text x="13.5975%" y="1215.50"></text></g><g><title>std::sync::poison::Flag::guard (45 samples, 0.02%)</title><rect x="13.3475%" y="1189" width="0.0181%" height="15" fill="rgb(224,227,45)" fg:x="33240" fg:w="45"/><text x="13.5975%" y="1199.50"></text></g><g><title>std::thread::panicking (37 samples, 0.01%)</title><rect x="13.3507%" y="1173" width="0.0149%" height="15" fill="rgb(229,198,43)" fg:x="33248" fg:w="37"/><text x="13.6007%" y="1183.50"></text></g><g><title>std::panicking::panicking (37 samples, 0.01%)</title><rect x="13.3507%" y="1157" width="0.0149%" height="15" fill="rgb(206,209,35)" fg:x="33248" fg:w="37"/><text x="13.6007%" y="1167.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (37 samples, 0.01%)</title><rect x="13.3507%" y="1141" width="0.0149%" height="15" fill="rgb(245,195,53)" fg:x="33248" fg:w="37"/><text x="13.6007%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.01%)</title><rect x="13.3531%" y="1125" width="0.0124%" height="15" fill="rgb(240,92,26)" fg:x="33254" fg:w="31"/><text x="13.6031%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.01%)</title><rect x="13.3531%" y="1109" width="0.0124%" height="15" fill="rgb(207,40,23)" fg:x="33254" fg:w="31"/><text x="13.6031%" y="1119.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (251 samples, 0.10%)</title><rect x="13.3475%" y="1221" width="0.1008%" height="15" fill="rgb(223,111,35)" fg:x="33240" fg:w="251"/><text x="13.5975%" y="1231.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write (206 samples, 0.08%)</title><rect x="13.3656%" y="1205" width="0.0827%" height="15" fill="rgb(229,147,28)" fg:x="33285" fg:w="206"/><text x="13.6156%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (195 samples, 0.08%)</title><rect x="13.3700%" y="1189" width="0.0783%" height="15" fill="rgb(211,29,28)" fg:x="33296" fg:w="195"/><text x="13.6200%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (195 samples, 0.08%)</title><rect x="13.3700%" y="1173" width="0.0783%" height="15" fill="rgb(228,72,33)" fg:x="33296" fg:w="195"/><text x="13.6200%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (94 samples, 0.04%)</title><rect x="13.4563%" y="1189" width="0.0377%" height="15" fill="rgb(205,214,31)" fg:x="33511" fg:w="94"/><text x="13.7063%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (94 samples, 0.04%)</title><rect x="13.4563%" y="1173" width="0.0377%" height="15" fill="rgb(224,111,15)" fg:x="33511" fg:w="94"/><text x="13.7063%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.04%)</title><rect x="13.4563%" y="1157" width="0.0377%" height="15" fill="rgb(253,21,26)" fg:x="33511" fg:w="94"/><text x="13.7063%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (94 samples, 0.04%)</title><rect x="13.4563%" y="1141" width="0.0377%" height="15" fill="rgb(245,139,43)" fg:x="33511" fg:w="94"/><text x="13.7063%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (93 samples, 0.04%)</title><rect x="13.4567%" y="1125" width="0.0373%" height="15" fill="rgb(252,170,7)" fg:x="33512" fg:w="93"/><text x="13.7067%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.04%)</title><rect x="13.4567%" y="1109" width="0.0373%" height="15" fill="rgb(231,118,14)" fg:x="33512" fg:w="93"/><text x="13.7067%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (103 samples, 0.04%)</title><rect x="13.4941%" y="1189" width="0.0414%" height="15" fill="rgb(238,83,0)" fg:x="33605" fg:w="103"/><text x="13.7441%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (103 samples, 0.04%)</title><rect x="13.4941%" y="1173" width="0.0414%" height="15" fill="rgb(221,39,39)" fg:x="33605" fg:w="103"/><text x="13.7441%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.04%)</title><rect x="13.4941%" y="1157" width="0.0414%" height="15" fill="rgb(222,119,46)" fg:x="33605" fg:w="103"/><text x="13.7441%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (103 samples, 0.04%)</title><rect x="13.4941%" y="1141" width="0.0414%" height="15" fill="rgb(222,165,49)" fg:x="33605" fg:w="103"/><text x="13.7441%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (102 samples, 0.04%)</title><rect x="13.4945%" y="1125" width="0.0410%" height="15" fill="rgb(219,113,52)" fg:x="33606" fg:w="102"/><text x="13.7445%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (102 samples, 0.04%)</title><rect x="13.4945%" y="1109" width="0.0410%" height="15" fill="rgb(214,7,15)" fg:x="33606" fg:w="102"/><text x="13.7445%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (127 samples, 0.05%)</title><rect x="13.5354%" y="1189" width="0.0510%" height="15" fill="rgb(235,32,4)" fg:x="33708" fg:w="127"/><text x="13.7854%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (127 samples, 0.05%)</title><rect x="13.5354%" y="1173" width="0.0510%" height="15" fill="rgb(238,90,54)" fg:x="33708" fg:w="127"/><text x="13.7854%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (127 samples, 0.05%)</title><rect x="13.5354%" y="1157" width="0.0510%" height="15" fill="rgb(213,208,19)" fg:x="33708" fg:w="127"/><text x="13.7854%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (125 samples, 0.05%)</title><rect x="13.5362%" y="1141" width="0.0502%" height="15" fill="rgb(233,156,4)" fg:x="33710" fg:w="125"/><text x="13.7862%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (125 samples, 0.05%)</title><rect x="13.5362%" y="1125" width="0.0502%" height="15" fill="rgb(207,194,5)" fg:x="33710" fg:w="125"/><text x="13.7862%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (114 samples, 0.05%)</title><rect x="13.5925%" y="1141" width="0.0458%" height="15" fill="rgb(206,111,30)" fg:x="33850" fg:w="114"/><text x="13.8425%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (114 samples, 0.05%)</title><rect x="13.5925%" y="1125" width="0.0458%" height="15" fill="rgb(243,70,54)" fg:x="33850" fg:w="114"/><text x="13.8425%" y="1135.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (752 samples, 0.30%)</title><rect x="13.4483%" y="1221" width="0.3020%" height="15" fill="rgb(242,28,8)" fg:x="33491" fg:w="752"/><text x="13.6983%" y="1231.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (752 samples, 0.30%)</title><rect x="13.4483%" y="1205" width="0.3020%" height="15" fill="rgb(219,106,18)" fg:x="33491" fg:w="752"/><text x="13.6983%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (408 samples, 0.16%)</title><rect x="13.5864%" y="1189" width="0.1638%" height="15" fill="rgb(244,222,10)" fg:x="33835" fg:w="408"/><text x="13.8364%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (408 samples, 0.16%)</title><rect x="13.5864%" y="1173" width="0.1638%" height="15" fill="rgb(236,179,52)" fg:x="33835" fg:w="408"/><text x="13.8364%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (408 samples, 0.16%)</title><rect x="13.5864%" y="1157" width="0.1638%" height="15" fill="rgb(213,23,39)" fg:x="33835" fg:w="408"/><text x="13.8364%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (279 samples, 0.11%)</title><rect x="13.6382%" y="1141" width="0.1120%" height="15" fill="rgb(238,48,10)" fg:x="33964" fg:w="279"/><text x="13.8882%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (279 samples, 0.11%)</title><rect x="13.6382%" y="1125" width="0.1120%" height="15" fill="rgb(251,196,23)" fg:x="33964" fg:w="279"/><text x="13.8882%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Handle::time (80 samples, 0.03%)</title><rect x="13.7503%" y="1221" width="0.0321%" height="15" fill="rgb(250,152,24)" fg:x="34243" fg:w="80"/><text x="14.0003%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (78 samples, 0.03%)</title><rect x="13.7511%" y="1205" width="0.0313%" height="15" fill="rgb(209,150,17)" fg:x="34245" fg:w="78"/><text x="14.0011%" y="1215.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (286 samples, 0.11%)</title><rect x="13.8121%" y="1205" width="0.1148%" height="15" fill="rgb(234,202,34)" fg:x="34397" fg:w="286"/><text x="14.0621%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (279 samples, 0.11%)</title><rect x="13.8149%" y="1189" width="0.1120%" height="15" fill="rgb(253,148,53)" fg:x="34404" fg:w="279"/><text x="14.0649%" y="1199.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (279 samples, 0.11%)</title><rect x="13.8149%" y="1173" width="0.1120%" height="15" fill="rgb(218,129,16)" fg:x="34404" fg:w="279"/><text x="14.0649%" y="1183.50"></text></g><g><title>mio::event::event::Event::token (73 samples, 0.03%)</title><rect x="13.9270%" y="1205" width="0.0293%" height="15" fill="rgb(216,85,19)" fg:x="34683" fg:w="73"/><text x="14.1770%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::event::token (73 samples, 0.03%)</title><rect x="13.9270%" y="1189" width="0.0293%" height="15" fill="rgb(235,228,7)" fg:x="34683" fg:w="73"/><text x="14.1770%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (52 samples, 0.02%)</title><rect x="14.1960%" y="1173" width="0.0209%" height="15" fill="rgb(245,175,0)" fg:x="35353" fg:w="52"/><text x="14.4460%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (48 samples, 0.02%)</title><rect x="14.1976%" y="1157" width="0.0193%" height="15" fill="rgb(208,168,36)" fg:x="35357" fg:w="48"/><text x="14.4476%" y="1167.50"></text></g><g><title>core::time::Duration::checked_add (33 samples, 0.01%)</title><rect x="14.2036%" y="1141" width="0.0133%" height="15" fill="rgb(246,171,24)" fg:x="35372" fg:w="33"/><text x="14.4536%" y="1151.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (36 samples, 0.01%)</title><rect x="14.2169%" y="1173" width="0.0145%" height="15" fill="rgb(215,142,24)" fg:x="35405" fg:w="36"/><text x="14.4669%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (36 samples, 0.01%)</title><rect x="14.2169%" y="1157" width="0.0145%" height="15" fill="rgb(250,187,7)" fg:x="35405" fg:w="36"/><text x="14.4669%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (34 samples, 0.01%)</title><rect x="14.2177%" y="1141" width="0.0137%" height="15" fill="rgb(228,66,33)" fg:x="35407" fg:w="34"/><text x="14.4677%" y="1151.50"></text></g><g><title>[libc.so.6] (555 samples, 0.22%)</title><rect x="14.4614%" y="1157" width="0.2229%" height="15" fill="rgb(234,215,21)" fg:x="36014" fg:w="555"/><text x="14.7114%" y="1167.50"></text></g><g><title>mio::poll::Poll::poll (1,906 samples, 0.77%)</title><rect x="13.9563%" y="1205" width="0.7654%" height="15" fill="rgb(222,191,20)" fg:x="34756" fg:w="1906"/><text x="14.2063%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (1,864 samples, 0.75%)</title><rect x="13.9731%" y="1189" width="0.7485%" height="15" fill="rgb(245,79,54)" fg:x="34798" fg:w="1864"/><text x="14.2231%" y="1199.50"></text></g><g><title>epoll_wait (1,221 samples, 0.49%)</title><rect x="14.2313%" y="1173" width="0.4903%" height="15" fill="rgb(240,10,37)" fg:x="35441" fg:w="1221"/><text x="14.4813%" y="1183.50"></text></g><g><title>[unknown] (93 samples, 0.04%)</title><rect x="14.6843%" y="1157" width="0.0373%" height="15" fill="rgb(214,192,32)" fg:x="36569" fg:w="93"/><text x="14.9343%" y="1167.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (51 samples, 0.02%)</title><rect x="14.7216%" y="1205" width="0.0205%" height="15" fill="rgb(209,36,54)" fg:x="36662" fg:w="51"/><text x="14.9716%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (784 samples, 0.31%)</title><rect x="14.7481%" y="1189" width="0.3148%" height="15" fill="rgb(220,10,11)" fg:x="36728" fg:w="784"/><text x="14.9981%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (784 samples, 0.31%)</title><rect x="14.7481%" y="1173" width="0.3148%" height="15" fill="rgb(221,106,17)" fg:x="36728" fg:w="784"/><text x="14.9981%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,149 samples, 0.46%)</title><rect x="15.0629%" y="1189" width="0.4614%" height="15" fill="rgb(251,142,44)" fg:x="37512" fg:w="1149"/><text x="15.3129%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (1,149 samples, 0.46%)</title><rect x="15.0629%" y="1173" width="0.4614%" height="15" fill="rgb(238,13,15)" fg:x="37512" fg:w="1149"/><text x="15.3129%" y="1183.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1,970 samples, 0.79%)</title><rect x="14.7473%" y="1205" width="0.7911%" height="15" fill="rgb(208,107,27)" fg:x="36726" fg:w="1970"/><text x="14.9973%" y="1215.50"></text></g><g><title>core::mem::drop (566 samples, 0.23%)</title><rect x="15.5677%" y="1189" width="0.2273%" height="15" fill="rgb(205,136,37)" fg:x="38769" fg:w="566"/><text x="15.8177%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (566 samples, 0.23%)</title><rect x="15.5677%" y="1173" width="0.2273%" height="15" fill="rgb(250,205,27)" fg:x="38769" fg:w="566"/><text x="15.8177%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (566 samples, 0.23%)</title><rect x="15.5677%" y="1157" width="0.2273%" height="15" fill="rgb(210,80,43)" fg:x="38769" fg:w="566"/><text x="15.8177%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (566 samples, 0.23%)</title><rect x="15.5677%" y="1141" width="0.2273%" height="15" fill="rgb(247,160,36)" fg:x="38769" fg:w="566"/><text x="15.8177%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (566 samples, 0.23%)</title><rect x="15.5677%" y="1125" width="0.2273%" height="15" fill="rgb(234,13,49)" fg:x="38769" fg:w="566"/><text x="15.8177%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (565 samples, 0.23%)</title><rect x="15.5681%" y="1109" width="0.2269%" height="15" fill="rgb(234,122,0)" fg:x="38770" fg:w="565"/><text x="15.8181%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (565 samples, 0.23%)</title><rect x="15.5681%" y="1093" width="0.2269%" height="15" fill="rgb(207,146,38)" fg:x="38770" fg:w="565"/><text x="15.8181%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (33 samples, 0.01%)</title><rect x="15.7950%" y="1189" width="0.0133%" height="15" fill="rgb(207,177,25)" fg:x="39335" fg:w="33"/><text x="16.0450%" y="1199.50"></text></g><g><title>core::mem::replace (33 samples, 0.01%)</title><rect x="15.7950%" y="1173" width="0.0133%" height="15" fill="rgb(211,178,42)" fg:x="39335" fg:w="33"/><text x="16.0450%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (227 samples, 0.09%)</title><rect x="15.8154%" y="1189" width="0.0912%" height="15" fill="rgb(230,69,54)" fg:x="39386" fg:w="227"/><text x="16.0654%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (227 samples, 0.09%)</title><rect x="15.8154%" y="1173" width="0.0912%" height="15" fill="rgb(214,135,41)" fg:x="39386" fg:w="227"/><text x="16.0654%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (227 samples, 0.09%)</title><rect x="15.8154%" y="1157" width="0.0912%" height="15" fill="rgb(237,67,25)" fg:x="39386" fg:w="227"/><text x="16.0654%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (206 samples, 0.08%)</title><rect x="15.8239%" y="1141" width="0.0827%" height="15" fill="rgb(222,189,50)" fg:x="39407" fg:w="206"/><text x="16.0739%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (206 samples, 0.08%)</title><rect x="15.8239%" y="1125" width="0.0827%" height="15" fill="rgb(245,148,34)" fg:x="39407" fg:w="206"/><text x="16.0739%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (128 samples, 0.05%)</title><rect x="15.9247%" y="1125" width="0.0514%" height="15" fill="rgb(222,29,6)" fg:x="39658" fg:w="128"/><text x="16.1747%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (128 samples, 0.05%)</title><rect x="15.9247%" y="1109" width="0.0514%" height="15" fill="rgb(221,189,43)" fg:x="39658" fg:w="128"/><text x="16.1747%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (121 samples, 0.05%)</title><rect x="15.9275%" y="1093" width="0.0486%" height="15" fill="rgb(207,36,27)" fg:x="39665" fg:w="121"/><text x="16.1775%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (121 samples, 0.05%)</title><rect x="15.9275%" y="1077" width="0.0486%" height="15" fill="rgb(217,90,24)" fg:x="39665" fg:w="121"/><text x="16.1775%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (52 samples, 0.02%)</title><rect x="15.9781%" y="1045" width="0.0209%" height="15" fill="rgb(224,66,35)" fg:x="39791" fg:w="52"/><text x="16.2281%" y="1055.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (52 samples, 0.02%)</title><rect x="15.9781%" y="1029" width="0.0209%" height="15" fill="rgb(221,13,50)" fg:x="39791" fg:w="52"/><text x="16.2281%" y="1039.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (52 samples, 0.02%)</title><rect x="15.9781%" y="1013" width="0.0209%" height="15" fill="rgb(236,68,49)" fg:x="39791" fg:w="52"/><text x="16.2281%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (47 samples, 0.02%)</title><rect x="15.9801%" y="997" width="0.0189%" height="15" fill="rgb(229,146,28)" fg:x="39796" fg:w="47"/><text x="16.2301%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (39 samples, 0.02%)</title><rect x="16.0355%" y="1029" width="0.0157%" height="15" fill="rgb(225,31,38)" fg:x="39934" fg:w="39"/><text x="16.2855%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (230 samples, 0.09%)</title><rect x="15.9781%" y="1061" width="0.0924%" height="15" fill="rgb(250,208,3)" fg:x="39791" fg:w="230"/><text x="16.2281%" y="1071.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (178 samples, 0.07%)</title><rect x="15.9990%" y="1045" width="0.0715%" height="15" fill="rgb(246,54,23)" fg:x="39843" fg:w="178"/><text x="16.2490%" y="1055.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (48 samples, 0.02%)</title><rect x="16.0512%" y="1029" width="0.0193%" height="15" fill="rgb(243,76,11)" fg:x="39973" fg:w="48"/><text x="16.3012%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (46 samples, 0.02%)</title><rect x="16.0520%" y="1013" width="0.0185%" height="15" fill="rgb(245,21,50)" fg:x="39975" fg:w="46"/><text x="16.3020%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.02%)</title><rect x="16.0740%" y="1045" width="0.0157%" height="15" fill="rgb(228,9,43)" fg:x="40030" fg:w="39"/><text x="16.3240%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (39 samples, 0.02%)</title><rect x="16.0740%" y="1029" width="0.0157%" height="15" fill="rgb(208,100,47)" fg:x="40030" fg:w="39"/><text x="16.3240%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (39 samples, 0.02%)</title><rect x="16.0740%" y="1013" width="0.0157%" height="15" fill="rgb(232,26,8)" fg:x="40030" fg:w="39"/><text x="16.3240%" y="1023.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (418 samples, 0.17%)</title><rect x="15.9781%" y="1109" width="0.1678%" height="15" fill="rgb(216,166,38)" fg:x="39791" fg:w="418"/><text x="16.2281%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (418 samples, 0.17%)</title><rect x="15.9781%" y="1093" width="0.1678%" height="15" fill="rgb(251,202,51)" fg:x="39791" fg:w="418"/><text x="16.2281%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler (418 samples, 0.17%)</title><rect x="15.9781%" y="1077" width="0.1678%" height="15" fill="rgb(254,216,34)" fg:x="39791" fg:w="418"/><text x="16.2281%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (188 samples, 0.08%)</title><rect x="16.0704%" y="1061" width="0.0755%" height="15" fill="rgb(251,32,27)" fg:x="40021" fg:w="188"/><text x="16.3204%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (125 samples, 0.05%)</title><rect x="16.0957%" y="1045" width="0.0502%" height="15" fill="rgb(208,127,28)" fg:x="40084" fg:w="125"/><text x="16.3457%" y="1055.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (668 samples, 0.27%)</title><rect x="15.9761%" y="1125" width="0.2682%" height="15" fill="rgb(224,137,22)" fg:x="39786" fg:w="668"/><text x="16.2261%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::schedule (245 samples, 0.10%)</title><rect x="16.1459%" y="1109" width="0.0984%" height="15" fill="rgb(254,70,32)" fg:x="40209" fg:w="245"/><text x="16.3959%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (37 samples, 0.01%)</title><rect x="16.2294%" y="1093" width="0.0149%" height="15" fill="rgb(229,75,37)" fg:x="40417" fg:w="37"/><text x="16.4794%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (88 samples, 0.04%)</title><rect x="16.2443%" y="1093" width="0.0353%" height="15" fill="rgb(252,64,23)" fg:x="40454" fg:w="88"/><text x="16.4943%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (88 samples, 0.04%)</title><rect x="16.2443%" y="1077" width="0.0353%" height="15" fill="rgb(232,162,48)" fg:x="40454" fg:w="88"/><text x="16.4943%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::load (699 samples, 0.28%)</title><rect x="16.2796%" y="1093" width="0.2807%" height="15" fill="rgb(246,160,12)" fg:x="40542" fg:w="699"/><text x="16.5296%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (699 samples, 0.28%)</title><rect x="16.2796%" y="1077" width="0.2807%" height="15" fill="rgb(247,166,0)" fg:x="40542" fg:w="699"/><text x="16.5296%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (699 samples, 0.28%)</title><rect x="16.2796%" y="1061" width="0.2807%" height="15" fill="rgb(249,219,21)" fg:x="40542" fg:w="699"/><text x="16.5296%" y="1071.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (6,932 samples, 2.78%)</title><rect x="13.7824%" y="1221" width="2.7835%" height="15" fill="rgb(205,209,3)" fg:x="34323" fg:w="6932"/><text x="14.0324%" y="1231.50">to..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (2,559 samples, 1.03%)</title><rect x="15.5384%" y="1205" width="1.0276%" height="15" fill="rgb(243,44,1)" fg:x="38696" fg:w="2559"/><text x="15.7884%" y="1215.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1,626 samples, 0.65%)</title><rect x="15.9130%" y="1189" width="0.6529%" height="15" fill="rgb(206,159,16)" fg:x="39629" fg:w="1626"/><text x="16.1630%" y="1199.50"></text></g><g><title>core::task::wake::Waker::wake (1,602 samples, 0.64%)</title><rect x="15.9227%" y="1173" width="0.6433%" height="15" fill="rgb(244,77,30)" fg:x="39653" fg:w="1602"/><text x="16.1727%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,602 samples, 0.64%)</title><rect x="15.9227%" y="1157" width="0.6433%" height="15" fill="rgb(218,69,12)" fg:x="39653" fg:w="1602"/><text x="16.1727%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1,602 samples, 0.64%)</title><rect x="15.9227%" y="1141" width="0.6433%" height="15" fill="rgb(212,87,7)" fg:x="39653" fg:w="1602"/><text x="16.1727%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (801 samples, 0.32%)</title><rect x="16.2443%" y="1125" width="0.3216%" height="15" fill="rgb(245,114,25)" fg:x="40454" fg:w="801"/><text x="16.4943%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (801 samples, 0.32%)</title><rect x="16.2443%" y="1109" width="0.3216%" height="15" fill="rgb(210,61,42)" fg:x="40454" fg:w="801"/><text x="16.4943%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (54 samples, 0.02%)</title><rect x="16.5788%" y="1157" width="0.0217%" height="15" fill="rgb(211,52,33)" fg:x="41287" fg:w="54"/><text x="16.8288%" y="1167.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (54 samples, 0.02%)</title><rect x="16.5788%" y="1141" width="0.0217%" height="15" fill="rgb(234,58,33)" fg:x="41287" fg:w="54"/><text x="16.8288%" y="1151.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (54 samples, 0.02%)</title><rect x="16.5788%" y="1125" width="0.0217%" height="15" fill="rgb(220,115,36)" fg:x="41287" fg:w="54"/><text x="16.8288%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (48 samples, 0.02%)</title><rect x="16.5812%" y="1109" width="0.0193%" height="15" fill="rgb(243,153,54)" fg:x="41293" fg:w="48"/><text x="16.8312%" y="1119.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (94 samples, 0.04%)</title><rect x="16.5788%" y="1205" width="0.0377%" height="15" fill="rgb(251,47,18)" fg:x="41287" fg:w="94"/><text x="16.8288%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (94 samples, 0.04%)</title><rect x="16.5788%" y="1189" width="0.0377%" height="15" fill="rgb(242,102,42)" fg:x="41287" fg:w="94"/><text x="16.8288%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (94 samples, 0.04%)</title><rect x="16.5788%" y="1173" width="0.0377%" height="15" fill="rgb(234,31,38)" fg:x="41287" fg:w="94"/><text x="16.8288%" y="1183.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (40 samples, 0.02%)</title><rect x="16.6005%" y="1157" width="0.0161%" height="15" fill="rgb(221,117,51)" fg:x="41341" fg:w="40"/><text x="16.8505%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (948 samples, 0.38%)</title><rect x="16.7812%" y="1045" width="0.3807%" height="15" fill="rgb(212,20,18)" fg:x="41791" fg:w="948"/><text x="17.0312%" y="1055.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (948 samples, 0.38%)</title><rect x="16.7812%" y="1029" width="0.3807%" height="15" fill="rgb(245,133,36)" fg:x="41791" fg:w="948"/><text x="17.0312%" y="1039.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (948 samples, 0.38%)</title><rect x="16.7812%" y="1013" width="0.3807%" height="15" fill="rgb(212,6,19)" fg:x="41791" fg:w="948"/><text x="17.0312%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (895 samples, 0.36%)</title><rect x="16.8025%" y="997" width="0.3594%" height="15" fill="rgb(218,1,36)" fg:x="41844" fg:w="895"/><text x="17.0525%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (895 samples, 0.36%)</title><rect x="16.8025%" y="981" width="0.3594%" height="15" fill="rgb(246,84,54)" fg:x="41844" fg:w="895"/><text x="17.0525%" y="991.50"></text></g><g><title>core::mem::drop (1,912 samples, 0.77%)</title><rect x="16.7812%" y="1061" width="0.7678%" height="15" fill="rgb(242,110,6)" fg:x="41791" fg:w="1912"/><text x="17.0312%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (964 samples, 0.39%)</title><rect x="17.1618%" y="1045" width="0.3871%" height="15" fill="rgb(214,47,5)" fg:x="42739" fg:w="964"/><text x="17.4118%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (964 samples, 0.39%)</title><rect x="17.1618%" y="1029" width="0.3871%" height="15" fill="rgb(218,159,25)" fg:x="42739" fg:w="964"/><text x="17.4118%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (964 samples, 0.39%)</title><rect x="17.1618%" y="1013" width="0.3871%" height="15" fill="rgb(215,211,28)" fg:x="42739" fg:w="964"/><text x="17.4118%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (964 samples, 0.39%)</title><rect x="17.1618%" y="997" width="0.3871%" height="15" fill="rgb(238,59,32)" fg:x="42739" fg:w="964"/><text x="17.4118%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (945 samples, 0.38%)</title><rect x="17.1695%" y="981" width="0.3795%" height="15" fill="rgb(226,82,3)" fg:x="42758" fg:w="945"/><text x="17.4195%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (945 samples, 0.38%)</title><rect x="17.1695%" y="965" width="0.3795%" height="15" fill="rgb(240,164,32)" fg:x="42758" fg:w="945"/><text x="17.4195%" y="975.50"></text></g><g><title>std::sync::poison::Flag::borrow (25 samples, 0.01%)</title><rect x="17.5526%" y="1029" width="0.0100%" height="15" fill="rgb(232,46,7)" fg:x="43712" fg:w="25"/><text x="17.8026%" y="1039.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (35 samples, 0.01%)</title><rect x="17.5526%" y="1045" width="0.0141%" height="15" fill="rgb(229,129,53)" fg:x="43712" fg:w="35"/><text x="17.8026%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (943 samples, 0.38%)</title><rect x="17.5746%" y="1029" width="0.3787%" height="15" fill="rgb(234,188,29)" fg:x="43767" fg:w="943"/><text x="17.8246%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (943 samples, 0.38%)</title><rect x="17.5746%" y="1013" width="0.3787%" height="15" fill="rgb(246,141,4)" fg:x="43767" fg:w="943"/><text x="17.8246%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,033 samples, 0.41%)</title><rect x="17.5526%" y="1061" width="0.4148%" height="15" fill="rgb(229,23,39)" fg:x="43712" fg:w="1033"/><text x="17.8026%" y="1071.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (998 samples, 0.40%)</title><rect x="17.5666%" y="1045" width="0.4007%" height="15" fill="rgb(206,12,3)" fg:x="43747" fg:w="998"/><text x="17.8166%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (40 samples, 0.02%)</title><rect x="18.0095%" y="1045" width="0.0161%" height="15" fill="rgb(252,226,20)" fg:x="44850" fg:w="40"/><text x="18.2595%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (40 samples, 0.02%)</title><rect x="18.0095%" y="1029" width="0.0161%" height="15" fill="rgb(216,123,35)" fg:x="44850" fg:w="40"/><text x="18.2595%" y="1039.50"></text></g><g><title>core::slice::index::get_noubcheck (40 samples, 0.02%)</title><rect x="18.0095%" y="1013" width="0.0161%" height="15" fill="rgb(212,68,40)" fg:x="44850" fg:w="40"/><text x="18.2595%" y="1023.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,312 samples, 0.53%)</title><rect x="17.9674%" y="1061" width="0.5268%" height="15" fill="rgb(254,125,32)" fg:x="44745" fg:w="1312"/><text x="18.2174%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,167 samples, 0.47%)</title><rect x="18.0256%" y="1045" width="0.4686%" height="15" fill="rgb(253,97,22)" fg:x="44890" fg:w="1167"/><text x="18.2756%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,167 samples, 0.47%)</title><rect x="18.0256%" y="1029" width="0.4686%" height="15" fill="rgb(241,101,14)" fg:x="44890" fg:w="1167"/><text x="18.2756%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,167 samples, 0.47%)</title><rect x="18.0256%" y="1013" width="0.4686%" height="15" fill="rgb(238,103,29)" fg:x="44890" fg:w="1167"/><text x="18.2756%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,149 samples, 0.46%)</title><rect x="18.0328%" y="997" width="0.4614%" height="15" fill="rgb(233,195,47)" fg:x="44908" fg:w="1149"/><text x="18.2828%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,149 samples, 0.46%)</title><rect x="18.0328%" y="981" width="0.4614%" height="15" fill="rgb(246,218,30)" fg:x="44908" fg:w="1149"/><text x="18.2828%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (173 samples, 0.07%)</title><rect x="18.6773%" y="1013" width="0.0695%" height="15" fill="rgb(219,145,47)" fg:x="46513" fg:w="173"/><text x="18.9273%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (214 samples, 0.09%)</title><rect x="18.6693%" y="1029" width="0.0859%" height="15" fill="rgb(243,12,26)" fg:x="46493" fg:w="214"/><text x="18.9193%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (623 samples, 0.25%)</title><rect x="18.5143%" y="1045" width="0.2502%" height="15" fill="rgb(214,87,16)" fg:x="46107" fg:w="623"/><text x="18.7643%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (31 samples, 0.01%)</title><rect x="18.7644%" y="1045" width="0.0124%" height="15" fill="rgb(208,99,42)" fg:x="46730" fg:w="31"/><text x="19.0144%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (743 samples, 0.30%)</title><rect x="18.5002%" y="1061" width="0.2984%" height="15" fill="rgb(253,99,2)" fg:x="46072" fg:w="743"/><text x="18.7502%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (54 samples, 0.02%)</title><rect x="18.7769%" y="1045" width="0.0217%" height="15" fill="rgb(220,168,23)" fg:x="46761" fg:w="54"/><text x="19.0269%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.01%)</title><rect x="18.7885%" y="1029" width="0.0100%" height="15" fill="rgb(242,38,24)" fg:x="46790" fg:w="25"/><text x="19.0385%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (53 samples, 0.02%)</title><rect x="18.7986%" y="1045" width="0.0213%" height="15" fill="rgb(225,182,9)" fg:x="46815" fg:w="53"/><text x="19.0486%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (152 samples, 0.06%)</title><rect x="18.8708%" y="1013" width="0.0610%" height="15" fill="rgb(243,178,37)" fg:x="46995" fg:w="152"/><text x="19.1208%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (189 samples, 0.08%)</title><rect x="18.8656%" y="1029" width="0.0759%" height="15" fill="rgb(232,139,19)" fg:x="46982" fg:w="189"/><text x="19.1156%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (395 samples, 0.16%)</title><rect x="18.7986%" y="1061" width="0.1586%" height="15" fill="rgb(225,201,24)" fg:x="46815" fg:w="395"/><text x="19.0486%" y="1071.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (342 samples, 0.14%)</title><rect x="18.8198%" y="1045" width="0.1373%" height="15" fill="rgb(221,47,46)" fg:x="46868" fg:w="342"/><text x="19.0698%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (39 samples, 0.02%)</title><rect x="18.9415%" y="1029" width="0.0157%" height="15" fill="rgb(249,23,13)" fg:x="47171" fg:w="39"/><text x="19.1915%" y="1039.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (5,867 samples, 2.36%)</title><rect x="16.6246%" y="1109" width="2.3559%" height="15" fill="rgb(219,9,5)" fg:x="41401" fg:w="5867"/><text x="16.8746%" y="1119.50">c..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (5,796 samples, 2.33%)</title><rect x="16.6531%" y="1093" width="2.3274%" height="15" fill="rgb(254,171,16)" fg:x="41472" fg:w="5796"/><text x="16.9031%" y="1103.50">t..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (5,722 samples, 2.30%)</title><rect x="16.6828%" y="1077" width="2.2977%" height="15" fill="rgb(230,171,20)" fg:x="41546" fg:w="5722"/><text x="16.9328%" y="1087.50">t..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (48 samples, 0.02%)</title><rect x="18.9612%" y="1061" width="0.0193%" height="15" fill="rgb(210,71,41)" fg:x="47220" fg:w="48"/><text x="19.2112%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5,918 samples, 2.38%)</title><rect x="16.6246%" y="1141" width="2.3764%" height="15" fill="rgb(206,173,20)" fg:x="41401" fg:w="5918"/><text x="16.8746%" y="1151.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (5,918 samples, 2.38%)</title><rect x="16.6246%" y="1125" width="2.3764%" height="15" fill="rgb(233,88,34)" fg:x="41401" fg:w="5918"/><text x="16.8746%" y="1135.50">co..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (51 samples, 0.02%)</title><rect x="18.9805%" y="1109" width="0.0205%" height="15" fill="rgb(223,209,46)" fg:x="47268" fg:w="51"/><text x="19.2305%" y="1119.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (51 samples, 0.02%)</title><rect x="18.9805%" y="1093" width="0.0205%" height="15" fill="rgb(250,43,18)" fg:x="47268" fg:w="51"/><text x="19.2305%" y="1103.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (37 samples, 0.01%)</title><rect x="19.0214%" y="1093" width="0.0149%" height="15" fill="rgb(208,13,10)" fg:x="47370" fg:w="37"/><text x="19.2714%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (37 samples, 0.01%)</title><rect x="19.0214%" y="1077" width="0.0149%" height="15" fill="rgb(212,200,36)" fg:x="47370" fg:w="37"/><text x="19.2714%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (819 samples, 0.33%)</title><rect x="19.1889%" y="1013" width="0.3289%" height="15" fill="rgb(225,90,30)" fg:x="47787" fg:w="819"/><text x="19.4389%" y="1023.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (819 samples, 0.33%)</title><rect x="19.1889%" y="997" width="0.3289%" height="15" fill="rgb(236,182,39)" fg:x="47787" fg:w="819"/><text x="19.4389%" y="1007.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (819 samples, 0.33%)</title><rect x="19.1889%" y="981" width="0.3289%" height="15" fill="rgb(212,144,35)" fg:x="47787" fg:w="819"/><text x="19.4389%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (752 samples, 0.30%)</title><rect x="19.2158%" y="965" width="0.3020%" height="15" fill="rgb(228,63,44)" fg:x="47854" fg:w="752"/><text x="19.4658%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (752 samples, 0.30%)</title><rect x="19.2158%" y="949" width="0.3020%" height="15" fill="rgb(228,109,6)" fg:x="47854" fg:w="752"/><text x="19.4658%" y="959.50"></text></g><g><title>core::mem::drop (1,761 samples, 0.71%)</title><rect x="19.1889%" y="1029" width="0.7071%" height="15" fill="rgb(238,117,24)" fg:x="47787" fg:w="1761"/><text x="19.4389%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (942 samples, 0.38%)</title><rect x="19.5177%" y="1013" width="0.3783%" height="15" fill="rgb(242,26,26)" fg:x="48606" fg:w="942"/><text x="19.7677%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (942 samples, 0.38%)</title><rect x="19.5177%" y="997" width="0.3783%" height="15" fill="rgb(221,92,48)" fg:x="48606" fg:w="942"/><text x="19.7677%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (942 samples, 0.38%)</title><rect x="19.5177%" y="981" width="0.3783%" height="15" fill="rgb(209,209,32)" fg:x="48606" fg:w="942"/><text x="19.7677%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (942 samples, 0.38%)</title><rect x="19.5177%" y="965" width="0.3783%" height="15" fill="rgb(221,70,22)" fg:x="48606" fg:w="942"/><text x="19.7677%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (928 samples, 0.37%)</title><rect x="19.5234%" y="949" width="0.3726%" height="15" fill="rgb(248,145,5)" fg:x="48620" fg:w="928"/><text x="19.7734%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (928 samples, 0.37%)</title><rect x="19.5234%" y="933" width="0.3726%" height="15" fill="rgb(226,116,26)" fg:x="48620" fg:w="928"/><text x="19.7734%" y="943.50"></text></g><g><title>std::sync::poison::Flag::borrow (30 samples, 0.01%)</title><rect x="19.9028%" y="997" width="0.0120%" height="15" fill="rgb(244,5,17)" fg:x="49565" fg:w="30"/><text x="20.1528%" y="1007.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (39 samples, 0.02%)</title><rect x="19.9028%" y="1013" width="0.0157%" height="15" fill="rgb(252,159,33)" fg:x="49565" fg:w="39"/><text x="20.1528%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (1,009 samples, 0.41%)</title><rect x="19.9261%" y="997" width="0.4052%" height="15" fill="rgb(206,71,0)" fg:x="49623" fg:w="1009"/><text x="20.1761%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,009 samples, 0.41%)</title><rect x="19.9261%" y="981" width="0.4052%" height="15" fill="rgb(233,118,54)" fg:x="49623" fg:w="1009"/><text x="20.1761%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1,120 samples, 0.45%)</title><rect x="19.9028%" y="1029" width="0.4497%" height="15" fill="rgb(234,83,48)" fg:x="49565" fg:w="1120"/><text x="20.1528%" y="1039.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (1,081 samples, 0.43%)</title><rect x="19.9185%" y="1013" width="0.4341%" height="15" fill="rgb(228,3,54)" fg:x="49604" fg:w="1081"/><text x="20.1685%" y="1023.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (40 samples, 0.02%)</title><rect x="20.3365%" y="997" width="0.0161%" height="15" fill="rgb(226,155,13)" fg:x="50645" fg:w="40"/><text x="20.5865%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (33 samples, 0.01%)</title><rect x="20.3887%" y="1013" width="0.0133%" height="15" fill="rgb(241,28,37)" fg:x="50775" fg:w="33"/><text x="20.6387%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (33 samples, 0.01%)</title><rect x="20.3887%" y="997" width="0.0133%" height="15" fill="rgb(233,93,10)" fg:x="50775" fg:w="33"/><text x="20.6387%" y="1007.50"></text></g><g><title>core::slice::index::get_noubcheck (33 samples, 0.01%)</title><rect x="20.3887%" y="981" width="0.0133%" height="15" fill="rgb(225,113,19)" fg:x="50775" fg:w="33"/><text x="20.6387%" y="991.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (1,136 samples, 0.46%)</title><rect x="20.3526%" y="1029" width="0.4562%" height="15" fill="rgb(241,2,18)" fg:x="50685" fg:w="1136"/><text x="20.6026%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,013 samples, 0.41%)</title><rect x="20.4020%" y="1013" width="0.4068%" height="15" fill="rgb(228,207,21)" fg:x="50808" fg:w="1013"/><text x="20.6520%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,013 samples, 0.41%)</title><rect x="20.4020%" y="997" width="0.4068%" height="15" fill="rgb(213,211,35)" fg:x="50808" fg:w="1013"/><text x="20.6520%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,013 samples, 0.41%)</title><rect x="20.4020%" y="981" width="0.4068%" height="15" fill="rgb(209,83,10)" fg:x="50808" fg:w="1013"/><text x="20.6520%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (998 samples, 0.40%)</title><rect x="20.4080%" y="965" width="0.4007%" height="15" fill="rgb(209,164,1)" fg:x="50823" fg:w="998"/><text x="20.6580%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (998 samples, 0.40%)</title><rect x="20.4080%" y="949" width="0.4007%" height="15" fill="rgb(213,184,43)" fg:x="50823" fg:w="998"/><text x="20.6580%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (232 samples, 0.09%)</title><rect x="21.0380%" y="981" width="0.0932%" height="15" fill="rgb(231,61,34)" fg:x="52392" fg:w="232"/><text x="21.2880%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (31 samples, 0.01%)</title><rect x="21.1187%" y="965" width="0.0124%" height="15" fill="rgb(235,75,3)" fg:x="52593" fg:w="31"/><text x="21.3687%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (31 samples, 0.01%)</title><rect x="21.1187%" y="949" width="0.0124%" height="15" fill="rgb(220,106,47)" fg:x="52593" fg:w="31"/><text x="21.3687%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (36 samples, 0.01%)</title><rect x="21.1312%" y="981" width="0.0145%" height="15" fill="rgb(210,196,33)" fg:x="52624" fg:w="36"/><text x="21.3812%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (30 samples, 0.01%)</title><rect x="21.1336%" y="965" width="0.0120%" height="15" fill="rgb(229,154,42)" fg:x="52630" fg:w="30"/><text x="21.3836%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (30 samples, 0.01%)</title><rect x="21.1336%" y="949" width="0.0120%" height="15" fill="rgb(228,114,26)" fg:x="52630" fg:w="30"/><text x="21.3836%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (326 samples, 0.13%)</title><rect x="21.0240%" y="997" width="0.1309%" height="15" fill="rgb(208,144,1)" fg:x="52357" fg:w="326"/><text x="21.2740%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (787 samples, 0.32%)</title><rect x="20.8445%" y="1013" width="0.3160%" height="15" fill="rgb(239,112,37)" fg:x="51910" fg:w="787"/><text x="21.0945%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (65 samples, 0.03%)</title><rect x="21.1605%" y="1013" width="0.0261%" height="15" fill="rgb(210,96,50)" fg:x="52697" fg:w="65"/><text x="21.4105%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (967 samples, 0.39%)</title><rect x="20.8164%" y="1029" width="0.3883%" height="15" fill="rgb(222,178,2)" fg:x="51840" fg:w="967"/><text x="21.0664%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (45 samples, 0.02%)</title><rect x="21.1866%" y="1013" width="0.0181%" height="15" fill="rgb(226,74,18)" fg:x="52762" fg:w="45"/><text x="21.4366%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (88 samples, 0.04%)</title><rect x="21.2046%" y="1013" width="0.0353%" height="15" fill="rgb(225,67,54)" fg:x="52807" fg:w="88"/><text x="21.4546%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (188 samples, 0.08%)</title><rect x="21.3010%" y="981" width="0.0755%" height="15" fill="rgb(251,92,32)" fg:x="53047" fg:w="188"/><text x="21.5510%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (27 samples, 0.01%)</title><rect x="21.3657%" y="965" width="0.0108%" height="15" fill="rgb(228,149,22)" fg:x="53208" fg:w="27"/><text x="21.6157%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (27 samples, 0.01%)</title><rect x="21.3657%" y="949" width="0.0108%" height="15" fill="rgb(243,54,13)" fg:x="53208" fg:w="27"/><text x="21.6157%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::level_range (45 samples, 0.02%)</title><rect x="21.3765%" y="981" width="0.0181%" height="15" fill="rgb(243,180,28)" fg:x="53235" fg:w="45"/><text x="21.6265%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::level::slot_range (33 samples, 0.01%)</title><rect x="21.3813%" y="965" width="0.0133%" height="15" fill="rgb(208,167,24)" fg:x="53247" fg:w="33"/><text x="21.6313%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::pow (33 samples, 0.01%)</title><rect x="21.3813%" y="949" width="0.0133%" height="15" fill="rgb(245,73,45)" fg:x="53247" fg:w="33"/><text x="21.6313%" y="959.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (269 samples, 0.11%)</title><rect x="21.2918%" y="997" width="0.1080%" height="15" fill="rgb(237,203,48)" fg:x="53024" fg:w="269"/><text x="21.5418%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (529 samples, 0.21%)</title><rect x="21.2046%" y="1029" width="0.2124%" height="15" fill="rgb(211,197,16)" fg:x="52807" fg:w="529"/><text x="21.4546%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (441 samples, 0.18%)</title><rect x="21.2400%" y="1013" width="0.1771%" height="15" fill="rgb(243,99,51)" fg:x="52895" fg:w="441"/><text x="21.4900%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (43 samples, 0.02%)</title><rect x="21.3998%" y="997" width="0.0173%" height="15" fill="rgb(215,123,29)" fg:x="53293" fg:w="43"/><text x="21.6498%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (25 samples, 0.01%)</title><rect x="21.4070%" y="981" width="0.0100%" height="15" fill="rgb(239,186,37)" fg:x="53311" fg:w="25"/><text x="21.6570%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (12,011 samples, 4.82%)</title><rect x="16.6210%" y="1189" width="4.8230%" height="15" fill="rgb(252,136,39)" fg:x="41392" fg:w="12011"/><text x="16.8710%" y="1199.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (12,011 samples, 4.82%)</title><rect x="16.6210%" y="1173" width="4.8230%" height="15" fill="rgb(223,213,32)" fg:x="41392" fg:w="12011"/><text x="16.8710%" y="1183.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (12,011 samples, 4.82%)</title><rect x="16.6210%" y="1157" width="4.8230%" height="15" fill="rgb(233,115,5)" fg:x="41392" fg:w="12011"/><text x="16.8710%" y="1167.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6,084 samples, 2.44%)</title><rect x="19.0009%" y="1141" width="2.4430%" height="15" fill="rgb(207,226,44)" fg:x="47319" fg:w="6084"/><text x="19.2509%" y="1151.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (6,084 samples, 2.44%)</title><rect x="19.0009%" y="1125" width="2.4430%" height="15" fill="rgb(208,126,0)" fg:x="47319" fg:w="6084"/><text x="19.2509%" y="1135.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6,084 samples, 2.44%)</title><rect x="19.0009%" y="1109" width="2.4430%" height="15" fill="rgb(244,66,21)" fg:x="47319" fg:w="6084"/><text x="19.2509%" y="1119.50">co..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (5,996 samples, 2.41%)</title><rect x="19.0363%" y="1093" width="2.4077%" height="15" fill="rgb(222,97,12)" fg:x="47407" fg:w="5996"/><text x="19.2863%" y="1103.50">co..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5,996 samples, 2.41%)</title><rect x="19.0363%" y="1077" width="2.4077%" height="15" fill="rgb(219,213,19)" fg:x="47407" fg:w="5996"/><text x="19.2863%" y="1087.50">co..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (5,987 samples, 2.40%)</title><rect x="19.0399%" y="1061" width="2.4041%" height="15" fill="rgb(252,169,30)" fg:x="47416" fg:w="5987"/><text x="19.2899%" y="1071.50">to..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (5,916 samples, 2.38%)</title><rect x="19.0684%" y="1045" width="2.3756%" height="15" fill="rgb(206,32,51)" fg:x="47487" fg:w="5916"/><text x="19.3184%" y="1055.50">to..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (60 samples, 0.02%)</title><rect x="21.4199%" y="1029" width="0.0241%" height="15" fill="rgb(250,172,42)" fg:x="53343" fg:w="60"/><text x="21.6699%" y="1039.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (12,037 samples, 4.83%)</title><rect x="16.6165%" y="1205" width="4.8335%" height="15" fill="rgb(209,34,43)" fg:x="41381" fg:w="12037"/><text x="16.8665%" y="1215.50">tokio:..</text></g><g><title>tokio::runtime::time::Inner::get_shard_size (168 samples, 0.07%)</title><rect x="21.4500%" y="1205" width="0.0675%" height="15" fill="rgb(223,11,35)" fg:x="53418" fg:w="168"/><text x="21.7000%" y="1215.50"></text></g><g><title>core::time::Duration::as_millis (46 samples, 0.02%)</title><rect x="21.5219%" y="1173" width="0.0185%" height="15" fill="rgb(251,219,26)" fg:x="53597" fg:w="46"/><text x="21.7719%" y="1183.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (131 samples, 0.05%)</title><rect x="21.5175%" y="1189" width="0.0526%" height="15" fill="rgb(231,119,3)" fg:x="53586" fg:w="131"/><text x="21.7675%" y="1199.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (74 samples, 0.03%)</title><rect x="21.5403%" y="1173" width="0.0297%" height="15" fill="rgb(216,97,11)" fg:x="53643" fg:w="74"/><text x="21.7903%" y="1183.50"></text></g><g><title>std::time::Instant::duration_since (74 samples, 0.03%)</title><rect x="21.5403%" y="1157" width="0.0297%" height="15" fill="rgb(223,59,9)" fg:x="53643" fg:w="74"/><text x="21.7903%" y="1167.50"></text></g><g><title>std::time::Instant::checked_duration_since (74 samples, 0.03%)</title><rect x="21.5403%" y="1141" width="0.0297%" height="15" fill="rgb(233,93,31)" fg:x="53643" fg:w="74"/><text x="21.7903%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (74 samples, 0.03%)</title><rect x="21.5403%" y="1125" width="0.0297%" height="15" fill="rgb(239,81,33)" fg:x="53643" fg:w="74"/><text x="21.7903%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (68 samples, 0.03%)</title><rect x="21.5428%" y="1109" width="0.0273%" height="15" fill="rgb(213,120,34)" fg:x="53649" fg:w="68"/><text x="21.7928%" y="1119.50"></text></g><g><title>clock_gettime (1,050 samples, 0.42%)</title><rect x="21.6030%" y="1141" width="0.4216%" height="15" fill="rgb(243,49,53)" fg:x="53799" fg:w="1050"/><text x="21.8530%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (572 samples, 0.23%)</title><rect x="21.7949%" y="1125" width="0.2297%" height="15" fill="rgb(247,216,33)" fg:x="54277" fg:w="572"/><text x="22.0449%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (1,107 samples, 0.44%)</title><rect x="21.5825%" y="1157" width="0.4445%" height="15" fill="rgb(226,26,14)" fg:x="53748" fg:w="1107"/><text x="21.8325%" y="1167.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (13,593 samples, 5.46%)</title><rect x="16.5716%" y="1221" width="5.4583%" height="15" fill="rgb(215,49,53)" fg:x="41269" fg:w="13593"/><text x="16.8216%" y="1231.50">tokio::..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (1,276 samples, 0.51%)</title><rect x="21.5175%" y="1205" width="0.5124%" height="15" fill="rgb(245,162,40)" fg:x="53586" fg:w="1276"/><text x="21.7675%" y="1215.50"></text></g><g><title>tokio::time::clock::Clock::now (1,145 samples, 0.46%)</title><rect x="21.5701%" y="1189" width="0.4598%" height="15" fill="rgb(229,68,17)" fg:x="53717" fg:w="1145"/><text x="21.8201%" y="1199.50"></text></g><g><title>tokio::time::clock::now (1,145 samples, 0.46%)</title><rect x="21.5701%" y="1173" width="0.4598%" height="15" fill="rgb(213,182,10)" fg:x="53717" fg:w="1145"/><text x="21.8201%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_thread_timeout (45 samples, 0.02%)</title><rect x="22.0318%" y="1221" width="0.0181%" height="15" fill="rgb(245,125,30)" fg:x="54867" fg:w="45"/><text x="22.2818%" y="1231.50"></text></g><g><title>tokio::runtime::driver::IoStack::park_timeout (45 samples, 0.02%)</title><rect x="22.0318%" y="1205" width="0.0181%" height="15" fill="rgb(232,202,2)" fg:x="54867" fg:w="45"/><text x="22.2818%" y="1215.50"></text></g><g><title>tokio::runtime::process::Driver::park_timeout (29 samples, 0.01%)</title><rect x="22.0383%" y="1189" width="0.0116%" height="15" fill="rgb(237,140,51)" fg:x="54883" fg:w="29"/><text x="22.2883%" y="1199.50"></text></g><g><title>tokio::runtime::signal::Driver::park_timeout (29 samples, 0.01%)</title><rect x="22.0383%" y="1173" width="0.0116%" height="15" fill="rgb(236,157,25)" fg:x="54883" fg:w="29"/><text x="22.2883%" y="1183.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park_timeout (29 samples, 0.01%)</title><rect x="22.0383%" y="1157" width="0.0116%" height="15" fill="rgb(219,209,0)" fg:x="54883" fg:w="29"/><text x="22.2883%" y="1167.50"></text></g><g><title>tokio::runtime::time::handle::Handle::is_shutdown (47 samples, 0.02%)</title><rect x="22.0499%" y="1221" width="0.0189%" height="15" fill="rgb(240,116,54)" fg:x="54912" fg:w="47"/><text x="22.2999%" y="1231.50"></text></g><g><title>tokio::runtime::time::Inner::is_shutdown (47 samples, 0.02%)</title><rect x="22.0499%" y="1205" width="0.0189%" height="15" fill="rgb(216,10,36)" fg:x="54912" fg:w="47"/><text x="22.2999%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (47 samples, 0.02%)</title><rect x="22.0499%" y="1189" width="0.0189%" height="15" fill="rgb(222,72,44)" fg:x="54912" fg:w="47"/><text x="22.2999%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (44 samples, 0.02%)</title><rect x="22.0511%" y="1173" width="0.0177%" height="15" fill="rgb(232,159,9)" fg:x="54915" fg:w="44"/><text x="22.3011%" y="1183.50"></text></g><g><title>core::time::Duration::as_millis (32 samples, 0.01%)</title><rect x="22.0784%" y="1189" width="0.0128%" height="15" fill="rgb(210,39,32)" fg:x="54983" fg:w="32"/><text x="22.3284%" y="1199.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (87 samples, 0.03%)</title><rect x="22.0716%" y="1205" width="0.0349%" height="15" fill="rgb(216,194,45)" fg:x="54966" fg:w="87"/><text x="22.3216%" y="1215.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (38 samples, 0.02%)</title><rect x="22.0913%" y="1189" width="0.0153%" height="15" fill="rgb(218,18,35)" fg:x="55015" fg:w="38"/><text x="22.3413%" y="1199.50"></text></g><g><title>std::time::Instant::duration_since (38 samples, 0.02%)</title><rect x="22.0913%" y="1173" width="0.0153%" height="15" fill="rgb(207,83,51)" fg:x="55015" fg:w="38"/><text x="22.3413%" y="1183.50"></text></g><g><title>std::time::Instant::checked_duration_since (38 samples, 0.02%)</title><rect x="22.0913%" y="1157" width="0.0153%" height="15" fill="rgb(225,63,43)" fg:x="55015" fg:w="38"/><text x="22.3413%" y="1167.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (38 samples, 0.02%)</title><rect x="22.0913%" y="1141" width="0.0153%" height="15" fill="rgb(207,57,36)" fg:x="55015" fg:w="38"/><text x="22.3413%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (36 samples, 0.01%)</title><rect x="22.0921%" y="1125" width="0.0145%" height="15" fill="rgb(216,99,33)" fg:x="55017" fg:w="36"/><text x="22.3421%" y="1135.50"></text></g><g><title>clock_gettime (393 samples, 0.16%)</title><rect x="22.1214%" y="1157" width="0.1578%" height="15" fill="rgb(225,42,16)" fg:x="55090" fg:w="393"/><text x="22.3714%" y="1167.50"></text></g><g><title>__vdso_clock_gettime (368 samples, 0.15%)</title><rect x="22.1314%" y="1141" width="0.1478%" height="15" fill="rgb(220,201,45)" fg:x="55115" fg:w="368"/><text x="22.3814%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (417 samples, 0.17%)</title><rect x="22.1150%" y="1173" width="0.1674%" height="15" fill="rgb(225,33,4)" fg:x="55074" fg:w="417"/><text x="22.3650%" y="1183.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::now (528 samples, 0.21%)</title><rect x="22.0716%" y="1221" width="0.2120%" height="15" fill="rgb(224,33,50)" fg:x="54966" fg:w="528"/><text x="22.3216%" y="1231.50"></text></g><g><title>tokio::time::clock::Clock::now (441 samples, 0.18%)</title><rect x="22.1065%" y="1205" width="0.1771%" height="15" fill="rgb(246,198,51)" fg:x="55053" fg:w="441"/><text x="22.3565%" y="1215.50"></text></g><g><title>tokio::time::clock::now (441 samples, 0.18%)</title><rect x="22.1065%" y="1189" width="0.1771%" height="15" fill="rgb(205,22,4)" fg:x="55053" fg:w="441"/><text x="22.3565%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (26,772 samples, 10.75%)</title><rect x="11.5634%" y="1253" width="10.7503%" height="15" fill="rgb(206,3,8)" fg:x="28797" fg:w="26772"/><text x="11.8134%" y="1263.50">tokio::runtime::..</text></g><g><title>tokio::runtime::time::Driver::park_internal (25,965 samples, 10.43%)</title><rect x="11.8875%" y="1237" width="10.4262%" height="15" fill="rgb(251,23,15)" fg:x="29604" fg:w="25965"/><text x="12.1375%" y="1247.50">tokio::runtime:..</text></g><g><title>tokio::runtime::time::source::TimeSource::tick_to_duration (75 samples, 0.03%)</title><rect x="22.2836%" y="1221" width="0.0301%" height="15" fill="rgb(252,88,28)" fg:x="55494" fg:w="75"/><text x="22.5336%" y="1231.50"></text></g><g><title>core::time::Duration::from_millis (75 samples, 0.03%)</title><rect x="22.2836%" y="1205" width="0.0301%" height="15" fill="rgb(212,127,14)" fg:x="55494" fg:w="75"/><text x="22.5336%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (30,575 samples, 12.28%)</title><rect x="10.2178%" y="1285" width="12.2774%" height="15" fill="rgb(247,145,37)" fg:x="25446" fg:w="30575"/><text x="10.4678%" y="1295.50">tokio::runtime::sc..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (30,575 samples, 12.28%)</title><rect x="10.2178%" y="1269" width="12.2774%" height="15" fill="rgb(209,117,53)" fg:x="25446" fg:w="30575"/><text x="10.4678%" y="1279.50">tokio::runtime::sc..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (452 samples, 0.18%)</title><rect x="22.3137%" y="1253" width="0.1815%" height="15" fill="rgb(212,90,42)" fg:x="55569" fg:w="452"/><text x="22.5637%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (452 samples, 0.18%)</title><rect x="22.3137%" y="1237" width="0.1815%" height="15" fill="rgb(218,164,37)" fg:x="55569" fg:w="452"/><text x="22.5637%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (452 samples, 0.18%)</title><rect x="22.3137%" y="1221" width="0.1815%" height="15" fill="rgb(246,65,34)" fg:x="55569" fg:w="452"/><text x="22.5637%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (33 samples, 0.01%)</title><rect x="22.5145%" y="1253" width="0.0133%" height="15" fill="rgb(231,100,33)" fg:x="56069" fg:w="33"/><text x="22.7645%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_swap (33 samples, 0.01%)</title><rect x="22.5145%" y="1237" width="0.0133%" height="15" fill="rgb(228,126,14)" fg:x="56069" fg:w="33"/><text x="22.7645%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (90 samples, 0.04%)</title><rect x="22.4952%" y="1285" width="0.0361%" height="15" fill="rgb(215,173,21)" fg:x="56021" fg:w="90"/><text x="22.7452%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (90 samples, 0.04%)</title><rect x="22.4952%" y="1269" width="0.0361%" height="15" fill="rgb(210,6,40)" fg:x="56021" fg:w="90"/><text x="22.7452%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (31 samples, 0.01%)</title><rect x="22.5334%" y="1253" width="0.0124%" height="15" fill="rgb(212,48,18)" fg:x="56116" fg:w="31"/><text x="22.7834%" y="1263.50"></text></g><g><title>core::ptr::read (26 samples, 0.01%)</title><rect x="22.5354%" y="1237" width="0.0104%" height="15" fill="rgb(230,214,11)" fg:x="56121" fg:w="26"/><text x="22.7854%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (34 samples, 0.01%)</title><rect x="22.5543%" y="1237" width="0.0137%" height="15" fill="rgb(254,105,39)" fg:x="56168" fg:w="34"/><text x="22.8043%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (34 samples, 0.01%)</title><rect x="22.5543%" y="1221" width="0.0137%" height="15" fill="rgb(245,158,5)" fg:x="56168" fg:w="34"/><text x="22.8043%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (48 samples, 0.02%)</title><rect x="22.5502%" y="1253" width="0.0193%" height="15" fill="rgb(249,208,11)" fg:x="56158" fg:w="48"/><text x="22.8002%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (96 samples, 0.04%)</title><rect x="22.5314%" y="1285" width="0.0385%" height="15" fill="rgb(210,39,28)" fg:x="56111" fg:w="96"/><text x="22.7814%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (92 samples, 0.04%)</title><rect x="22.5330%" y="1269" width="0.0369%" height="15" fill="rgb(211,56,53)" fg:x="56115" fg:w="92"/><text x="22.7830%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (31,762 samples, 12.75%)</title><rect x="9.8741%" y="1301" width="12.7540%" height="15" fill="rgb(226,201,30)" fg:x="24590" fg:w="31762"/><text x="10.1241%" y="1311.50">tokio::runtime::sch..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (145 samples, 0.06%)</title><rect x="22.5699%" y="1285" width="0.0582%" height="15" fill="rgb(239,101,34)" fg:x="56207" fg:w="145"/><text x="22.8199%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (59 samples, 0.02%)</title><rect x="22.6045%" y="1269" width="0.0237%" height="15" fill="rgb(226,209,5)" fg:x="56293" fg:w="59"/><text x="22.8545%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (54 samples, 0.02%)</title><rect x="22.6065%" y="1253" width="0.0217%" height="15" fill="rgb(250,105,47)" fg:x="56298" fg:w="54"/><text x="22.8565%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (50 samples, 0.02%)</title><rect x="22.6081%" y="1237" width="0.0201%" height="15" fill="rgb(230,72,3)" fg:x="56302" fg:w="50"/><text x="22.8581%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (50 samples, 0.02%)</title><rect x="22.6081%" y="1221" width="0.0201%" height="15" fill="rgb(232,218,39)" fg:x="56302" fg:w="50"/><text x="22.8581%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (264 samples, 0.11%)</title><rect x="22.8920%" y="1285" width="0.1060%" height="15" fill="rgb(248,166,6)" fg:x="57009" fg:w="264"/><text x="23.1420%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (264 samples, 0.11%)</title><rect x="22.8920%" y="1269" width="0.1060%" height="15" fill="rgb(247,89,20)" fg:x="57009" fg:w="264"/><text x="23.1420%" y="1279.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (264 samples, 0.11%)</title><rect x="22.8920%" y="1253" width="0.1060%" height="15" fill="rgb(248,130,54)" fg:x="57009" fg:w="264"/><text x="23.1420%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (264 samples, 0.11%)</title><rect x="22.8920%" y="1237" width="0.1060%" height="15" fill="rgb(234,196,4)" fg:x="57009" fg:w="264"/><text x="23.1420%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (262 samples, 0.11%)</title><rect x="22.8928%" y="1221" width="0.1052%" height="15" fill="rgb(250,143,31)" fg:x="57011" fg:w="262"/><text x="23.1428%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (262 samples, 0.11%)</title><rect x="22.8928%" y="1205" width="0.1052%" height="15" fill="rgb(211,110,34)" fg:x="57011" fg:w="262"/><text x="23.1428%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (217 samples, 0.09%)</title><rect x="22.9984%" y="1237" width="0.0871%" height="15" fill="rgb(215,124,48)" fg:x="57274" fg:w="217"/><text x="23.2484%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (217 samples, 0.09%)</title><rect x="22.9984%" y="1221" width="0.0871%" height="15" fill="rgb(216,46,13)" fg:x="57274" fg:w="217"/><text x="23.2484%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (231 samples, 0.09%)</title><rect x="22.9980%" y="1285" width="0.0928%" height="15" fill="rgb(205,184,25)" fg:x="57273" fg:w="231"/><text x="23.2480%" y="1295.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (231 samples, 0.09%)</title><rect x="22.9980%" y="1269" width="0.0928%" height="15" fill="rgb(228,1,10)" fg:x="57273" fg:w="231"/><text x="23.2480%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (231 samples, 0.09%)</title><rect x="22.9980%" y="1253" width="0.0928%" height="15" fill="rgb(213,116,27)" fg:x="57273" fg:w="231"/><text x="23.2480%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (1,247 samples, 0.50%)</title><rect x="22.6281%" y="1301" width="0.5007%" height="15" fill="rgb(241,95,50)" fg:x="56352" fg:w="1247"/><text x="22.8781%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (95 samples, 0.04%)</title><rect x="23.0907%" y="1285" width="0.0381%" height="15" fill="rgb(238,48,32)" fg:x="57504" fg:w="95"/><text x="23.3407%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (140 samples, 0.06%)</title><rect x="23.1486%" y="1269" width="0.0562%" height="15" fill="rgb(235,113,49)" fg:x="57648" fg:w="140"/><text x="23.3986%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (140 samples, 0.06%)</title><rect x="23.1486%" y="1253" width="0.0562%" height="15" fill="rgb(205,127,43)" fg:x="57648" fg:w="140"/><text x="23.3986%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (140 samples, 0.06%)</title><rect x="23.1486%" y="1237" width="0.0562%" height="15" fill="rgb(250,162,2)" fg:x="57648" fg:w="140"/><text x="23.3986%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (140 samples, 0.06%)</title><rect x="23.1486%" y="1221" width="0.0562%" height="15" fill="rgb(220,13,41)" fg:x="57648" fg:w="140"/><text x="23.3986%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (139 samples, 0.06%)</title><rect x="23.1490%" y="1205" width="0.0558%" height="15" fill="rgb(249,221,25)" fg:x="57649" fg:w="139"/><text x="23.3990%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (139 samples, 0.06%)</title><rect x="23.1490%" y="1189" width="0.0558%" height="15" fill="rgb(215,208,19)" fg:x="57649" fg:w="139"/><text x="23.3990%" y="1199.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (305 samples, 0.12%)</title><rect x="23.2329%" y="1221" width="0.1225%" height="15" fill="rgb(236,175,2)" fg:x="57858" fg:w="305"/><text x="23.4829%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (305 samples, 0.12%)</title><rect x="23.2329%" y="1205" width="0.1225%" height="15" fill="rgb(241,52,2)" fg:x="57858" fg:w="305"/><text x="23.4829%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (420 samples, 0.17%)</title><rect x="23.2048%" y="1269" width="0.1687%" height="15" fill="rgb(248,140,14)" fg:x="57788" fg:w="420"/><text x="23.4548%" y="1279.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (420 samples, 0.17%)</title><rect x="23.2048%" y="1253" width="0.1687%" height="15" fill="rgb(253,22,42)" fg:x="57788" fg:w="420"/><text x="23.4548%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (420 samples, 0.17%)</title><rect x="23.2048%" y="1237" width="0.1687%" height="15" fill="rgb(234,61,47)" fg:x="57788" fg:w="420"/><text x="23.4548%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.02%)</title><rect x="23.3554%" y="1221" width="0.0181%" height="15" fill="rgb(208,226,15)" fg:x="58163" fg:w="45"/><text x="23.6054%" y="1231.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="23.3630%" y="1205" width="0.0104%" height="15" fill="rgb(217,221,4)" fg:x="58182" fg:w="26"/><text x="23.6130%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (115 samples, 0.05%)</title><rect x="23.3734%" y="1221" width="0.0462%" height="15" fill="rgb(212,174,34)" fg:x="58208" fg:w="115"/><text x="23.6234%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (115 samples, 0.05%)</title><rect x="23.3734%" y="1205" width="0.0462%" height="15" fill="rgb(253,83,4)" fg:x="58208" fg:w="115"/><text x="23.6234%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (686 samples, 0.28%)</title><rect x="23.1461%" y="1285" width="0.2755%" height="15" fill="rgb(250,195,49)" fg:x="57642" fg:w="686"/><text x="23.3961%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (120 samples, 0.05%)</title><rect x="23.3734%" y="1269" width="0.0482%" height="15" fill="rgb(241,192,25)" fg:x="58208" fg:w="120"/><text x="23.6234%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (120 samples, 0.05%)</title><rect x="23.3734%" y="1253" width="0.0482%" height="15" fill="rgb(208,124,10)" fg:x="58208" fg:w="120"/><text x="23.6234%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (120 samples, 0.05%)</title><rect x="23.3734%" y="1237" width="0.0482%" height="15" fill="rgb(222,33,0)" fg:x="58208" fg:w="120"/><text x="23.6234%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (38 samples, 0.02%)</title><rect x="23.4955%" y="1269" width="0.0153%" height="15" fill="rgb(234,209,28)" fg:x="58512" fg:w="38"/><text x="23.7455%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (38 samples, 0.02%)</title><rect x="23.4955%" y="1253" width="0.0153%" height="15" fill="rgb(224,11,23)" fg:x="58512" fg:w="38"/><text x="23.7455%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="23.4955%" y="1237" width="0.0153%" height="15" fill="rgb(232,99,1)" fg:x="58512" fg:w="38"/><text x="23.7455%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (38 samples, 0.02%)</title><rect x="23.4955%" y="1221" width="0.0153%" height="15" fill="rgb(237,95,45)" fg:x="58512" fg:w="38"/><text x="23.7455%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (37 samples, 0.01%)</title><rect x="23.4959%" y="1205" width="0.0149%" height="15" fill="rgb(208,109,11)" fg:x="58513" fg:w="37"/><text x="23.7459%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.01%)</title><rect x="23.4959%" y="1189" width="0.0149%" height="15" fill="rgb(216,190,48)" fg:x="58513" fg:w="37"/><text x="23.7459%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (28 samples, 0.01%)</title><rect x="23.5120%" y="1221" width="0.0112%" height="15" fill="rgb(251,171,36)" fg:x="58553" fg:w="28"/><text x="23.7620%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.01%)</title><rect x="23.5120%" y="1205" width="0.0112%" height="15" fill="rgb(230,62,22)" fg:x="58553" fg:w="28"/><text x="23.7620%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (32 samples, 0.01%)</title><rect x="23.5108%" y="1269" width="0.0128%" height="15" fill="rgb(225,114,35)" fg:x="58550" fg:w="32"/><text x="23.7608%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (32 samples, 0.01%)</title><rect x="23.5108%" y="1253" width="0.0128%" height="15" fill="rgb(215,118,42)" fg:x="58550" fg:w="32"/><text x="23.7608%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (32 samples, 0.01%)</title><rect x="23.5108%" y="1237" width="0.0128%" height="15" fill="rgb(243,119,21)" fg:x="58550" fg:w="32"/><text x="23.7608%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (318 samples, 0.13%)</title><rect x="23.4216%" y="1285" width="0.1277%" height="15" fill="rgb(252,177,53)" fg:x="58328" fg:w="318"/><text x="23.6716%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (64 samples, 0.03%)</title><rect x="23.5236%" y="1269" width="0.0257%" height="15" fill="rgb(237,209,29)" fg:x="58582" fg:w="64"/><text x="23.7736%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (64 samples, 0.03%)</title><rect x="23.5236%" y="1253" width="0.0257%" height="15" fill="rgb(212,65,23)" fg:x="58582" fg:w="64"/><text x="23.7736%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (64 samples, 0.03%)</title><rect x="23.5236%" y="1237" width="0.0257%" height="15" fill="rgb(230,222,46)" fg:x="58582" fg:w="64"/><text x="23.7736%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (1,064 samples, 0.43%)</title><rect x="23.1289%" y="1301" width="0.4272%" height="15" fill="rgb(215,135,32)" fg:x="57599" fg:w="1064"/><text x="23.3789%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.02%)</title><rect x="23.5722%" y="1269" width="0.0181%" height="15" fill="rgb(246,101,22)" fg:x="58703" fg:w="45"/><text x="23.8222%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (476 samples, 0.19%)</title><rect x="23.5903%" y="1205" width="0.1911%" height="15" fill="rgb(206,107,13)" fg:x="58748" fg:w="476"/><text x="23.8403%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (476 samples, 0.19%)</title><rect x="23.5903%" y="1189" width="0.1911%" height="15" fill="rgb(250,100,44)" fg:x="58748" fg:w="476"/><text x="23.8403%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (477 samples, 0.19%)</title><rect x="23.5903%" y="1269" width="0.1915%" height="15" fill="rgb(231,147,38)" fg:x="58748" fg:w="477"/><text x="23.8403%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (477 samples, 0.19%)</title><rect x="23.5903%" y="1253" width="0.1915%" height="15" fill="rgb(229,8,40)" fg:x="58748" fg:w="477"/><text x="23.8403%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (477 samples, 0.19%)</title><rect x="23.5903%" y="1237" width="0.1915%" height="15" fill="rgb(221,135,30)" fg:x="58748" fg:w="477"/><text x="23.8403%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (477 samples, 0.19%)</title><rect x="23.5903%" y="1221" width="0.1915%" height="15" fill="rgb(249,193,18)" fg:x="58748" fg:w="477"/><text x="23.8403%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (65 samples, 0.03%)</title><rect x="23.7846%" y="1221" width="0.0261%" height="15" fill="rgb(209,133,39)" fg:x="59232" fg:w="65"/><text x="24.0346%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (65 samples, 0.03%)</title><rect x="23.7846%" y="1205" width="0.0261%" height="15" fill="rgb(232,100,14)" fg:x="59232" fg:w="65"/><text x="24.0346%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (87 samples, 0.03%)</title><rect x="23.7818%" y="1269" width="0.0349%" height="15" fill="rgb(224,185,1)" fg:x="59225" fg:w="87"/><text x="24.0318%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (87 samples, 0.03%)</title><rect x="23.7818%" y="1253" width="0.0349%" height="15" fill="rgb(223,139,8)" fg:x="59225" fg:w="87"/><text x="24.0318%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (87 samples, 0.03%)</title><rect x="23.7818%" y="1237" width="0.0349%" height="15" fill="rgb(232,213,38)" fg:x="59225" fg:w="87"/><text x="24.0318%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (684 samples, 0.27%)</title><rect x="23.5722%" y="1285" width="0.2747%" height="15" fill="rgb(207,94,22)" fg:x="58703" fg:w="684"/><text x="23.8222%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (75 samples, 0.03%)</title><rect x="23.8167%" y="1269" width="0.0301%" height="15" fill="rgb(219,183,54)" fg:x="59312" fg:w="75"/><text x="24.0667%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (71 samples, 0.03%)</title><rect x="23.8183%" y="1253" width="0.0285%" height="15" fill="rgb(216,185,54)" fg:x="59316" fg:w="71"/><text x="24.0683%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_sub (71 samples, 0.03%)</title><rect x="23.8183%" y="1237" width="0.0285%" height="15" fill="rgb(254,217,39)" fg:x="59316" fg:w="71"/><text x="24.0683%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="23.8625%" y="1269" width="0.0104%" height="15" fill="rgb(240,178,23)" fg:x="59426" fg:w="26"/><text x="24.1125%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (72 samples, 0.03%)</title><rect x="23.8754%" y="1269" width="0.0289%" height="15" fill="rgb(218,11,47)" fg:x="59458" fg:w="72"/><text x="24.1254%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (58 samples, 0.02%)</title><rect x="23.8810%" y="1253" width="0.0233%" height="15" fill="rgb(218,51,51)" fg:x="59472" fg:w="58"/><text x="24.1310%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (58 samples, 0.02%)</title><rect x="23.8810%" y="1237" width="0.0233%" height="15" fill="rgb(238,126,27)" fg:x="59472" fg:w="58"/><text x="24.1310%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (46 samples, 0.02%)</title><rect x="23.8858%" y="1221" width="0.0185%" height="15" fill="rgb(249,202,22)" fg:x="59484" fg:w="46"/><text x="24.1358%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.02%)</title><rect x="23.8858%" y="1205" width="0.0185%" height="15" fill="rgb(254,195,49)" fg:x="59484" fg:w="46"/><text x="24.1358%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (144 samples, 0.06%)</title><rect x="23.8468%" y="1285" width="0.0578%" height="15" fill="rgb(208,123,14)" fg:x="59387" fg:w="144"/><text x="24.0968%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (35,537 samples, 14.27%)</title><rect x="9.6396%" y="1317" width="14.2699%" height="15" fill="rgb(224,200,8)" fg:x="24006" fg:w="35537"/><text x="9.8896%" y="1327.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (880 samples, 0.35%)</title><rect x="23.5561%" y="1301" width="0.3534%" height="15" fill="rgb(217,61,36)" fg:x="58663" fg:w="880"/><text x="23.8061%" y="1311.50"></text></g><g><title>core::ops::function::FnOnce::call_once (39 samples, 0.02%)</title><rect x="23.9348%" y="1237" width="0.0157%" height="15" fill="rgb(206,35,45)" fg:x="59606" fg:w="39"/><text x="24.1848%" y="1247.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (39 samples, 0.02%)</title><rect x="23.9348%" y="1221" width="0.0157%" height="15" fill="rgb(217,65,33)" fg:x="59606" fg:w="39"/><text x="24.1848%" y="1231.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (39 samples, 0.02%)</title><rect x="23.9348%" y="1205" width="0.0157%" height="15" fill="rgb(222,158,48)" fg:x="59606" fg:w="39"/><text x="24.1848%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (35 samples, 0.01%)</title><rect x="23.9364%" y="1189" width="0.0141%" height="15" fill="rgb(254,2,54)" fg:x="59610" fg:w="35"/><text x="24.1864%" y="1199.50"></text></g><g><title>tokio::runtime::context::budget (64 samples, 0.03%)</title><rect x="23.9348%" y="1269" width="0.0257%" height="15" fill="rgb(250,143,38)" fg:x="59606" fg:w="64"/><text x="24.1848%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64 samples, 0.03%)</title><rect x="23.9348%" y="1253" width="0.0257%" height="15" fill="rgb(248,25,0)" fg:x="59606" fg:w="64"/><text x="24.1848%" y="1263.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (25 samples, 0.01%)</title><rect x="23.9504%" y="1237" width="0.0100%" height="15" fill="rgb(206,152,27)" fg:x="59645" fg:w="25"/><text x="24.2004%" y="1247.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (25 samples, 0.01%)</title><rect x="23.9504%" y="1221" width="0.0100%" height="15" fill="rgb(240,77,30)" fg:x="59645" fg:w="25"/><text x="24.2004%" y="1231.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (184 samples, 0.07%)</title><rect x="23.9918%" y="1253" width="0.0739%" height="15" fill="rgb(231,5,3)" fg:x="59748" fg:w="184"/><text x="24.2418%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (184 samples, 0.07%)</title><rect x="23.9918%" y="1237" width="0.0739%" height="15" fill="rgb(207,226,32)" fg:x="59748" fg:w="184"/><text x="24.2418%" y="1247.50"></text></g><g><title>core::cell::BorrowRefMut::new (184 samples, 0.07%)</title><rect x="23.9918%" y="1221" width="0.0739%" height="15" fill="rgb(222,207,47)" fg:x="59748" fg:w="184"/><text x="24.2418%" y="1231.50"></text></g><g><title>core::ptr::read (239 samples, 0.10%)</title><rect x="24.0657%" y="1221" width="0.0960%" height="15" fill="rgb(229,115,45)" fg:x="59932" fg:w="239"/><text x="24.3157%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (241 samples, 0.10%)</title><rect x="24.0657%" y="1253" width="0.0968%" height="15" fill="rgb(224,191,6)" fg:x="59932" fg:w="241"/><text x="24.3157%" y="1263.50"></text></g><g><title>core::mem::replace (241 samples, 0.10%)</title><rect x="24.0657%" y="1237" width="0.0968%" height="15" fill="rgb(230,227,24)" fg:x="59932" fg:w="241"/><text x="24.3157%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (148 samples, 0.06%)</title><rect x="24.1809%" y="1253" width="0.0594%" height="15" fill="rgb(228,80,19)" fg:x="60219" fg:w="148"/><text x="24.4309%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.02%)</title><rect x="24.2211%" y="1237" width="0.0193%" height="15" fill="rgb(247,229,0)" fg:x="60319" fg:w="48"/><text x="24.4711%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (48 samples, 0.02%)</title><rect x="24.2211%" y="1221" width="0.0193%" height="15" fill="rgb(237,194,15)" fg:x="60319" fg:w="48"/><text x="24.4711%" y="1231.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (48 samples, 0.02%)</title><rect x="24.2211%" y="1205" width="0.0193%" height="15" fill="rgb(219,203,20)" fg:x="60319" fg:w="48"/><text x="24.4711%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (70 samples, 0.03%)</title><rect x="24.3640%" y="1125" width="0.0281%" height="15" fill="rgb(234,128,8)" fg:x="60675" fg:w="70"/><text x="24.6140%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (70 samples, 0.03%)</title><rect x="24.3640%" y="1109" width="0.0281%" height="15" fill="rgb(248,202,8)" fg:x="60675" fg:w="70"/><text x="24.6140%" y="1119.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (30 samples, 0.01%)</title><rect x="24.3801%" y="1093" width="0.0120%" height="15" fill="rgb(206,104,37)" fg:x="60715" fg:w="30"/><text x="24.6301%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (30 samples, 0.01%)</title><rect x="24.3801%" y="1077" width="0.0120%" height="15" fill="rgb(223,8,27)" fg:x="60715" fg:w="30"/><text x="24.6301%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (48 samples, 0.02%)</title><rect x="24.3934%" y="1109" width="0.0193%" height="15" fill="rgb(216,217,28)" fg:x="60748" fg:w="48"/><text x="24.6434%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (48 samples, 0.02%)</title><rect x="24.3934%" y="1093" width="0.0193%" height="15" fill="rgb(249,199,1)" fg:x="60748" fg:w="48"/><text x="24.6434%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (48 samples, 0.02%)</title><rect x="24.3934%" y="1077" width="0.0193%" height="15" fill="rgb(240,85,17)" fg:x="60748" fg:w="48"/><text x="24.6434%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (214 samples, 0.09%)</title><rect x="24.4331%" y="1061" width="0.0859%" height="15" fill="rgb(206,108,45)" fg:x="60847" fg:w="214"/><text x="24.6831%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (214 samples, 0.09%)</title><rect x="24.4331%" y="1045" width="0.0859%" height="15" fill="rgb(245,210,41)" fg:x="60847" fg:w="214"/><text x="24.6831%" y="1055.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (180 samples, 0.07%)</title><rect x="24.5287%" y="1045" width="0.0723%" height="15" fill="rgb(206,13,37)" fg:x="61085" fg:w="180"/><text x="24.7787%" y="1055.50"></text></g><g><title>clock_gettime (172 samples, 0.07%)</title><rect x="24.5319%" y="1029" width="0.0691%" height="15" fill="rgb(250,61,18)" fg:x="61093" fg:w="172"/><text x="24.7819%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (84 samples, 0.03%)</title><rect x="24.5672%" y="1013" width="0.0337%" height="15" fill="rgb(235,172,48)" fg:x="61181" fg:w="84"/><text x="24.8172%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (206 samples, 0.08%)</title><rect x="24.5190%" y="1061" width="0.0827%" height="15" fill="rgb(249,201,17)" fg:x="61061" fg:w="206"/><text x="24.7690%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::hash (27 samples, 0.01%)</title><rect x="24.6110%" y="1045" width="0.0108%" height="15" fill="rgb(219,208,6)" fg:x="61290" fg:w="27"/><text x="24.8610%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (131 samples, 0.05%)</title><rect x="24.6018%" y="1061" width="0.0526%" height="15" fill="rgb(248,31,23)" fg:x="61267" fg:w="131"/><text x="24.8518%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (81 samples, 0.03%)</title><rect x="24.6218%" y="1045" width="0.0325%" height="15" fill="rgb(245,15,42)" fg:x="61317" fg:w="81"/><text x="24.8718%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (81 samples, 0.03%)</title><rect x="24.6218%" y="1029" width="0.0325%" height="15" fill="rgb(222,217,39)" fg:x="61317" fg:w="81"/><text x="24.8718%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (81 samples, 0.03%)</title><rect x="24.6218%" y="1013" width="0.0325%" height="15" fill="rgb(210,219,27)" fg:x="61317" fg:w="81"/><text x="24.8718%" y="1023.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (611 samples, 0.25%)</title><rect x="24.4154%" y="1093" width="0.2453%" height="15" fill="rgb(252,166,36)" fg:x="60803" fg:w="611"/><text x="24.6654%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (611 samples, 0.25%)</title><rect x="24.4154%" y="1077" width="0.2453%" height="15" fill="rgb(245,132,34)" fg:x="60803" fg:w="611"/><text x="24.6654%" y="1087.50"></text></g><g><title>syscall (53 samples, 0.02%)</title><rect x="24.6608%" y="1093" width="0.0213%" height="15" fill="rgb(236,54,3)" fg:x="61414" fg:w="53"/><text x="24.9108%" y="1103.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (61 samples, 0.02%)</title><rect x="24.6821%" y="1093" width="0.0245%" height="15" fill="rgb(241,173,43)" fg:x="61467" fg:w="61"/><text x="24.9321%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (50 samples, 0.02%)</title><rect x="24.6865%" y="1077" width="0.0201%" height="15" fill="rgb(215,190,9)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1087.50"></text></g><g><title>mio::waker::Waker::wake (50 samples, 0.02%)</title><rect x="24.6865%" y="1061" width="0.0201%" height="15" fill="rgb(242,101,16)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1071.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (50 samples, 0.02%)</title><rect x="24.6865%" y="1045" width="0.0201%" height="15" fill="rgb(223,190,21)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1055.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (50 samples, 0.02%)</title><rect x="24.6865%" y="1029" width="0.0201%" height="15" fill="rgb(215,228,25)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1039.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (50 samples, 0.02%)</title><rect x="24.6865%" y="1013" width="0.0201%" height="15" fill="rgb(225,36,22)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1023.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (50 samples, 0.02%)</title><rect x="24.6865%" y="997" width="0.0201%" height="15" fill="rgb(251,106,46)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="1007.50"></text></g><g><title>write (50 samples, 0.02%)</title><rect x="24.6865%" y="981" width="0.0201%" height="15" fill="rgb(208,90,1)" fg:x="61478" fg:w="50"/><text x="24.9365%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (136 samples, 0.05%)</title><rect x="24.7283%" y="1061" width="0.0546%" height="15" fill="rgb(243,10,4)" fg:x="61582" fg:w="136"/><text x="24.9783%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_swap (136 samples, 0.05%)</title><rect x="24.7283%" y="1045" width="0.0546%" height="15" fill="rgb(212,137,27)" fg:x="61582" fg:w="136"/><text x="24.9783%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (210 samples, 0.08%)</title><rect x="24.7066%" y="1093" width="0.0843%" height="15" fill="rgb(231,220,49)" fg:x="61528" fg:w="210"/><text x="24.9566%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (210 samples, 0.08%)</title><rect x="24.7066%" y="1077" width="0.0843%" height="15" fill="rgb(237,96,20)" fg:x="61528" fg:w="210"/><text x="24.9566%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (41 samples, 0.02%)</title><rect x="24.8045%" y="1077" width="0.0165%" height="15" fill="rgb(239,229,30)" fg:x="61772" fg:w="41"/><text x="25.0545%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.02%)</title><rect x="24.8045%" y="1061" width="0.0165%" height="15" fill="rgb(219,65,33)" fg:x="61772" fg:w="41"/><text x="25.0545%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (83 samples, 0.03%)</title><rect x="24.7909%" y="1093" width="0.0333%" height="15" fill="rgb(243,134,7)" fg:x="61738" fg:w="83"/><text x="25.0409%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (82 samples, 0.03%)</title><rect x="24.8355%" y="1061" width="0.0329%" height="15" fill="rgb(216,177,54)" fg:x="61849" fg:w="82"/><text x="25.0855%" y="1071.50"></text></g><g><title>core::ptr::read (77 samples, 0.03%)</title><rect x="24.8375%" y="1045" width="0.0309%" height="15" fill="rgb(211,160,20)" fg:x="61854" fg:w="77"/><text x="25.0875%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (235 samples, 0.09%)</title><rect x="24.8820%" y="1045" width="0.0944%" height="15" fill="rgb(239,85,39)" fg:x="61965" fg:w="235"/><text x="25.1320%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (235 samples, 0.09%)</title><rect x="24.8820%" y="1029" width="0.0944%" height="15" fill="rgb(232,125,22)" fg:x="61965" fg:w="235"/><text x="25.1320%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (239 samples, 0.10%)</title><rect x="24.8812%" y="1061" width="0.0960%" height="15" fill="rgb(244,57,34)" fg:x="61963" fg:w="239"/><text x="25.1312%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (1,540 samples, 0.62%)</title><rect x="24.3636%" y="1189" width="0.6184%" height="15" fill="rgb(214,203,32)" fg:x="60674" fg:w="1540"/><text x="24.6136%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1,539 samples, 0.62%)</title><rect x="24.3640%" y="1173" width="0.6180%" height="15" fill="rgb(207,58,43)" fg:x="60675" fg:w="1539"/><text x="24.6140%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1,539 samples, 0.62%)</title><rect x="24.3640%" y="1157" width="0.6180%" height="15" fill="rgb(215,193,15)" fg:x="60675" fg:w="1539"/><text x="24.6140%" y="1167.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,539 samples, 0.62%)</title><rect x="24.3640%" y="1141" width="0.6180%" height="15" fill="rgb(232,15,44)" fg:x="60675" fg:w="1539"/><text x="24.6140%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1,469 samples, 0.59%)</title><rect x="24.3922%" y="1125" width="0.5899%" height="15" fill="rgb(212,3,48)" fg:x="60745" fg:w="1469"/><text x="24.6422%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1,412 samples, 0.57%)</title><rect x="24.4150%" y="1109" width="0.5670%" height="15" fill="rgb(218,128,7)" fg:x="60802" fg:w="1412"/><text x="24.6650%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (393 samples, 0.16%)</title><rect x="24.8242%" y="1093" width="0.1578%" height="15" fill="rgb(226,216,39)" fg:x="61821" fg:w="393"/><text x="25.0742%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (366 samples, 0.15%)</title><rect x="24.8351%" y="1077" width="0.1470%" height="15" fill="rgb(243,47,51)" fg:x="61848" fg:w="366"/><text x="25.0851%" y="1087.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (65 samples, 0.03%)</title><rect x="25.9152%" y="901" width="0.0261%" height="15" fill="rgb(241,183,40)" fg:x="64538" fg:w="65"/><text x="26.1652%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (133 samples, 0.05%)</title><rect x="25.9413%" y="901" width="0.0534%" height="15" fill="rgb(231,217,32)" fg:x="64603" fg:w="133"/><text x="26.1913%" y="911.50"></text></g><g><title>__rust_alloc (36 samples, 0.01%)</title><rect x="26.5449%" y="645" width="0.0145%" height="15" fill="rgb(229,61,38)" fg:x="66106" fg:w="36"/><text x="26.7949%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (36 samples, 0.01%)</title><rect x="26.5449%" y="629" width="0.0145%" height="15" fill="rgb(225,210,5)" fg:x="66106" fg:w="36"/><text x="26.7949%" y="639.50"></text></g><g><title>_rjem_malloc (35 samples, 0.01%)</title><rect x="26.5453%" y="613" width="0.0141%" height="15" fill="rgb(231,79,45)" fg:x="66107" fg:w="35"/><text x="26.7953%" y="623.50"></text></g><g><title>imalloc_fastpath (34 samples, 0.01%)</title><rect x="26.5457%" y="597" width="0.0137%" height="15" fill="rgb(224,100,7)" fg:x="66108" fg:w="34"/><text x="26.7957%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (57 samples, 0.02%)</title><rect x="26.5376%" y="757" width="0.0229%" height="15" fill="rgb(241,198,18)" fg:x="66088" fg:w="57"/><text x="26.7876%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (57 samples, 0.02%)</title><rect x="26.5376%" y="741" width="0.0229%" height="15" fill="rgb(252,97,53)" fg:x="66088" fg:w="57"/><text x="26.7876%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (57 samples, 0.02%)</title><rect x="26.5376%" y="725" width="0.0229%" height="15" fill="rgb(220,88,7)" fg:x="66088" fg:w="57"/><text x="26.7876%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.02%)</title><rect x="26.5449%" y="709" width="0.0157%" height="15" fill="rgb(213,176,14)" fg:x="66106" fg:w="39"/><text x="26.7949%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.02%)</title><rect x="26.5449%" y="693" width="0.0157%" height="15" fill="rgb(246,73,7)" fg:x="66106" fg:w="39"/><text x="26.7949%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.02%)</title><rect x="26.5449%" y="677" width="0.0157%" height="15" fill="rgb(245,64,36)" fg:x="66106" fg:w="39"/><text x="26.7949%" y="687.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.02%)</title><rect x="26.5449%" y="661" width="0.0157%" height="15" fill="rgb(245,80,10)" fg:x="66106" fg:w="39"/><text x="26.7949%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (84 samples, 0.03%)</title><rect x="27.0757%" y="693" width="0.0337%" height="15" fill="rgb(232,107,50)" fg:x="67428" fg:w="84"/><text x="27.3257%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (84 samples, 0.03%)</title><rect x="27.0757%" y="677" width="0.0337%" height="15" fill="rgb(253,3,0)" fg:x="67428" fg:w="84"/><text x="27.3257%" y="687.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (178 samples, 0.07%)</title><rect x="27.1106%" y="693" width="0.0715%" height="15" fill="rgb(212,99,53)" fg:x="67515" fg:w="178"/><text x="27.3606%" y="703.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (85 samples, 0.03%)</title><rect x="28.1964%" y="645" width="0.0341%" height="15" fill="rgb(249,111,54)" fg:x="70219" fg:w="85"/><text x="28.4464%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (79 samples, 0.03%)</title><rect x="28.1988%" y="629" width="0.0317%" height="15" fill="rgb(249,55,30)" fg:x="70225" fg:w="79"/><text x="28.4488%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (214 samples, 0.09%)</title><rect x="28.2382%" y="629" width="0.0859%" height="15" fill="rgb(237,47,42)" fg:x="70323" fg:w="214"/><text x="28.4882%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (142 samples, 0.06%)</title><rect x="28.2671%" y="613" width="0.0570%" height="15" fill="rgb(211,20,18)" fg:x="70395" fg:w="142"/><text x="28.5171%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (124 samples, 0.05%)</title><rect x="28.2743%" y="597" width="0.0498%" height="15" fill="rgb(231,203,46)" fg:x="70413" fg:w="124"/><text x="28.5243%" y="607.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (203 samples, 0.08%)</title><rect x="28.3775%" y="597" width="0.0815%" height="15" fill="rgb(237,142,3)" fg:x="70670" fg:w="203"/><text x="28.6275%" y="607.50"></text></g><g><title>[libc.so.6] (676 samples, 0.27%)</title><rect x="28.7719%" y="421" width="0.2714%" height="15" fill="rgb(241,107,1)" fg:x="71652" fg:w="676"/><text x="29.0219%" y="431.50"></text></g><g><title>recv (1,402 samples, 0.56%)</title><rect x="28.5261%" y="437" width="0.5630%" height="15" fill="rgb(229,83,13)" fg:x="71040" fg:w="1402"/><text x="28.7761%" y="447.50"></text></g><g><title>[unknown] (114 samples, 0.05%)</title><rect x="29.0433%" y="421" width="0.0458%" height="15" fill="rgb(241,91,40)" fg:x="72328" fg:w="114"/><text x="29.2933%" y="431.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (94 samples, 0.04%)</title><rect x="29.0915%" y="421" width="0.0377%" height="15" fill="rgb(225,3,45)" fg:x="72448" fg:w="94"/><text x="29.3415%" y="431.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,511 samples, 0.61%)</title><rect x="28.5237%" y="565" width="0.6067%" height="15" fill="rgb(244,223,14)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="575.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,511 samples, 0.61%)</title><rect x="28.5237%" y="549" width="0.6067%" height="15" fill="rgb(224,124,37)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="559.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (1,511 samples, 0.61%)</title><rect x="28.5237%" y="533" width="0.6067%" height="15" fill="rgb(251,171,30)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,511 samples, 0.61%)</title><rect x="28.5237%" y="517" width="0.6067%" height="15" fill="rgb(236,46,54)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="527.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,511 samples, 0.61%)</title><rect x="28.5237%" y="501" width="0.6067%" height="15" fill="rgb(245,213,5)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="511.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,511 samples, 0.61%)</title><rect x="28.5237%" y="485" width="0.6067%" height="15" fill="rgb(230,144,27)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="495.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1,511 samples, 0.61%)</title><rect x="28.5237%" y="469" width="0.6067%" height="15" fill="rgb(220,86,6)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="479.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1,511 samples, 0.61%)</title><rect x="28.5237%" y="453" width="0.6067%" height="15" fill="rgb(240,20,13)" fg:x="71034" fg:w="1511"/><text x="28.7737%" y="463.50"></text></g><g><title>std::sys::pal::unix::cvt (103 samples, 0.04%)</title><rect x="29.0891%" y="437" width="0.0414%" height="15" fill="rgb(217,89,34)" fg:x="72442" fg:w="103"/><text x="29.3391%" y="447.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (53 samples, 0.02%)</title><rect x="29.1316%" y="565" width="0.0213%" height="15" fill="rgb(229,13,5)" fg:x="72548" fg:w="53"/><text x="29.3816%" y="575.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (53 samples, 0.02%)</title><rect x="29.1316%" y="549" width="0.0213%" height="15" fill="rgb(244,67,35)" fg:x="72548" fg:w="53"/><text x="29.3816%" y="559.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (100 samples, 0.04%)</title><rect x="29.1529%" y="565" width="0.0402%" height="15" fill="rgb(221,40,2)" fg:x="72601" fg:w="100"/><text x="29.4029%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (83 samples, 0.03%)</title><rect x="29.1991%" y="517" width="0.0333%" height="15" fill="rgb(237,157,21)" fg:x="72716" fg:w="83"/><text x="29.4491%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (83 samples, 0.03%)</title><rect x="29.1991%" y="501" width="0.0333%" height="15" fill="rgb(222,94,11)" fg:x="72716" fg:w="83"/><text x="29.4491%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (67 samples, 0.03%)</title><rect x="29.2324%" y="517" width="0.0269%" height="15" fill="rgb(249,113,6)" fg:x="72799" fg:w="67"/><text x="29.4824%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (67 samples, 0.03%)</title><rect x="29.2324%" y="501" width="0.0269%" height="15" fill="rgb(238,137,36)" fg:x="72799" fg:w="67"/><text x="29.4824%" y="511.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (158 samples, 0.06%)</title><rect x="29.1987%" y="565" width="0.0634%" height="15" fill="rgb(210,102,26)" fg:x="72715" fg:w="158"/><text x="29.4487%" y="575.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (158 samples, 0.06%)</title><rect x="29.1987%" y="549" width="0.0634%" height="15" fill="rgb(218,30,30)" fg:x="72715" fg:w="158"/><text x="29.4487%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (158 samples, 0.06%)</title><rect x="29.1987%" y="533" width="0.0634%" height="15" fill="rgb(214,67,26)" fg:x="72715" fg:w="158"/><text x="29.4487%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (37 samples, 0.01%)</title><rect x="29.2790%" y="533" width="0.0149%" height="15" fill="rgb(251,9,53)" fg:x="72915" fg:w="37"/><text x="29.5290%" y="543.50"></text></g><g><title>tokio::runtime::context::budget (37 samples, 0.01%)</title><rect x="29.2790%" y="517" width="0.0149%" height="15" fill="rgb(228,204,25)" fg:x="72915" fg:w="37"/><text x="29.5290%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.01%)</title><rect x="29.2790%" y="501" width="0.0149%" height="15" fill="rgb(207,153,8)" fg:x="72915" fg:w="37"/><text x="29.5290%" y="511.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (27 samples, 0.01%)</title><rect x="29.2830%" y="485" width="0.0108%" height="15" fill="rgb(242,9,16)" fg:x="72925" fg:w="27"/><text x="29.5330%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (27 samples, 0.01%)</title><rect x="29.2830%" y="469" width="0.0108%" height="15" fill="rgb(217,211,10)" fg:x="72925" fg:w="27"/><text x="29.5330%" y="479.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (127 samples, 0.05%)</title><rect x="29.3091%" y="517" width="0.0510%" height="15" fill="rgb(219,228,52)" fg:x="72990" fg:w="127"/><text x="29.5591%" y="527.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (121 samples, 0.05%)</title><rect x="29.3115%" y="501" width="0.0486%" height="15" fill="rgb(231,92,29)" fg:x="72996" fg:w="121"/><text x="29.5615%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (64 samples, 0.03%)</title><rect x="29.3344%" y="485" width="0.0257%" height="15" fill="rgb(232,8,23)" fg:x="73053" fg:w="64"/><text x="29.5844%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (64 samples, 0.03%)</title><rect x="29.3344%" y="469" width="0.0257%" height="15" fill="rgb(216,211,34)" fg:x="73053" fg:w="64"/><text x="29.5844%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (64 samples, 0.03%)</title><rect x="29.3344%" y="453" width="0.0257%" height="15" fill="rgb(236,151,0)" fg:x="73053" fg:w="64"/><text x="29.5844%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (392 samples, 0.16%)</title><rect x="29.3686%" y="517" width="0.1574%" height="15" fill="rgb(209,168,3)" fg:x="73138" fg:w="392"/><text x="29.6186%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_load (392 samples, 0.16%)</title><rect x="29.3686%" y="501" width="0.1574%" height="15" fill="rgb(208,129,28)" fg:x="73138" fg:w="392"/><text x="29.6186%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (56 samples, 0.02%)</title><rect x="29.5260%" y="517" width="0.0225%" height="15" fill="rgb(229,78,22)" fg:x="73530" fg:w="56"/><text x="29.7760%" y="527.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (56 samples, 0.02%)</title><rect x="29.5260%" y="501" width="0.0225%" height="15" fill="rgb(228,187,13)" fg:x="73530" fg:w="56"/><text x="29.7760%" y="511.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (56 samples, 0.02%)</title><rect x="29.5260%" y="485" width="0.0225%" height="15" fill="rgb(240,119,24)" fg:x="73530" fg:w="56"/><text x="29.7760%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (56 samples, 0.02%)</title><rect x="29.5260%" y="469" width="0.0225%" height="15" fill="rgb(209,194,42)" fg:x="73530" fg:w="56"/><text x="29.7760%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (56 samples, 0.02%)</title><rect x="29.5260%" y="453" width="0.0225%" height="15" fill="rgb(247,200,46)" fg:x="73530" fg:w="56"/><text x="29.7760%" y="463.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (3,049 samples, 1.22%)</title><rect x="28.3273%" y="629" width="1.2243%" height="15" fill="rgb(218,76,16)" fg:x="70545" fg:w="3049"/><text x="28.5773%" y="639.50"></text></g><g><title>&lt;tokio::io::util::chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (3,049 samples, 1.22%)</title><rect x="28.3273%" y="613" width="1.2243%" height="15" fill="rgb(225,21,48)" fg:x="70545" fg:w="3049"/><text x="28.5773%" y="623.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (2,721 samples, 1.09%)</title><rect x="28.4591%" y="597" width="1.0926%" height="15" fill="rgb(239,223,50)" fg:x="70873" fg:w="2721"/><text x="28.7091%" y="607.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (2,614 samples, 1.05%)</title><rect x="28.5020%" y="581" width="1.0497%" height="15" fill="rgb(244,45,21)" fg:x="70980" fg:w="2614"/><text x="28.7520%" y="591.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (721 samples, 0.29%)</title><rect x="29.2622%" y="565" width="0.2895%" height="15" fill="rgb(232,33,43)" fg:x="72873" fg:w="721"/><text x="29.5122%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (708 samples, 0.28%)</title><rect x="29.2674%" y="549" width="0.2843%" height="15" fill="rgb(209,8,3)" fg:x="72886" fg:w="708"/><text x="29.5174%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (642 samples, 0.26%)</title><rect x="29.2939%" y="533" width="0.2578%" height="15" fill="rgb(214,25,53)" fg:x="72952" fg:w="642"/><text x="29.5439%" y="543.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (136 samples, 0.05%)</title><rect x="29.5549%" y="629" width="0.0546%" height="15" fill="rgb(254,186,54)" fg:x="73602" fg:w="136"/><text x="29.8049%" y="639.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (133 samples, 0.05%)</title><rect x="29.5561%" y="613" width="0.0534%" height="15" fill="rgb(208,174,49)" fg:x="73605" fg:w="133"/><text x="29.8061%" y="623.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (133 samples, 0.05%)</title><rect x="29.5561%" y="597" width="0.0534%" height="15" fill="rgb(233,191,51)" fg:x="73605" fg:w="133"/><text x="29.8061%" y="607.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (38 samples, 0.02%)</title><rect x="29.6131%" y="629" width="0.0153%" height="15" fill="rgb(222,134,10)" fg:x="73747" fg:w="38"/><text x="29.8631%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (3,494 samples, 1.40%)</title><rect x="28.2314%" y="645" width="1.4030%" height="15" fill="rgb(230,226,20)" fg:x="70306" fg:w="3494"/><text x="28.4814%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (85 samples, 0.03%)</title><rect x="29.6492%" y="629" width="0.0341%" height="15" fill="rgb(251,111,25)" fg:x="73837" fg:w="85"/><text x="29.8992%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (62 samples, 0.02%)</title><rect x="29.6585%" y="613" width="0.0249%" height="15" fill="rgb(224,40,46)" fg:x="73860" fg:w="62"/><text x="29.9085%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (125 samples, 0.05%)</title><rect x="29.6344%" y="645" width="0.0502%" height="15" fill="rgb(236,108,47)" fg:x="73800" fg:w="125"/><text x="29.8844%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (57 samples, 0.02%)</title><rect x="29.6902%" y="629" width="0.0229%" height="15" fill="rgb(234,93,0)" fg:x="73939" fg:w="57"/><text x="29.9402%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (57 samples, 0.02%)</title><rect x="29.6902%" y="613" width="0.0229%" height="15" fill="rgb(224,213,32)" fg:x="73939" fg:w="57"/><text x="29.9402%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.01%)</title><rect x="29.7023%" y="597" width="0.0108%" height="15" fill="rgb(251,11,48)" fg:x="73969" fg:w="27"/><text x="29.9523%" y="607.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (74 samples, 0.03%)</title><rect x="29.6846%" y="645" width="0.0297%" height="15" fill="rgb(236,173,5)" fg:x="73925" fg:w="74"/><text x="29.9346%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16,876 samples, 6.78%)</title><rect x="29.7545%" y="565" width="6.7766%" height="15" fill="rgb(230,95,12)" fg:x="74099" fg:w="16876"/><text x="30.0045%" y="575.50">core::int..</text></g><g><title>[libc.so.6] (16,871 samples, 6.77%)</title><rect x="29.7565%" y="549" width="6.7745%" height="15" fill="rgb(232,209,1)" fg:x="74104" fg:w="16871"/><text x="30.0065%" y="559.50">[libc.so...</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16,898 samples, 6.79%)</title><rect x="29.7464%" y="613" width="6.7854%" height="15" fill="rgb(232,6,1)" fg:x="74079" fg:w="16898"/><text x="29.9964%" y="623.50">alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16,898 samples, 6.79%)</title><rect x="29.7464%" y="597" width="6.7854%" height="15" fill="rgb(210,224,50)" fg:x="74079" fg:w="16898"/><text x="29.9964%" y="607.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16,898 samples, 6.79%)</title><rect x="29.7464%" y="581" width="6.7854%" height="15" fill="rgb(228,127,35)" fg:x="74079" fg:w="16898"/><text x="29.9964%" y="591.50">alloc::ve..</text></g><g><title>_rjem_je_arena_ralloc (90 samples, 0.04%)</title><rect x="36.5639%" y="405" width="0.0361%" height="15" fill="rgb(245,102,45)" fg:x="91057" fg:w="90"/><text x="36.8139%" y="415.50"></text></g><g><title>sz_s2u (34 samples, 0.01%)</title><rect x="36.5864%" y="389" width="0.0137%" height="15" fill="rgb(214,1,49)" fg:x="91113" fg:w="34"/><text x="36.8364%" y="399.50"></text></g><g><title>sz_s2u_compute (29 samples, 0.01%)</title><rect x="36.5884%" y="373" width="0.0116%" height="15" fill="rgb(226,163,40)" fg:x="91118" fg:w="29"/><text x="36.8384%" y="383.50"></text></g><g><title>[libc.so.6] (1,054 samples, 0.42%)</title><rect x="36.6073%" y="389" width="0.4232%" height="15" fill="rgb(239,212,28)" fg:x="91165" fg:w="1054"/><text x="36.8573%" y="399.50"></text></g><g><title>_rjem_je_arena_extent_ralloc_large_expand (67 samples, 0.03%)</title><rect x="37.0578%" y="357" width="0.0269%" height="15" fill="rgb(220,20,13)" fg:x="92287" fg:w="67"/><text x="37.3078%" y="367.50"></text></g><g><title>extent_can_acquire_neighbor (25 samples, 0.01%)</title><rect x="37.1394%" y="229" width="0.0100%" height="15" fill="rgb(210,164,35)" fg:x="92490" fg:w="25"/><text x="37.3894%" y="239.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor_expand (63 samples, 0.03%)</title><rect x="37.1269%" y="261" width="0.0253%" height="15" fill="rgb(248,109,41)" fg:x="92459" fg:w="63"/><text x="37.3769%" y="271.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (60 samples, 0.02%)</title><rect x="37.1281%" y="245" width="0.0241%" height="15" fill="rgb(238,23,50)" fg:x="92462" fg:w="60"/><text x="37.3781%" y="255.50"></text></g><g><title>extent_recycle_extract (186 samples, 0.07%)</title><rect x="37.1201%" y="277" width="0.0747%" height="15" fill="rgb(211,48,49)" fg:x="92442" fg:w="186"/><text x="37.3701%" y="287.50"></text></g><g><title>extent_activate_locked (105 samples, 0.04%)</title><rect x="37.1526%" y="261" width="0.0422%" height="15" fill="rgb(223,36,21)" fg:x="92523" fg:w="105"/><text x="37.4026%" y="271.50"></text></g><g><title>_rjem_je_eset_remove (101 samples, 0.04%)</title><rect x="37.1542%" y="245" width="0.0406%" height="15" fill="rgb(207,123,46)" fg:x="92527" fg:w="101"/><text x="37.4042%" y="255.50"></text></g><g><title>extent_deactivate_locked (59 samples, 0.02%)</title><rect x="37.1948%" y="261" width="0.0237%" height="15" fill="rgb(240,218,32)" fg:x="92628" fg:w="59"/><text x="37.4448%" y="271.50"></text></g><g><title>extent_deactivate_locked_impl (59 samples, 0.02%)</title><rect x="37.1948%" y="245" width="0.0237%" height="15" fill="rgb(252,5,43)" fg:x="92628" fg:w="59"/><text x="37.4448%" y="255.50"></text></g><g><title>_rjem_je_eset_insert (49 samples, 0.02%)</title><rect x="37.1988%" y="229" width="0.0197%" height="15" fill="rgb(252,84,19)" fg:x="92638" fg:w="49"/><text x="37.4488%" y="239.50"></text></g><g><title>phn_merge_siblings (28 samples, 0.01%)</title><rect x="37.2393%" y="165" width="0.0112%" height="15" fill="rgb(243,152,39)" fg:x="92739" fg:w="28"/><text x="37.4893%" y="175.50"></text></g><g><title>_rjem_je_edata_avail_first (69 samples, 0.03%)</title><rect x="37.2265%" y="213" width="0.0277%" height="15" fill="rgb(234,160,15)" fg:x="92707" fg:w="69"/><text x="37.4765%" y="223.50"></text></g><g><title>ph_first (68 samples, 0.03%)</title><rect x="37.2269%" y="197" width="0.0273%" height="15" fill="rgb(237,34,20)" fg:x="92708" fg:w="68"/><text x="37.4769%" y="207.50"></text></g><g><title>ph_merge_aux (45 samples, 0.02%)</title><rect x="37.2361%" y="181" width="0.0181%" height="15" fill="rgb(229,97,13)" fg:x="92731" fg:w="45"/><text x="37.4861%" y="191.50"></text></g><g><title>phn_next_get (25 samples, 0.01%)</title><rect x="37.2654%" y="149" width="0.0100%" height="15" fill="rgb(234,71,50)" fg:x="92804" fg:w="25"/><text x="37.5154%" y="159.50"></text></g><g><title>ph_merge_children (37 samples, 0.01%)</title><rect x="37.2610%" y="181" width="0.0149%" height="15" fill="rgb(253,155,4)" fg:x="92793" fg:w="37"/><text x="37.5110%" y="191.50"></text></g><g><title>phn_merge_siblings (37 samples, 0.01%)</title><rect x="37.2610%" y="165" width="0.0149%" height="15" fill="rgb(222,185,37)" fg:x="92793" fg:w="37"/><text x="37.5110%" y="175.50"></text></g><g><title>_rjem_je_edata_avail_remove (60 samples, 0.02%)</title><rect x="37.2542%" y="213" width="0.0241%" height="15" fill="rgb(251,177,13)" fg:x="92776" fg:w="60"/><text x="37.5042%" y="223.50"></text></g><g><title>ph_remove (52 samples, 0.02%)</title><rect x="37.2574%" y="197" width="0.0209%" height="15" fill="rgb(250,179,40)" fg:x="92784" fg:w="52"/><text x="37.5074%" y="207.50"></text></g><g><title>_rjem_je_edata_cache_get (186 samples, 0.07%)</title><rect x="37.2265%" y="229" width="0.0747%" height="15" fill="rgb(242,44,2)" fg:x="92707" fg:w="186"/><text x="37.4765%" y="239.50"></text></g><g><title>malloc_mutex_unlock (34 samples, 0.01%)</title><rect x="37.2875%" y="213" width="0.0137%" height="15" fill="rgb(216,177,13)" fg:x="92859" fg:w="34"/><text x="37.5375%" y="223.50"></text></g><g><title>extent_recycle_split (333 samples, 0.13%)</title><rect x="37.1948%" y="277" width="0.1337%" height="15" fill="rgb(216,106,43)" fg:x="92628" fg:w="333"/><text x="37.4448%" y="287.50"></text></g><g><title>extent_split_interior (274 samples, 0.11%)</title><rect x="37.2185%" y="261" width="0.1100%" height="15" fill="rgb(216,183,2)" fg:x="92687" fg:w="274"/><text x="37.4685%" y="271.50"></text></g><g><title>extent_split_impl (271 samples, 0.11%)</title><rect x="37.2197%" y="245" width="0.1088%" height="15" fill="rgb(249,75,3)" fg:x="92690" fg:w="271"/><text x="37.4697%" y="255.50"></text></g><g><title>ehooks_split (31 samples, 0.01%)</title><rect x="37.3160%" y="229" width="0.0124%" height="15" fill="rgb(219,67,39)" fg:x="92930" fg:w="31"/><text x="37.5660%" y="239.50"></text></g><g><title>pthread_mutex_trylock (66 samples, 0.03%)</title><rect x="37.3297%" y="245" width="0.0265%" height="15" fill="rgb(253,228,2)" fg:x="92964" fg:w="66"/><text x="37.5797%" y="255.50"></text></g><g><title>malloc_mutex_lock (79 samples, 0.03%)</title><rect x="37.3285%" y="277" width="0.0317%" height="15" fill="rgb(235,138,27)" fg:x="92961" fg:w="79"/><text x="37.5785%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (77 samples, 0.03%)</title><rect x="37.3293%" y="261" width="0.0309%" height="15" fill="rgb(236,97,51)" fg:x="92963" fg:w="77"/><text x="37.5793%" y="271.50"></text></g><g><title>_rjem_je_ecache_alloc (630 samples, 0.25%)</title><rect x="37.1165%" y="309" width="0.2530%" height="15" fill="rgb(240,80,30)" fg:x="92433" fg:w="630"/><text x="37.3665%" y="319.50"></text></g><g><title>extent_recycle (629 samples, 0.25%)</title><rect x="37.1169%" y="293" width="0.2526%" height="15" fill="rgb(230,178,19)" fg:x="92434" fg:w="629"/><text x="37.3669%" y="303.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (33 samples, 0.01%)</title><rect x="37.3694%" y="309" width="0.0133%" height="15" fill="rgb(210,190,27)" fg:x="93063" fg:w="33"/><text x="37.6194%" y="319.50"></text></g><g><title>extent_alloc_retained (29 samples, 0.01%)</title><rect x="37.3711%" y="293" width="0.0116%" height="15" fill="rgb(222,107,31)" fg:x="93067" fg:w="29"/><text x="37.6211%" y="303.50"></text></g><g><title>ehooks_merge (58 samples, 0.02%)</title><rect x="37.3879%" y="277" width="0.0233%" height="15" fill="rgb(216,127,34)" fg:x="93109" fg:w="58"/><text x="37.6379%" y="287.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (37 samples, 0.01%)</title><rect x="37.3963%" y="261" width="0.0149%" height="15" fill="rgb(234,116,52)" fg:x="93130" fg:w="37"/><text x="37.6463%" y="271.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (37 samples, 0.01%)</title><rect x="37.3963%" y="245" width="0.0149%" height="15" fill="rgb(222,124,15)" fg:x="93130" fg:w="37"/><text x="37.6463%" y="255.50"></text></g><g><title>_rjem_je_edata_cache_put (26 samples, 0.01%)</title><rect x="37.4132%" y="261" width="0.0104%" height="15" fill="rgb(231,179,28)" fg:x="93172" fg:w="26"/><text x="37.6632%" y="271.50"></text></g><g><title>_rjem_je_extent_merge_wrapper (127 samples, 0.05%)</title><rect x="37.3835%" y="309" width="0.0510%" height="15" fill="rgb(226,93,45)" fg:x="93098" fg:w="127"/><text x="37.6335%" y="319.50"></text></g><g><title>extent_merge_impl (120 samples, 0.05%)</title><rect x="37.3863%" y="293" width="0.0482%" height="15" fill="rgb(215,8,51)" fg:x="93105" fg:w="120"/><text x="37.6363%" y="303.50"></text></g><g><title>extent_merge_impl (58 samples, 0.02%)</title><rect x="37.4112%" y="277" width="0.0233%" height="15" fill="rgb(223,106,5)" fg:x="93167" fg:w="58"/><text x="37.6612%" y="287.50"></text></g><g><title>_rjem_je_pa_expand (906 samples, 0.36%)</title><rect x="37.0847%" y="357" width="0.3638%" height="15" fill="rgb(250,191,5)" fg:x="92354" fg:w="906"/><text x="37.3347%" y="367.50"></text></g><g><title>pai_expand (875 samples, 0.35%)</title><rect x="37.0972%" y="341" width="0.3514%" height="15" fill="rgb(242,132,44)" fg:x="92385" fg:w="875"/><text x="37.3472%" y="351.50"></text></g><g><title>pac_expand_impl (857 samples, 0.34%)</title><rect x="37.1044%" y="325" width="0.3441%" height="15" fill="rgb(251,152,29)" fg:x="92403" fg:w="857"/><text x="37.3544%" y="335.50"></text></g><g><title>_rjem_je_large_ralloc_no_move (1,059 samples, 0.43%)</title><rect x="37.0366%" y="389" width="0.4252%" height="15" fill="rgb(218,179,5)" fg:x="92234" fg:w="1059"/><text x="37.2866%" y="399.50"></text></g><g><title>large_ralloc_no_move_expand (1,032 samples, 0.41%)</title><rect x="37.0474%" y="373" width="0.4144%" height="15" fill="rgb(227,67,19)" fg:x="92261" fg:w="1032"/><text x="37.2974%" y="383.50"></text></g><g><title>edata_szind_get (33 samples, 0.01%)</title><rect x="37.4618%" y="373" width="0.0133%" height="15" fill="rgb(233,119,31)" fg:x="93293" fg:w="33"/><text x="37.7118%" y="383.50"></text></g><g><title>edata_szind_get_maybe_invalid (33 samples, 0.01%)</title><rect x="37.4618%" y="357" width="0.0133%" height="15" fill="rgb(241,120,22)" fg:x="93293" fg:w="33"/><text x="37.7118%" y="367.50"></text></g><g><title>edata_usize_get (38 samples, 0.02%)</title><rect x="37.4618%" y="389" width="0.0153%" height="15" fill="rgb(224,102,30)" fg:x="93293" fg:w="38"/><text x="37.7118%" y="399.50"></text></g><g><title>extent_try_coalesce_large (56 samples, 0.02%)</title><rect x="37.4891%" y="277" width="0.0225%" height="15" fill="rgb(210,164,37)" fg:x="93361" fg:w="56"/><text x="37.7391%" y="287.50"></text></g><g><title>extent_try_coalesce_impl (56 samples, 0.02%)</title><rect x="37.4891%" y="261" width="0.0225%" height="15" fill="rgb(226,191,16)" fg:x="93361" fg:w="56"/><text x="37.7391%" y="271.50"></text></g><g><title>extent_coalesce (45 samples, 0.02%)</title><rect x="37.4935%" y="245" width="0.0181%" height="15" fill="rgb(214,40,45)" fg:x="93372" fg:w="45"/><text x="37.7435%" y="255.50"></text></g><g><title>extent_merge_impl (29 samples, 0.01%)</title><rect x="37.4999%" y="229" width="0.0116%" height="15" fill="rgb(244,29,26)" fg:x="93388" fg:w="29"/><text x="37.7499%" y="239.50"></text></g><g><title>_rjem_je_extent_record (74 samples, 0.03%)</title><rect x="37.4827%" y="293" width="0.0297%" height="15" fill="rgb(216,16,5)" fg:x="93345" fg:w="74"/><text x="37.7327%" y="303.50"></text></g><g><title>large_dalloc_finish_impl (83 samples, 0.03%)</title><rect x="37.4795%" y="325" width="0.0333%" height="15" fill="rgb(249,76,35)" fg:x="93337" fg:w="83"/><text x="37.7295%" y="335.50"></text></g><g><title>pac_dalloc_impl (77 samples, 0.03%)</title><rect x="37.4819%" y="309" width="0.0309%" height="15" fill="rgb(207,11,44)" fg:x="93343" fg:w="77"/><text x="37.7319%" y="319.50"></text></g><g><title>_rjem_je_large_dalloc (90 samples, 0.04%)</title><rect x="37.4787%" y="341" width="0.0361%" height="15" fill="rgb(228,190,49)" fg:x="93335" fg:w="90"/><text x="37.7287%" y="351.50"></text></g><g><title>isdalloct (95 samples, 0.04%)</title><rect x="37.4779%" y="389" width="0.0381%" height="15" fill="rgb(214,173,12)" fg:x="93333" fg:w="95"/><text x="37.7279%" y="399.50"></text></g><g><title>arena_sdalloc (95 samples, 0.04%)</title><rect x="37.4779%" y="373" width="0.0381%" height="15" fill="rgb(218,26,35)" fg:x="93333" fg:w="95"/><text x="37.7279%" y="383.50"></text></g><g><title>arena_dalloc_large (95 samples, 0.04%)</title><rect x="37.4779%" y="357" width="0.0381%" height="15" fill="rgb(220,200,19)" fg:x="93333" fg:w="95"/><text x="37.7279%" y="367.50"></text></g><g><title>_rjem_je_edata_heap_first (27 samples, 0.01%)</title><rect x="37.5349%" y="197" width="0.0108%" height="15" fill="rgb(239,95,49)" fg:x="93475" fg:w="27"/><text x="37.7849%" y="207.50"></text></g><g><title>ph_first (27 samples, 0.01%)</title><rect x="37.5349%" y="181" width="0.0108%" height="15" fill="rgb(235,85,53)" fg:x="93475" fg:w="27"/><text x="37.7849%" y="191.50"></text></g><g><title>_rjem_je_eset_fit (51 samples, 0.02%)</title><rect x="37.5289%" y="229" width="0.0205%" height="15" fill="rgb(233,133,31)" fg:x="93460" fg:w="51"/><text x="37.7789%" y="239.50"></text></g><g><title>eset_first_fit (49 samples, 0.02%)</title><rect x="37.5297%" y="213" width="0.0197%" height="15" fill="rgb(218,25,20)" fg:x="93462" fg:w="49"/><text x="37.7797%" y="223.50"></text></g><g><title>extent_recycle_extract (85 samples, 0.03%)</title><rect x="37.5256%" y="245" width="0.0341%" height="15" fill="rgb(252,210,38)" fg:x="93452" fg:w="85"/><text x="37.7756%" y="255.50"></text></g><g><title>extent_activate_locked (26 samples, 0.01%)</title><rect x="37.5493%" y="229" width="0.0104%" height="15" fill="rgb(242,134,21)" fg:x="93511" fg:w="26"/><text x="37.7993%" y="239.50"></text></g><g><title>_rjem_je_edata_cache_get (44 samples, 0.02%)</title><rect x="37.5674%" y="197" width="0.0177%" height="15" fill="rgb(213,28,48)" fg:x="93556" fg:w="44"/><text x="37.8174%" y="207.50"></text></g><g><title>extent_recycle_split (86 samples, 0.03%)</title><rect x="37.5598%" y="245" width="0.0345%" height="15" fill="rgb(250,196,2)" fg:x="93537" fg:w="86"/><text x="37.8098%" y="255.50"></text></g><g><title>extent_split_interior (72 samples, 0.03%)</title><rect x="37.5654%" y="229" width="0.0289%" height="15" fill="rgb(227,5,17)" fg:x="93551" fg:w="72"/><text x="37.8154%" y="239.50"></text></g><g><title>extent_split_impl (71 samples, 0.03%)</title><rect x="37.5658%" y="213" width="0.0285%" height="15" fill="rgb(221,226,24)" fg:x="93552" fg:w="71"/><text x="37.8158%" y="223.50"></text></g><g><title>pac_alloc_real (175 samples, 0.07%)</title><rect x="37.5256%" y="293" width="0.0703%" height="15" fill="rgb(211,5,48)" fg:x="93452" fg:w="175"/><text x="37.7756%" y="303.50"></text></g><g><title>_rjem_je_ecache_alloc (175 samples, 0.07%)</title><rect x="37.5256%" y="277" width="0.0703%" height="15" fill="rgb(219,150,6)" fg:x="93452" fg:w="175"/><text x="37.7756%" y="287.50"></text></g><g><title>extent_recycle (175 samples, 0.07%)</title><rect x="37.5256%" y="261" width="0.0703%" height="15" fill="rgb(251,46,16)" fg:x="93452" fg:w="175"/><text x="37.7756%" y="271.50"></text></g><g><title>_rjem_je_pa_alloc (195 samples, 0.08%)</title><rect x="37.5204%" y="341" width="0.0783%" height="15" fill="rgb(220,204,40)" fg:x="93439" fg:w="195"/><text x="37.7704%" y="351.50"></text></g><g><title>pai_alloc (186 samples, 0.07%)</title><rect x="37.5240%" y="325" width="0.0747%" height="15" fill="rgb(211,85,2)" fg:x="93448" fg:w="186"/><text x="37.7740%" y="335.50"></text></g><g><title>pac_alloc_impl (185 samples, 0.07%)</title><rect x="37.5244%" y="309" width="0.0743%" height="15" fill="rgb(229,17,7)" fg:x="93449" fg:w="185"/><text x="37.7744%" y="319.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (220 samples, 0.09%)</title><rect x="37.5180%" y="357" width="0.0883%" height="15" fill="rgb(239,72,28)" fg:x="93433" fg:w="220"/><text x="37.7680%" y="367.50"></text></g><g><title>iralloct (2,605 samples, 1.05%)</title><rect x="36.5635%" y="421" width="1.0460%" height="15" fill="rgb(230,47,54)" fg:x="91056" fg:w="2605"/><text x="36.8135%" y="431.50"></text></g><g><title>_rjem_je_large_ralloc (2,514 samples, 1.01%)</title><rect x="36.6001%" y="405" width="1.0095%" height="15" fill="rgb(214,50,8)" fg:x="91147" fg:w="2514"/><text x="36.8501%" y="415.50"></text></g><g><title>large_ralloc_move_helper (233 samples, 0.09%)</title><rect x="37.5160%" y="389" width="0.0936%" height="15" fill="rgb(216,198,43)" fg:x="93428" fg:w="233"/><text x="37.7660%" y="399.50"></text></g><g><title>_rjem_je_large_palloc (233 samples, 0.09%)</title><rect x="37.5160%" y="373" width="0.0936%" height="15" fill="rgb(234,20,35)" fg:x="93428" fg:w="233"/><text x="37.7660%" y="383.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (29 samples, 0.01%)</title><rect x="37.6574%" y="341" width="0.0116%" height="15" fill="rgb(254,45,19)" fg:x="93780" fg:w="29"/><text x="37.9074%" y="351.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (40 samples, 0.02%)</title><rect x="37.6698%" y="325" width="0.0161%" height="15" fill="rgb(219,14,44)" fg:x="93811" fg:w="40"/><text x="37.9198%" y="335.50"></text></g><g><title>tcache_bin_flush_bottom (40 samples, 0.02%)</title><rect x="37.6698%" y="309" width="0.0161%" height="15" fill="rgb(217,220,26)" fg:x="93811" fg:w="40"/><text x="37.9198%" y="319.50"></text></g><g><title>tcache_bin_flush_impl (39 samples, 0.02%)</title><rect x="37.6702%" y="293" width="0.0157%" height="15" fill="rgb(213,158,28)" fg:x="93812" fg:w="39"/><text x="37.9202%" y="303.50"></text></g><g><title>tcache_gc_small (42 samples, 0.02%)</title><rect x="37.6698%" y="341" width="0.0169%" height="15" fill="rgb(252,51,52)" fg:x="93811" fg:w="42"/><text x="37.9198%" y="351.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (103 samples, 0.04%)</title><rect x="37.6509%" y="373" width="0.0414%" height="15" fill="rgb(246,89,16)" fg:x="93764" fg:w="103"/><text x="37.9009%" y="383.50"></text></g><g><title>tcache_event (103 samples, 0.04%)</title><rect x="37.6509%" y="357" width="0.0414%" height="15" fill="rgb(216,158,49)" fg:x="93764" fg:w="103"/><text x="37.9009%" y="367.50"></text></g><g><title>_rjem_je_te_event_trigger (187 samples, 0.08%)</title><rect x="37.6272%" y="389" width="0.0751%" height="15" fill="rgb(236,107,19)" fg:x="93705" fg:w="187"/><text x="37.8772%" y="399.50"></text></g><g><title>thread_alloc_event (213 samples, 0.09%)</title><rect x="37.6172%" y="421" width="0.0855%" height="15" fill="rgb(228,185,30)" fg:x="93680" fg:w="213"/><text x="37.8672%" y="431.50"></text></g><g><title>te_event_advance (213 samples, 0.09%)</title><rect x="37.6172%" y="405" width="0.0855%" height="15" fill="rgb(246,134,8)" fg:x="93680" fg:w="213"/><text x="37.8672%" y="415.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (47 samples, 0.02%)</title><rect x="37.7080%" y="373" width="0.0189%" height="15" fill="rgb(214,143,50)" fg:x="93906" fg:w="47"/><text x="37.9580%" y="383.50"></text></g><g><title>tcache_gc_small (25 samples, 0.01%)</title><rect x="37.7168%" y="357" width="0.0100%" height="15" fill="rgb(228,75,8)" fg:x="93928" fg:w="25"/><text x="37.9668%" y="367.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (25 samples, 0.01%)</title><rect x="37.7168%" y="341" width="0.0100%" height="15" fill="rgb(207,175,4)" fg:x="93928" fg:w="25"/><text x="37.9668%" y="351.50"></text></g><g><title>tcache_bin_flush_bottom (25 samples, 0.01%)</title><rect x="37.7168%" y="325" width="0.0100%" height="15" fill="rgb(205,108,24)" fg:x="93928" fg:w="25"/><text x="37.9668%" y="335.50"></text></g><g><title>_rjem_je_te_event_trigger (65 samples, 0.03%)</title><rect x="37.7043%" y="389" width="0.0261%" height="15" fill="rgb(244,120,49)" fg:x="93897" fg:w="65"/><text x="37.9543%" y="399.50"></text></g><g><title>thread_dalloc_event (72 samples, 0.03%)</title><rect x="37.7027%" y="421" width="0.0289%" height="15" fill="rgb(223,47,38)" fg:x="93893" fg:w="72"/><text x="37.9527%" y="431.50"></text></g><g><title>te_event_advance (72 samples, 0.03%)</title><rect x="37.7027%" y="405" width="0.0289%" height="15" fill="rgb(229,179,11)" fg:x="93893" fg:w="72"/><text x="37.9527%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,004 samples, 1.21%)</title><rect x="36.5390%" y="517" width="1.2063%" height="15" fill="rgb(231,122,1)" fg:x="90995" fg:w="3004"/><text x="36.7890%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,004 samples, 1.21%)</title><rect x="36.5390%" y="501" width="1.2063%" height="15" fill="rgb(245,119,9)" fg:x="90995" fg:w="3004"/><text x="36.7890%" y="511.50"></text></g><g><title>alloc::alloc::realloc (3,004 samples, 1.21%)</title><rect x="36.5390%" y="485" width="1.2063%" height="15" fill="rgb(241,163,25)" fg:x="90995" fg:w="3004"/><text x="36.7890%" y="495.50"></text></g><g><title>__rust_realloc (3,004 samples, 1.21%)</title><rect x="36.5390%" y="469" width="1.2063%" height="15" fill="rgb(217,214,3)" fg:x="90995" fg:w="3004"/><text x="36.7890%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::realloc (3,004 samples, 1.21%)</title><rect x="36.5390%" y="453" width="1.2063%" height="15" fill="rgb(240,86,28)" fg:x="90995" fg:w="3004"/><text x="36.7890%" y="463.50"></text></g><g><title>do_rallocx (2,996 samples, 1.20%)</title><rect x="36.5423%" y="437" width="1.2030%" height="15" fill="rgb(215,47,9)" fg:x="91003" fg:w="2996"/><text x="36.7923%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,007 samples, 1.21%)</title><rect x="36.5390%" y="533" width="1.2075%" height="15" fill="rgb(252,25,45)" fg:x="90995" fg:w="3007"/><text x="36.7890%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,026 samples, 1.22%)</title><rect x="36.5318%" y="613" width="1.2151%" height="15" fill="rgb(251,164,9)" fg:x="90977" fg:w="3026"/><text x="36.7818%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,026 samples, 1.22%)</title><rect x="36.5318%" y="597" width="1.2151%" height="15" fill="rgb(233,194,0)" fg:x="90977" fg:w="3026"/><text x="36.7818%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve (3,026 samples, 1.22%)</title><rect x="36.5318%" y="581" width="1.2151%" height="15" fill="rgb(249,111,24)" fg:x="90977" fg:w="3026"/><text x="36.7818%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,020 samples, 1.21%)</title><rect x="36.5342%" y="565" width="1.2127%" height="15" fill="rgb(250,223,3)" fg:x="90983" fg:w="3020"/><text x="36.7842%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::grow_amortized (3,020 samples, 1.21%)</title><rect x="36.5342%" y="549" width="1.2127%" height="15" fill="rgb(236,178,37)" fg:x="90983" fg:w="3020"/><text x="36.7842%" y="559.50"></text></g><g><title>sz_index2size (137 samples, 0.06%)</title><rect x="37.7931%" y="389" width="0.0550%" height="15" fill="rgb(241,158,50)" fg:x="94118" fg:w="137"/><text x="38.0431%" y="399.50"></text></g><g><title>sz_index2size_lookup (137 samples, 0.06%)</title><rect x="37.7931%" y="373" width="0.0550%" height="15" fill="rgb(213,121,41)" fg:x="94118" fg:w="137"/><text x="38.0431%" y="383.50"></text></g><g><title>sz_index2size_lookup_impl (137 samples, 0.06%)</title><rect x="37.7931%" y="357" width="0.0550%" height="15" fill="rgb(240,92,3)" fg:x="94118" fg:w="137"/><text x="38.0431%" y="367.50"></text></g><g><title>aligned_usize_get (334 samples, 0.13%)</title><rect x="37.7903%" y="405" width="0.1341%" height="15" fill="rgb(205,123,3)" fg:x="94111" fg:w="334"/><text x="38.0403%" y="415.50"></text></g><g><title>sz_size2index (190 samples, 0.08%)</title><rect x="37.8481%" y="389" width="0.0763%" height="15" fill="rgb(205,97,47)" fg:x="94255" fg:w="190"/><text x="38.0981%" y="399.50"></text></g><g><title>sz_size2index_compute (189 samples, 0.08%)</title><rect x="37.8485%" y="373" width="0.0759%" height="15" fill="rgb(247,152,14)" fg:x="94256" fg:w="189"/><text x="38.0985%" y="383.50"></text></g><g><title>arena_choose_maybe_huge (250 samples, 0.10%)</title><rect x="38.0296%" y="341" width="0.1004%" height="15" fill="rgb(248,195,53)" fg:x="94707" fg:w="250"/><text x="38.2796%" y="351.50"></text></g><g><title>arena_choose (95 samples, 0.04%)</title><rect x="38.0918%" y="325" width="0.0381%" height="15" fill="rgb(226,201,16)" fg:x="94862" fg:w="95"/><text x="38.3418%" y="335.50"></text></g><g><title>arena_choose_impl (95 samples, 0.04%)</title><rect x="38.0918%" y="309" width="0.0381%" height="15" fill="rgb(205,98,0)" fg:x="94862" fg:w="95"/><text x="38.3418%" y="319.50"></text></g><g><title>tsd_arena_get (26 samples, 0.01%)</title><rect x="38.1195%" y="293" width="0.0104%" height="15" fill="rgb(214,191,48)" fg:x="94931" fg:w="26"/><text x="38.3695%" y="303.50"></text></g><g><title>arena_malloc_small (28 samples, 0.01%)</title><rect x="38.1300%" y="341" width="0.0112%" height="15" fill="rgb(237,112,39)" fg:x="94957" fg:w="28"/><text x="38.3800%" y="351.50"></text></g><g><title>sz_index2size (28 samples, 0.01%)</title><rect x="38.1300%" y="325" width="0.0112%" height="15" fill="rgb(247,203,27)" fg:x="94957" fg:w="28"/><text x="38.3800%" y="335.50"></text></g><g><title>sz_index2size_lookup (28 samples, 0.01%)</title><rect x="38.1300%" y="309" width="0.0112%" height="15" fill="rgb(235,124,28)" fg:x="94957" fg:w="28"/><text x="38.3800%" y="319.50"></text></g><g><title>sz_index2size_lookup_impl (28 samples, 0.01%)</title><rect x="38.1300%" y="293" width="0.0112%" height="15" fill="rgb(208,207,46)" fg:x="94957" fg:w="28"/><text x="38.3800%" y="303.50"></text></g><g><title>_rjem_je_arena_malloc_hard (438 samples, 0.18%)</title><rect x="37.9657%" y="357" width="0.1759%" height="15" fill="rgb(234,176,4)" fg:x="94548" fg:w="438"/><text x="38.2157%" y="367.50"></text></g><g><title>_rjem_je_large_malloc (74 samples, 0.03%)</title><rect x="38.1416%" y="357" width="0.0297%" height="15" fill="rgb(230,133,28)" fg:x="94986" fg:w="74"/><text x="38.3916%" y="367.50"></text></g><g><title>_rjem_je_arena_get_ehooks (201 samples, 0.08%)</title><rect x="38.2392%" y="325" width="0.0807%" height="15" fill="rgb(211,137,40)" fg:x="95229" fg:w="201"/><text x="38.4892%" y="335.50"></text></g><g><title>rtree_write (43 samples, 0.02%)</title><rect x="38.3797%" y="293" width="0.0173%" height="15" fill="rgb(254,35,13)" fg:x="95579" fg:w="43"/><text x="38.6297%" y="303.50"></text></g><g><title>_rjem_je_emap_remap (99 samples, 0.04%)</title><rect x="38.3585%" y="309" width="0.0398%" height="15" fill="rgb(225,49,51)" fg:x="95526" fg:w="99"/><text x="38.6085%" y="319.50"></text></g><g><title>pa_nactive_add (70 samples, 0.03%)</title><rect x="38.4042%" y="309" width="0.0281%" height="15" fill="rgb(251,10,15)" fg:x="95640" fg:w="70"/><text x="38.6542%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (70 samples, 0.03%)</title><rect x="38.4042%" y="293" width="0.0281%" height="15" fill="rgb(228,207,15)" fg:x="95640" fg:w="70"/><text x="38.6542%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (246 samples, 0.10%)</title><rect x="38.4323%" y="309" width="0.0988%" height="15" fill="rgb(241,99,19)" fg:x="95710" fg:w="246"/><text x="38.6823%" y="319.50"></text></g><g><title>atomic_load_b (246 samples, 0.10%)</title><rect x="38.4323%" y="293" width="0.0988%" height="15" fill="rgb(207,104,49)" fg:x="95710" fg:w="246"/><text x="38.6823%" y="303.50"></text></g><g><title>edata_heap_ph_cmp (44 samples, 0.02%)</title><rect x="39.1045%" y="101" width="0.0177%" height="15" fill="rgb(234,99,18)" fg:x="97384" fg:w="44"/><text x="39.3545%" y="111.50"></text></g><g><title>edata_snad_comp (44 samples, 0.02%)</title><rect x="39.1045%" y="85" width="0.0177%" height="15" fill="rgb(213,191,49)" fg:x="97384" fg:w="44"/><text x="39.3545%" y="95.50"></text></g><g><title>edata_cmp_summary_get (44 samples, 0.02%)</title><rect x="39.1045%" y="69" width="0.0177%" height="15" fill="rgb(210,226,19)" fg:x="97384" fg:w="44"/><text x="39.3545%" y="79.50"></text></g><g><title>edata_sn_get (44 samples, 0.02%)</title><rect x="39.1045%" y="53" width="0.0177%" height="15" fill="rgb(229,97,18)" fg:x="97384" fg:w="44"/><text x="39.3545%" y="63.50"></text></g><g><title>phn_merge (45 samples, 0.02%)</title><rect x="39.1045%" y="117" width="0.0181%" height="15" fill="rgb(211,167,15)" fg:x="97384" fg:w="45"/><text x="39.3545%" y="127.50"></text></g><g><title>phn_merge_siblings (54 samples, 0.02%)</title><rect x="39.1045%" y="133" width="0.0217%" height="15" fill="rgb(210,169,34)" fg:x="97384" fg:w="54"/><text x="39.3545%" y="143.50"></text></g><g><title>phn_next_get (475 samples, 0.19%)</title><rect x="39.1262%" y="133" width="0.1907%" height="15" fill="rgb(241,121,31)" fg:x="97438" fg:w="475"/><text x="39.3762%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_first (916 samples, 0.37%)</title><rect x="38.9495%" y="181" width="0.3678%" height="15" fill="rgb(232,40,11)" fg:x="96998" fg:w="916"/><text x="39.1995%" y="191.50"></text></g><g><title>ph_first (875 samples, 0.35%)</title><rect x="38.9660%" y="165" width="0.3514%" height="15" fill="rgb(205,86,26)" fg:x="97039" fg:w="875"/><text x="39.2160%" y="175.50"></text></g><g><title>ph_merge_aux (570 samples, 0.23%)</title><rect x="39.0885%" y="149" width="0.2289%" height="15" fill="rgb(231,126,28)" fg:x="97344" fg:w="570"/><text x="39.3385%" y="159.50"></text></g><g><title>sz_pind2sz (42 samples, 0.02%)</title><rect x="39.3374%" y="149" width="0.0169%" height="15" fill="rgb(219,221,18)" fg:x="97964" fg:w="42"/><text x="39.5874%" y="159.50"></text></g><g><title>sz_pind2sz_lookup (42 samples, 0.02%)</title><rect x="39.3374%" y="133" width="0.0169%" height="15" fill="rgb(211,40,0)" fg:x="97964" fg:w="42"/><text x="39.5874%" y="143.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (131 samples, 0.05%)</title><rect x="39.3174%" y="181" width="0.0526%" height="15" fill="rgb(239,85,43)" fg:x="97914" fg:w="131"/><text x="39.5674%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (113 samples, 0.05%)</title><rect x="39.3246%" y="165" width="0.0454%" height="15" fill="rgb(231,55,21)" fg:x="97932" fg:w="113"/><text x="39.5746%" y="175.50"></text></g><g><title>sz_psz2ind (39 samples, 0.02%)</title><rect x="39.3543%" y="149" width="0.0157%" height="15" fill="rgb(225,184,43)" fg:x="98006" fg:w="39"/><text x="39.6043%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (186 samples, 0.07%)</title><rect x="39.3700%" y="181" width="0.0747%" height="15" fill="rgb(251,158,41)" fg:x="98045" fg:w="186"/><text x="39.6200%" y="191.50"></text></g><g><title>fb_ffs (228 samples, 0.09%)</title><rect x="39.4447%" y="181" width="0.0916%" height="15" fill="rgb(234,159,37)" fg:x="98231" fg:w="228"/><text x="39.6947%" y="191.50"></text></g><g><title>fb_find_impl (228 samples, 0.09%)</title><rect x="39.4447%" y="165" width="0.0916%" height="15" fill="rgb(216,204,22)" fg:x="98231" fg:w="228"/><text x="39.6947%" y="175.50"></text></g><g><title>ffs_lu (51 samples, 0.02%)</title><rect x="39.5157%" y="149" width="0.0205%" height="15" fill="rgb(214,17,3)" fg:x="98408" fg:w="51"/><text x="39.7657%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (2,050 samples, 0.82%)</title><rect x="38.7419%" y="213" width="0.8232%" height="15" fill="rgb(212,111,17)" fg:x="96481" fg:w="2050"/><text x="38.9919%" y="223.50"></text></g><g><title>eset_first_fit (1,978 samples, 0.79%)</title><rect x="38.7709%" y="197" width="0.7943%" height="15" fill="rgb(221,157,24)" fg:x="96553" fg:w="1978"/><text x="39.0209%" y="207.50"></text></g><g><title>sz_psz2ind (62 samples, 0.02%)</title><rect x="39.5402%" y="181" width="0.0249%" height="15" fill="rgb(252,16,13)" fg:x="98469" fg:w="62"/><text x="39.7902%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (57 samples, 0.02%)</title><rect x="39.6053%" y="181" width="0.0229%" height="15" fill="rgb(221,62,2)" fg:x="98631" fg:w="57"/><text x="39.8553%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (337 samples, 0.14%)</title><rect x="39.6282%" y="181" width="0.1353%" height="15" fill="rgb(247,87,22)" fg:x="98688" fg:w="337"/><text x="39.8782%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (327 samples, 0.13%)</title><rect x="39.6322%" y="165" width="0.1313%" height="15" fill="rgb(215,73,9)" fg:x="98698" fg:w="327"/><text x="39.8822%" y="175.50"></text></g><g><title>atomic_load_p (327 samples, 0.13%)</title><rect x="39.6322%" y="149" width="0.1313%" height="15" fill="rgb(207,175,33)" fg:x="98698" fg:w="327"/><text x="39.8822%" y="159.50"></text></g><g><title>_rjem_je_emap_update_edata_state (456 samples, 0.18%)</title><rect x="39.5816%" y="197" width="0.1831%" height="15" fill="rgb(243,129,54)" fg:x="98572" fg:w="456"/><text x="39.8316%" y="207.50"></text></g><g><title>phn_next_get (136 samples, 0.05%)</title><rect x="39.8462%" y="117" width="0.0546%" height="15" fill="rgb(227,119,45)" fg:x="99231" fg:w="136"/><text x="40.0962%" y="127.50"></text></g><g><title>ph_merge_children (158 samples, 0.06%)</title><rect x="39.8390%" y="149" width="0.0634%" height="15" fill="rgb(205,109,36)" fg:x="99213" fg:w="158"/><text x="40.0890%" y="159.50"></text></g><g><title>phn_merge_siblings (158 samples, 0.06%)</title><rect x="39.8390%" y="133" width="0.0634%" height="15" fill="rgb(205,6,39)" fg:x="99213" fg:w="158"/><text x="40.0890%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_remove (292 samples, 0.12%)</title><rect x="39.7928%" y="181" width="0.1173%" height="15" fill="rgb(221,32,16)" fg:x="99098" fg:w="292"/><text x="40.0428%" y="191.50"></text></g><g><title>ph_remove (239 samples, 0.10%)</title><rect x="39.8141%" y="165" width="0.0960%" height="15" fill="rgb(228,144,50)" fg:x="99151" fg:w="239"/><text x="40.0641%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (81 samples, 0.03%)</title><rect x="39.9101%" y="181" width="0.0325%" height="15" fill="rgb(229,201,53)" fg:x="99390" fg:w="81"/><text x="40.1601%" y="191.50"></text></g><g><title>sz_psz2ind (39 samples, 0.02%)</title><rect x="39.9269%" y="165" width="0.0157%" height="15" fill="rgb(249,153,27)" fg:x="99432" fg:w="39"/><text x="40.1769%" y="175.50"></text></g><g><title>edata_list_inactive_remove (300 samples, 0.12%)</title><rect x="39.9558%" y="181" width="0.1205%" height="15" fill="rgb(227,106,25)" fg:x="99504" fg:w="300"/><text x="40.2058%" y="191.50"></text></g><g><title>atomic_load_zu (300 samples, 0.12%)</title><rect x="40.0783%" y="165" width="0.1205%" height="15" fill="rgb(230,65,29)" fg:x="99809" fg:w="300"/><text x="40.3283%" y="175.50"></text></g><g><title>eset_stats_sub (314 samples, 0.13%)</title><rect x="40.0771%" y="181" width="0.1261%" height="15" fill="rgb(221,57,46)" fg:x="99806" fg:w="314"/><text x="40.3271%" y="191.50"></text></g><g><title>extent_recycle_extract (3,843 samples, 1.54%)</title><rect x="38.6853%" y="229" width="1.5432%" height="15" fill="rgb(229,161,17)" fg:x="96340" fg:w="3843"/><text x="38.9353%" y="239.50"></text></g><g><title>extent_activate_locked (1,652 samples, 0.66%)</title><rect x="39.5651%" y="213" width="0.6634%" height="15" fill="rgb(222,213,11)" fg:x="98531" fg:w="1652"/><text x="39.8151%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (1,155 samples, 0.46%)</title><rect x="39.7647%" y="197" width="0.4638%" height="15" fill="rgb(235,35,13)" fg:x="99028" fg:w="1155"/><text x="40.0147%" y="207.50"></text></g><g><title>sz_psz2ind (53 samples, 0.02%)</title><rect x="40.2072%" y="181" width="0.0213%" height="15" fill="rgb(233,158,34)" fg:x="100130" fg:w="53"/><text x="40.4572%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (543 samples, 0.22%)</title><rect x="40.2771%" y="165" width="0.2180%" height="15" fill="rgb(215,151,48)" fg:x="100304" fg:w="543"/><text x="40.5271%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (526 samples, 0.21%)</title><rect x="40.2839%" y="149" width="0.2112%" height="15" fill="rgb(229,84,14)" fg:x="100321" fg:w="526"/><text x="40.5339%" y="159.50"></text></g><g><title>atomic_load_p (526 samples, 0.21%)</title><rect x="40.2839%" y="133" width="0.2112%" height="15" fill="rgb(229,68,14)" fg:x="100321" fg:w="526"/><text x="40.5339%" y="143.50"></text></g><g><title>_rjem_je_emap_update_edata_state (599 samples, 0.24%)</title><rect x="40.2554%" y="181" width="0.2405%" height="15" fill="rgb(243,106,26)" fg:x="100250" fg:w="599"/><text x="40.5054%" y="191.50"></text></g><g><title>_rjem_je_edata_heap_empty (86 samples, 0.03%)</title><rect x="40.5292%" y="165" width="0.0345%" height="15" fill="rgb(206,45,38)" fg:x="100932" fg:w="86"/><text x="40.7792%" y="175.50"></text></g><g><title>edata_heap_ph_cmp (164 samples, 0.07%)</title><rect x="40.6039%" y="133" width="0.0659%" height="15" fill="rgb(226,6,15)" fg:x="101118" fg:w="164"/><text x="40.8539%" y="143.50"></text></g><g><title>edata_snad_comp (164 samples, 0.07%)</title><rect x="40.6039%" y="117" width="0.0659%" height="15" fill="rgb(232,22,54)" fg:x="101118" fg:w="164"/><text x="40.8539%" y="127.50"></text></g><g><title>edata_cmp_summary_get (161 samples, 0.06%)</title><rect x="40.6051%" y="101" width="0.0646%" height="15" fill="rgb(229,222,32)" fg:x="101121" fg:w="161"/><text x="40.8551%" y="111.50"></text></g><g><title>edata_sn_get (160 samples, 0.06%)</title><rect x="40.6055%" y="85" width="0.0642%" height="15" fill="rgb(228,62,29)" fg:x="101122" fg:w="160"/><text x="40.8555%" y="95.50"></text></g><g><title>_rjem_je_edata_heap_insert (315 samples, 0.13%)</title><rect x="40.5638%" y="165" width="0.1265%" height="15" fill="rgb(251,103,34)" fg:x="101018" fg:w="315"/><text x="40.8138%" y="175.50"></text></g><g><title>ph_insert (278 samples, 0.11%)</title><rect x="40.5786%" y="149" width="0.1116%" height="15" fill="rgb(233,12,30)" fg:x="101055" fg:w="278"/><text x="40.8286%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (51 samples, 0.02%)</title><rect x="40.6903%" y="165" width="0.0205%" height="15" fill="rgb(238,52,0)" fg:x="101333" fg:w="51"/><text x="40.9403%" y="175.50"></text></g><g><title>edata_cmp_summary_comp (29 samples, 0.01%)</title><rect x="40.7115%" y="165" width="0.0116%" height="15" fill="rgb(223,98,5)" fg:x="101386" fg:w="29"/><text x="40.9615%" y="175.50"></text></g><g><title>edata_list_inactive_append (85 samples, 0.03%)</title><rect x="40.7240%" y="165" width="0.0341%" height="15" fill="rgb(228,75,37)" fg:x="101417" fg:w="85"/><text x="40.9740%" y="175.50"></text></g><g><title>atomic_load_zu (100 samples, 0.04%)</title><rect x="40.7629%" y="149" width="0.0402%" height="15" fill="rgb(205,115,49)" fg:x="101514" fg:w="100"/><text x="41.0129%" y="159.50"></text></g><g><title>eset_stats_add (110 samples, 0.04%)</title><rect x="40.7629%" y="165" width="0.0442%" height="15" fill="rgb(250,154,43)" fg:x="101514" fg:w="110"/><text x="41.0129%" y="175.50"></text></g><g><title>extent_deactivate_locked (1,505 samples, 0.60%)</title><rect x="40.2285%" y="213" width="0.6043%" height="15" fill="rgb(226,43,29)" fg:x="100183" fg:w="1505"/><text x="40.4785%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (1,505 samples, 0.60%)</title><rect x="40.2285%" y="197" width="0.6043%" height="15" fill="rgb(249,228,39)" fg:x="100183" fg:w="1505"/><text x="40.4785%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (839 samples, 0.34%)</title><rect x="40.4959%" y="181" width="0.3369%" height="15" fill="rgb(216,79,43)" fg:x="100849" fg:w="839"/><text x="40.7459%" y="191.50"></text></g><g><title>sz_psz2ind (54 samples, 0.02%)</title><rect x="40.8111%" y="165" width="0.0217%" height="15" fill="rgb(228,95,12)" fg:x="101634" fg:w="54"/><text x="41.0611%" y="175.50"></text></g><g><title>phn_merge (29 samples, 0.01%)</title><rect x="40.9726%" y="117" width="0.0116%" height="15" fill="rgb(249,221,15)" fg:x="102036" fg:w="29"/><text x="41.2226%" y="127.50"></text></g><g><title>edata_avail_ph_cmp (65 samples, 0.03%)</title><rect x="40.9874%" y="85" width="0.0261%" height="15" fill="rgb(233,34,13)" fg:x="102073" fg:w="65"/><text x="41.2374%" y="95.50"></text></g><g><title>edata_esnead_comp (65 samples, 0.03%)</title><rect x="40.9874%" y="69" width="0.0261%" height="15" fill="rgb(214,103,39)" fg:x="102073" fg:w="65"/><text x="41.2374%" y="79.50"></text></g><g><title>edata_esn_comp (65 samples, 0.03%)</title><rect x="40.9874%" y="53" width="0.0261%" height="15" fill="rgb(251,126,39)" fg:x="102073" fg:w="65"/><text x="41.2374%" y="63.50"></text></g><g><title>edata_esn_get (65 samples, 0.03%)</title><rect x="40.9874%" y="37" width="0.0261%" height="15" fill="rgb(214,216,36)" fg:x="102073" fg:w="65"/><text x="41.2374%" y="47.50"></text></g><g><title>phn_merge (72 samples, 0.03%)</title><rect x="40.9874%" y="101" width="0.0289%" height="15" fill="rgb(220,221,8)" fg:x="102073" fg:w="72"/><text x="41.2374%" y="111.50"></text></g><g><title>phn_next_get (58 samples, 0.02%)</title><rect x="41.0163%" y="101" width="0.0233%" height="15" fill="rgb(240,216,3)" fg:x="102145" fg:w="58"/><text x="41.2663%" y="111.50"></text></g><g><title>phn_merge_siblings (141 samples, 0.06%)</title><rect x="40.9842%" y="117" width="0.0566%" height="15" fill="rgb(232,218,17)" fg:x="102065" fg:w="141"/><text x="41.2342%" y="127.50"></text></g><g><title>phn_next_get (103 samples, 0.04%)</title><rect x="41.0408%" y="117" width="0.0414%" height="15" fill="rgb(229,163,45)" fg:x="102206" fg:w="103"/><text x="41.2908%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_first (375 samples, 0.15%)</title><rect x="40.9360%" y="165" width="0.1506%" height="15" fill="rgb(231,110,42)" fg:x="101945" fg:w="375"/><text x="41.1860%" y="175.50"></text></g><g><title>ph_first (348 samples, 0.14%)</title><rect x="40.9469%" y="149" width="0.1397%" height="15" fill="rgb(208,170,48)" fg:x="101972" fg:w="348"/><text x="41.1969%" y="159.50"></text></g><g><title>ph_merge_aux (290 samples, 0.12%)</title><rect x="40.9701%" y="133" width="0.1164%" height="15" fill="rgb(239,116,25)" fg:x="102030" fg:w="290"/><text x="41.2201%" y="143.50"></text></g><g><title>edata_avail_ph_cmp (62 samples, 0.02%)</title><rect x="41.1476%" y="85" width="0.0249%" height="15" fill="rgb(219,200,50)" fg:x="102472" fg:w="62"/><text x="41.3976%" y="95.50"></text></g><g><title>edata_esnead_comp (62 samples, 0.02%)</title><rect x="41.1476%" y="69" width="0.0249%" height="15" fill="rgb(245,200,0)" fg:x="102472" fg:w="62"/><text x="41.3976%" y="79.50"></text></g><g><title>edata_esn_comp (46 samples, 0.02%)</title><rect x="41.1541%" y="53" width="0.0185%" height="15" fill="rgb(245,119,33)" fg:x="102488" fg:w="46"/><text x="41.4041%" y="63.50"></text></g><g><title>edata_esn_get (36 samples, 0.01%)</title><rect x="41.1581%" y="37" width="0.0145%" height="15" fill="rgb(231,125,12)" fg:x="102498" fg:w="36"/><text x="41.4081%" y="47.50"></text></g><g><title>phn_lchild_get (42 samples, 0.02%)</title><rect x="41.1745%" y="69" width="0.0169%" height="15" fill="rgb(216,96,41)" fg:x="102539" fg:w="42"/><text x="41.4245%" y="79.50"></text></g><g><title>phn_merge (170 samples, 0.07%)</title><rect x="41.1460%" y="101" width="0.0683%" height="15" fill="rgb(248,43,45)" fg:x="102468" fg:w="170"/><text x="41.3960%" y="111.50"></text></g><g><title>phn_merge_ordered (104 samples, 0.04%)</title><rect x="41.1725%" y="85" width="0.0418%" height="15" fill="rgb(217,222,7)" fg:x="102534" fg:w="104"/><text x="41.4225%" y="95.50"></text></g><g><title>phn_prev_set (45 samples, 0.02%)</title><rect x="41.1962%" y="69" width="0.0181%" height="15" fill="rgb(233,28,6)" fg:x="102593" fg:w="45"/><text x="41.4462%" y="79.50"></text></g><g><title>phn_next_get (923 samples, 0.37%)</title><rect x="41.2143%" y="101" width="0.3706%" height="15" fill="rgb(231,218,15)" fg:x="102638" fg:w="923"/><text x="41.4643%" y="111.50"></text></g><g><title>phn_next_set (42 samples, 0.02%)</title><rect x="41.5849%" y="101" width="0.0169%" height="15" fill="rgb(226,171,48)" fg:x="103561" fg:w="42"/><text x="41.8349%" y="111.50"></text></g><g><title>ph_merge_children (1,229 samples, 0.49%)</title><rect x="41.1223%" y="133" width="0.4935%" height="15" fill="rgb(235,201,9)" fg:x="102409" fg:w="1229"/><text x="41.3723%" y="143.50"></text></g><g><title>phn_merge_siblings (1,229 samples, 0.49%)</title><rect x="41.1223%" y="117" width="0.4935%" height="15" fill="rgb(217,80,15)" fg:x="102409" fg:w="1229"/><text x="41.3723%" y="127.50"></text></g><g><title>phn_prev_set (35 samples, 0.01%)</title><rect x="41.6018%" y="101" width="0.0141%" height="15" fill="rgb(219,152,8)" fg:x="103603" fg:w="35"/><text x="41.8518%" y="111.50"></text></g><g><title>phn_lchild_get (29 samples, 0.01%)</title><rect x="41.6158%" y="133" width="0.0116%" height="15" fill="rgb(243,107,38)" fg:x="103638" fg:w="29"/><text x="41.8658%" y="143.50"></text></g><g><title>_rjem_je_edata_avail_remove (1,350 samples, 0.54%)</title><rect x="41.0866%" y="165" width="0.5421%" height="15" fill="rgb(231,17,5)" fg:x="102320" fg:w="1350"/><text x="41.3366%" y="175.50"></text></g><g><title>ph_remove (1,319 samples, 0.53%)</title><rect x="41.0990%" y="149" width="0.5296%" height="15" fill="rgb(209,25,54)" fg:x="102351" fg:w="1319"/><text x="41.3490%" y="159.50"></text></g><g><title>malloc_mutex_trylock_final (256 samples, 0.10%)</title><rect x="41.6355%" y="149" width="0.1028%" height="15" fill="rgb(219,0,2)" fg:x="103687" fg:w="256"/><text x="41.8855%" y="159.50"></text></g><g><title>pthread_mutex_trylock (255 samples, 0.10%)</title><rect x="41.6359%" y="133" width="0.1024%" height="15" fill="rgb(246,9,5)" fg:x="103688" fg:w="255"/><text x="41.8859%" y="143.50"></text></g><g><title>malloc_mutex_lock (265 samples, 0.11%)</title><rect x="41.6343%" y="165" width="0.1064%" height="15" fill="rgb(226,159,4)" fg:x="103684" fg:w="265"/><text x="41.8843%" y="175.50"></text></g><g><title>[libc.so.6] (262 samples, 0.11%)</title><rect x="41.7419%" y="149" width="0.1052%" height="15" fill="rgb(219,175,34)" fg:x="103952" fg:w="262"/><text x="41.9919%" y="159.50"></text></g><g><title>pthread_mutex_unlock (178 samples, 0.07%)</title><rect x="41.8471%" y="149" width="0.0715%" height="15" fill="rgb(236,10,46)" fg:x="104214" fg:w="178"/><text x="42.0971%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (2,498 samples, 1.00%)</title><rect x="40.9312%" y="181" width="1.0031%" height="15" fill="rgb(240,211,16)" fg:x="101933" fg:w="2498"/><text x="41.1812%" y="191.50"></text></g><g><title>malloc_mutex_unlock (482 samples, 0.19%)</title><rect x="41.7407%" y="165" width="0.1935%" height="15" fill="rgb(205,3,43)" fg:x="103949" fg:w="482"/><text x="41.9907%" y="175.50"></text></g><g><title>pthread_mutex_unlock@plt (39 samples, 0.02%)</title><rect x="41.9186%" y="149" width="0.0157%" height="15" fill="rgb(245,7,22)" fg:x="104392" fg:w="39"/><text x="42.1686%" y="159.50"></text></g><g><title>_rjem_je_emap_split_commit (91 samples, 0.04%)</title><rect x="41.9343%" y="181" width="0.0365%" height="15" fill="rgb(239,132,32)" fg:x="104431" fg:w="91"/><text x="42.1843%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (53 samples, 0.02%)</title><rect x="41.9495%" y="165" width="0.0213%" height="15" fill="rgb(228,202,34)" fg:x="104469" fg:w="53"/><text x="42.1995%" y="175.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (128 samples, 0.05%)</title><rect x="41.9957%" y="165" width="0.0514%" height="15" fill="rgb(254,200,22)" fg:x="104584" fg:w="128"/><text x="42.2457%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (92 samples, 0.04%)</title><rect x="42.0102%" y="149" width="0.0369%" height="15" fill="rgb(219,10,39)" fg:x="104620" fg:w="92"/><text x="42.2602%" y="159.50"></text></g><g><title>_rjem_je_emap_split_prepare (192 samples, 0.08%)</title><rect x="41.9708%" y="181" width="0.0771%" height="15" fill="rgb(226,210,39)" fg:x="104522" fg:w="192"/><text x="42.2208%" y="191.50"></text></g><g><title>edata_init (27 samples, 0.01%)</title><rect x="42.0515%" y="181" width="0.0108%" height="15" fill="rgb(208,219,16)" fg:x="104723" fg:w="27"/><text x="42.3015%" y="191.50"></text></g><g><title>_rjem_je_ehooks_default_split_impl (51 samples, 0.02%)</title><rect x="42.1101%" y="165" width="0.0205%" height="15" fill="rgb(216,158,51)" fg:x="104869" fg:w="51"/><text x="42.3601%" y="175.50"></text></g><g><title>ehooks_split (152 samples, 0.06%)</title><rect x="42.0704%" y="181" width="0.0610%" height="15" fill="rgb(233,14,44)" fg:x="104770" fg:w="152"/><text x="42.3204%" y="191.50"></text></g><g><title>ehooks_split_will_fail (44 samples, 0.02%)</title><rect x="42.1314%" y="181" width="0.0177%" height="15" fill="rgb(237,97,39)" fg:x="104922" fg:w="44"/><text x="42.3814%" y="191.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (44 samples, 0.02%)</title><rect x="42.1314%" y="165" width="0.0177%" height="15" fill="rgb(218,198,43)" fg:x="104922" fg:w="44"/><text x="42.3814%" y="175.50"></text></g><g><title>atomic_load_p (44 samples, 0.02%)</title><rect x="42.1314%" y="149" width="0.0177%" height="15" fill="rgb(231,104,20)" fg:x="104922" fg:w="44"/><text x="42.3814%" y="159.50"></text></g><g><title>extent_recycle_split (4,784 samples, 1.92%)</title><rect x="40.2285%" y="229" width="1.9210%" height="15" fill="rgb(254,36,13)" fg:x="100183" fg:w="4784"/><text x="40.4785%" y="239.50">e..</text></g><g><title>extent_split_interior (3,279 samples, 1.32%)</title><rect x="40.8328%" y="213" width="1.3167%" height="15" fill="rgb(248,14,50)" fg:x="101688" fg:w="3279"/><text x="41.0828%" y="223.50"></text></g><g><title>extent_split_impl (3,231 samples, 1.30%)</title><rect x="40.8521%" y="197" width="1.2974%" height="15" fill="rgb(217,107,29)" fg:x="101736" fg:w="3231"/><text x="41.1021%" y="207.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (65 samples, 0.03%)</title><rect x="42.1511%" y="213" width="0.0261%" height="15" fill="rgb(251,169,33)" fg:x="104971" fg:w="65"/><text x="42.4011%" y="223.50"></text></g><g><title>pthread_mutex_trylock (738 samples, 0.30%)</title><rect x="42.1796%" y="197" width="0.2963%" height="15" fill="rgb(217,108,32)" fg:x="105042" fg:w="738"/><text x="42.4296%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (937 samples, 0.38%)</title><rect x="42.1772%" y="213" width="0.3763%" height="15" fill="rgb(219,66,42)" fg:x="105036" fg:w="937"/><text x="42.4272%" y="223.50"></text></g><g><title>pthread_mutex_trylock@plt (193 samples, 0.08%)</title><rect x="42.4760%" y="197" width="0.0775%" height="15" fill="rgb(206,180,7)" fg:x="105780" fg:w="193"/><text x="42.7260%" y="207.50"></text></g><g><title>malloc_mutex_lock (1,013 samples, 0.41%)</title><rect x="42.1495%" y="229" width="0.4068%" height="15" fill="rgb(208,226,31)" fg:x="104967" fg:w="1013"/><text x="42.3995%" y="239.50"></text></g><g><title>[libc.so.6] (308 samples, 0.12%)</title><rect x="42.5563%" y="213" width="0.1237%" height="15" fill="rgb(218,26,49)" fg:x="105980" fg:w="308"/><text x="42.8063%" y="223.50"></text></g><g><title>pthread_mutex_unlock (44 samples, 0.02%)</title><rect x="42.6816%" y="213" width="0.0177%" height="15" fill="rgb(233,197,48)" fg:x="106292" fg:w="44"/><text x="42.9316%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc (10,192 samples, 4.09%)</title><rect x="38.6118%" y="261" width="4.0926%" height="15" fill="rgb(252,181,51)" fg:x="96157" fg:w="10192"/><text x="38.8618%" y="271.50">_rje..</text></g><g><title>extent_recycle (10,136 samples, 4.07%)</title><rect x="38.6343%" y="245" width="4.0701%" height="15" fill="rgb(253,90,19)" fg:x="96213" fg:w="10136"/><text x="38.8843%" y="255.50">exte..</text></g><g><title>malloc_mutex_unlock (369 samples, 0.15%)</title><rect x="42.5563%" y="229" width="0.1482%" height="15" fill="rgb(215,171,30)" fg:x="105980" fg:w="369"/><text x="42.8063%" y="239.50"></text></g><g><title>_rjem_je_edata_heap_first (39 samples, 0.02%)</title><rect x="42.7213%" y="165" width="0.0157%" height="15" fill="rgb(214,222,9)" fg:x="106391" fg:w="39"/><text x="42.9713%" y="175.50"></text></g><g><title>ph_first (33 samples, 0.01%)</title><rect x="42.7237%" y="149" width="0.0133%" height="15" fill="rgb(223,3,22)" fg:x="106397" fg:w="33"/><text x="42.9737%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (83 samples, 0.03%)</title><rect x="42.7133%" y="197" width="0.0333%" height="15" fill="rgb(225,196,46)" fg:x="106371" fg:w="83"/><text x="42.9633%" y="207.50"></text></g><g><title>eset_first_fit (79 samples, 0.03%)</title><rect x="42.7149%" y="181" width="0.0317%" height="15" fill="rgb(209,110,37)" fg:x="106375" fg:w="79"/><text x="42.9649%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (34 samples, 0.01%)</title><rect x="42.7466%" y="181" width="0.0137%" height="15" fill="rgb(249,89,12)" fg:x="106454" fg:w="34"/><text x="42.9966%" y="191.50"></text></g><g><title>extent_recycle_extract (175 samples, 0.07%)</title><rect x="42.7125%" y="213" width="0.0703%" height="15" fill="rgb(226,27,33)" fg:x="106369" fg:w="175"/><text x="42.9625%" y="223.50"></text></g><g><title>extent_activate_locked (90 samples, 0.04%)</title><rect x="42.7466%" y="197" width="0.0361%" height="15" fill="rgb(213,82,22)" fg:x="106454" fg:w="90"/><text x="42.9966%" y="207.50"></text></g><g><title>_rjem_je_eset_remove (56 samples, 0.02%)</title><rect x="42.7603%" y="181" width="0.0225%" height="15" fill="rgb(248,140,0)" fg:x="106488" fg:w="56"/><text x="43.0103%" y="191.50"></text></g><g><title>_rjem_je_emap_update_edata_state (57 samples, 0.02%)</title><rect x="42.7856%" y="165" width="0.0229%" height="15" fill="rgb(228,106,3)" fg:x="106551" fg:w="57"/><text x="43.0356%" y="175.50"></text></g><g><title>rtree_leaf_elm_state_update (52 samples, 0.02%)</title><rect x="42.7876%" y="149" width="0.0209%" height="15" fill="rgb(209,23,37)" fg:x="106556" fg:w="52"/><text x="43.0376%" y="159.50"></text></g><g><title>rtree_leaf_elm_bits_read (52 samples, 0.02%)</title><rect x="42.7876%" y="133" width="0.0209%" height="15" fill="rgb(241,93,50)" fg:x="106556" fg:w="52"/><text x="43.0376%" y="143.50"></text></g><g><title>atomic_load_p (52 samples, 0.02%)</title><rect x="42.7876%" y="117" width="0.0209%" height="15" fill="rgb(253,46,43)" fg:x="106556" fg:w="52"/><text x="43.0376%" y="127.50"></text></g><g><title>extent_deactivate_locked (104 samples, 0.04%)</title><rect x="42.7827%" y="197" width="0.0418%" height="15" fill="rgb(226,206,43)" fg:x="106544" fg:w="104"/><text x="43.0327%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (104 samples, 0.04%)</title><rect x="42.7827%" y="181" width="0.0418%" height="15" fill="rgb(217,54,7)" fg:x="106544" fg:w="104"/><text x="43.0327%" y="191.50"></text></g><g><title>_rjem_je_eset_insert (40 samples, 0.02%)</title><rect x="42.8084%" y="165" width="0.0161%" height="15" fill="rgb(223,5,52)" fg:x="106608" fg:w="40"/><text x="43.0584%" y="175.50"></text></g><g><title>base_alloc_impl (26 samples, 0.01%)</title><rect x="42.8341%" y="149" width="0.0104%" height="15" fill="rgb(206,52,46)" fg:x="106672" fg:w="26"/><text x="43.0841%" y="159.50"></text></g><g><title>_rjem_je_base_alloc_edata (28 samples, 0.01%)</title><rect x="42.8341%" y="165" width="0.0112%" height="15" fill="rgb(253,136,11)" fg:x="106672" fg:w="28"/><text x="43.0841%" y="175.50"></text></g><g><title>phn_next_get (104 samples, 0.04%)</title><rect x="42.8643%" y="85" width="0.0418%" height="15" fill="rgb(208,106,33)" fg:x="106747" fg:w="104"/><text x="43.1143%" y="95.50"></text></g><g><title>ph_merge_children (133 samples, 0.05%)</title><rect x="42.8542%" y="117" width="0.0534%" height="15" fill="rgb(206,54,4)" fg:x="106722" fg:w="133"/><text x="43.1042%" y="127.50"></text></g><g><title>phn_merge_siblings (133 samples, 0.05%)</title><rect x="42.8542%" y="101" width="0.0534%" height="15" fill="rgb(213,3,15)" fg:x="106722" fg:w="133"/><text x="43.1042%" y="111.50"></text></g><g><title>_rjem_je_edata_avail_remove (145 samples, 0.06%)</title><rect x="42.8510%" y="149" width="0.0582%" height="15" fill="rgb(252,211,39)" fg:x="106714" fg:w="145"/><text x="43.1010%" y="159.50"></text></g><g><title>ph_remove (144 samples, 0.06%)</title><rect x="42.8514%" y="133" width="0.0578%" height="15" fill="rgb(223,6,36)" fg:x="106715" fg:w="144"/><text x="43.1014%" y="143.50"></text></g><g><title>_rjem_je_edata_cache_get (193 samples, 0.08%)</title><rect x="42.8454%" y="165" width="0.0775%" height="15" fill="rgb(252,169,45)" fg:x="106700" fg:w="193"/><text x="43.0954%" y="175.50"></text></g><g><title>extent_recycle_split (396 samples, 0.16%)</title><rect x="42.7827%" y="213" width="0.1590%" height="15" fill="rgb(212,48,26)" fg:x="106544" fg:w="396"/><text x="43.0327%" y="223.50"></text></g><g><title>extent_split_interior (292 samples, 0.12%)</title><rect x="42.8245%" y="197" width="0.1173%" height="15" fill="rgb(251,102,48)" fg:x="106648" fg:w="292"/><text x="43.0745%" y="207.50"></text></g><g><title>extent_split_impl (288 samples, 0.12%)</title><rect x="42.8261%" y="181" width="0.1156%" height="15" fill="rgb(243,208,16)" fg:x="106652" fg:w="288"/><text x="43.0761%" y="191.50"></text></g><g><title>extent_recycle (597 samples, 0.24%)</title><rect x="42.7113%" y="229" width="0.2397%" height="15" fill="rgb(219,96,24)" fg:x="106366" fg:w="597"/><text x="42.9613%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (636 samples, 0.26%)</title><rect x="42.7044%" y="261" width="0.2554%" height="15" fill="rgb(219,33,29)" fg:x="106349" fg:w="636"/><text x="42.9544%" y="271.50"></text></g><g><title>extent_alloc_retained (630 samples, 0.25%)</title><rect x="42.7068%" y="245" width="0.2530%" height="15" fill="rgb(223,176,5)" fg:x="106355" fg:w="630"/><text x="42.9568%" y="255.50"></text></g><g><title>pac_alloc_real (10,905 samples, 4.38%)</title><rect x="38.5930%" y="277" width="4.3789%" height="15" fill="rgb(228,140,14)" fg:x="96110" fg:w="10905"/><text x="38.8430%" y="287.50">pac_a..</text></g><g><title>pac_alloc_impl (11,220 samples, 4.51%)</title><rect x="38.5372%" y="293" width="4.5054%" height="15" fill="rgb(217,179,31)" fg:x="95971" fg:w="11220"/><text x="38.7872%" y="303.50">pac_a..</text></g><g><title>pac_ehooks_get (176 samples, 0.07%)</title><rect x="42.9719%" y="277" width="0.0707%" height="15" fill="rgb(230,9,30)" fg:x="107015" fg:w="176"/><text x="43.2219%" y="287.50"></text></g><g><title>_rjem_je_pa_alloc (11,759 samples, 4.72%)</title><rect x="38.3211%" y="325" width="4.7218%" height="15" fill="rgb(230,136,20)" fg:x="95433" fg:w="11759"/><text x="38.5711%" y="335.50">_rjem_..</text></g><g><title>pai_alloc (11,236 samples, 4.51%)</title><rect x="38.5311%" y="309" width="4.5118%" height="15" fill="rgb(215,210,22)" fg:x="95956" fg:w="11236"/><text x="38.7811%" y="319.50">pai_a..</text></g><g><title>arena_cache_oblivious_randomize (26 samples, 0.01%)</title><rect x="43.0429%" y="325" width="0.0104%" height="15" fill="rgb(218,43,5)" fg:x="107192" fg:w="26"/><text x="43.2929%" y="335.50"></text></g><g><title>locked_inc_u64 (308 samples, 0.12%)</title><rect x="43.0626%" y="309" width="0.1237%" height="15" fill="rgb(216,11,5)" fg:x="107241" fg:w="308"/><text x="43.3126%" y="319.50"></text></g><g><title>atomic_fetch_add_u64 (308 samples, 0.12%)</title><rect x="43.0626%" y="293" width="0.1237%" height="15" fill="rgb(209,82,29)" fg:x="107241" fg:w="308"/><text x="43.3126%" y="303.50"></text></g><g><title>arena_large_malloc_stats_update (350 samples, 0.14%)</title><rect x="43.0534%" y="325" width="0.1405%" height="15" fill="rgb(244,115,12)" fg:x="107218" fg:w="350"/><text x="43.3034%" y="335.50"></text></g><g><title>san_large_extent_decide_guard (46 samples, 0.02%)</title><rect x="43.1947%" y="325" width="0.0185%" height="15" fill="rgb(222,82,18)" fg:x="107570" fg:w="46"/><text x="43.4447%" y="335.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (12,592 samples, 5.06%)</title><rect x="38.2075%" y="341" width="5.0563%" height="15" fill="rgb(249,227,8)" fg:x="95150" fg:w="12592"/><text x="38.4575%" y="351.50">_rjem_..</text></g><g><title>sz_size2index (126 samples, 0.05%)</title><rect x="43.2132%" y="325" width="0.0506%" height="15" fill="rgb(253,141,45)" fg:x="107616" fg:w="126"/><text x="43.4632%" y="335.50"></text></g><g><title>sz_size2index_compute (123 samples, 0.05%)</title><rect x="43.2144%" y="309" width="0.0494%" height="15" fill="rgb(234,184,4)" fg:x="107619" fg:w="123"/><text x="43.4644%" y="319.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (35 samples, 0.01%)</title><rect x="43.2654%" y="261" width="0.0141%" height="15" fill="rgb(218,194,23)" fg:x="107746" fg:w="35"/><text x="43.5154%" y="271.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (35 samples, 0.01%)</title><rect x="43.2654%" y="245" width="0.0141%" height="15" fill="rgb(235,66,41)" fg:x="107746" fg:w="35"/><text x="43.5154%" y="255.50"></text></g><g><title>arena_decay_dirty (37 samples, 0.01%)</title><rect x="43.2650%" y="293" width="0.0149%" height="15" fill="rgb(245,217,1)" fg:x="107745" fg:w="37"/><text x="43.5150%" y="303.50"></text></g><g><title>arena_decay_impl (37 samples, 0.01%)</title><rect x="43.2650%" y="277" width="0.0149%" height="15" fill="rgb(229,91,1)" fg:x="107745" fg:w="37"/><text x="43.5150%" y="287.50"></text></g><g><title>_rjem_je_arena_decay (41 samples, 0.02%)</title><rect x="43.2650%" y="309" width="0.0165%" height="15" fill="rgb(207,101,30)" fg:x="107745" fg:w="41"/><text x="43.5150%" y="319.50"></text></g><g><title>arena_decay_tick (55 samples, 0.02%)</title><rect x="43.2646%" y="341" width="0.0221%" height="15" fill="rgb(223,82,49)" fg:x="107744" fg:w="55"/><text x="43.5146%" y="351.50"></text></g><g><title>arena_decay_ticks (55 samples, 0.02%)</title><rect x="43.2646%" y="325" width="0.0221%" height="15" fill="rgb(218,167,17)" fg:x="107744" fg:w="55"/><text x="43.5146%" y="335.50"></text></g><g><title>imalloc_no_sample (13,592 samples, 5.46%)</title><rect x="37.9244%" y="405" width="5.4579%" height="15" fill="rgb(208,103,14)" fg:x="94445" fg:w="13592"/><text x="38.1744%" y="415.50">imalloc..</text></g><g><title>iallocztm (13,592 samples, 5.46%)</title><rect x="37.9244%" y="389" width="5.4579%" height="15" fill="rgb(238,20,8)" fg:x="94445" fg:w="13592"/><text x="38.1744%" y="399.50">iallocz..</text></g><g><title>arena_malloc (13,592 samples, 5.46%)</title><rect x="37.9244%" y="373" width="5.4579%" height="15" fill="rgb(218,80,54)" fg:x="94445" fg:w="13592"/><text x="38.1744%" y="383.50">arena_m..</text></g><g><title>_rjem_je_large_palloc (12,977 samples, 5.21%)</title><rect x="38.1713%" y="357" width="5.2109%" height="15" fill="rgb(240,144,17)" fg:x="95060" fg:w="12977"/><text x="38.4213%" y="367.50">_rjem_..</text></g><g><title>sz_sa2u (237 samples, 0.10%)</title><rect x="43.2871%" y="341" width="0.0952%" height="15" fill="rgb(245,27,50)" fg:x="107800" fg:w="237"/><text x="43.5371%" y="351.50"></text></g><g><title>sz_s2u (45 samples, 0.02%)</title><rect x="43.3642%" y="325" width="0.0181%" height="15" fill="rgb(251,51,7)" fg:x="107992" fg:w="45"/><text x="43.6142%" y="335.50"></text></g><g><title>sz_s2u_compute (45 samples, 0.02%)</title><rect x="43.3642%" y="309" width="0.0181%" height="15" fill="rgb(245,217,29)" fg:x="107992" fg:w="45"/><text x="43.6142%" y="319.50"></text></g><g><title>peak_update (31 samples, 0.01%)</title><rect x="43.3883%" y="341" width="0.0124%" height="15" fill="rgb(221,176,29)" fg:x="108052" fg:w="31"/><text x="43.6383%" y="351.50"></text></g><g><title>_rjem_je_peak_event_update (40 samples, 0.02%)</title><rect x="43.3883%" y="357" width="0.0161%" height="15" fill="rgb(212,180,24)" fg:x="108052" fg:w="40"/><text x="43.6383%" y="367.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (49 samples, 0.02%)</title><rect x="43.3883%" y="373" width="0.0197%" height="15" fill="rgb(254,24,2)" fg:x="108052" fg:w="49"/><text x="43.6383%" y="383.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (42 samples, 0.02%)</title><rect x="43.5103%" y="357" width="0.0169%" height="15" fill="rgb(230,100,2)" fg:x="108356" fg:w="42"/><text x="43.7603%" y="367.50"></text></g><g><title>cache_bin_ncached_get_local (69 samples, 0.03%)</title><rect x="43.5951%" y="309" width="0.0277%" height="15" fill="rgb(219,142,25)" fg:x="108567" fg:w="69"/><text x="43.8451%" y="319.50"></text></g><g><title>cache_bin_ncached_get_internal (69 samples, 0.03%)</title><rect x="43.5951%" y="293" width="0.0277%" height="15" fill="rgb(240,73,43)" fg:x="108567" fg:w="69"/><text x="43.8451%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (162 samples, 0.07%)</title><rect x="43.5786%" y="325" width="0.0651%" height="15" fill="rgb(214,114,15)" fg:x="108526" fg:w="162"/><text x="43.8286%" y="335.50"></text></g><g><title>cache_bin_nstashed_get_local (52 samples, 0.02%)</title><rect x="43.6228%" y="309" width="0.0209%" height="15" fill="rgb(207,130,4)" fg:x="108636" fg:w="52"/><text x="43.8728%" y="319.50"></text></g><g><title>cache_bin_nstashed_get_internal (52 samples, 0.02%)</title><rect x="43.6228%" y="293" width="0.0209%" height="15" fill="rgb(221,25,40)" fg:x="108636" fg:w="52"/><text x="43.8728%" y="303.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (50 samples, 0.02%)</title><rect x="43.6236%" y="277" width="0.0201%" height="15" fill="rgb(241,184,7)" fg:x="108638" fg:w="50"/><text x="43.8736%" y="287.50"></text></g><g><title>cache_bin_finish_flush (39 samples, 0.02%)</title><rect x="43.6549%" y="277" width="0.0157%" height="15" fill="rgb(235,159,4)" fg:x="108716" fg:w="39"/><text x="43.9049%" y="287.50"></text></g><g><title>extent_deactivate_locked (26 samples, 0.01%)</title><rect x="43.6983%" y="213" width="0.0104%" height="15" fill="rgb(214,87,48)" fg:x="108824" fg:w="26"/><text x="43.9483%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (26 samples, 0.01%)</title><rect x="43.6983%" y="197" width="0.0104%" height="15" fill="rgb(246,198,24)" fg:x="108824" fg:w="26"/><text x="43.9483%" y="207.50"></text></g><g><title>_rjem_je_extent_record (50 samples, 0.02%)</title><rect x="43.6975%" y="229" width="0.0201%" height="15" fill="rgb(209,66,40)" fg:x="108822" fg:w="50"/><text x="43.9475%" y="239.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (89 samples, 0.04%)</title><rect x="43.6842%" y="261" width="0.0357%" height="15" fill="rgb(233,147,39)" fg:x="108789" fg:w="89"/><text x="43.9342%" y="271.50"></text></g><g><title>pac_dalloc_impl (66 samples, 0.03%)</title><rect x="43.6935%" y="245" width="0.0265%" height="15" fill="rgb(231,145,52)" fg:x="108812" fg:w="66"/><text x="43.9435%" y="255.50"></text></g><g><title>edata_arena_ind_get (50 samples, 0.02%)</title><rect x="43.7412%" y="261" width="0.0201%" height="15" fill="rgb(206,20,26)" fg:x="108931" fg:w="50"/><text x="43.9912%" y="271.50"></text></g><g><title>pthread_mutex_trylock (108 samples, 0.04%)</title><rect x="43.7621%" y="229" width="0.0434%" height="15" fill="rgb(238,220,4)" fg:x="108983" fg:w="108"/><text x="44.0121%" y="239.50"></text></g><g><title>malloc_mutex_trylock_final (110 samples, 0.04%)</title><rect x="43.7617%" y="245" width="0.0442%" height="15" fill="rgb(252,195,42)" fg:x="108982" fg:w="110"/><text x="44.0117%" y="255.50"></text></g><g><title>malloc_mutex_lock (121 samples, 0.05%)</title><rect x="43.7613%" y="261" width="0.0486%" height="15" fill="rgb(209,10,6)" fg:x="108981" fg:w="121"/><text x="44.0113%" y="271.50"></text></g><g><title>rtree_leaf_elm_read (83 samples, 0.03%)</title><rect x="43.8541%" y="229" width="0.0333%" height="15" fill="rgb(229,3,52)" fg:x="109212" fg:w="83"/><text x="44.1041%" y="239.50"></text></g><g><title>rtree_leaf_elm_bits_read (83 samples, 0.03%)</title><rect x="43.8541%" y="213" width="0.0333%" height="15" fill="rgb(253,49,37)" fg:x="109212" fg:w="83"/><text x="44.1041%" y="223.50"></text></g><g><title>atomic_load_p (83 samples, 0.03%)</title><rect x="43.8541%" y="197" width="0.0333%" height="15" fill="rgb(240,103,49)" fg:x="109212" fg:w="83"/><text x="44.1041%" y="207.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (32 samples, 0.01%)</title><rect x="43.8874%" y="229" width="0.0128%" height="15" fill="rgb(250,182,30)" fg:x="109295" fg:w="32"/><text x="44.1374%" y="239.50"></text></g><g><title>util_prefetch_write_range (32 samples, 0.01%)</title><rect x="43.8874%" y="213" width="0.0128%" height="15" fill="rgb(248,8,30)" fg:x="109295" fg:w="32"/><text x="44.1374%" y="223.50"></text></g><g><title>util_prefetch_write (32 samples, 0.01%)</title><rect x="43.8874%" y="197" width="0.0128%" height="15" fill="rgb(237,120,30)" fg:x="109295" fg:w="32"/><text x="44.1374%" y="207.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (224 samples, 0.09%)</title><rect x="43.8143%" y="261" width="0.0899%" height="15" fill="rgb(221,146,34)" fg:x="109113" fg:w="224"/><text x="44.0643%" y="271.50"></text></g><g><title>emap_edata_lookup_batch (219 samples, 0.09%)</title><rect x="43.8163%" y="245" width="0.0879%" height="15" fill="rgb(242,55,13)" fg:x="109118" fg:w="219"/><text x="44.0663%" y="255.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (645 samples, 0.26%)</title><rect x="43.6509%" y="309" width="0.2590%" height="15" fill="rgb(242,112,31)" fg:x="108706" fg:w="645"/><text x="43.9009%" y="319.50"></text></g><g><title>tcache_bin_flush_bottom (641 samples, 0.26%)</title><rect x="43.6525%" y="293" width="0.2574%" height="15" fill="rgb(249,192,27)" fg:x="108710" fg:w="641"/><text x="43.9025%" y="303.50"></text></g><g><title>tcache_bin_flush_impl (595 samples, 0.24%)</title><rect x="43.6710%" y="277" width="0.2389%" height="15" fill="rgb(208,204,44)" fg:x="108756" fg:w="595"/><text x="43.9210%" y="287.50"></text></g><g><title>tcache_gc_small (652 samples, 0.26%)</title><rect x="43.6509%" y="325" width="0.2618%" height="15" fill="rgb(208,93,54)" fg:x="108706" fg:w="652"/><text x="43.9009%" y="335.50"></text></g><g><title>tcache_available (46 samples, 0.02%)</title><rect x="43.9127%" y="309" width="0.0185%" height="15" fill="rgb(242,1,31)" fg:x="109358" fg:w="46"/><text x="44.1627%" y="319.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (1,006 samples, 0.40%)</title><rect x="43.5276%" y="357" width="0.4040%" height="15" fill="rgb(241,83,25)" fg:x="108399" fg:w="1006"/><text x="43.7776%" y="367.50"></text></g><g><title>tcache_event (994 samples, 0.40%)</title><rect x="43.5324%" y="341" width="0.3991%" height="15" fill="rgb(205,169,50)" fg:x="108411" fg:w="994"/><text x="43.7824%" y="351.50"></text></g><g><title>tcache_get (47 samples, 0.02%)</title><rect x="43.9127%" y="325" width="0.0189%" height="15" fill="rgb(239,186,37)" fg:x="109358" fg:w="47"/><text x="44.1627%" y="335.50"></text></g><g><title>_rjem_je_tcache_gc_new_event_wait (27 samples, 0.01%)</title><rect x="43.9316%" y="357" width="0.0108%" height="15" fill="rgb(205,221,10)" fg:x="109405" fg:w="27"/><text x="44.1816%" y="367.50"></text></g><g><title>atomic_fence (62 samples, 0.02%)</title><rect x="43.9637%" y="293" width="0.0249%" height="15" fill="rgb(218,196,15)" fg:x="109485" fg:w="62"/><text x="44.2137%" y="303.50"></text></g><g><title>te_adjust_thresholds_helper (100 samples, 0.04%)</title><rect x="43.9557%" y="357" width="0.0402%" height="15" fill="rgb(218,196,35)" fg:x="109465" fg:w="100"/><text x="44.2057%" y="367.50"></text></g><g><title>te_ctx_next_event_set (91 samples, 0.04%)</title><rect x="43.9593%" y="341" width="0.0365%" height="15" fill="rgb(233,63,24)" fg:x="109474" fg:w="91"/><text x="44.2093%" y="351.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (85 samples, 0.03%)</title><rect x="43.9617%" y="325" width="0.0341%" height="15" fill="rgb(225,8,4)" fg:x="109480" fg:w="85"/><text x="44.2117%" y="335.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (82 samples, 0.03%)</title><rect x="43.9629%" y="309" width="0.0329%" height="15" fill="rgb(234,105,35)" fg:x="109483" fg:w="82"/><text x="44.2129%" y="319.50"></text></g><g><title>_rjem_je_te_event_trigger (1,466 samples, 0.59%)</title><rect x="43.4080%" y="373" width="0.5887%" height="15" fill="rgb(236,21,32)" fg:x="108101" fg:w="1466"/><text x="43.6580%" y="383.50"></text></g><g><title>imalloc_body (15,470 samples, 6.21%)</title><rect x="37.7891%" y="421" width="6.2120%" height="15" fill="rgb(228,109,6)" fg:x="94108" fg:w="15470"/><text x="38.0391%" y="431.50">imalloc_..</text></g><g><title>thread_alloc_event (1,541 samples, 0.62%)</title><rect x="43.3823%" y="405" width="0.6188%" height="15" fill="rgb(229,215,31)" fg:x="108037" fg:w="1541"/><text x="43.6323%" y="415.50"></text></g><g><title>te_event_advance (1,541 samples, 0.62%)</title><rect x="43.3823%" y="389" width="0.6188%" height="15" fill="rgb(221,52,54)" fg:x="108037" fg:w="1541"/><text x="43.6323%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (15,589 samples, 6.26%)</title><rect x="37.7594%" y="453" width="6.2598%" height="15" fill="rgb(252,129,43)" fg:x="94034" fg:w="15589"/><text x="38.0094%" y="463.50">_rjem_je..</text></g><g><title>imalloc (15,515 samples, 6.23%)</title><rect x="37.7891%" y="437" width="6.2300%" height="15" fill="rgb(248,183,27)" fg:x="94108" fg:w="15515"/><text x="38.0391%" y="447.50">imalloc</text></g><g><title>tsd_fetch (45 samples, 0.02%)</title><rect x="44.0010%" y="421" width="0.0181%" height="15" fill="rgb(250,0,22)" fg:x="109578" fg:w="45"/><text x="44.2510%" y="431.50"></text></g><g><title>tsd_fetch_impl (45 samples, 0.02%)</title><rect x="44.0010%" y="405" width="0.0181%" height="15" fill="rgb(213,166,10)" fg:x="109578" fg:w="45"/><text x="44.2510%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15,671 samples, 6.29%)</title><rect x="37.7569%" y="533" width="6.2927%" height="15" fill="rgb(207,163,36)" fg:x="94028" fg:w="15671"/><text x="38.0069%" y="543.50">&lt;alloc::..</text></g><g><title>alloc::alloc::Global::alloc_impl (15,671 samples, 6.29%)</title><rect x="37.7569%" y="517" width="6.2927%" height="15" fill="rgb(208,122,22)" fg:x="94028" fg:w="15671"/><text x="38.0069%" y="527.50">alloc::a..</text></g><g><title>alloc::alloc::alloc (15,671 samples, 6.29%)</title><rect x="37.7569%" y="501" width="6.2927%" height="15" fill="rgb(207,104,49)" fg:x="94028" fg:w="15671"/><text x="38.0069%" y="511.50">alloc::a..</text></g><g><title>__rust_alloc (15,671 samples, 6.29%)</title><rect x="37.7569%" y="485" width="6.2927%" height="15" fill="rgb(248,211,50)" fg:x="94028" fg:w="15671"/><text x="38.0069%" y="495.50">__rust_a..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15,671 samples, 6.29%)</title><rect x="37.7569%" y="469" width="6.2927%" height="15" fill="rgb(217,13,45)" fg:x="94028" fg:w="15671"/><text x="38.0069%" y="479.50">&lt;tikv_je..</text></g><g><title>_rjem_malloc (76 samples, 0.03%)</title><rect x="44.0191%" y="453" width="0.0305%" height="15" fill="rgb(211,216,49)" fg:x="109623" fg:w="76"/><text x="44.2691%" y="463.50"></text></g><g><title>imalloc_fastpath (76 samples, 0.03%)</title><rect x="44.0191%" y="437" width="0.0305%" height="15" fill="rgb(221,58,53)" fg:x="109623" fg:w="76"/><text x="44.2691%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15,709 samples, 6.31%)</title><rect x="37.7473%" y="613" width="6.3079%" height="15" fill="rgb(220,112,41)" fg:x="94004" fg:w="15709"/><text x="37.9973%" y="623.50">alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15,709 samples, 6.31%)</title><rect x="37.7473%" y="597" width="6.3079%" height="15" fill="rgb(236,38,28)" fg:x="94004" fg:w="15709"/><text x="37.9973%" y="607.50">alloc::v..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15,709 samples, 6.31%)</title><rect x="37.7473%" y="581" width="6.3079%" height="15" fill="rgb(227,195,22)" fg:x="94004" fg:w="15709"/><text x="37.9973%" y="591.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (15,709 samples, 6.31%)</title><rect x="37.7473%" y="565" width="6.3079%" height="15" fill="rgb(214,55,33)" fg:x="94004" fg:w="15709"/><text x="37.9973%" y="575.50">alloc::r..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (15,709 samples, 6.31%)</title><rect x="37.7473%" y="549" width="6.3079%" height="15" fill="rgb(248,80,13)" fg:x="94004" fg:w="15709"/><text x="37.9973%" y="559.50">alloc::r..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (240 samples, 0.10%)</title><rect x="44.0561%" y="613" width="0.0964%" height="15" fill="rgb(238,52,6)" fg:x="109715" fg:w="240"/><text x="44.3061%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (240 samples, 0.10%)</title><rect x="44.0561%" y="597" width="0.0964%" height="15" fill="rgb(224,198,47)" fg:x="109715" fg:w="240"/><text x="44.3061%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (240 samples, 0.10%)</title><rect x="44.0561%" y="581" width="0.0964%" height="15" fill="rgb(233,171,20)" fg:x="109715" fg:w="240"/><text x="44.3061%" y="591.50"></text></g><g><title>_rjem_je_large_dalloc (27 samples, 0.01%)</title><rect x="44.1576%" y="341" width="0.0108%" height="15" fill="rgb(241,30,25)" fg:x="109968" fg:w="27"/><text x="44.4076%" y="351.50"></text></g><g><title>isdalloct (31 samples, 0.01%)</title><rect x="44.1576%" y="389" width="0.0124%" height="15" fill="rgb(207,171,38)" fg:x="109968" fg:w="31"/><text x="44.4076%" y="399.50"></text></g><g><title>arena_sdalloc (31 samples, 0.01%)</title><rect x="44.1576%" y="373" width="0.0124%" height="15" fill="rgb(234,70,1)" fg:x="109968" fg:w="31"/><text x="44.4076%" y="383.50"></text></g><g><title>arena_dalloc_large (31 samples, 0.01%)</title><rect x="44.1576%" y="357" width="0.0124%" height="15" fill="rgb(232,178,18)" fg:x="109968" fg:w="31"/><text x="44.4076%" y="367.50"></text></g><g><title>_rjem_je_sdallocx_default (39 samples, 0.02%)</title><rect x="44.1568%" y="421" width="0.0157%" height="15" fill="rgb(241,78,40)" fg:x="109966" fg:w="39"/><text x="44.4068%" y="431.50"></text></g><g><title>isfree (37 samples, 0.01%)</title><rect x="44.1576%" y="405" width="0.0149%" height="15" fill="rgb(222,35,25)" fg:x="109968" fg:w="37"/><text x="44.4076%" y="415.50"></text></g><g><title>core::mem::drop (44 samples, 0.02%)</title><rect x="44.1556%" y="597" width="0.0177%" height="15" fill="rgb(207,92,16)" fg:x="109963" fg:w="44"/><text x="44.4056%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (44 samples, 0.02%)</title><rect x="44.1556%" y="581" width="0.0177%" height="15" fill="rgb(216,59,51)" fg:x="109963" fg:w="44"/><text x="44.4056%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (41 samples, 0.02%)</title><rect x="44.1568%" y="565" width="0.0165%" height="15" fill="rgb(213,80,28)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (41 samples, 0.02%)</title><rect x="44.1568%" y="549" width="0.0165%" height="15" fill="rgb(220,93,7)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (41 samples, 0.02%)</title><rect x="44.1568%" y="533" width="0.0165%" height="15" fill="rgb(225,24,44)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.02%)</title><rect x="44.1568%" y="517" width="0.0165%" height="15" fill="rgb(243,74,40)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (41 samples, 0.02%)</title><rect x="44.1568%" y="501" width="0.0165%" height="15" fill="rgb(228,39,7)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.02%)</title><rect x="44.1568%" y="485" width="0.0165%" height="15" fill="rgb(227,79,8)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.02%)</title><rect x="44.1568%" y="469" width="0.0165%" height="15" fill="rgb(236,58,11)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="479.50"></text></g><g><title>__rust_dealloc (41 samples, 0.02%)</title><rect x="44.1568%" y="453" width="0.0165%" height="15" fill="rgb(249,63,35)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="463.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (41 samples, 0.02%)</title><rect x="44.1568%" y="437" width="0.0165%" height="15" fill="rgb(252,114,16)" fg:x="109966" fg:w="41"/><text x="44.4068%" y="447.50"></text></g><g><title>bytes::bytes_mut::release_shared (985 samples, 0.40%)</title><rect x="44.1548%" y="613" width="0.3955%" height="15" fill="rgb(254,151,24)" fg:x="109961" fg:w="985"/><text x="44.4048%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (939 samples, 0.38%)</title><rect x="44.1733%" y="597" width="0.3771%" height="15" fill="rgb(253,54,39)" fg:x="110007" fg:w="939"/><text x="44.4233%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (939 samples, 0.38%)</title><rect x="44.1733%" y="581" width="0.3771%" height="15" fill="rgb(243,25,45)" fg:x="110007" fg:w="939"/><text x="44.4233%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,442 samples, 0.58%)</title><rect x="44.5532%" y="613" width="0.5790%" height="15" fill="rgb(234,134,9)" fg:x="110953" fg:w="1442"/><text x="44.8032%" y="623.50"></text></g><g><title>[libc.so.6] (1,439 samples, 0.58%)</title><rect x="44.5544%" y="597" width="0.5778%" height="15" fill="rgb(227,166,31)" fg:x="110956" fg:w="1439"/><text x="44.8044%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (38,413 samples, 15.42%)</title><rect x="29.7143%" y="645" width="15.4247%" height="15" fill="rgb(245,143,41)" fg:x="73999" fg:w="38413"/><text x="29.9643%" y="655.50">bytes::bytes_mut::BytesM..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (38,401 samples, 15.42%)</title><rect x="29.7191%" y="629" width="15.4199%" height="15" fill="rgb(238,181,32)" fg:x="74011" fg:w="38401"/><text x="29.9691%" y="639.50">bytes::bytes_mut::BytesM..</text></g><g><title>_rjem_je_arena_bin_choose (28 samples, 0.01%)</title><rect x="45.3113%" y="341" width="0.0112%" height="15" fill="rgb(224,113,18)" fg:x="112841" fg:w="28"/><text x="45.5613%" y="351.50"></text></g><g><title>arena_get_bin (26 samples, 0.01%)</title><rect x="45.3121%" y="325" width="0.0104%" height="15" fill="rgb(240,229,28)" fg:x="112843" fg:w="26"/><text x="45.5621%" y="335.50"></text></g><g><title>arena_slab_reg_alloc_batch (69 samples, 0.03%)</title><rect x="45.3286%" y="341" width="0.0277%" height="15" fill="rgb(250,185,3)" fg:x="112884" fg:w="69"/><text x="45.5786%" y="351.50"></text></g><g><title>edata_nfree_get (31 samples, 0.01%)</title><rect x="45.3583%" y="341" width="0.0124%" height="15" fill="rgb(212,59,25)" fg:x="112958" fg:w="31"/><text x="45.6083%" y="351.50"></text></g><g><title>pthread_mutex_trylock (87 samples, 0.03%)</title><rect x="45.3715%" y="309" width="0.0349%" height="15" fill="rgb(221,87,20)" fg:x="112991" fg:w="87"/><text x="45.6215%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (96 samples, 0.04%)</title><rect x="45.3707%" y="325" width="0.0385%" height="15" fill="rgb(213,74,28)" fg:x="112989" fg:w="96"/><text x="45.6207%" y="335.50"></text></g><g><title>malloc_mutex_lock (108 samples, 0.04%)</title><rect x="45.3707%" y="341" width="0.0434%" height="15" fill="rgb(224,132,34)" fg:x="112989" fg:w="108"/><text x="45.6207%" y="351.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="45.4141%" y="325" width="0.0153%" height="15" fill="rgb(222,101,24)" fg:x="113097" fg:w="38"/><text x="45.6641%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (352 samples, 0.14%)</title><rect x="45.2976%" y="357" width="0.1413%" height="15" fill="rgb(254,142,4)" fg:x="112807" fg:w="352"/><text x="45.5476%" y="367.50"></text></g><g><title>malloc_mutex_unlock (62 samples, 0.02%)</title><rect x="45.4141%" y="341" width="0.0249%" height="15" fill="rgb(230,229,49)" fg:x="113097" fg:w="62"/><text x="45.6641%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (378 samples, 0.15%)</title><rect x="45.2900%" y="373" width="0.1518%" height="15" fill="rgb(238,70,47)" fg:x="112788" fg:w="378"/><text x="45.5400%" y="383.50"></text></g><g><title>imalloc_no_sample (443 samples, 0.18%)</title><rect x="45.2772%" y="437" width="0.1779%" height="15" fill="rgb(231,160,17)" fg:x="112756" fg:w="443"/><text x="45.5272%" y="447.50"></text></g><g><title>iallocztm (443 samples, 0.18%)</title><rect x="45.2772%" y="421" width="0.1779%" height="15" fill="rgb(218,68,53)" fg:x="112756" fg:w="443"/><text x="45.5272%" y="431.50"></text></g><g><title>arena_malloc (443 samples, 0.18%)</title><rect x="45.2772%" y="405" width="0.1779%" height="15" fill="rgb(236,111,10)" fg:x="112756" fg:w="443"/><text x="45.5272%" y="415.50"></text></g><g><title>tcache_alloc_small (443 samples, 0.18%)</title><rect x="45.2772%" y="389" width="0.1779%" height="15" fill="rgb(224,34,41)" fg:x="112756" fg:w="443"/><text x="45.5272%" y="399.50"></text></g><g><title>imalloc_body (455 samples, 0.18%)</title><rect x="45.2740%" y="453" width="0.1827%" height="15" fill="rgb(241,118,19)" fg:x="112748" fg:w="455"/><text x="45.5240%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (460 samples, 0.18%)</title><rect x="45.2724%" y="485" width="0.1847%" height="15" fill="rgb(238,129,25)" fg:x="112744" fg:w="460"/><text x="45.5224%" y="495.50"></text></g><g><title>imalloc (456 samples, 0.18%)</title><rect x="45.2740%" y="469" width="0.1831%" height="15" fill="rgb(238,22,31)" fg:x="112748" fg:w="456"/><text x="45.5240%" y="479.50"></text></g><g><title>cache_bin_alloc_easy (202 samples, 0.08%)</title><rect x="45.5771%" y="453" width="0.0811%" height="15" fill="rgb(222,174,48)" fg:x="113503" fg:w="202"/><text x="45.8271%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (202 samples, 0.08%)</title><rect x="45.5771%" y="437" width="0.0811%" height="15" fill="rgb(206,152,40)" fg:x="113503" fg:w="202"/><text x="45.8271%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (105 samples, 0.04%)</title><rect x="45.6586%" y="437" width="0.0422%" height="15" fill="rgb(218,99,54)" fg:x="113706" fg:w="105"/><text x="45.9086%" y="447.50"></text></g><g><title>sz_size2index_usize_fastpath (124 samples, 0.05%)</title><rect x="45.6586%" y="453" width="0.0498%" height="15" fill="rgb(220,174,26)" fg:x="113706" fg:w="124"/><text x="45.9086%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,362 samples, 0.55%)</title><rect x="45.1623%" y="597" width="0.5469%" height="15" fill="rgb(245,116,9)" fg:x="112470" fg:w="1362"/><text x="45.4123%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (1,182 samples, 0.47%)</title><rect x="45.2346%" y="581" width="0.4746%" height="15" fill="rgb(209,72,35)" fg:x="112650" fg:w="1182"/><text x="45.4846%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,177 samples, 0.47%)</title><rect x="45.2366%" y="565" width="0.4726%" height="15" fill="rgb(226,126,21)" fg:x="112655" fg:w="1177"/><text x="45.4866%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,177 samples, 0.47%)</title><rect x="45.2366%" y="549" width="0.4726%" height="15" fill="rgb(227,192,1)" fg:x="112655" fg:w="1177"/><text x="45.4866%" y="559.50"></text></g><g><title>alloc::alloc::alloc (1,104 samples, 0.44%)</title><rect x="45.2659%" y="533" width="0.4433%" height="15" fill="rgb(237,180,29)" fg:x="112728" fg:w="1104"/><text x="45.5159%" y="543.50"></text></g><g><title>__rust_alloc (1,104 samples, 0.44%)</title><rect x="45.2659%" y="517" width="0.4433%" height="15" fill="rgb(230,197,35)" fg:x="112728" fg:w="1104"/><text x="45.5159%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1,104 samples, 0.44%)</title><rect x="45.2659%" y="501" width="0.4433%" height="15" fill="rgb(246,193,31)" fg:x="112728" fg:w="1104"/><text x="45.5159%" y="511.50"></text></g><g><title>_rjem_malloc (628 samples, 0.25%)</title><rect x="45.4571%" y="485" width="0.2522%" height="15" fill="rgb(241,36,4)" fg:x="113204" fg:w="628"/><text x="45.7071%" y="495.50"></text></g><g><title>imalloc_fastpath (628 samples, 0.25%)</title><rect x="45.4571%" y="469" width="0.2522%" height="15" fill="rgb(241,130,17)" fg:x="113204" fg:w="628"/><text x="45.7071%" y="479.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (1,386 samples, 0.56%)</title><rect x="45.1543%" y="613" width="0.5565%" height="15" fill="rgb(206,137,32)" fg:x="112450" fg:w="1386"/><text x="45.4043%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (1,444 samples, 0.58%)</title><rect x="45.1390%" y="645" width="0.5798%" height="15" fill="rgb(237,228,51)" fg:x="112412" fg:w="1444"/><text x="45.3890%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (1,407 samples, 0.56%)</title><rect x="45.1539%" y="629" width="0.5650%" height="15" fill="rgb(243,6,42)" fg:x="112449" fg:w="1407"/><text x="45.4039%" y="639.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (44,935 samples, 18.04%)</title><rect x="27.6760%" y="661" width="18.0436%" height="15" fill="rgb(251,74,28)" fg:x="68923" fg:w="44935"/><text x="27.9260%" y="671.50">fastwebsockets::ReadHalf::pa..</text></g><g><title>fastwebsockets::frame::Payload::to_mut (74 samples, 0.03%)</title><rect x="45.7510%" y="645" width="0.0297%" height="15" fill="rgb(218,20,49)" fg:x="113936" fg:w="74"/><text x="46.0010%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.02%)</title><rect x="54.0799%" y="613" width="0.0213%" height="15" fill="rgb(238,28,14)" fg:x="134678" fg:w="53"/><text x="54.3299%" y="623.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (67,083 samples, 26.94%)</title><rect x="27.1841%" y="693" width="26.9372%" height="15" fill="rgb(229,40,46)" fg:x="67698" fg:w="67083"/><text x="27.4341%" y="703.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_fram..</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (66,288 samples, 26.62%)</title><rect x="27.5034%" y="677" width="26.6179%" height="15" fill="rgb(244,195,20)" fg:x="68493" fg:w="66288"/><text x="27.7534%" y="687.50">fastwebsockets::ReadHalf::read_frame_inner:..</text></g><g><title>fastwebsockets::frame::Frame::unmask (20,923 samples, 8.40%)</title><rect x="45.7197%" y="661" width="8.4016%" height="15" fill="rgb(253,56,35)" fg:x="113858" fg:w="20923"/><text x="45.9697%" y="671.50">fastwebsocke..</text></g><g><title>fastwebsockets::mask::unmask (20,771 samples, 8.34%)</title><rect x="45.7807%" y="645" width="8.3406%" height="15" fill="rgb(210,149,44)" fg:x="114010" fg:w="20771"/><text x="46.0307%" y="655.50">fastwebsocke..</text></g><g><title>fastwebsockets::mask::unmask_fallback (20,771 samples, 8.34%)</title><rect x="45.7807%" y="629" width="8.3406%" height="15" fill="rgb(240,135,12)" fg:x="114010" fg:w="20771"/><text x="46.0307%" y="639.50">fastwebsocke..</text></g><g><title>fastwebsockets::mask::unmask_easy (28 samples, 0.01%)</title><rect x="54.1101%" y="613" width="0.0112%" height="15" fill="rgb(251,24,50)" fg:x="134753" fg:w="28"/><text x="54.3601%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (28 samples, 0.01%)</title><rect x="54.1101%" y="597" width="0.0112%" height="15" fill="rgb(243,200,47)" fg:x="134753" fg:w="28"/><text x="54.3601%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.01%)</title><rect x="54.1101%" y="581" width="0.0112%" height="15" fill="rgb(224,166,26)" fg:x="134753" fg:w="28"/><text x="54.3601%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.01%)</title><rect x="54.1101%" y="565" width="0.0112%" height="15" fill="rgb(233,0,47)" fg:x="134753" fg:w="28"/><text x="54.3601%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (68,333 samples, 27.44%)</title><rect x="26.7589%" y="725" width="27.4391%" height="15" fill="rgb(253,80,5)" fg:x="66639" fg:w="68333"/><text x="27.0089%" y="735.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (68,333 samples, 27.44%)</title><rect x="26.7589%" y="709" width="27.4391%" height="15" fill="rgb(214,133,25)" fg:x="66639" fg:w="68333"/><text x="27.0089%" y="719.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::w..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (191 samples, 0.08%)</title><rect x="54.1213%" y="693" width="0.0767%" height="15" fill="rgb(209,27,14)" fg:x="134781" fg:w="191"/><text x="54.3713%" y="703.50"></text></g><g><title>isfree (34 samples, 0.01%)</title><rect x="54.2470%" y="597" width="0.0137%" height="15" fill="rgb(219,102,51)" fg:x="135094" fg:w="34"/><text x="54.4970%" y="607.50"></text></g><g><title>thread_dalloc_event (32 samples, 0.01%)</title><rect x="54.2478%" y="581" width="0.0128%" height="15" fill="rgb(237,18,16)" fg:x="135096" fg:w="32"/><text x="54.4978%" y="591.50"></text></g><g><title>te_event_advance (32 samples, 0.01%)</title><rect x="54.2478%" y="565" width="0.0128%" height="15" fill="rgb(241,85,17)" fg:x="135096" fg:w="32"/><text x="54.4978%" y="575.50"></text></g><g><title>_rjem_je_te_event_trigger (29 samples, 0.01%)</title><rect x="54.2490%" y="549" width="0.0116%" height="15" fill="rgb(236,90,42)" fg:x="135099" fg:w="29"/><text x="54.4990%" y="559.50"></text></g><g><title>_rjem_je_sdallocx_default (37 samples, 0.01%)</title><rect x="54.2462%" y="613" width="0.0149%" height="15" fill="rgb(249,57,21)" fg:x="135092" fg:w="37"/><text x="54.4962%" y="623.50"></text></g><g><title>cache_bin_dalloc_easy (111 samples, 0.04%)</title><rect x="54.4088%" y="581" width="0.0446%" height="15" fill="rgb(243,12,36)" fg:x="135497" fg:w="111"/><text x="54.6588%" y="591.50"></text></g><g><title>cache_bin_full (69 samples, 0.03%)</title><rect x="54.4257%" y="565" width="0.0277%" height="15" fill="rgb(253,128,47)" fg:x="135539" fg:w="69"/><text x="54.6757%" y="575.50"></text></g><g><title>sz_index2size (97 samples, 0.04%)</title><rect x="54.4534%" y="581" width="0.0390%" height="15" fill="rgb(207,33,20)" fg:x="135608" fg:w="97"/><text x="54.7034%" y="591.50"></text></g><g><title>sz_index2size_lookup (97 samples, 0.04%)</title><rect x="54.4534%" y="565" width="0.0390%" height="15" fill="rgb(233,215,35)" fg:x="135608" fg:w="97"/><text x="54.7034%" y="575.50"></text></g><g><title>sz_index2size_lookup_impl (97 samples, 0.04%)</title><rect x="54.4534%" y="549" width="0.0390%" height="15" fill="rgb(249,188,52)" fg:x="135608" fg:w="97"/><text x="54.7034%" y="559.50"></text></g><g><title>_rjem_sdallocx (615 samples, 0.25%)</title><rect x="54.2610%" y="613" width="0.2470%" height="15" fill="rgb(225,12,32)" fg:x="135129" fg:w="615"/><text x="54.5110%" y="623.50"></text></g><g><title>free_fastpath (615 samples, 0.25%)</title><rect x="54.2610%" y="597" width="0.2470%" height="15" fill="rgb(247,98,14)" fg:x="135129" fg:w="615"/><text x="54.5110%" y="607.50"></text></g><g><title>sz_size2index_lookup (39 samples, 0.02%)</title><rect x="54.4923%" y="581" width="0.0157%" height="15" fill="rgb(247,219,48)" fg:x="135705" fg:w="39"/><text x="54.7423%" y="591.50"></text></g><g><title>sz_size2index_lookup_impl (39 samples, 0.02%)</title><rect x="54.4923%" y="565" width="0.0157%" height="15" fill="rgb(253,60,48)" fg:x="135705" fg:w="39"/><text x="54.7423%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (669 samples, 0.27%)</title><rect x="54.2446%" y="677" width="0.2686%" height="15" fill="rgb(245,15,52)" fg:x="135088" fg:w="669"/><text x="54.4946%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (669 samples, 0.27%)</title><rect x="54.2446%" y="661" width="0.2686%" height="15" fill="rgb(220,133,28)" fg:x="135088" fg:w="669"/><text x="54.4946%" y="671.50"></text></g><g><title>__rust_dealloc (669 samples, 0.27%)</title><rect x="54.2446%" y="645" width="0.2686%" height="15" fill="rgb(217,180,4)" fg:x="135088" fg:w="669"/><text x="54.4946%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (669 samples, 0.27%)</title><rect x="54.2446%" y="629" width="0.2686%" height="15" fill="rgb(251,24,1)" fg:x="135088" fg:w="669"/><text x="54.4946%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (683 samples, 0.27%)</title><rect x="54.2394%" y="693" width="0.2743%" height="15" fill="rgb(212,185,49)" fg:x="135075" fg:w="683"/><text x="54.4894%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (791 samples, 0.32%)</title><rect x="54.1980%" y="725" width="0.3176%" height="15" fill="rgb(215,175,22)" fg:x="134972" fg:w="791"/><text x="54.4480%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (791 samples, 0.32%)</title><rect x="54.1980%" y="709" width="0.3176%" height="15" fill="rgb(250,205,14)" fg:x="134972" fg:w="791"/><text x="54.4480%" y="719.50"></text></g><g><title>cache_bin_alloc_easy (35 samples, 0.01%)</title><rect x="54.5397%" y="549" width="0.0141%" height="15" fill="rgb(225,211,22)" fg:x="135823" fg:w="35"/><text x="54.7897%" y="559.50"></text></g><g><title>cache_bin_alloc_impl (35 samples, 0.01%)</title><rect x="54.5397%" y="533" width="0.0141%" height="15" fill="rgb(251,179,42)" fg:x="135823" fg:w="35"/><text x="54.7897%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (69,721 samples, 28.00%)</title><rect x="26.5605%" y="757" width="27.9965%" height="15" fill="rgb(208,216,51)" fg:x="66145" fg:w="69721"/><text x="26.8105%" y="767.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::F..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (69,721 samples, 28.00%)</title><rect x="26.5605%" y="741" width="27.9965%" height="15" fill="rgb(235,36,11)" fg:x="66145" fg:w="69721"/><text x="26.8105%" y="751.50">&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocke..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (103 samples, 0.04%)</title><rect x="54.5156%" y="725" width="0.0414%" height="15" fill="rgb(213,189,28)" fg:x="135763" fg:w="103"/><text x="54.7656%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (102 samples, 0.04%)</title><rect x="54.5160%" y="709" width="0.0410%" height="15" fill="rgb(227,203,42)" fg:x="135764" fg:w="102"/><text x="54.7660%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (102 samples, 0.04%)</title><rect x="54.5160%" y="693" width="0.0410%" height="15" fill="rgb(244,72,36)" fg:x="135764" fg:w="102"/><text x="54.7660%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (86 samples, 0.03%)</title><rect x="54.5225%" y="677" width="0.0345%" height="15" fill="rgb(213,53,17)" fg:x="135780" fg:w="86"/><text x="54.7725%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (84 samples, 0.03%)</title><rect x="54.5233%" y="661" width="0.0337%" height="15" fill="rgb(207,167,3)" fg:x="135782" fg:w="84"/><text x="54.7733%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (84 samples, 0.03%)</title><rect x="54.5233%" y="645" width="0.0337%" height="15" fill="rgb(216,98,30)" fg:x="135782" fg:w="84"/><text x="54.7733%" y="655.50"></text></g><g><title>alloc::alloc::alloc (81 samples, 0.03%)</title><rect x="54.5245%" y="629" width="0.0325%" height="15" fill="rgb(236,123,15)" fg:x="135785" fg:w="81"/><text x="54.7745%" y="639.50"></text></g><g><title>__rust_alloc (81 samples, 0.03%)</title><rect x="54.5245%" y="613" width="0.0325%" height="15" fill="rgb(248,81,50)" fg:x="135785" fg:w="81"/><text x="54.7745%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (81 samples, 0.03%)</title><rect x="54.5245%" y="597" width="0.0325%" height="15" fill="rgb(214,120,4)" fg:x="135785" fg:w="81"/><text x="54.7745%" y="607.50"></text></g><g><title>_rjem_malloc (77 samples, 0.03%)</title><rect x="54.5261%" y="581" width="0.0309%" height="15" fill="rgb(208,179,34)" fg:x="135789" fg:w="77"/><text x="54.7761%" y="591.50"></text></g><g><title>imalloc_fastpath (76 samples, 0.03%)</title><rect x="54.5265%" y="565" width="0.0305%" height="15" fill="rgb(227,140,7)" fg:x="135790" fg:w="76"/><text x="54.7765%" y="575.50"></text></g><g><title>cache_bin_dalloc_easy (47 samples, 0.02%)</title><rect x="54.6337%" y="613" width="0.0189%" height="15" fill="rgb(214,22,6)" fg:x="136057" fg:w="47"/><text x="54.8837%" y="623.50"></text></g><g><title>_rjem_sdallocx (134 samples, 0.05%)</title><rect x="54.5996%" y="645" width="0.0538%" height="15" fill="rgb(207,137,27)" fg:x="135972" fg:w="134"/><text x="54.8496%" y="655.50"></text></g><g><title>free_fastpath (134 samples, 0.05%)</title><rect x="54.5996%" y="629" width="0.0538%" height="15" fill="rgb(210,8,46)" fg:x="135972" fg:w="134"/><text x="54.8496%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (144 samples, 0.06%)</title><rect x="54.5992%" y="709" width="0.0578%" height="15" fill="rgb(240,16,54)" fg:x="135971" fg:w="144"/><text x="54.8492%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (144 samples, 0.06%)</title><rect x="54.5992%" y="693" width="0.0578%" height="15" fill="rgb(211,209,29)" fg:x="135971" fg:w="144"/><text x="54.8492%" y="703.50"></text></g><g><title>__rust_dealloc (144 samples, 0.06%)</title><rect x="54.5992%" y="677" width="0.0578%" height="15" fill="rgb(226,228,24)" fg:x="135971" fg:w="144"/><text x="54.8492%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (144 samples, 0.06%)</title><rect x="54.5992%" y="661" width="0.0578%" height="15" fill="rgb(222,84,9)" fg:x="135971" fg:w="144"/><text x="54.8492%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.06%)</title><rect x="54.5992%" y="725" width="0.0590%" height="15" fill="rgb(234,203,30)" fg:x="135971" fg:w="147"/><text x="54.8492%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (70,735 samples, 28.40%)</title><rect x="26.2557%" y="789" width="28.4036%" height="15" fill="rgb(238,109,14)" fg:x="65386" fg:w="70735"/><text x="26.5057%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fu..</text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (70,734 samples, 28.40%)</title><rect x="26.2561%" y="773" width="28.4032%" height="15" fill="rgb(233,206,34)" fg:x="65387" fg:w="70734"/><text x="26.5061%" y="783.50">&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wi..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (241 samples, 0.10%)</title><rect x="54.5626%" y="757" width="0.0968%" height="15" fill="rgb(220,167,47)" fg:x="135880" fg:w="241"/><text x="54.8126%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (241 samples, 0.10%)</title><rect x="54.5626%" y="741" width="0.0968%" height="15" fill="rgb(238,105,10)" fg:x="135880" fg:w="241"/><text x="54.8126%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.01%)</title><rect x="54.6911%" y="757" width="0.0116%" height="15" fill="rgb(213,227,17)" fg:x="136200" fg:w="29"/><text x="54.9411%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (193 samples, 0.08%)</title><rect x="54.7028%" y="757" width="0.0775%" height="15" fill="rgb(217,132,38)" fg:x="136229" fg:w="193"/><text x="54.9528%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (193 samples, 0.08%)</title><rect x="54.7028%" y="741" width="0.0775%" height="15" fill="rgb(242,146,4)" fg:x="136229" fg:w="193"/><text x="54.9528%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (193 samples, 0.08%)</title><rect x="54.7028%" y="725" width="0.0775%" height="15" fill="rgb(212,61,9)" fg:x="136229" fg:w="193"/><text x="54.9528%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (190 samples, 0.08%)</title><rect x="54.7040%" y="709" width="0.0763%" height="15" fill="rgb(247,126,22)" fg:x="136232" fg:w="190"/><text x="54.9540%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (190 samples, 0.08%)</title><rect x="54.7040%" y="693" width="0.0763%" height="15" fill="rgb(220,196,2)" fg:x="136232" fg:w="190"/><text x="54.9540%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;wisp_mux::inner::WsEvent,flume::async::AsyncSignal&gt;&gt;&gt; (70 samples, 0.03%)</title><rect x="54.7803%" y="757" width="0.0281%" height="15" fill="rgb(208,46,4)" fg:x="136422" fg:w="70"/><text x="55.0303%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.03%)</title><rect x="54.7803%" y="741" width="0.0281%" height="15" fill="rgb(252,104,46)" fg:x="136422" fg:w="70"/><text x="55.0303%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (69 samples, 0.03%)</title><rect x="54.7807%" y="725" width="0.0277%" height="15" fill="rgb(237,152,48)" fg:x="136423" fg:w="69"/><text x="55.0307%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (69 samples, 0.03%)</title><rect x="54.7807%" y="709" width="0.0277%" height="15" fill="rgb(221,59,37)" fg:x="136423" fg:w="69"/><text x="55.0307%" y="719.50"></text></g><g><title>core::mem::drop (98 samples, 0.04%)</title><rect x="54.8268%" y="725" width="0.0394%" height="15" fill="rgb(209,202,51)" fg:x="136538" fg:w="98"/><text x="55.0768%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;wisp_mux::inner::WsEvent&gt;&gt;&gt; (98 samples, 0.04%)</title><rect x="54.8268%" y="709" width="0.0394%" height="15" fill="rgb(228,81,30)" fg:x="136538" fg:w="98"/><text x="55.0768%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (98 samples, 0.04%)</title><rect x="54.8268%" y="693" width="0.0394%" height="15" fill="rgb(227,42,39)" fg:x="136538" fg:w="98"/><text x="55.0768%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (85 samples, 0.03%)</title><rect x="54.8321%" y="677" width="0.0341%" height="15" fill="rgb(221,26,2)" fg:x="136551" fg:w="85"/><text x="55.0821%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (78 samples, 0.03%)</title><rect x="54.8349%" y="661" width="0.0313%" height="15" fill="rgb(254,61,31)" fg:x="136558" fg:w="78"/><text x="55.0849%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (78 samples, 0.03%)</title><rect x="54.8349%" y="645" width="0.0313%" height="15" fill="rgb(222,173,38)" fg:x="136558" fg:w="78"/><text x="55.0849%" y="655.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (62 samples, 0.02%)</title><rect x="54.8662%" y="725" width="0.0249%" height="15" fill="rgb(218,50,12)" fg:x="136636" fg:w="62"/><text x="55.1162%" y="735.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (785 samples, 0.32%)</title><rect x="54.8104%" y="757" width="0.3152%" height="15" fill="rgb(223,88,40)" fg:x="136497" fg:w="785"/><text x="55.0604%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (785 samples, 0.32%)</title><rect x="54.8104%" y="741" width="0.3152%" height="15" fill="rgb(237,54,19)" fg:x="136497" fg:w="785"/><text x="55.0604%" y="751.50"></text></g><g><title>flume::wait_lock (567 samples, 0.23%)</title><rect x="54.8979%" y="725" width="0.2277%" height="15" fill="rgb(251,129,25)" fg:x="136715" fg:w="567"/><text x="55.1479%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (567 samples, 0.23%)</title><rect x="54.8979%" y="709" width="0.2277%" height="15" fill="rgb(238,97,19)" fg:x="136715" fg:w="567"/><text x="55.1479%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (553 samples, 0.22%)</title><rect x="54.9035%" y="693" width="0.2221%" height="15" fill="rgb(240,169,18)" fg:x="136729" fg:w="553"/><text x="55.1535%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (552 samples, 0.22%)</title><rect x="54.9039%" y="677" width="0.2217%" height="15" fill="rgb(230,187,49)" fg:x="136730" fg:w="552"/><text x="55.1539%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (552 samples, 0.22%)</title><rect x="54.9039%" y="661" width="0.2217%" height="15" fill="rgb(209,44,26)" fg:x="136730" fg:w="552"/><text x="55.1539%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (44 samples, 0.02%)</title><rect x="55.1256%" y="741" width="0.0177%" height="15" fill="rgb(244,0,6)" fg:x="137282" fg:w="44"/><text x="55.3756%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.01%)</title><rect x="55.1316%" y="725" width="0.0116%" height="15" fill="rgb(248,18,21)" fg:x="137297" fg:w="29"/><text x="55.3816%" y="735.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (1,346 samples, 0.54%)</title><rect x="54.6594%" y="789" width="0.5405%" height="15" fill="rgb(245,180,19)" fg:x="136121" fg:w="1346"/><text x="54.9094%" y="799.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (1,346 samples, 0.54%)</title><rect x="54.6594%" y="773" width="0.5405%" height="15" fill="rgb(252,118,36)" fg:x="136121" fg:w="1346"/><text x="54.9094%" y="783.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (185 samples, 0.07%)</title><rect x="55.1256%" y="757" width="0.0743%" height="15" fill="rgb(210,224,19)" fg:x="137282" fg:w="185"/><text x="55.3756%" y="767.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (124 samples, 0.05%)</title><rect x="55.1501%" y="741" width="0.0498%" height="15" fill="rgb(218,30,24)" fg:x="137343" fg:w="124"/><text x="55.4001%" y="751.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (124 samples, 0.05%)</title><rect x="55.1501%" y="725" width="0.0498%" height="15" fill="rgb(219,75,50)" fg:x="137343" fg:w="124"/><text x="55.4001%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (121 samples, 0.05%)</title><rect x="55.1513%" y="709" width="0.0486%" height="15" fill="rgb(234,72,50)" fg:x="137346" fg:w="121"/><text x="55.4013%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (121 samples, 0.05%)</title><rect x="55.1513%" y="693" width="0.0486%" height="15" fill="rgb(219,100,48)" fg:x="137346" fg:w="121"/><text x="55.4013%" y="703.50"></text></g><g><title>_rjem_sdallocx (52 samples, 0.02%)</title><rect x="55.3412%" y="613" width="0.0209%" height="15" fill="rgb(253,5,41)" fg:x="137819" fg:w="52"/><text x="55.5912%" y="623.50"></text></g><g><title>free_fastpath (52 samples, 0.02%)</title><rect x="55.3412%" y="597" width="0.0209%" height="15" fill="rgb(247,181,11)" fg:x="137819" fg:w="52"/><text x="55.5912%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.03%)</title><rect x="55.3384%" y="677" width="0.0281%" height="15" fill="rgb(222,223,25)" fg:x="137812" fg:w="70"/><text x="55.5884%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.03%)</title><rect x="55.3384%" y="661" width="0.0281%" height="15" fill="rgb(214,198,28)" fg:x="137812" fg:w="70"/><text x="55.5884%" y="671.50"></text></g><g><title>__rust_dealloc (70 samples, 0.03%)</title><rect x="55.3384%" y="645" width="0.0281%" height="15" fill="rgb(230,46,43)" fg:x="137812" fg:w="70"/><text x="55.5884%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (70 samples, 0.03%)</title><rect x="55.3384%" y="629" width="0.0281%" height="15" fill="rgb(233,65,53)" fg:x="137812" fg:w="70"/><text x="55.5884%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.03%)</title><rect x="55.3372%" y="693" width="0.0309%" height="15" fill="rgb(221,121,27)" fg:x="137809" fg:w="77"/><text x="55.5872%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (72,751 samples, 29.21%)</title><rect x="26.1566%" y="869" width="29.2132%" height="15" fill="rgb(247,70,47)" fg:x="65139" fg:w="72751"/><text x="26.4066%" y="879.50">core::ops::function::impls::&lt;impl core::ops::fu..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (72,747 samples, 29.21%)</title><rect x="26.1582%" y="853" width="29.2116%" height="15" fill="rgb(228,85,35)" fg:x="65143" fg:w="72747"/><text x="26.4082%" y="863.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{c..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (72,505 samples, 29.11%)</title><rect x="26.2553%" y="837" width="29.1144%" height="15" fill="rgb(209,50,18)" fg:x="65385" fg:w="72505"/><text x="26.5053%" y="847.50">futures_util::future::future::FutureExt::poll_u..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (72,505 samples, 29.11%)</title><rect x="26.2553%" y="821" width="29.1144%" height="15" fill="rgb(250,19,35)" fg:x="65385" fg:w="72505"/><text x="26.5053%" y="831.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Fut..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (72,505 samples, 29.11%)</title><rect x="26.2553%" y="805" width="29.1144%" height="15" fill="rgb(253,107,29)" fg:x="65385" fg:w="72505"/><text x="26.5053%" y="815.50">&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; ..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (423 samples, 0.17%)</title><rect x="55.1999%" y="789" width="0.1699%" height="15" fill="rgb(252,179,29)" fg:x="137467" fg:w="423"/><text x="55.4499%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (150 samples, 0.06%)</title><rect x="55.3095%" y="773" width="0.0602%" height="15" fill="rgb(238,194,6)" fg:x="137740" fg:w="150"/><text x="55.5595%" y="783.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (150 samples, 0.06%)</title><rect x="55.3095%" y="757" width="0.0602%" height="15" fill="rgb(238,164,29)" fg:x="137740" fg:w="150"/><text x="55.5595%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt;&gt; (141 samples, 0.06%)</title><rect x="55.3131%" y="741" width="0.0566%" height="15" fill="rgb(224,25,9)" fg:x="137749" fg:w="141"/><text x="55.5631%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (141 samples, 0.06%)</title><rect x="55.3131%" y="725" width="0.0566%" height="15" fill="rgb(244,153,23)" fg:x="137749" fg:w="141"/><text x="55.5631%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (141 samples, 0.06%)</title><rect x="55.3131%" y="709" width="0.0566%" height="15" fill="rgb(212,203,14)" fg:x="137749" fg:w="141"/><text x="55.5631%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (172 samples, 0.07%)</title><rect x="55.3697%" y="853" width="0.0691%" height="15" fill="rgb(220,164,20)" fg:x="137890" fg:w="172"/><text x="55.6197%" y="863.50"></text></g><g><title>core::ptr::swap (171 samples, 0.07%)</title><rect x="55.3701%" y="837" width="0.0687%" height="15" fill="rgb(222,203,48)" fg:x="137891" fg:w="171"/><text x="55.6201%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (158 samples, 0.06%)</title><rect x="55.3753%" y="821" width="0.0634%" height="15" fill="rgb(215,159,22)" fg:x="137904" fg:w="158"/><text x="55.6253%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (68 samples, 0.03%)</title><rect x="55.4404%" y="789" width="0.0273%" height="15" fill="rgb(216,183,47)" fg:x="138066" fg:w="68"/><text x="55.6904%" y="799.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (68 samples, 0.03%)</title><rect x="55.4404%" y="773" width="0.0273%" height="15" fill="rgb(229,195,25)" fg:x="138066" fg:w="68"/><text x="55.6904%" y="783.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (68 samples, 0.03%)</title><rect x="55.4404%" y="757" width="0.0273%" height="15" fill="rgb(224,132,51)" fg:x="138066" fg:w="68"/><text x="55.6904%" y="767.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (73,425 samples, 29.48%)</title><rect x="25.9947%" y="901" width="29.4838%" height="15" fill="rgb(240,63,7)" fg:x="64736" fg:w="73425"/><text x="26.2447%" y="911.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as co..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (73,425 samples, 29.48%)</title><rect x="25.9947%" y="885" width="29.4838%" height="15" fill="rgb(249,182,41)" fg:x="64736" fg:w="73425"/><text x="26.2447%" y="895.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{c..</text></g><g><title>futures_util::async_await::random::shuffle (271 samples, 0.11%)</title><rect x="55.3697%" y="869" width="0.1088%" height="15" fill="rgb(243,47,26)" fg:x="137890" fg:w="271"/><text x="55.6197%" y="879.50"></text></g><g><title>futures_util::async_await::random::gen_index (99 samples, 0.04%)</title><rect x="55.4388%" y="853" width="0.0398%" height="15" fill="rgb(233,48,2)" fg:x="138062" fg:w="99"/><text x="55.6888%" y="863.50"></text></g><g><title>futures_util::async_await::random::random (95 samples, 0.04%)</title><rect x="55.4404%" y="837" width="0.0381%" height="15" fill="rgb(244,165,34)" fg:x="138066" fg:w="95"/><text x="55.6904%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (95 samples, 0.04%)</title><rect x="55.4404%" y="821" width="0.0381%" height="15" fill="rgb(207,89,7)" fg:x="138066" fg:w="95"/><text x="55.6904%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (95 samples, 0.04%)</title><rect x="55.4404%" y="805" width="0.0381%" height="15" fill="rgb(244,117,36)" fg:x="138066" fg:w="95"/><text x="55.6904%" y="815.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (27 samples, 0.01%)</title><rect x="55.4677%" y="789" width="0.0108%" height="15" fill="rgb(226,144,34)" fg:x="138134" fg:w="27"/><text x="55.7177%" y="799.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (127 samples, 0.05%)</title><rect x="55.4785%" y="901" width="0.0510%" height="15" fill="rgb(213,23,19)" fg:x="138161" fg:w="127"/><text x="55.7285%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (127 samples, 0.05%)</title><rect x="55.4785%" y="885" width="0.0510%" height="15" fill="rgb(217,75,12)" fg:x="138161" fg:w="127"/><text x="55.7285%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (127 samples, 0.05%)</title><rect x="55.4785%" y="869" width="0.0510%" height="15" fill="rgb(224,159,17)" fg:x="138161" fg:w="127"/><text x="55.7285%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (121 samples, 0.05%)</title><rect x="55.4810%" y="853" width="0.0486%" height="15" fill="rgb(217,118,1)" fg:x="138167" fg:w="121"/><text x="55.7310%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (111 samples, 0.04%)</title><rect x="55.4850%" y="837" width="0.0446%" height="15" fill="rgb(232,180,48)" fg:x="138177" fg:w="111"/><text x="55.7350%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (111 samples, 0.04%)</title><rect x="55.4850%" y="821" width="0.0446%" height="15" fill="rgb(230,27,33)" fg:x="138177" fg:w="111"/><text x="55.7350%" y="831.50"></text></g><g><title>alloc::alloc::alloc (76 samples, 0.03%)</title><rect x="55.4990%" y="805" width="0.0305%" height="15" fill="rgb(205,31,21)" fg:x="138212" fg:w="76"/><text x="55.7490%" y="815.50"></text></g><g><title>__rust_alloc (76 samples, 0.03%)</title><rect x="55.4990%" y="789" width="0.0305%" height="15" fill="rgb(253,59,4)" fg:x="138212" fg:w="76"/><text x="55.7490%" y="799.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (76 samples, 0.03%)</title><rect x="55.4990%" y="773" width="0.0305%" height="15" fill="rgb(224,201,9)" fg:x="138212" fg:w="76"/><text x="55.7490%" y="783.50"></text></g><g><title>_rjem_malloc (75 samples, 0.03%)</title><rect x="55.4994%" y="757" width="0.0301%" height="15" fill="rgb(229,206,30)" fg:x="138213" fg:w="75"/><text x="55.7494%" y="767.50"></text></g><g><title>imalloc_fastpath (74 samples, 0.03%)</title><rect x="55.4998%" y="741" width="0.0297%" height="15" fill="rgb(212,67,47)" fg:x="138214" fg:w="74"/><text x="55.7498%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (41 samples, 0.02%)</title><rect x="55.5324%" y="901" width="0.0165%" height="15" fill="rgb(211,96,50)" fg:x="138295" fg:w="41"/><text x="55.7824%" y="911.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (36 samples, 0.01%)</title><rect x="56.0628%" y="853" width="0.0145%" height="15" fill="rgb(252,114,18)" fg:x="139616" fg:w="36"/><text x="56.3128%" y="863.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (97 samples, 0.04%)</title><rect x="56.0415%" y="869" width="0.0390%" height="15" fill="rgb(223,58,37)" fg:x="139563" fg:w="97"/><text x="56.2915%" y="879.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (152 samples, 0.06%)</title><rect x="56.0805%" y="869" width="0.0610%" height="15" fill="rgb(237,70,4)" fg:x="139660" fg:w="152"/><text x="56.3305%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (99 samples, 0.04%)</title><rect x="56.1018%" y="853" width="0.0398%" height="15" fill="rgb(244,85,46)" fg:x="139713" fg:w="99"/><text x="56.3518%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (94 samples, 0.04%)</title><rect x="56.1038%" y="837" width="0.0377%" height="15" fill="rgb(223,39,52)" fg:x="139718" fg:w="94"/><text x="56.3538%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (67 samples, 0.03%)</title><rect x="56.1146%" y="821" width="0.0269%" height="15" fill="rgb(218,200,14)" fg:x="139745" fg:w="67"/><text x="56.3646%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (27 samples, 0.01%)</title><rect x="56.1307%" y="805" width="0.0108%" height="15" fill="rgb(208,171,16)" fg:x="139785" fg:w="27"/><text x="56.3807%" y="815.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (1,477 samples, 0.59%)</title><rect x="55.5488%" y="901" width="0.5931%" height="15" fill="rgb(234,200,18)" fg:x="138336" fg:w="1477"/><text x="55.7988%" y="911.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (915 samples, 0.37%)</title><rect x="55.7745%" y="885" width="0.3674%" height="15" fill="rgb(228,45,11)" fg:x="138898" fg:w="915"/><text x="56.0245%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (105 samples, 0.04%)</title><rect x="56.4387%" y="869" width="0.0422%" height="15" fill="rgb(237,182,11)" fg:x="140552" fg:w="105"/><text x="56.6887%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (105 samples, 0.04%)</title><rect x="56.4387%" y="853" width="0.0422%" height="15" fill="rgb(241,175,49)" fg:x="140552" fg:w="105"/><text x="56.6887%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.02%)</title><rect x="56.5125%" y="741" width="0.0217%" height="15" fill="rgb(247,38,35)" fg:x="140736" fg:w="54"/><text x="56.7625%" y="751.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (42 samples, 0.02%)</title><rect x="56.5174%" y="725" width="0.0169%" height="15" fill="rgb(228,39,49)" fg:x="140748" fg:w="42"/><text x="56.7674%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (30 samples, 0.01%)</title><rect x="56.5535%" y="677" width="0.0120%" height="15" fill="rgb(226,101,26)" fg:x="140838" fg:w="30"/><text x="56.8035%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.01%)</title><rect x="56.5535%" y="661" width="0.0120%" height="15" fill="rgb(206,141,19)" fg:x="140838" fg:w="30"/><text x="56.8035%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (30 samples, 0.01%)</title><rect x="56.5655%" y="677" width="0.0120%" height="15" fill="rgb(211,200,13)" fg:x="140868" fg:w="30"/><text x="56.8155%" y="687.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (28 samples, 0.01%)</title><rect x="56.5663%" y="661" width="0.0112%" height="15" fill="rgb(241,121,6)" fg:x="140870" fg:w="28"/><text x="56.8163%" y="671.50"></text></g><g><title>clock_gettime (27 samples, 0.01%)</title><rect x="56.5667%" y="645" width="0.0108%" height="15" fill="rgb(234,221,29)" fg:x="140871" fg:w="27"/><text x="56.8167%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (92 samples, 0.04%)</title><rect x="56.5503%" y="709" width="0.0369%" height="15" fill="rgb(229,136,5)" fg:x="140830" fg:w="92"/><text x="56.8003%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (92 samples, 0.04%)</title><rect x="56.5503%" y="693" width="0.0369%" height="15" fill="rgb(238,36,11)" fg:x="140830" fg:w="92"/><text x="56.8003%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (274 samples, 0.11%)</title><rect x="56.5125%" y="789" width="0.1100%" height="15" fill="rgb(251,55,41)" fg:x="140736" fg:w="274"/><text x="56.7625%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (274 samples, 0.11%)</title><rect x="56.5125%" y="773" width="0.1100%" height="15" fill="rgb(242,34,40)" fg:x="140736" fg:w="274"/><text x="56.7625%" y="783.50"></text></g><g><title>tokio::runtime::context::with_scheduler (274 samples, 0.11%)</title><rect x="56.5125%" y="757" width="0.1100%" height="15" fill="rgb(215,42,17)" fg:x="140736" fg:w="274"/><text x="56.7625%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (220 samples, 0.09%)</title><rect x="56.5342%" y="741" width="0.0883%" height="15" fill="rgb(207,44,46)" fg:x="140790" fg:w="220"/><text x="56.7842%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (192 samples, 0.08%)</title><rect x="56.5455%" y="725" width="0.0771%" height="15" fill="rgb(211,206,28)" fg:x="140818" fg:w="192"/><text x="56.7955%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (41 samples, 0.02%)</title><rect x="56.6061%" y="709" width="0.0165%" height="15" fill="rgb(237,167,16)" fg:x="140969" fg:w="41"/><text x="56.8561%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (35 samples, 0.01%)</title><rect x="56.6085%" y="693" width="0.0141%" height="15" fill="rgb(233,66,6)" fg:x="140975" fg:w="35"/><text x="56.8585%" y="703.50"></text></g><g><title>tokio::runtime::task::raw::schedule (50 samples, 0.02%)</title><rect x="56.6226%" y="789" width="0.0201%" height="15" fill="rgb(246,123,29)" fg:x="141010" fg:w="50"/><text x="56.8726%" y="799.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (25 samples, 0.01%)</title><rect x="56.6446%" y="757" width="0.0100%" height="15" fill="rgb(209,62,40)" fg:x="141065" fg:w="25"/><text x="56.8946%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::load (96 samples, 0.04%)</title><rect x="56.6607%" y="725" width="0.0385%" height="15" fill="rgb(218,4,25)" fg:x="141105" fg:w="96"/><text x="56.9107%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (96 samples, 0.04%)</title><rect x="56.6607%" y="709" width="0.0385%" height="15" fill="rgb(253,91,49)" fg:x="141105" fg:w="96"/><text x="56.9107%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (96 samples, 0.04%)</title><rect x="56.6607%" y="693" width="0.0385%" height="15" fill="rgb(228,155,29)" fg:x="141105" fg:w="96"/><text x="56.9107%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (478 samples, 0.19%)</title><rect x="56.5125%" y="805" width="0.1919%" height="15" fill="rgb(243,57,37)" fg:x="140736" fg:w="478"/><text x="56.7625%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (154 samples, 0.06%)</title><rect x="56.6426%" y="789" width="0.0618%" height="15" fill="rgb(244,167,17)" fg:x="141060" fg:w="154"/><text x="56.8926%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (154 samples, 0.06%)</title><rect x="56.6426%" y="773" width="0.0618%" height="15" fill="rgb(207,181,38)" fg:x="141060" fg:w="154"/><text x="56.8926%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (124 samples, 0.05%)</title><rect x="56.6547%" y="757" width="0.0498%" height="15" fill="rgb(211,8,23)" fg:x="141090" fg:w="124"/><text x="56.9047%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (124 samples, 0.05%)</title><rect x="56.6547%" y="741" width="0.0498%" height="15" fill="rgb(235,11,44)" fg:x="141090" fg:w="124"/><text x="56.9047%" y="751.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (513 samples, 0.21%)</title><rect x="56.5033%" y="821" width="0.2060%" height="15" fill="rgb(248,18,52)" fg:x="140713" fg:w="513"/><text x="56.7533%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (54 samples, 0.02%)</title><rect x="56.7093%" y="821" width="0.0217%" height="15" fill="rgb(208,4,7)" fg:x="141226" fg:w="54"/><text x="56.9593%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (71 samples, 0.03%)</title><rect x="56.7362%" y="805" width="0.0285%" height="15" fill="rgb(240,17,39)" fg:x="141293" fg:w="71"/><text x="56.9862%" y="815.50"></text></g><g><title>core::ptr::read (66 samples, 0.03%)</title><rect x="56.7382%" y="789" width="0.0265%" height="15" fill="rgb(207,170,3)" fg:x="141298" fg:w="66"/><text x="56.9882%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (87 samples, 0.03%)</title><rect x="56.7310%" y="821" width="0.0349%" height="15" fill="rgb(236,100,52)" fg:x="141280" fg:w="87"/><text x="56.9810%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (119 samples, 0.05%)</title><rect x="56.7703%" y="805" width="0.0478%" height="15" fill="rgb(246,78,51)" fg:x="141378" fg:w="119"/><text x="57.0203%" y="815.50"></text></g><g><title>core::ptr::write (116 samples, 0.05%)</title><rect x="56.7715%" y="789" width="0.0466%" height="15" fill="rgb(211,17,15)" fg:x="141381" fg:w="116"/><text x="57.0215%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (149 samples, 0.06%)</title><rect x="56.7659%" y="821" width="0.0598%" height="15" fill="rgb(209,59,46)" fg:x="141367" fg:w="149"/><text x="57.0159%" y="831.50"></text></g><g><title>core::mem::drop (57 samples, 0.02%)</title><rect x="56.8257%" y="821" width="0.0229%" height="15" fill="rgb(210,92,25)" fg:x="141516" fg:w="57"/><text x="57.0757%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (57 samples, 0.02%)</title><rect x="56.8257%" y="805" width="0.0229%" height="15" fill="rgb(238,174,52)" fg:x="141516" fg:w="57"/><text x="57.0757%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.02%)</title><rect x="56.8257%" y="789" width="0.0229%" height="15" fill="rgb(230,73,7)" fg:x="141516" fg:w="57"/><text x="57.0757%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (57 samples, 0.02%)</title><rect x="56.8257%" y="773" width="0.0229%" height="15" fill="rgb(243,124,40)" fg:x="141516" fg:w="57"/><text x="57.0757%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (56 samples, 0.02%)</title><rect x="56.8261%" y="757" width="0.0225%" height="15" fill="rgb(244,170,11)" fg:x="141517" fg:w="56"/><text x="57.0761%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_swap (56 samples, 0.02%)</title><rect x="56.8261%" y="741" width="0.0225%" height="15" fill="rgb(207,114,54)" fg:x="141517" fg:w="56"/><text x="57.0761%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (40 samples, 0.02%)</title><rect x="56.8603%" y="789" width="0.0161%" height="15" fill="rgb(205,42,20)" fg:x="141602" fg:w="40"/><text x="57.1103%" y="799.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (109 samples, 0.04%)</title><rect x="56.8868%" y="773" width="0.0438%" height="15" fill="rgb(230,30,28)" fg:x="141668" fg:w="109"/><text x="57.1368%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (109 samples, 0.04%)</title><rect x="56.8868%" y="757" width="0.0438%" height="15" fill="rgb(205,73,54)" fg:x="141668" fg:w="109"/><text x="57.1368%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (181 samples, 0.07%)</title><rect x="56.8583%" y="821" width="0.0727%" height="15" fill="rgb(254,227,23)" fg:x="141597" fg:w="181"/><text x="57.1083%" y="831.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (178 samples, 0.07%)</title><rect x="56.8595%" y="805" width="0.0715%" height="15" fill="rgb(228,202,34)" fg:x="141600" fg:w="178"/><text x="57.1095%" y="815.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (117 samples, 0.05%)</title><rect x="56.8840%" y="789" width="0.0470%" height="15" fill="rgb(222,225,37)" fg:x="141661" fg:w="117"/><text x="57.1340%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (326 samples, 0.13%)</title><rect x="56.9354%" y="821" width="0.1309%" height="15" fill="rgb(221,14,54)" fg:x="141789" fg:w="326"/><text x="57.1854%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (326 samples, 0.13%)</title><rect x="56.9354%" y="805" width="0.1309%" height="15" fill="rgb(254,102,2)" fg:x="141789" fg:w="326"/><text x="57.1854%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (313 samples, 0.13%)</title><rect x="56.9406%" y="789" width="0.1257%" height="15" fill="rgb(232,104,17)" fg:x="141802" fg:w="313"/><text x="57.1906%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (311 samples, 0.12%)</title><rect x="56.9414%" y="773" width="0.1249%" height="15" fill="rgb(250,220,14)" fg:x="141804" fg:w="311"/><text x="57.1914%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (311 samples, 0.12%)</title><rect x="56.9414%" y="757" width="0.1249%" height="15" fill="rgb(241,158,9)" fg:x="141804" fg:w="311"/><text x="57.1914%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (45 samples, 0.02%)</title><rect x="57.0663%" y="821" width="0.0181%" height="15" fill="rgb(246,9,43)" fg:x="142115" fg:w="45"/><text x="57.3163%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (45 samples, 0.02%)</title><rect x="57.0663%" y="805" width="0.0181%" height="15" fill="rgb(206,73,33)" fg:x="142115" fg:w="45"/><text x="57.3163%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (45 samples, 0.02%)</title><rect x="57.0663%" y="789" width="0.0181%" height="15" fill="rgb(222,79,8)" fg:x="142115" fg:w="45"/><text x="57.3163%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (548 samples, 0.22%)</title><rect x="57.0932%" y="773" width="0.2200%" height="15" fill="rgb(234,8,54)" fg:x="142182" fg:w="548"/><text x="57.3432%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (548 samples, 0.22%)</title><rect x="57.0932%" y="757" width="0.2200%" height="15" fill="rgb(209,134,38)" fg:x="142182" fg:w="548"/><text x="57.3432%" y="767.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (2,072 samples, 0.83%)</title><rect x="56.4820%" y="869" width="0.8320%" height="15" fill="rgb(230,127,29)" fg:x="140660" fg:w="2072"/><text x="56.7320%" y="879.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (2,061 samples, 0.83%)</title><rect x="56.4864%" y="853" width="0.8276%" height="15" fill="rgb(242,44,41)" fg:x="140671" fg:w="2061"/><text x="56.7364%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (2,061 samples, 0.83%)</title><rect x="56.4864%" y="837" width="0.8276%" height="15" fill="rgb(222,56,43)" fg:x="140671" fg:w="2061"/><text x="56.7364%" y="847.50"></text></g><g><title>flume::wait_lock (572 samples, 0.23%)</title><rect x="57.0843%" y="821" width="0.2297%" height="15" fill="rgb(238,39,47)" fg:x="142160" fg:w="572"/><text x="57.3343%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (571 samples, 0.23%)</title><rect x="57.0847%" y="805" width="0.2293%" height="15" fill="rgb(226,79,43)" fg:x="142161" fg:w="571"/><text x="57.3347%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (554 samples, 0.22%)</title><rect x="57.0916%" y="789" width="0.2225%" height="15" fill="rgb(242,105,53)" fg:x="142178" fg:w="554"/><text x="57.3416%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="57.3522%" y="773" width="0.0128%" height="15" fill="rgb(251,132,46)" fg:x="142827" fg:w="32"/><text x="57.6022%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (32 samples, 0.01%)</title><rect x="57.3522%" y="757" width="0.0128%" height="15" fill="rgb(231,77,14)" fg:x="142827" fg:w="32"/><text x="57.6022%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (200 samples, 0.08%)</title><rect x="57.3650%" y="757" width="0.0803%" height="15" fill="rgb(240,135,9)" fg:x="142859" fg:w="200"/><text x="57.6150%" y="767.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (200 samples, 0.08%)</title><rect x="57.3650%" y="741" width="0.0803%" height="15" fill="rgb(248,109,14)" fg:x="142859" fg:w="200"/><text x="57.6150%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (200 samples, 0.08%)</title><rect x="57.3650%" y="725" width="0.0803%" height="15" fill="rgb(227,146,52)" fg:x="142859" fg:w="200"/><text x="57.6150%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (200 samples, 0.08%)</title><rect x="57.3650%" y="709" width="0.0803%" height="15" fill="rgb(232,54,3)" fg:x="142859" fg:w="200"/><text x="57.6150%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (209 samples, 0.08%)</title><rect x="57.3650%" y="773" width="0.0839%" height="15" fill="rgb(229,201,43)" fg:x="142859" fg:w="209"/><text x="57.6150%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (271 samples, 0.11%)</title><rect x="57.4534%" y="773" width="0.1088%" height="15" fill="rgb(252,161,33)" fg:x="143079" fg:w="271"/><text x="57.7034%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (271 samples, 0.11%)</title><rect x="57.4534%" y="757" width="0.1088%" height="15" fill="rgb(226,146,40)" fg:x="143079" fg:w="271"/><text x="57.7034%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (271 samples, 0.11%)</title><rect x="57.4534%" y="741" width="0.1088%" height="15" fill="rgb(219,47,25)" fg:x="143079" fg:w="271"/><text x="57.7034%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (646 samples, 0.26%)</title><rect x="57.3140%" y="869" width="0.2594%" height="15" fill="rgb(250,135,13)" fg:x="142732" fg:w="646"/><text x="57.5640%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (646 samples, 0.26%)</title><rect x="57.3140%" y="853" width="0.2594%" height="15" fill="rgb(219,229,18)" fg:x="142732" fg:w="646"/><text x="57.5640%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (646 samples, 0.26%)</title><rect x="57.3140%" y="837" width="0.2594%" height="15" fill="rgb(217,152,27)" fg:x="142732" fg:w="646"/><text x="57.5640%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (560 samples, 0.22%)</title><rect x="57.3486%" y="821" width="0.2249%" height="15" fill="rgb(225,71,47)" fg:x="142818" fg:w="560"/><text x="57.5986%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (560 samples, 0.22%)</title><rect x="57.3486%" y="805" width="0.2249%" height="15" fill="rgb(220,139,14)" fg:x="142818" fg:w="560"/><text x="57.5986%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (560 samples, 0.22%)</title><rect x="57.3486%" y="789" width="0.2249%" height="15" fill="rgb(247,54,32)" fg:x="142818" fg:w="560"/><text x="57.5986%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (28 samples, 0.01%)</title><rect x="57.5622%" y="773" width="0.0112%" height="15" fill="rgb(252,131,39)" fg:x="143350" fg:w="28"/><text x="57.8122%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (28 samples, 0.01%)</title><rect x="57.5622%" y="757" width="0.0112%" height="15" fill="rgb(210,108,39)" fg:x="143350" fg:w="28"/><text x="57.8122%" y="767.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (80,906 samples, 32.49%)</title><rect x="25.1113%" y="981" width="32.4878%" height="15" fill="rgb(205,23,29)" fg:x="62536" fg:w="80906"/><text x="25.3613%" y="991.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (80,906 samples, 32.49%)</title><rect x="25.1113%" y="965" width="32.4878%" height="15" fill="rgb(246,139,46)" fg:x="62536" fg:w="80906"/><text x="25.3613%" y="975.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::fu..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (80,906 samples, 32.49%)</title><rect x="25.1113%" y="949" width="32.4878%" height="15" fill="rgb(250,81,26)" fg:x="62536" fg:w="80906"/><text x="25.3613%" y="959.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as cor..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (80,835 samples, 32.46%)</title><rect x="25.1398%" y="933" width="32.4593%" height="15" fill="rgb(214,104,7)" fg:x="62607" fg:w="80835"/><text x="25.3898%" y="943.50">wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (80,527 samples, 32.34%)</title><rect x="25.2635%" y="917" width="32.3356%" height="15" fill="rgb(233,189,8)" fg:x="62915" fg:w="80527"/><text x="25.5135%" y="927.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closur..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::server_handle_packet::_{{closure}} (3,623 samples, 1.45%)</title><rect x="56.1443%" y="901" width="1.4548%" height="15" fill="rgb(228,141,17)" fg:x="139819" fg:w="3623"/><text x="56.3943%" y="911.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (3,022 samples, 1.21%)</title><rect x="56.3856%" y="885" width="1.2135%" height="15" fill="rgb(247,157,1)" fg:x="140420" fg:w="3022"/><text x="56.6356%" y="895.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (64 samples, 0.03%)</title><rect x="57.5734%" y="869" width="0.0257%" height="15" fill="rgb(249,225,5)" fg:x="143378" fg:w="64"/><text x="57.8234%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (32 samples, 0.01%)</title><rect x="57.5991%" y="981" width="0.0128%" height="15" fill="rgb(242,55,13)" fg:x="143442" fg:w="32"/><text x="57.8491%" y="991.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (80,966 samples, 32.51%)</title><rect x="25.1109%" y="1029" width="32.5119%" height="15" fill="rgb(230,49,50)" fg:x="62535" fg:w="80966"/><text x="25.3609%" y="1039.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core..</text></g><g><title>tokio::runtime::coop::with_unconstrained (80,965 samples, 32.51%)</title><rect x="25.1113%" y="1013" width="32.5115%" height="15" fill="rgb(241,111,38)" fg:x="62536" fg:w="80965"/><text x="25.3613%" y="1023.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (80,965 samples, 32.51%)</title><rect x="25.1113%" y="997" width="32.5115%" height="15" fill="rgb(252,155,4)" fg:x="62536" fg:w="80965"/><text x="25.3613%" y="1007.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::context::budget (27 samples, 0.01%)</title><rect x="57.6120%" y="981" width="0.0108%" height="15" fill="rgb(212,69,32)" fg:x="143474" fg:w="27"/><text x="57.8620%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.01%)</title><rect x="57.6120%" y="965" width="0.0108%" height="15" fill="rgb(243,107,47)" fg:x="143474" fg:w="27"/><text x="57.8620%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (147 samples, 0.06%)</title><rect x="57.6228%" y="965" width="0.0590%" height="15" fill="rgb(247,130,12)" fg:x="143501" fg:w="147"/><text x="57.8728%" y="975.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (147 samples, 0.06%)</title><rect x="57.6228%" y="949" width="0.0590%" height="15" fill="rgb(233,74,16)" fg:x="143501" fg:w="147"/><text x="57.8728%" y="959.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (147 samples, 0.06%)</title><rect x="57.6228%" y="933" width="0.0590%" height="15" fill="rgb(208,58,18)" fg:x="143501" fg:w="147"/><text x="57.8728%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (133 samples, 0.05%)</title><rect x="57.6284%" y="917" width="0.0534%" height="15" fill="rgb(242,225,1)" fg:x="143515" fg:w="133"/><text x="57.8784%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (182 samples, 0.07%)</title><rect x="57.6228%" y="1029" width="0.0731%" height="15" fill="rgb(249,39,40)" fg:x="143501" fg:w="182"/><text x="57.8728%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (182 samples, 0.07%)</title><rect x="57.6228%" y="1013" width="0.0731%" height="15" fill="rgb(207,72,44)" fg:x="143501" fg:w="182"/><text x="57.8728%" y="1023.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (182 samples, 0.07%)</title><rect x="57.6228%" y="997" width="0.0731%" height="15" fill="rgb(215,193,12)" fg:x="143501" fg:w="182"/><text x="57.8728%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (182 samples, 0.07%)</title><rect x="57.6228%" y="981" width="0.0731%" height="15" fill="rgb(248,41,39)" fg:x="143501" fg:w="182"/><text x="57.8728%" y="991.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (35 samples, 0.01%)</title><rect x="57.6819%" y="965" width="0.0141%" height="15" fill="rgb(253,85,4)" fg:x="143648" fg:w="35"/><text x="57.9319%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (35 samples, 0.01%)</title><rect x="57.6819%" y="949" width="0.0141%" height="15" fill="rgb(243,70,31)" fg:x="143648" fg:w="35"/><text x="57.9319%" y="959.50"></text></g><g><title>core::mem::replace (35 samples, 0.01%)</title><rect x="57.6819%" y="933" width="0.0141%" height="15" fill="rgb(253,195,26)" fg:x="143648" fg:w="35"/><text x="57.9319%" y="943.50"></text></g><g><title>core::ptr::write (35 samples, 0.01%)</title><rect x="57.6819%" y="917" width="0.0141%" height="15" fill="rgb(243,42,11)" fg:x="143648" fg:w="35"/><text x="57.9319%" y="927.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::listener_mut (349 samples, 0.14%)</title><rect x="58.2721%" y="965" width="0.1401%" height="15" fill="rgb(239,66,17)" fg:x="145118" fg:w="349"/><text x="58.5221%" y="975.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (349 samples, 0.14%)</title><rect x="58.2721%" y="949" width="0.1401%" height="15" fill="rgb(217,132,21)" fg:x="145118" fg:w="349"/><text x="58.5221%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (349 samples, 0.14%)</title><rect x="58.2721%" y="933" width="0.1401%" height="15" fill="rgb(252,202,21)" fg:x="145118" fg:w="349"/><text x="58.5221%" y="943.50"></text></g><g><title>&lt;event_listener::sys::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (126 samples, 0.05%)</title><rect x="58.7857%" y="917" width="0.0506%" height="15" fill="rgb(233,98,36)" fg:x="146397" fg:w="126"/><text x="59.0357%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (235 samples, 0.09%)</title><rect x="58.7857%" y="933" width="0.0944%" height="15" fill="rgb(216,153,54)" fg:x="146397" fg:w="235"/><text x="59.0357%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (109 samples, 0.04%)</title><rect x="58.8363%" y="917" width="0.0438%" height="15" fill="rgb(250,99,7)" fg:x="146523" fg:w="109"/><text x="59.0863%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (109 samples, 0.04%)</title><rect x="58.8363%" y="901" width="0.0438%" height="15" fill="rgb(207,56,50)" fg:x="146523" fg:w="109"/><text x="59.0863%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (103 samples, 0.04%)</title><rect x="58.8387%" y="885" width="0.0414%" height="15" fill="rgb(244,61,34)" fg:x="146529" fg:w="103"/><text x="59.0887%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (99 samples, 0.04%)</title><rect x="58.8403%" y="869" width="0.0398%" height="15" fill="rgb(241,50,38)" fg:x="146533" fg:w="99"/><text x="59.0903%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (99 samples, 0.04%)</title><rect x="58.8403%" y="853" width="0.0398%" height="15" fill="rgb(212,166,30)" fg:x="146533" fg:w="99"/><text x="59.0903%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (698 samples, 0.28%)</title><rect x="58.8925%" y="885" width="0.2803%" height="15" fill="rgb(249,127,32)" fg:x="146663" fg:w="698"/><text x="59.1425%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (698 samples, 0.28%)</title><rect x="58.8925%" y="869" width="0.2803%" height="15" fill="rgb(209,103,0)" fg:x="146663" fg:w="698"/><text x="59.1425%" y="879.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (2,247 samples, 0.90%)</title><rect x="58.2713%" y="981" width="0.9023%" height="15" fill="rgb(238,209,51)" fg:x="145116" fg:w="2247"/><text x="58.5213%" y="991.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (1,896 samples, 0.76%)</title><rect x="58.4123%" y="965" width="0.7613%" height="15" fill="rgb(237,56,23)" fg:x="145467" fg:w="1896"/><text x="58.6623%" y="975.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (1,013 samples, 0.41%)</title><rect x="58.7668%" y="949" width="0.4068%" height="15" fill="rgb(215,153,46)" fg:x="146350" fg:w="1013"/><text x="59.0168%" y="959.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (722 samples, 0.29%)</title><rect x="58.8837%" y="933" width="0.2899%" height="15" fill="rgb(224,49,31)" fg:x="146641" fg:w="722"/><text x="59.1337%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (722 samples, 0.29%)</title><rect x="58.8837%" y="917" width="0.2899%" height="15" fill="rgb(250,18,42)" fg:x="146641" fg:w="722"/><text x="59.1337%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (704 samples, 0.28%)</title><rect x="58.8909%" y="901" width="0.2827%" height="15" fill="rgb(215,176,39)" fg:x="146659" fg:w="704"/><text x="59.1409%" y="911.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (173 samples, 0.07%)</title><rect x="59.9771%" y="773" width="0.0695%" height="15" fill="rgb(223,77,29)" fg:x="149364" fg:w="173"/><text x="60.2271%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (37 samples, 0.01%)</title><rect x="60.0317%" y="757" width="0.0149%" height="15" fill="rgb(234,94,52)" fg:x="149500" fg:w="37"/><text x="60.2817%" y="767.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (502 samples, 0.20%)</title><rect x="60.0466%" y="773" width="0.2016%" height="15" fill="rgb(220,154,50)" fg:x="149537" fg:w="502"/><text x="60.2966%" y="783.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (25 samples, 0.01%)</title><rect x="60.2381%" y="757" width="0.0100%" height="15" fill="rgb(212,11,10)" fg:x="150014" fg:w="25"/><text x="60.4881%" y="767.50"></text></g><g><title>extent_recycle_extract (25 samples, 0.01%)</title><rect x="60.4999%" y="261" width="0.0100%" height="15" fill="rgb(205,166,19)" fg:x="150666" fg:w="25"/><text x="60.7499%" y="271.50"></text></g><g><title>pac_alloc_real (31 samples, 0.01%)</title><rect x="60.4991%" y="309" width="0.0124%" height="15" fill="rgb(244,198,16)" fg:x="150664" fg:w="31"/><text x="60.7491%" y="319.50"></text></g><g><title>_rjem_je_ecache_alloc (31 samples, 0.01%)</title><rect x="60.4991%" y="293" width="0.0124%" height="15" fill="rgb(219,69,12)" fg:x="150664" fg:w="31"/><text x="60.7491%" y="303.50"></text></g><g><title>extent_recycle (29 samples, 0.01%)</title><rect x="60.4999%" y="277" width="0.0116%" height="15" fill="rgb(245,30,7)" fg:x="150666" fg:w="29"/><text x="60.7499%" y="287.50"></text></g><g><title>arena_slab_alloc (49 samples, 0.02%)</title><rect x="60.4927%" y="373" width="0.0197%" height="15" fill="rgb(218,221,48)" fg:x="150648" fg:w="49"/><text x="60.7427%" y="383.50"></text></g><g><title>_rjem_je_pa_alloc (36 samples, 0.01%)</title><rect x="60.4979%" y="357" width="0.0145%" height="15" fill="rgb(216,66,15)" fg:x="150661" fg:w="36"/><text x="60.7479%" y="367.50"></text></g><g><title>pai_alloc (33 samples, 0.01%)</title><rect x="60.4991%" y="341" width="0.0133%" height="15" fill="rgb(226,122,50)" fg:x="150664" fg:w="33"/><text x="60.7491%" y="351.50"></text></g><g><title>pac_alloc_impl (33 samples, 0.01%)</title><rect x="60.4991%" y="325" width="0.0133%" height="15" fill="rgb(239,156,16)" fg:x="150664" fg:w="33"/><text x="60.7491%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (90 samples, 0.04%)</title><rect x="60.4875%" y="389" width="0.0361%" height="15" fill="rgb(224,27,38)" fg:x="150635" fg:w="90"/><text x="60.7375%" y="399.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (93 samples, 0.04%)</title><rect x="60.4871%" y="405" width="0.0373%" height="15" fill="rgb(224,39,27)" fg:x="150634" fg:w="93"/><text x="60.7371%" y="415.50"></text></g><g><title>_rjem_je_malloc_default (103 samples, 0.04%)</title><rect x="60.4863%" y="517" width="0.0414%" height="15" fill="rgb(215,92,29)" fg:x="150632" fg:w="103"/><text x="60.7363%" y="527.50"></text></g><g><title>imalloc (102 samples, 0.04%)</title><rect x="60.4867%" y="501" width="0.0410%" height="15" fill="rgb(207,159,16)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="511.50"></text></g><g><title>imalloc_body (102 samples, 0.04%)</title><rect x="60.4867%" y="485" width="0.0410%" height="15" fill="rgb(238,163,47)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="495.50"></text></g><g><title>imalloc_no_sample (102 samples, 0.04%)</title><rect x="60.4867%" y="469" width="0.0410%" height="15" fill="rgb(219,91,49)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="479.50"></text></g><g><title>iallocztm (102 samples, 0.04%)</title><rect x="60.4867%" y="453" width="0.0410%" height="15" fill="rgb(227,167,31)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="463.50"></text></g><g><title>arena_malloc (102 samples, 0.04%)</title><rect x="60.4867%" y="437" width="0.0410%" height="15" fill="rgb(234,80,54)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="447.50"></text></g><g><title>tcache_alloc_small (102 samples, 0.04%)</title><rect x="60.4867%" y="421" width="0.0410%" height="15" fill="rgb(212,114,2)" fg:x="150633" fg:w="102"/><text x="60.7367%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (114 samples, 0.05%)</title><rect x="60.4863%" y="677" width="0.0458%" height="15" fill="rgb(234,50,24)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (114 samples, 0.05%)</title><rect x="60.4863%" y="661" width="0.0458%" height="15" fill="rgb(221,68,8)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (114 samples, 0.05%)</title><rect x="60.4863%" y="645" width="0.0458%" height="15" fill="rgb(254,180,31)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (114 samples, 0.05%)</title><rect x="60.4863%" y="629" width="0.0458%" height="15" fill="rgb(247,130,50)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (114 samples, 0.05%)</title><rect x="60.4863%" y="613" width="0.0458%" height="15" fill="rgb(211,109,4)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (114 samples, 0.05%)</title><rect x="60.4863%" y="597" width="0.0458%" height="15" fill="rgb(238,50,21)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (114 samples, 0.05%)</title><rect x="60.4863%" y="581" width="0.0458%" height="15" fill="rgb(225,57,45)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="591.50"></text></g><g><title>alloc::alloc::alloc (114 samples, 0.05%)</title><rect x="60.4863%" y="565" width="0.0458%" height="15" fill="rgb(209,196,50)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="575.50"></text></g><g><title>__rust_alloc (114 samples, 0.05%)</title><rect x="60.4863%" y="549" width="0.0458%" height="15" fill="rgb(242,140,13)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (114 samples, 0.05%)</title><rect x="60.4863%" y="533" width="0.0458%" height="15" fill="rgb(217,111,7)" fg:x="150632" fg:w="114"/><text x="60.7363%" y="543.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (116 samples, 0.05%)</title><rect x="60.4863%" y="693" width="0.0466%" height="15" fill="rgb(253,193,51)" fg:x="150632" fg:w="116"/><text x="60.7363%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (133 samples, 0.05%)</title><rect x="60.4811%" y="741" width="0.0534%" height="15" fill="rgb(252,70,29)" fg:x="150619" fg:w="133"/><text x="60.7311%" y="751.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (133 samples, 0.05%)</title><rect x="60.4811%" y="725" width="0.0534%" height="15" fill="rgb(232,127,12)" fg:x="150619" fg:w="133"/><text x="60.7311%" y="735.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (133 samples, 0.05%)</title><rect x="60.4811%" y="709" width="0.0534%" height="15" fill="rgb(211,180,21)" fg:x="150619" fg:w="133"/><text x="60.7311%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (285 samples, 0.11%)</title><rect x="60.6240%" y="677" width="0.1144%" height="15" fill="rgb(229,72,13)" fg:x="150975" fg:w="285"/><text x="60.8740%" y="687.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (283 samples, 0.11%)</title><rect x="60.6248%" y="661" width="0.1136%" height="15" fill="rgb(240,211,49)" fg:x="150977" fg:w="283"/><text x="60.8748%" y="671.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (259 samples, 0.10%)</title><rect x="60.6344%" y="645" width="0.1040%" height="15" fill="rgb(219,149,40)" fg:x="151001" fg:w="259"/><text x="60.8844%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (259 samples, 0.10%)</title><rect x="60.6344%" y="629" width="0.1040%" height="15" fill="rgb(210,127,46)" fg:x="151001" fg:w="259"/><text x="60.8844%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (259 samples, 0.10%)</title><rect x="60.6344%" y="613" width="0.1040%" height="15" fill="rgb(220,106,7)" fg:x="151001" fg:w="259"/><text x="60.8844%" y="623.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (78 samples, 0.03%)</title><rect x="60.7385%" y="677" width="0.0313%" height="15" fill="rgb(249,31,22)" fg:x="151260" fg:w="78"/><text x="60.9885%" y="687.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (29 samples, 0.01%)</title><rect x="60.8107%" y="613" width="0.0116%" height="15" fill="rgb(253,1,49)" fg:x="151440" fg:w="29"/><text x="61.0607%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (118 samples, 0.05%)</title><rect x="60.8292%" y="613" width="0.0474%" height="15" fill="rgb(227,144,33)" fg:x="151486" fg:w="118"/><text x="61.0792%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (118 samples, 0.05%)</title><rect x="60.8292%" y="597" width="0.0474%" height="15" fill="rgb(249,163,44)" fg:x="151486" fg:w="118"/><text x="61.0792%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (118 samples, 0.05%)</title><rect x="60.8292%" y="581" width="0.0474%" height="15" fill="rgb(234,15,39)" fg:x="151486" fg:w="118"/><text x="61.0792%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (116 samples, 0.05%)</title><rect x="60.8300%" y="565" width="0.0466%" height="15" fill="rgb(207,66,16)" fg:x="151488" fg:w="116"/><text x="61.0800%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (116 samples, 0.05%)</title><rect x="60.8300%" y="549" width="0.0466%" height="15" fill="rgb(233,112,24)" fg:x="151488" fg:w="116"/><text x="61.0800%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 0.02%)</title><rect x="60.9011%" y="597" width="0.0197%" height="15" fill="rgb(230,90,22)" fg:x="151665" fg:w="49"/><text x="61.1511%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (47 samples, 0.02%)</title><rect x="60.9019%" y="581" width="0.0189%" height="15" fill="rgb(229,61,13)" fg:x="151667" fg:w="47"/><text x="61.1519%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (47 samples, 0.02%)</title><rect x="60.9019%" y="565" width="0.0189%" height="15" fill="rgb(225,57,24)" fg:x="151667" fg:w="47"/><text x="61.1519%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (145 samples, 0.06%)</title><rect x="60.9288%" y="581" width="0.0582%" height="15" fill="rgb(208,169,48)" fg:x="151734" fg:w="145"/><text x="61.1788%" y="591.50"></text></g><g><title>core::ptr::read (129 samples, 0.05%)</title><rect x="60.9352%" y="565" width="0.0518%" height="15" fill="rgb(244,218,51)" fg:x="151750" fg:w="129"/><text x="61.1852%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (169 samples, 0.07%)</title><rect x="60.9216%" y="597" width="0.0679%" height="15" fill="rgb(214,148,10)" fg:x="151716" fg:w="169"/><text x="61.1716%" y="607.50"></text></g><g><title>core::mem::drop (131 samples, 0.05%)</title><rect x="60.9922%" y="597" width="0.0526%" height="15" fill="rgb(225,174,27)" fg:x="151892" fg:w="131"/><text x="61.2422%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (131 samples, 0.05%)</title><rect x="60.9922%" y="581" width="0.0526%" height="15" fill="rgb(230,96,26)" fg:x="151892" fg:w="131"/><text x="61.2422%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.05%)</title><rect x="60.9922%" y="565" width="0.0526%" height="15" fill="rgb(232,10,30)" fg:x="151892" fg:w="131"/><text x="61.2422%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (122 samples, 0.05%)</title><rect x="60.9958%" y="549" width="0.0490%" height="15" fill="rgb(222,8,50)" fg:x="151901" fg:w="122"/><text x="61.2458%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (122 samples, 0.05%)</title><rect x="60.9958%" y="533" width="0.0490%" height="15" fill="rgb(213,81,27)" fg:x="151901" fg:w="122"/><text x="61.2458%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (122 samples, 0.05%)</title><rect x="60.9958%" y="517" width="0.0490%" height="15" fill="rgb(245,50,10)" fg:x="151901" fg:w="122"/><text x="61.2458%" y="527.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (61 samples, 0.02%)</title><rect x="61.0448%" y="597" width="0.0245%" height="15" fill="rgb(216,100,18)" fg:x="152023" fg:w="61"/><text x="61.2948%" y="607.50"></text></g><g><title>arena_slab_alloc (30 samples, 0.01%)</title><rect x="61.0814%" y="293" width="0.0120%" height="15" fill="rgb(236,147,54)" fg:x="152114" fg:w="30"/><text x="61.3314%" y="303.50"></text></g><g><title>_rjem_je_pa_alloc (25 samples, 0.01%)</title><rect x="61.0834%" y="277" width="0.0100%" height="15" fill="rgb(205,143,26)" fg:x="152119" fg:w="25"/><text x="61.3334%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (47 samples, 0.02%)</title><rect x="61.0794%" y="325" width="0.0189%" height="15" fill="rgb(236,26,9)" fg:x="152109" fg:w="47"/><text x="61.3294%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (46 samples, 0.02%)</title><rect x="61.0798%" y="309" width="0.0185%" height="15" fill="rgb(221,165,53)" fg:x="152110" fg:w="46"/><text x="61.3298%" y="319.50"></text></g><g><title>_rjem_je_malloc_default (51 samples, 0.02%)</title><rect x="61.0786%" y="437" width="0.0205%" height="15" fill="rgb(214,110,17)" fg:x="152107" fg:w="51"/><text x="61.3286%" y="447.50"></text></g><g><title>imalloc (50 samples, 0.02%)</title><rect x="61.0790%" y="421" width="0.0201%" height="15" fill="rgb(237,197,12)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="431.50"></text></g><g><title>imalloc_body (50 samples, 0.02%)</title><rect x="61.0790%" y="405" width="0.0201%" height="15" fill="rgb(205,84,17)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="415.50"></text></g><g><title>imalloc_no_sample (50 samples, 0.02%)</title><rect x="61.0790%" y="389" width="0.0201%" height="15" fill="rgb(237,18,45)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="399.50"></text></g><g><title>iallocztm (50 samples, 0.02%)</title><rect x="61.0790%" y="373" width="0.0201%" height="15" fill="rgb(221,87,14)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="383.50"></text></g><g><title>arena_malloc (50 samples, 0.02%)</title><rect x="61.0790%" y="357" width="0.0201%" height="15" fill="rgb(238,186,15)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="367.50"></text></g><g><title>tcache_alloc_small (50 samples, 0.02%)</title><rect x="61.0790%" y="341" width="0.0201%" height="15" fill="rgb(208,115,11)" fg:x="152108" fg:w="50"/><text x="61.3290%" y="351.50"></text></g><g><title>cache_bin_alloc_easy (27 samples, 0.01%)</title><rect x="61.1002%" y="405" width="0.0108%" height="15" fill="rgb(254,175,0)" fg:x="152161" fg:w="27"/><text x="61.3502%" y="415.50"></text></g><g><title>cache_bin_alloc_impl (27 samples, 0.01%)</title><rect x="61.1002%" y="389" width="0.0108%" height="15" fill="rgb(227,24,42)" fg:x="152161" fg:w="27"/><text x="61.3502%" y="399.50"></text></g><g><title>__rust_alloc (82 samples, 0.03%)</title><rect x="61.0786%" y="469" width="0.0329%" height="15" fill="rgb(223,211,37)" fg:x="152107" fg:w="82"/><text x="61.3286%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (82 samples, 0.03%)</title><rect x="61.0786%" y="453" width="0.0329%" height="15" fill="rgb(235,49,27)" fg:x="152107" fg:w="82"/><text x="61.3286%" y="463.50"></text></g><g><title>_rjem_malloc (31 samples, 0.01%)</title><rect x="61.0990%" y="437" width="0.0124%" height="15" fill="rgb(254,97,51)" fg:x="152158" fg:w="31"/><text x="61.3490%" y="447.50"></text></g><g><title>imalloc_fastpath (31 samples, 0.01%)</title><rect x="61.0990%" y="421" width="0.0124%" height="15" fill="rgb(249,51,40)" fg:x="152158" fg:w="31"/><text x="61.3490%" y="431.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (100 samples, 0.04%)</title><rect x="61.0717%" y="581" width="0.0402%" height="15" fill="rgb(210,128,45)" fg:x="152090" fg:w="100"/><text x="61.3217%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (100 samples, 0.04%)</title><rect x="61.0717%" y="565" width="0.0402%" height="15" fill="rgb(224,137,50)" fg:x="152090" fg:w="100"/><text x="61.3217%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (100 samples, 0.04%)</title><rect x="61.0717%" y="549" width="0.0402%" height="15" fill="rgb(242,15,9)" fg:x="152090" fg:w="100"/><text x="61.3217%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (83 samples, 0.03%)</title><rect x="61.0786%" y="533" width="0.0333%" height="15" fill="rgb(233,187,41)" fg:x="152107" fg:w="83"/><text x="61.3286%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (83 samples, 0.03%)</title><rect x="61.0786%" y="517" width="0.0333%" height="15" fill="rgb(227,2,29)" fg:x="152107" fg:w="83"/><text x="61.3286%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (83 samples, 0.03%)</title><rect x="61.0786%" y="501" width="0.0333%" height="15" fill="rgb(222,70,3)" fg:x="152107" fg:w="83"/><text x="61.3286%" y="511.50"></text></g><g><title>alloc::alloc::alloc (83 samples, 0.03%)</title><rect x="61.0786%" y="485" width="0.0333%" height="15" fill="rgb(213,11,42)" fg:x="152107" fg:w="83"/><text x="61.3286%" y="495.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (51 samples, 0.02%)</title><rect x="61.1119%" y="565" width="0.0205%" height="15" fill="rgb(225,150,9)" fg:x="152190" fg:w="51"/><text x="61.3619%" y="575.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (49 samples, 0.02%)</title><rect x="61.1127%" y="549" width="0.0197%" height="15" fill="rgb(230,162,45)" fg:x="152192" fg:w="49"/><text x="61.3627%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (27 samples, 0.01%)</title><rect x="61.1215%" y="533" width="0.0108%" height="15" fill="rgb(222,14,52)" fg:x="152214" fg:w="27"/><text x="61.3715%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.01%)</title><rect x="61.1215%" y="517" width="0.0108%" height="15" fill="rgb(254,198,14)" fg:x="152214" fg:w="27"/><text x="61.3715%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.01%)</title><rect x="61.1215%" y="501" width="0.0108%" height="15" fill="rgb(220,217,30)" fg:x="152214" fg:w="27"/><text x="61.3715%" y="511.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (166 samples, 0.07%)</title><rect x="61.0693%" y="597" width="0.0667%" height="15" fill="rgb(215,146,41)" fg:x="152084" fg:w="166"/><text x="61.3193%" y="607.50"></text></g><g><title>flume::async::AsyncSignal::new (60 samples, 0.02%)</title><rect x="61.1119%" y="581" width="0.0241%" height="15" fill="rgb(217,27,36)" fg:x="152190" fg:w="60"/><text x="61.3619%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (212 samples, 0.09%)</title><rect x="61.1420%" y="549" width="0.0851%" height="15" fill="rgb(219,218,39)" fg:x="152265" fg:w="212"/><text x="61.3920%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (212 samples, 0.09%)</title><rect x="61.1420%" y="533" width="0.0851%" height="15" fill="rgb(219,4,42)" fg:x="152265" fg:w="212"/><text x="61.3920%" y="543.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (846 samples, 0.34%)</title><rect x="60.8878%" y="613" width="0.3397%" height="15" fill="rgb(249,119,36)" fg:x="151632" fg:w="846"/><text x="61.1378%" y="623.50"></text></g><g><title>flume::wait_lock (228 samples, 0.09%)</title><rect x="61.1360%" y="597" width="0.0916%" height="15" fill="rgb(209,23,33)" fg:x="152250" fg:w="228"/><text x="61.3860%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (228 samples, 0.09%)</title><rect x="61.1360%" y="581" width="0.0916%" height="15" fill="rgb(211,10,0)" fg:x="152250" fg:w="228"/><text x="61.3860%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (216 samples, 0.09%)</title><rect x="61.1408%" y="565" width="0.0867%" height="15" fill="rgb(208,99,37)" fg:x="152262" fg:w="216"/><text x="61.3908%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (76 samples, 0.03%)</title><rect x="61.2344%" y="581" width="0.0305%" height="15" fill="rgb(213,132,31)" fg:x="152495" fg:w="76"/><text x="61.4844%" y="591.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (70 samples, 0.03%)</title><rect x="61.2368%" y="565" width="0.0281%" height="15" fill="rgb(243,129,40)" fg:x="152501" fg:w="70"/><text x="61.4868%" y="575.50"></text></g><g><title>core::ptr::read (69 samples, 0.03%)</title><rect x="61.2372%" y="549" width="0.0277%" height="15" fill="rgb(210,66,33)" fg:x="152502" fg:w="69"/><text x="61.4872%" y="559.50"></text></g><g><title>core::mem::drop (58 samples, 0.02%)</title><rect x="61.2649%" y="581" width="0.0233%" height="15" fill="rgb(209,189,4)" fg:x="152571" fg:w="58"/><text x="61.5149%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (58 samples, 0.02%)</title><rect x="61.2649%" y="565" width="0.0233%" height="15" fill="rgb(214,107,37)" fg:x="152571" fg:w="58"/><text x="61.5149%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.02%)</title><rect x="61.2649%" y="549" width="0.0233%" height="15" fill="rgb(245,88,54)" fg:x="152571" fg:w="58"/><text x="61.5149%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (48 samples, 0.02%)</title><rect x="61.2689%" y="533" width="0.0193%" height="15" fill="rgb(205,146,20)" fg:x="152581" fg:w="48"/><text x="61.5189%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (47 samples, 0.02%)</title><rect x="61.2693%" y="517" width="0.0189%" height="15" fill="rgb(220,161,25)" fg:x="152582" fg:w="47"/><text x="61.5193%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (47 samples, 0.02%)</title><rect x="61.2693%" y="501" width="0.0189%" height="15" fill="rgb(215,152,15)" fg:x="152582" fg:w="47"/><text x="61.5193%" y="511.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (52 samples, 0.02%)</title><rect x="61.2882%" y="581" width="0.0209%" height="15" fill="rgb(233,192,44)" fg:x="152629" fg:w="52"/><text x="61.5382%" y="591.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (316 samples, 0.13%)</title><rect x="61.2275%" y="613" width="0.1269%" height="15" fill="rgb(240,170,46)" fg:x="152478" fg:w="316"/><text x="61.4775%" y="623.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (316 samples, 0.13%)</title><rect x="61.2275%" y="597" width="0.1269%" height="15" fill="rgb(207,104,33)" fg:x="152478" fg:w="316"/><text x="61.4775%" y="607.50"></text></g><g><title>flume::wait_lock (112 samples, 0.04%)</title><rect x="61.3095%" y="581" width="0.0450%" height="15" fill="rgb(219,21,39)" fg:x="152682" fg:w="112"/><text x="61.5595%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.04%)</title><rect x="61.3103%" y="565" width="0.0442%" height="15" fill="rgb(214,133,29)" fg:x="152684" fg:w="110"/><text x="61.5603%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (107 samples, 0.04%)</title><rect x="61.3115%" y="549" width="0.0430%" height="15" fill="rgb(226,93,6)" fg:x="152687" fg:w="107"/><text x="61.5615%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (107 samples, 0.04%)</title><rect x="61.3115%" y="533" width="0.0430%" height="15" fill="rgb(252,222,34)" fg:x="152687" fg:w="107"/><text x="61.5615%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (107 samples, 0.04%)</title><rect x="61.3115%" y="517" width="0.0430%" height="15" fill="rgb(252,92,48)" fg:x="152687" fg:w="107"/><text x="61.5615%" y="527.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (1,464 samples, 0.59%)</title><rect x="60.7886%" y="645" width="0.5879%" height="15" fill="rgb(245,223,24)" fg:x="151385" fg:w="1464"/><text x="61.0386%" y="655.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (1,464 samples, 0.59%)</title><rect x="60.7886%" y="629" width="0.5879%" height="15" fill="rgb(205,176,3)" fg:x="151385" fg:w="1464"/><text x="61.0386%" y="639.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (55 samples, 0.02%)</title><rect x="61.3544%" y="613" width="0.0221%" height="15" fill="rgb(235,151,15)" fg:x="152794" fg:w="55"/><text x="61.6044%" y="623.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (36 samples, 0.01%)</title><rect x="61.3621%" y="597" width="0.0145%" height="15" fill="rgb(237,209,11)" fg:x="152813" fg:w="36"/><text x="61.6121%" y="607.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (36 samples, 0.01%)</title><rect x="61.3621%" y="581" width="0.0145%" height="15" fill="rgb(243,227,24)" fg:x="152813" fg:w="36"/><text x="61.6121%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (34 samples, 0.01%)</title><rect x="61.3629%" y="565" width="0.0137%" height="15" fill="rgb(239,193,16)" fg:x="152815" fg:w="34"/><text x="61.6129%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.01%)</title><rect x="61.3629%" y="549" width="0.0137%" height="15" fill="rgb(231,27,9)" fg:x="152815" fg:w="34"/><text x="61.6129%" y="559.50"></text></g><g><title>&lt;event_listener::sys::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.02%)</title><rect x="61.4865%" y="565" width="0.0169%" height="15" fill="rgb(219,169,10)" fg:x="153123" fg:w="42"/><text x="61.7365%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (145 samples, 0.06%)</title><rect x="61.4865%" y="581" width="0.0582%" height="15" fill="rgb(244,229,43)" fg:x="153123" fg:w="145"/><text x="61.7365%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (103 samples, 0.04%)</title><rect x="61.5034%" y="565" width="0.0414%" height="15" fill="rgb(254,38,20)" fg:x="153165" fg:w="103"/><text x="61.7534%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.04%)</title><rect x="61.5034%" y="549" width="0.0414%" height="15" fill="rgb(250,47,30)" fg:x="153165" fg:w="103"/><text x="61.7534%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (98 samples, 0.04%)</title><rect x="61.5054%" y="533" width="0.0394%" height="15" fill="rgb(224,124,36)" fg:x="153170" fg:w="98"/><text x="61.7554%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (95 samples, 0.04%)</title><rect x="61.5066%" y="517" width="0.0381%" height="15" fill="rgb(246,68,51)" fg:x="153173" fg:w="95"/><text x="61.7566%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (95 samples, 0.04%)</title><rect x="61.5066%" y="501" width="0.0381%" height="15" fill="rgb(253,43,49)" fg:x="153173" fg:w="95"/><text x="61.7566%" y="511.50"></text></g><g><title>event_listener::TaskRef::into_task (325 samples, 0.13%)</title><rect x="61.5452%" y="581" width="0.1305%" height="15" fill="rgb(219,54,36)" fg:x="153269" fg:w="325"/><text x="61.7952%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (325 samples, 0.13%)</title><rect x="61.5452%" y="565" width="0.1305%" height="15" fill="rgb(227,133,34)" fg:x="153269" fg:w="325"/><text x="61.7952%" y="575.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (291 samples, 0.12%)</title><rect x="61.5588%" y="549" width="0.1169%" height="15" fill="rgb(247,227,15)" fg:x="153303" fg:w="291"/><text x="61.8088%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (147 samples, 0.06%)</title><rect x="61.6166%" y="533" width="0.0590%" height="15" fill="rgb(229,96,14)" fg:x="153447" fg:w="147"/><text x="61.8666%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (147 samples, 0.06%)</title><rect x="61.6166%" y="517" width="0.0590%" height="15" fill="rgb(220,79,17)" fg:x="153447" fg:w="147"/><text x="61.8666%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (147 samples, 0.06%)</title><rect x="61.6166%" y="501" width="0.0590%" height="15" fill="rgb(205,131,53)" fg:x="153447" fg:w="147"/><text x="61.8666%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (1,002 samples, 0.40%)</title><rect x="61.3769%" y="629" width="0.4024%" height="15" fill="rgb(209,50,29)" fg:x="152850" fg:w="1002"/><text x="61.6269%" y="639.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (994 samples, 0.40%)</title><rect x="61.3801%" y="613" width="0.3991%" height="15" fill="rgb(245,86,46)" fg:x="152858" fg:w="994"/><text x="61.6301%" y="623.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (803 samples, 0.32%)</title><rect x="61.4568%" y="597" width="0.3224%" height="15" fill="rgb(235,66,46)" fg:x="153049" fg:w="803"/><text x="61.7068%" y="607.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (252 samples, 0.10%)</title><rect x="61.6781%" y="581" width="0.1012%" height="15" fill="rgb(232,148,31)" fg:x="153600" fg:w="252"/><text x="61.9281%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (252 samples, 0.10%)</title><rect x="61.6781%" y="565" width="0.1012%" height="15" fill="rgb(217,149,8)" fg:x="153600" fg:w="252"/><text x="61.9281%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (240 samples, 0.10%)</title><rect x="61.6829%" y="549" width="0.0964%" height="15" fill="rgb(209,183,11)" fg:x="153612" fg:w="240"/><text x="61.9329%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (238 samples, 0.10%)</title><rect x="61.6837%" y="533" width="0.0956%" height="15" fill="rgb(208,55,20)" fg:x="153614" fg:w="238"/><text x="61.9337%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (238 samples, 0.10%)</title><rect x="61.6837%" y="517" width="0.0956%" height="15" fill="rgb(218,39,14)" fg:x="153614" fg:w="238"/><text x="61.9337%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,965 samples, 1.19%)</title><rect x="60.5895%" y="709" width="1.1906%" height="15" fill="rgb(216,169,33)" fg:x="150889" fg:w="2965"/><text x="60.8395%" y="719.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (2,963 samples, 1.19%)</title><rect x="60.5903%" y="693" width="1.1898%" height="15" fill="rgb(233,80,24)" fg:x="150891" fg:w="2963"/><text x="60.8403%" y="703.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (2,516 samples, 1.01%)</title><rect x="60.7698%" y="677" width="1.0103%" height="15" fill="rgb(213,179,31)" fg:x="151338" fg:w="2516"/><text x="61.0198%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2,469 samples, 0.99%)</title><rect x="60.7886%" y="661" width="0.9914%" height="15" fill="rgb(209,19,5)" fg:x="151385" fg:w="2469"/><text x="61.0386%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (1,005 samples, 0.40%)</title><rect x="61.3765%" y="645" width="0.4036%" height="15" fill="rgb(219,18,35)" fg:x="152849" fg:w="1005"/><text x="61.6265%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (133 samples, 0.05%)</title><rect x="61.7801%" y="693" width="0.0534%" height="15" fill="rgb(209,169,16)" fg:x="153854" fg:w="133"/><text x="62.0301%" y="703.50"></text></g><g><title>core::ptr::swap (130 samples, 0.05%)</title><rect x="61.7813%" y="677" width="0.0522%" height="15" fill="rgb(245,90,51)" fg:x="153857" fg:w="130"/><text x="62.0313%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (116 samples, 0.05%)</title><rect x="61.7869%" y="661" width="0.0466%" height="15" fill="rgb(220,99,45)" fg:x="153871" fg:w="116"/><text x="62.0369%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (41 samples, 0.02%)</title><rect x="61.8379%" y="629" width="0.0165%" height="15" fill="rgb(249,89,25)" fg:x="153998" fg:w="41"/><text x="62.0879%" y="639.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (41 samples, 0.02%)</title><rect x="61.8379%" y="613" width="0.0165%" height="15" fill="rgb(239,193,0)" fg:x="153998" fg:w="41"/><text x="62.0879%" y="623.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (41 samples, 0.02%)</title><rect x="61.8379%" y="597" width="0.0165%" height="15" fill="rgb(231,126,1)" fg:x="153998" fg:w="41"/><text x="62.0879%" y="607.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3,321 samples, 1.33%)</title><rect x="60.5349%" y="741" width="1.3335%" height="15" fill="rgb(243,166,3)" fg:x="150753" fg:w="3321"/><text x="60.7849%" y="751.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (3,321 samples, 1.33%)</title><rect x="60.5349%" y="725" width="1.3335%" height="15" fill="rgb(223,22,34)" fg:x="150753" fg:w="3321"/><text x="60.7849%" y="735.50"></text></g><g><title>futures_util::async_await::random::shuffle (220 samples, 0.09%)</title><rect x="61.7801%" y="709" width="0.0883%" height="15" fill="rgb(251,52,51)" fg:x="153854" fg:w="220"/><text x="62.0301%" y="719.50"></text></g><g><title>futures_util::async_await::random::gen_index (87 samples, 0.03%)</title><rect x="61.8335%" y="693" width="0.0349%" height="15" fill="rgb(221,165,28)" fg:x="153987" fg:w="87"/><text x="62.0835%" y="703.50"></text></g><g><title>futures_util::async_await::random::random (85 samples, 0.03%)</title><rect x="61.8343%" y="677" width="0.0341%" height="15" fill="rgb(218,121,47)" fg:x="153989" fg:w="85"/><text x="62.0843%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (85 samples, 0.03%)</title><rect x="61.8343%" y="661" width="0.0341%" height="15" fill="rgb(209,120,9)" fg:x="153989" fg:w="85"/><text x="62.0843%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (85 samples, 0.03%)</title><rect x="61.8343%" y="645" width="0.0341%" height="15" fill="rgb(236,68,12)" fg:x="153989" fg:w="85"/><text x="62.0843%" y="655.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (35 samples, 0.01%)</title><rect x="61.8544%" y="629" width="0.0141%" height="15" fill="rgb(225,194,26)" fg:x="154039" fg:w="35"/><text x="62.1044%" y="639.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (116 samples, 0.05%)</title><rect x="61.8776%" y="693" width="0.0466%" height="15" fill="rgb(231,84,39)" fg:x="154097" fg:w="116"/><text x="62.1276%" y="703.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (113 samples, 0.05%)</title><rect x="61.8789%" y="677" width="0.0454%" height="15" fill="rgb(210,11,45)" fg:x="154100" fg:w="113"/><text x="62.1289%" y="687.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (113 samples, 0.05%)</title><rect x="61.8789%" y="661" width="0.0454%" height="15" fill="rgb(224,54,52)" fg:x="154100" fg:w="113"/><text x="62.1289%" y="671.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain (32 samples, 0.01%)</title><rect x="61.9258%" y="693" width="0.0128%" height="15" fill="rgb(238,102,14)" fg:x="154217" fg:w="32"/><text x="62.1758%" y="703.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::retain_mut (32 samples, 0.01%)</title><rect x="61.9258%" y="677" width="0.0128%" height="15" fill="rgb(243,160,52)" fg:x="154217" fg:w="32"/><text x="62.1758%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::AsyncSignal&gt; (86 samples, 0.03%)</title><rect x="61.9644%" y="629" width="0.0345%" height="15" fill="rgb(216,114,19)" fg:x="154313" fg:w="86"/><text x="62.2144%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (155 samples, 0.06%)</title><rect x="61.9447%" y="661" width="0.0622%" height="15" fill="rgb(244,166,37)" fg:x="154264" fg:w="155"/><text x="62.1947%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt; (109 samples, 0.04%)</title><rect x="61.9632%" y="645" width="0.0438%" height="15" fill="rgb(246,29,44)" fg:x="154310" fg:w="109"/><text x="62.2132%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (186 samples, 0.07%)</title><rect x="61.9407%" y="693" width="0.0747%" height="15" fill="rgb(215,56,53)" fg:x="154254" fg:w="186"/><text x="62.1907%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 samples, 0.07%)</title><rect x="61.9407%" y="677" width="0.0747%" height="15" fill="rgb(217,60,2)" fg:x="154254" fg:w="186"/><text x="62.1907%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (41 samples, 0.02%)</title><rect x="62.0210%" y="693" width="0.0165%" height="15" fill="rgb(207,26,24)" fg:x="154454" fg:w="41"/><text x="62.2710%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.02%)</title><rect x="62.0210%" y="677" width="0.0165%" height="15" fill="rgb(252,210,15)" fg:x="154454" fg:w="41"/><text x="62.2710%" y="687.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (469 samples, 0.19%)</title><rect x="61.8712%" y="725" width="0.1883%" height="15" fill="rgb(253,209,26)" fg:x="154081" fg:w="469"/><text x="62.1212%" y="735.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (469 samples, 0.19%)</title><rect x="61.8712%" y="709" width="0.1883%" height="15" fill="rgb(238,170,14)" fg:x="154081" fg:w="469"/><text x="62.1212%" y="719.50"></text></g><g><title>flume::wait_lock (52 samples, 0.02%)</title><rect x="62.0387%" y="693" width="0.0209%" height="15" fill="rgb(216,178,15)" fg:x="154498" fg:w="52"/><text x="62.2887%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.02%)</title><rect x="62.0387%" y="677" width="0.0209%" height="15" fill="rgb(250,197,2)" fg:x="154498" fg:w="52"/><text x="62.2887%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (50 samples, 0.02%)</title><rect x="62.0395%" y="661" width="0.0201%" height="15" fill="rgb(212,70,42)" fg:x="154500" fg:w="50"/><text x="62.2895%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (47 samples, 0.02%)</title><rect x="62.0407%" y="645" width="0.0189%" height="15" fill="rgb(227,213,9)" fg:x="154503" fg:w="47"/><text x="62.2907%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (47 samples, 0.02%)</title><rect x="62.0407%" y="629" width="0.0189%" height="15" fill="rgb(245,99,25)" fg:x="154503" fg:w="47"/><text x="62.2907%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (509 samples, 0.20%)</title><rect x="61.8692%" y="741" width="0.2044%" height="15" fill="rgb(250,82,29)" fg:x="154076" fg:w="509"/><text x="62.1192%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::OwnedOrRef&lt;flume::Receiver&lt;bytes::bytes::Bytes&gt;&gt;&gt; (25 samples, 0.01%)</title><rect x="62.0636%" y="725" width="0.0100%" height="15" fill="rgb(241,226,54)" fg:x="154560" fg:w="25"/><text x="62.3136%" y="735.50"></text></g><g><title>_rjem_sdallocx (88 samples, 0.04%)</title><rect x="62.0760%" y="709" width="0.0353%" height="15" fill="rgb(221,99,41)" fg:x="154591" fg:w="88"/><text x="62.3260%" y="719.50"></text></g><g><title>free_fastpath (88 samples, 0.04%)</title><rect x="62.0760%" y="693" width="0.0353%" height="15" fill="rgb(213,90,21)" fg:x="154591" fg:w="88"/><text x="62.3260%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (89 samples, 0.04%)</title><rect x="62.1142%" y="645" width="0.0357%" height="15" fill="rgb(205,208,24)" fg:x="154686" fg:w="89"/><text x="62.3642%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.04%)</title><rect x="62.1142%" y="629" width="0.0357%" height="15" fill="rgb(246,31,12)" fg:x="154686" fg:w="89"/><text x="62.3642%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (83 samples, 0.03%)</title><rect x="62.1166%" y="613" width="0.0333%" height="15" fill="rgb(213,154,6)" fg:x="154692" fg:w="83"/><text x="62.3666%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (83 samples, 0.03%)</title><rect x="62.1166%" y="597" width="0.0333%" height="15" fill="rgb(222,163,29)" fg:x="154692" fg:w="83"/><text x="62.3666%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (99 samples, 0.04%)</title><rect x="62.1668%" y="613" width="0.0398%" height="15" fill="rgb(227,201,8)" fg:x="154817" fg:w="99"/><text x="62.4168%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (88 samples, 0.04%)</title><rect x="62.1712%" y="597" width="0.0353%" height="15" fill="rgb(233,9,32)" fg:x="154828" fg:w="88"/><text x="62.4212%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (87 samples, 0.03%)</title><rect x="62.1716%" y="581" width="0.0349%" height="15" fill="rgb(217,54,24)" fg:x="154829" fg:w="87"/><text x="62.4216%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (86 samples, 0.03%)</title><rect x="62.1720%" y="565" width="0.0345%" height="15" fill="rgb(235,192,0)" fg:x="154830" fg:w="86"/><text x="62.4220%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (86 samples, 0.03%)</title><rect x="62.1720%" y="549" width="0.0345%" height="15" fill="rgb(235,45,9)" fg:x="154830" fg:w="86"/><text x="62.4220%" y="559.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (86 samples, 0.03%)</title><rect x="62.1720%" y="533" width="0.0345%" height="15" fill="rgb(246,42,40)" fg:x="154830" fg:w="86"/><text x="62.4220%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (64 samples, 0.03%)</title><rect x="62.1808%" y="517" width="0.0257%" height="15" fill="rgb(248,111,24)" fg:x="154852" fg:w="64"/><text x="62.4308%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (63 samples, 0.03%)</title><rect x="62.1812%" y="501" width="0.0253%" height="15" fill="rgb(249,65,22)" fg:x="154853" fg:w="63"/><text x="62.4312%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (51 samples, 0.02%)</title><rect x="62.1860%" y="485" width="0.0205%" height="15" fill="rgb(238,111,51)" fg:x="154865" fg:w="51"/><text x="62.4360%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (51 samples, 0.02%)</title><rect x="62.1860%" y="469" width="0.0205%" height="15" fill="rgb(250,118,22)" fg:x="154865" fg:w="51"/><text x="62.4360%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (81 samples, 0.03%)</title><rect x="62.2093%" y="597" width="0.0325%" height="15" fill="rgb(234,84,26)" fg:x="154923" fg:w="81"/><text x="62.4593%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (74 samples, 0.03%)</title><rect x="62.2121%" y="581" width="0.0297%" height="15" fill="rgb(243,172,12)" fg:x="154930" fg:w="74"/><text x="62.4621%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.03%)</title><rect x="62.2121%" y="565" width="0.0297%" height="15" fill="rgb(236,150,49)" fg:x="154930" fg:w="74"/><text x="62.4621%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (69 samples, 0.03%)</title><rect x="62.2141%" y="549" width="0.0277%" height="15" fill="rgb(225,197,26)" fg:x="154935" fg:w="69"/><text x="62.4641%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (68 samples, 0.03%)</title><rect x="62.2145%" y="533" width="0.0273%" height="15" fill="rgb(214,17,42)" fg:x="154936" fg:w="68"/><text x="62.4645%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (68 samples, 0.03%)</title><rect x="62.2145%" y="517" width="0.0273%" height="15" fill="rgb(224,165,40)" fg:x="154936" fg:w="68"/><text x="62.4645%" y="527.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (131 samples, 0.05%)</title><rect x="62.2419%" y="597" width="0.0526%" height="15" fill="rgb(246,100,4)" fg:x="155004" fg:w="131"/><text x="62.4919%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (131 samples, 0.05%)</title><rect x="62.2419%" y="581" width="0.0526%" height="15" fill="rgb(222,103,0)" fg:x="155004" fg:w="131"/><text x="62.4919%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (129 samples, 0.05%)</title><rect x="62.2427%" y="565" width="0.0518%" height="15" fill="rgb(227,189,26)" fg:x="155006" fg:w="129"/><text x="62.4927%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (128 samples, 0.05%)</title><rect x="62.2431%" y="549" width="0.0514%" height="15" fill="rgb(214,202,17)" fg:x="155007" fg:w="128"/><text x="62.4931%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (128 samples, 0.05%)</title><rect x="62.2431%" y="533" width="0.0514%" height="15" fill="rgb(229,111,3)" fg:x="155007" fg:w="128"/><text x="62.4931%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (609 samples, 0.24%)</title><rect x="62.0736%" y="741" width="0.2445%" height="15" fill="rgb(229,172,15)" fg:x="154585" fg:w="609"/><text x="62.3236%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (609 samples, 0.24%)</title><rect x="62.0736%" y="725" width="0.2445%" height="15" fill="rgb(230,224,35)" fg:x="154585" fg:w="609"/><text x="62.3236%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (515 samples, 0.21%)</title><rect x="62.1113%" y="709" width="0.2068%" height="15" fill="rgb(251,141,6)" fg:x="154679" fg:w="515"/><text x="62.3613%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (515 samples, 0.21%)</title><rect x="62.1113%" y="693" width="0.2068%" height="15" fill="rgb(225,208,6)" fg:x="154679" fg:w="515"/><text x="62.3613%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (515 samples, 0.21%)</title><rect x="62.1113%" y="677" width="0.2068%" height="15" fill="rgb(246,181,16)" fg:x="154679" fg:w="515"/><text x="62.3613%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (508 samples, 0.20%)</title><rect x="62.1142%" y="661" width="0.2040%" height="15" fill="rgb(227,129,36)" fg:x="154686" fg:w="508"/><text x="62.3642%" y="671.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (418 samples, 0.17%)</title><rect x="62.1503%" y="645" width="0.1678%" height="15" fill="rgb(248,117,24)" fg:x="154776" fg:w="418"/><text x="62.4003%" y="655.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (418 samples, 0.17%)</title><rect x="62.1503%" y="629" width="0.1678%" height="15" fill="rgb(214,185,35)" fg:x="154776" fg:w="418"/><text x="62.4003%" y="639.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (278 samples, 0.11%)</title><rect x="62.2065%" y="613" width="0.1116%" height="15" fill="rgb(236,150,34)" fg:x="154916" fg:w="278"/><text x="62.4565%" y="623.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (59 samples, 0.02%)</title><rect x="62.2945%" y="597" width="0.0237%" height="15" fill="rgb(243,228,27)" fg:x="155135" fg:w="59"/><text x="62.5445%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (90 samples, 0.04%)</title><rect x="62.3194%" y="741" width="0.0361%" height="15" fill="rgb(245,77,44)" fg:x="155197" fg:w="90"/><text x="62.5694%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (90 samples, 0.04%)</title><rect x="62.3194%" y="725" width="0.0361%" height="15" fill="rgb(235,214,42)" fg:x="155197" fg:w="90"/><text x="62.5694%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (122 samples, 0.05%)</title><rect x="62.3555%" y="741" width="0.0490%" height="15" fill="rgb(221,74,3)" fg:x="155287" fg:w="122"/><text x="62.6055%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (122 samples, 0.05%)</title><rect x="62.3555%" y="725" width="0.0490%" height="15" fill="rgb(206,121,29)" fg:x="155287" fg:w="122"/><text x="62.6055%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (252 samples, 0.10%)</title><rect x="62.4077%" y="725" width="0.1012%" height="15" fill="rgb(249,131,53)" fg:x="155417" fg:w="252"/><text x="62.6577%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (242 samples, 0.10%)</title><rect x="62.4117%" y="709" width="0.0972%" height="15" fill="rgb(236,170,29)" fg:x="155427" fg:w="242"/><text x="62.6617%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (242 samples, 0.10%)</title><rect x="62.4117%" y="693" width="0.0972%" height="15" fill="rgb(247,96,15)" fg:x="155427" fg:w="242"/><text x="62.6617%" y="703.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (41 samples, 0.02%)</title><rect x="62.5466%" y="485" width="0.0165%" height="15" fill="rgb(211,210,7)" fg:x="155763" fg:w="41"/><text x="62.7966%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (41 samples, 0.02%)</title><rect x="62.5466%" y="469" width="0.0165%" height="15" fill="rgb(240,88,50)" fg:x="155763" fg:w="41"/><text x="62.7966%" y="479.50"></text></g><g><title>imalloc_no_sample (42 samples, 0.02%)</title><rect x="62.5466%" y="549" width="0.0169%" height="15" fill="rgb(209,229,26)" fg:x="155763" fg:w="42"/><text x="62.7966%" y="559.50"></text></g><g><title>iallocztm (42 samples, 0.02%)</title><rect x="62.5466%" y="533" width="0.0169%" height="15" fill="rgb(210,68,23)" fg:x="155763" fg:w="42"/><text x="62.7966%" y="543.50"></text></g><g><title>arena_malloc (42 samples, 0.02%)</title><rect x="62.5466%" y="517" width="0.0169%" height="15" fill="rgb(229,180,13)" fg:x="155763" fg:w="42"/><text x="62.7966%" y="527.50"></text></g><g><title>tcache_alloc_small (42 samples, 0.02%)</title><rect x="62.5466%" y="501" width="0.0169%" height="15" fill="rgb(236,53,44)" fg:x="155763" fg:w="42"/><text x="62.7966%" y="511.50"></text></g><g><title>_rjem_je_malloc_default (47 samples, 0.02%)</title><rect x="62.5462%" y="597" width="0.0189%" height="15" fill="rgb(244,214,29)" fg:x="155762" fg:w="47"/><text x="62.7962%" y="607.50"></text></g><g><title>imalloc (47 samples, 0.02%)</title><rect x="62.5462%" y="581" width="0.0189%" height="15" fill="rgb(220,75,29)" fg:x="155762" fg:w="47"/><text x="62.7962%" y="591.50"></text></g><g><title>imalloc_body (47 samples, 0.02%)</title><rect x="62.5462%" y="565" width="0.0189%" height="15" fill="rgb(214,183,37)" fg:x="155762" fg:w="47"/><text x="62.7962%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (130 samples, 0.05%)</title><rect x="62.6663%" y="565" width="0.0522%" height="15" fill="rgb(239,117,29)" fg:x="156061" fg:w="130"/><text x="62.9163%" y="575.50"></text></g><g><title>cache_bin_alloc_impl (130 samples, 0.05%)</title><rect x="62.6663%" y="549" width="0.0522%" height="15" fill="rgb(237,171,35)" fg:x="156061" fg:w="130"/><text x="62.9163%" y="559.50"></text></g><g><title>sz_size2index_usize_fastpath (45 samples, 0.02%)</title><rect x="62.7197%" y="565" width="0.0181%" height="15" fill="rgb(229,178,53)" fg:x="156194" fg:w="45"/><text x="62.9697%" y="575.50"></text></g><g><title>__rust_alloc (481 samples, 0.19%)</title><rect x="62.5458%" y="629" width="0.1931%" height="15" fill="rgb(210,102,19)" fg:x="155761" fg:w="481"/><text x="62.7958%" y="639.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (481 samples, 0.19%)</title><rect x="62.5458%" y="613" width="0.1931%" height="15" fill="rgb(235,127,22)" fg:x="155761" fg:w="481"/><text x="62.7958%" y="623.50"></text></g><g><title>_rjem_malloc (433 samples, 0.17%)</title><rect x="62.5651%" y="597" width="0.1739%" height="15" fill="rgb(244,31,31)" fg:x="155809" fg:w="433"/><text x="62.8151%" y="607.50"></text></g><g><title>imalloc_fastpath (431 samples, 0.17%)</title><rect x="62.5659%" y="581" width="0.1731%" height="15" fill="rgb(231,43,21)" fg:x="155811" fg:w="431"/><text x="62.8159%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (593 samples, 0.24%)</title><rect x="62.5089%" y="725" width="0.2381%" height="15" fill="rgb(217,131,35)" fg:x="155669" fg:w="593"/><text x="62.7589%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (593 samples, 0.24%)</title><rect x="62.5089%" y="709" width="0.2381%" height="15" fill="rgb(221,149,4)" fg:x="155669" fg:w="593"/><text x="62.7589%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (503 samples, 0.20%)</title><rect x="62.5450%" y="693" width="0.2020%" height="15" fill="rgb(232,170,28)" fg:x="155759" fg:w="503"/><text x="62.7950%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (501 samples, 0.20%)</title><rect x="62.5458%" y="677" width="0.2012%" height="15" fill="rgb(238,56,10)" fg:x="155761" fg:w="501"/><text x="62.7958%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (501 samples, 0.20%)</title><rect x="62.5458%" y="661" width="0.2012%" height="15" fill="rgb(235,196,14)" fg:x="155761" fg:w="501"/><text x="62.7958%" y="671.50"></text></g><g><title>alloc::alloc::alloc (501 samples, 0.20%)</title><rect x="62.5458%" y="645" width="0.2012%" height="15" fill="rgb(216,45,48)" fg:x="155761" fg:w="501"/><text x="62.7958%" y="655.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (42 samples, 0.02%)</title><rect x="62.7470%" y="725" width="0.0169%" height="15" fill="rgb(238,213,17)" fg:x="156262" fg:w="42"/><text x="62.9970%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (33 samples, 0.01%)</title><rect x="62.7506%" y="709" width="0.0133%" height="15" fill="rgb(212,13,2)" fg:x="156271" fg:w="33"/><text x="63.0006%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (33 samples, 0.01%)</title><rect x="62.7506%" y="693" width="0.0133%" height="15" fill="rgb(240,114,20)" fg:x="156271" fg:w="33"/><text x="63.0006%" y="703.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (27 samples, 0.01%)</title><rect x="62.7711%" y="693" width="0.0108%" height="15" fill="rgb(228,41,40)" fg:x="156322" fg:w="27"/><text x="63.0211%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (107 samples, 0.04%)</title><rect x="62.7819%" y="693" width="0.0430%" height="15" fill="rgb(244,132,35)" fg:x="156349" fg:w="107"/><text x="63.0319%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (97 samples, 0.04%)</title><rect x="62.7860%" y="677" width="0.0390%" height="15" fill="rgb(253,189,4)" fg:x="156359" fg:w="97"/><text x="63.0360%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.04%)</title><rect x="62.7860%" y="661" width="0.0390%" height="15" fill="rgb(224,37,19)" fg:x="156359" fg:w="97"/><text x="63.0360%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (90 samples, 0.04%)</title><rect x="62.7888%" y="645" width="0.0361%" height="15" fill="rgb(235,223,18)" fg:x="156366" fg:w="90"/><text x="63.0388%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (88 samples, 0.04%)</title><rect x="62.7896%" y="629" width="0.0353%" height="15" fill="rgb(235,163,25)" fg:x="156368" fg:w="88"/><text x="63.0396%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_swap (88 samples, 0.04%)</title><rect x="62.7896%" y="613" width="0.0353%" height="15" fill="rgb(217,145,28)" fg:x="156368" fg:w="88"/><text x="63.0396%" y="623.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (1,226 samples, 0.49%)</title><rect x="62.4053%" y="741" width="0.4923%" height="15" fill="rgb(223,223,32)" fg:x="155411" fg:w="1226"/><text x="62.6553%" y="751.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (333 samples, 0.13%)</title><rect x="62.7639%" y="725" width="0.1337%" height="15" fill="rgb(227,189,39)" fg:x="156304" fg:w="333"/><text x="63.0139%" y="735.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (333 samples, 0.13%)</title><rect x="62.7639%" y="709" width="0.1337%" height="15" fill="rgb(248,10,22)" fg:x="156304" fg:w="333"/><text x="63.0139%" y="719.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (181 samples, 0.07%)</title><rect x="62.8249%" y="693" width="0.0727%" height="15" fill="rgb(248,46,39)" fg:x="156456" fg:w="181"/><text x="63.0749%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (181 samples, 0.07%)</title><rect x="62.8249%" y="677" width="0.0727%" height="15" fill="rgb(248,113,48)" fg:x="156456" fg:w="181"/><text x="63.0749%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (166 samples, 0.07%)</title><rect x="62.8309%" y="661" width="0.0667%" height="15" fill="rgb(245,16,25)" fg:x="156471" fg:w="166"/><text x="63.0809%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (165 samples, 0.07%)</title><rect x="62.8313%" y="645" width="0.0663%" height="15" fill="rgb(249,152,16)" fg:x="156472" fg:w="165"/><text x="63.0813%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (165 samples, 0.07%)</title><rect x="62.8313%" y="629" width="0.0663%" height="15" fill="rgb(250,16,1)" fg:x="156472" fg:w="165"/><text x="63.0813%" y="639.50"></text></g><g><title>extent_recycle_extract (36 samples, 0.01%)</title><rect x="62.9157%" y="325" width="0.0145%" height="15" fill="rgb(249,138,3)" fg:x="156682" fg:w="36"/><text x="63.1657%" y="335.50"></text></g><g><title>extent_recycle_split (28 samples, 0.01%)</title><rect x="62.9301%" y="325" width="0.0112%" height="15" fill="rgb(227,71,41)" fg:x="156718" fg:w="28"/><text x="63.1801%" y="335.50"></text></g><g><title>pac_alloc_real (67 samples, 0.03%)</title><rect x="62.9149%" y="373" width="0.0269%" height="15" fill="rgb(209,184,23)" fg:x="156680" fg:w="67"/><text x="63.1649%" y="383.50"></text></g><g><title>_rjem_je_ecache_alloc (66 samples, 0.03%)</title><rect x="62.9153%" y="357" width="0.0265%" height="15" fill="rgb(223,215,31)" fg:x="156681" fg:w="66"/><text x="63.1653%" y="367.50"></text></g><g><title>extent_recycle (66 samples, 0.03%)</title><rect x="62.9153%" y="341" width="0.0265%" height="15" fill="rgb(210,146,28)" fg:x="156681" fg:w="66"/><text x="63.1653%" y="351.50"></text></g><g><title>_rjem_je_pa_alloc (79 samples, 0.03%)</title><rect x="62.9112%" y="421" width="0.0317%" height="15" fill="rgb(209,183,41)" fg:x="156671" fg:w="79"/><text x="63.1612%" y="431.50"></text></g><g><title>pai_alloc (70 samples, 0.03%)</title><rect x="62.9149%" y="405" width="0.0281%" height="15" fill="rgb(209,224,45)" fg:x="156680" fg:w="70"/><text x="63.1649%" y="415.50"></text></g><g><title>pac_alloc_impl (70 samples, 0.03%)</title><rect x="62.9149%" y="389" width="0.0281%" height="15" fill="rgb(224,209,51)" fg:x="156680" fg:w="70"/><text x="63.1649%" y="399.50"></text></g><g><title>arena_slab_alloc (86 samples, 0.03%)</title><rect x="62.9088%" y="437" width="0.0345%" height="15" fill="rgb(223,17,39)" fg:x="156665" fg:w="86"/><text x="63.1588%" y="447.50"></text></g><g><title>malloc_mutex_lock (26 samples, 0.01%)</title><rect x="62.9450%" y="437" width="0.0104%" height="15" fill="rgb(234,204,37)" fg:x="156755" fg:w="26"/><text x="63.1950%" y="447.50"></text></g><g><title>malloc_mutex_trylock_final (26 samples, 0.01%)</title><rect x="62.9450%" y="421" width="0.0104%" height="15" fill="rgb(236,120,5)" fg:x="156755" fg:w="26"/><text x="63.1950%" y="431.50"></text></g><g><title>pthread_mutex_trylock (26 samples, 0.01%)</title><rect x="62.9450%" y="405" width="0.0104%" height="15" fill="rgb(248,97,27)" fg:x="156755" fg:w="26"/><text x="63.1950%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (131 samples, 0.05%)</title><rect x="62.9048%" y="469" width="0.0526%" height="15" fill="rgb(240,66,17)" fg:x="156655" fg:w="131"/><text x="63.1548%" y="479.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (130 samples, 0.05%)</title><rect x="62.9052%" y="453" width="0.0522%" height="15" fill="rgb(210,79,3)" fg:x="156656" fg:w="130"/><text x="63.1552%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (138 samples, 0.06%)</title><rect x="62.9044%" y="581" width="0.0554%" height="15" fill="rgb(214,176,27)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="591.50"></text></g><g><title>imalloc (138 samples, 0.06%)</title><rect x="62.9044%" y="565" width="0.0554%" height="15" fill="rgb(235,185,3)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="575.50"></text></g><g><title>imalloc_body (138 samples, 0.06%)</title><rect x="62.9044%" y="549" width="0.0554%" height="15" fill="rgb(227,24,12)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="559.50"></text></g><g><title>imalloc_no_sample (138 samples, 0.06%)</title><rect x="62.9044%" y="533" width="0.0554%" height="15" fill="rgb(252,169,48)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="543.50"></text></g><g><title>iallocztm (138 samples, 0.06%)</title><rect x="62.9044%" y="517" width="0.0554%" height="15" fill="rgb(212,65,1)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="527.50"></text></g><g><title>arena_malloc (138 samples, 0.06%)</title><rect x="62.9044%" y="501" width="0.0554%" height="15" fill="rgb(242,39,24)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="511.50"></text></g><g><title>tcache_alloc_small (138 samples, 0.06%)</title><rect x="62.9044%" y="485" width="0.0554%" height="15" fill="rgb(249,32,23)" fg:x="156654" fg:w="138"/><text x="63.1544%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame (156 samples, 0.06%)</title><rect x="62.9032%" y="725" width="0.0626%" height="15" fill="rgb(251,195,23)" fg:x="156651" fg:w="156"/><text x="63.1532%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (156 samples, 0.06%)</title><rect x="62.9032%" y="709" width="0.0626%" height="15" fill="rgb(236,174,8)" fg:x="156651" fg:w="156"/><text x="63.1532%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (156 samples, 0.06%)</title><rect x="62.9032%" y="693" width="0.0626%" height="15" fill="rgb(220,197,8)" fg:x="156651" fg:w="156"/><text x="63.1532%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (153 samples, 0.06%)</title><rect x="62.9044%" y="677" width="0.0614%" height="15" fill="rgb(240,108,37)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (153 samples, 0.06%)</title><rect x="62.9044%" y="661" width="0.0614%" height="15" fill="rgb(232,176,24)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (153 samples, 0.06%)</title><rect x="62.9044%" y="645" width="0.0614%" height="15" fill="rgb(243,35,29)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="655.50"></text></g><g><title>alloc::alloc::alloc (153 samples, 0.06%)</title><rect x="62.9044%" y="629" width="0.0614%" height="15" fill="rgb(210,37,18)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="639.50"></text></g><g><title>__rust_alloc (153 samples, 0.06%)</title><rect x="62.9044%" y="613" width="0.0614%" height="15" fill="rgb(224,184,40)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (153 samples, 0.06%)</title><rect x="62.9044%" y="597" width="0.0614%" height="15" fill="rgb(236,39,29)" fg:x="156654" fg:w="153"/><text x="63.1544%" y="607.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (82 samples, 0.03%)</title><rect x="62.9775%" y="661" width="0.0329%" height="15" fill="rgb(232,48,39)" fg:x="156836" fg:w="82"/><text x="63.2275%" y="671.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (82 samples, 0.03%)</title><rect x="62.9775%" y="645" width="0.0329%" height="15" fill="rgb(236,34,42)" fg:x="156836" fg:w="82"/><text x="63.2275%" y="655.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (72 samples, 0.03%)</title><rect x="62.9815%" y="629" width="0.0289%" height="15" fill="rgb(243,106,37)" fg:x="156846" fg:w="72"/><text x="63.2315%" y="639.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (62 samples, 0.02%)</title><rect x="62.9855%" y="613" width="0.0249%" height="15" fill="rgb(218,96,6)" fg:x="156856" fg:w="62"/><text x="63.2355%" y="623.50"></text></g><g><title>imalloc_no_sample (45 samples, 0.02%)</title><rect x="63.0148%" y="469" width="0.0181%" height="15" fill="rgb(235,130,12)" fg:x="156929" fg:w="45"/><text x="63.2648%" y="479.50"></text></g><g><title>iallocztm (45 samples, 0.02%)</title><rect x="63.0148%" y="453" width="0.0181%" height="15" fill="rgb(231,95,0)" fg:x="156929" fg:w="45"/><text x="63.2648%" y="463.50"></text></g><g><title>arena_malloc (45 samples, 0.02%)</title><rect x="63.0148%" y="437" width="0.0181%" height="15" fill="rgb(228,12,23)" fg:x="156929" fg:w="45"/><text x="63.2648%" y="447.50"></text></g><g><title>tcache_alloc_small (45 samples, 0.02%)</title><rect x="63.0148%" y="421" width="0.0181%" height="15" fill="rgb(216,12,1)" fg:x="156929" fg:w="45"/><text x="63.2648%" y="431.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (45 samples, 0.02%)</title><rect x="63.0148%" y="405" width="0.0181%" height="15" fill="rgb(219,59,3)" fg:x="156929" fg:w="45"/><text x="63.2648%" y="415.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (44 samples, 0.02%)</title><rect x="63.0152%" y="389" width="0.0177%" height="15" fill="rgb(215,208,46)" fg:x="156930" fg:w="44"/><text x="63.2652%" y="399.50"></text></g><g><title>imalloc_body (47 samples, 0.02%)</title><rect x="63.0144%" y="485" width="0.0189%" height="15" fill="rgb(254,224,29)" fg:x="156928" fg:w="47"/><text x="63.2644%" y="495.50"></text></g><g><title>_rjem_je_malloc_default (49 samples, 0.02%)</title><rect x="63.0140%" y="517" width="0.0197%" height="15" fill="rgb(232,14,29)" fg:x="156927" fg:w="49"/><text x="63.2640%" y="527.50"></text></g><g><title>imalloc (48 samples, 0.02%)</title><rect x="63.0144%" y="501" width="0.0193%" height="15" fill="rgb(208,45,52)" fg:x="156928" fg:w="48"/><text x="63.2644%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (164 samples, 0.07%)</title><rect x="62.9751%" y="693" width="0.0659%" height="15" fill="rgb(234,191,28)" fg:x="156830" fg:w="164"/><text x="63.2251%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (164 samples, 0.07%)</title><rect x="62.9751%" y="677" width="0.0659%" height="15" fill="rgb(244,67,43)" fg:x="156830" fg:w="164"/><text x="63.2251%" y="687.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (73 samples, 0.03%)</title><rect x="63.0116%" y="661" width="0.0293%" height="15" fill="rgb(236,189,24)" fg:x="156921" fg:w="73"/><text x="63.2616%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (73 samples, 0.03%)</title><rect x="63.0116%" y="645" width="0.0293%" height="15" fill="rgb(239,214,33)" fg:x="156921" fg:w="73"/><text x="63.2616%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (73 samples, 0.03%)</title><rect x="63.0116%" y="629" width="0.0293%" height="15" fill="rgb(226,176,41)" fg:x="156921" fg:w="73"/><text x="63.2616%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (67 samples, 0.03%)</title><rect x="63.0140%" y="613" width="0.0269%" height="15" fill="rgb(248,47,8)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (67 samples, 0.03%)</title><rect x="63.0140%" y="597" width="0.0269%" height="15" fill="rgb(218,81,44)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.03%)</title><rect x="63.0140%" y="581" width="0.0269%" height="15" fill="rgb(213,98,6)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="591.50"></text></g><g><title>alloc::alloc::alloc (67 samples, 0.03%)</title><rect x="63.0140%" y="565" width="0.0269%" height="15" fill="rgb(222,85,22)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="575.50"></text></g><g><title>__rust_alloc (67 samples, 0.03%)</title><rect x="63.0140%" y="549" width="0.0269%" height="15" fill="rgb(239,46,39)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (67 samples, 0.03%)</title><rect x="63.0140%" y="533" width="0.0269%" height="15" fill="rgb(237,12,29)" fg:x="156927" fg:w="67"/><text x="63.2640%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (188 samples, 0.08%)</title><rect x="62.9658%" y="725" width="0.0755%" height="15" fill="rgb(214,77,8)" fg:x="156807" fg:w="188"/><text x="63.2158%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (188 samples, 0.08%)</title><rect x="62.9658%" y="709" width="0.0755%" height="15" fill="rgb(217,168,37)" fg:x="156807" fg:w="188"/><text x="63.2158%" y="719.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.03%)</title><rect x="63.0413%" y="725" width="0.0297%" height="15" fill="rgb(221,217,23)" fg:x="156995" fg:w="74"/><text x="63.2913%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8,035 samples, 3.23%)</title><rect x="59.8566%" y="805" width="3.2265%" height="15" fill="rgb(243,229,36)" fg:x="149064" fg:w="8035"/><text x="60.1066%" y="815.50">&lt;co..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (8,034 samples, 3.23%)</title><rect x="59.8570%" y="789" width="3.2261%" height="15" fill="rgb(251,163,40)" fg:x="149065" fg:w="8034"/><text x="60.1070%" y="799.50">&lt;fu..</text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (7,060 samples, 2.83%)</title><rect x="60.2482%" y="773" width="2.8349%" height="15" fill="rgb(237,222,12)" fg:x="150039" fg:w="7060"/><text x="60.4982%" y="783.50">wi..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (6,931 samples, 2.78%)</title><rect x="60.3000%" y="757" width="2.7831%" height="15" fill="rgb(248,132,6)" fg:x="150168" fg:w="6931"/><text x="60.5500%" y="767.50">wi..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_frame::_{{closure}} (455 samples, 0.18%)</title><rect x="62.9004%" y="741" width="0.1827%" height="15" fill="rgb(227,167,50)" fg:x="156644" fg:w="455"/><text x="63.1504%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="63.0727%" y="725" width="0.0104%" height="15" fill="rgb(242,84,37)" fg:x="157073" fg:w="26"/><text x="63.3227%" y="735.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="63.0727%" y="709" width="0.0104%" height="15" fill="rgb(212,4,50)" fg:x="157073" fg:w="26"/><text x="63.3227%" y="719.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (26 samples, 0.01%)</title><rect x="63.0727%" y="693" width="0.0104%" height="15" fill="rgb(230,228,32)" fg:x="157073" fg:w="26"/><text x="63.3227%" y="703.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (8,055 samples, 3.23%)</title><rect x="59.8566%" y="837" width="3.2345%" height="15" fill="rgb(248,217,23)" fg:x="149064" fg:w="8055"/><text x="60.1066%" y="847.50">&lt;S ..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (8,055 samples, 3.23%)</title><rect x="59.8566%" y="821" width="3.2345%" height="15" fill="rgb(238,197,32)" fg:x="149064" fg:w="8055"/><text x="60.1066%" y="831.50">&lt;wi..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (8,270 samples, 3.32%)</title><rect x="59.7727%" y="885" width="3.3208%" height="15" fill="rgb(236,106,1)" fg:x="148855" fg:w="8270"/><text x="60.0227%" y="895.50">&lt;to..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (8,270 samples, 3.32%)</title><rect x="59.7727%" y="869" width="3.3208%" height="15" fill="rgb(219,228,13)" fg:x="148855" fg:w="8270"/><text x="60.0227%" y="879.50">&lt;wi..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (8,270 samples, 3.32%)</title><rect x="59.7727%" y="853" width="3.3208%" height="15" fill="rgb(238,30,35)" fg:x="148855" fg:w="8270"/><text x="60.0227%" y="863.50">&lt;fu..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (8,334 samples, 3.35%)</title><rect x="59.7571%" y="901" width="3.3465%" height="15" fill="rgb(236,70,23)" fg:x="148816" fg:w="8334"/><text x="60.0071%" y="911.50">&lt;to..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (172 samples, 0.07%)</title><rect x="63.1313%" y="853" width="0.0691%" height="15" fill="rgb(249,104,48)" fg:x="157219" fg:w="172"/><text x="63.3813%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (168 samples, 0.07%)</title><rect x="63.1329%" y="837" width="0.0675%" height="15" fill="rgb(254,117,50)" fg:x="157223" fg:w="168"/><text x="63.3829%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (168 samples, 0.07%)</title><rect x="63.1329%" y="821" width="0.0675%" height="15" fill="rgb(223,152,4)" fg:x="157223" fg:w="168"/><text x="63.3829%" y="831.50"></text></g><g><title>[libc.so.6] (468 samples, 0.19%)</title><rect x="63.5268%" y="709" width="0.1879%" height="15" fill="rgb(245,6,2)" fg:x="158204" fg:w="468"/><text x="63.7768%" y="719.50"></text></g><g><title>__send (958 samples, 0.38%)</title><rect x="63.3626%" y="725" width="0.3847%" height="15" fill="rgb(249,150,24)" fg:x="157795" fg:w="958"/><text x="63.6126%" y="735.50"></text></g><g><title>[unknown] (81 samples, 0.03%)</title><rect x="63.7147%" y="709" width="0.0325%" height="15" fill="rgb(228,185,42)" fg:x="158672" fg:w="81"/><text x="63.9647%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (980 samples, 0.39%)</title><rect x="63.3614%" y="821" width="0.3935%" height="15" fill="rgb(226,39,33)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="831.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (980 samples, 0.39%)</title><rect x="63.3614%" y="805" width="0.3935%" height="15" fill="rgb(221,166,19)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="815.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (980 samples, 0.39%)</title><rect x="63.3614%" y="789" width="0.3935%" height="15" fill="rgb(209,109,2)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="799.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (980 samples, 0.39%)</title><rect x="63.3614%" y="773" width="0.3935%" height="15" fill="rgb(252,216,26)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="783.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (980 samples, 0.39%)</title><rect x="63.3614%" y="757" width="0.3935%" height="15" fill="rgb(227,173,36)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (980 samples, 0.39%)</title><rect x="63.3614%" y="741" width="0.3935%" height="15" fill="rgb(209,90,7)" fg:x="157792" fg:w="980"/><text x="63.6114%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (39 samples, 0.02%)</title><rect x="63.7738%" y="789" width="0.0157%" height="15" fill="rgb(250,194,11)" fg:x="158819" fg:w="39"/><text x="64.0238%" y="799.50"></text></g><g><title>tokio::runtime::context::budget (39 samples, 0.02%)</title><rect x="63.7738%" y="773" width="0.0157%" height="15" fill="rgb(220,72,50)" fg:x="158819" fg:w="39"/><text x="64.0238%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.02%)</title><rect x="63.7738%" y="757" width="0.0157%" height="15" fill="rgb(222,106,48)" fg:x="158819" fg:w="39"/><text x="64.0238%" y="767.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (29 samples, 0.01%)</title><rect x="63.7778%" y="741" width="0.0116%" height="15" fill="rgb(216,220,45)" fg:x="158829" fg:w="29"/><text x="64.0278%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (29 samples, 0.01%)</title><rect x="63.7778%" y="725" width="0.0116%" height="15" fill="rgb(234,112,18)" fg:x="158829" fg:w="29"/><text x="64.0278%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (30 samples, 0.01%)</title><rect x="63.8111%" y="773" width="0.0120%" height="15" fill="rgb(206,179,9)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (30 samples, 0.01%)</title><rect x="63.8111%" y="757" width="0.0120%" height="15" fill="rgb(215,115,40)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="63.8111%" y="741" width="0.0120%" height="15" fill="rgb(222,69,34)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (30 samples, 0.01%)</title><rect x="63.8111%" y="725" width="0.0120%" height="15" fill="rgb(209,161,10)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (30 samples, 0.01%)</title><rect x="63.8111%" y="709" width="0.0120%" height="15" fill="rgb(217,6,38)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.01%)</title><rect x="63.8111%" y="693" width="0.0120%" height="15" fill="rgb(229,229,48)" fg:x="158912" fg:w="30"/><text x="64.0611%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (440 samples, 0.18%)</title><rect x="63.8232%" y="773" width="0.1767%" height="15" fill="rgb(225,21,28)" fg:x="158942" fg:w="440"/><text x="64.0732%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (440 samples, 0.18%)</title><rect x="63.8232%" y="757" width="0.1767%" height="15" fill="rgb(206,33,13)" fg:x="158942" fg:w="440"/><text x="64.0732%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (40 samples, 0.02%)</title><rect x="64.0006%" y="773" width="0.0161%" height="15" fill="rgb(242,178,17)" fg:x="159384" fg:w="40"/><text x="64.2506%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (40 samples, 0.02%)</title><rect x="64.0006%" y="757" width="0.0161%" height="15" fill="rgb(220,162,5)" fg:x="159384" fg:w="40"/><text x="64.2506%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (40 samples, 0.02%)</title><rect x="64.0006%" y="741" width="0.0161%" height="15" fill="rgb(210,33,43)" fg:x="159384" fg:w="40"/><text x="64.2506%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (40 samples, 0.02%)</title><rect x="64.0006%" y="725" width="0.0161%" height="15" fill="rgb(216,116,54)" fg:x="159384" fg:w="40"/><text x="64.2506%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 0.02%)</title><rect x="64.0006%" y="709" width="0.0161%" height="15" fill="rgb(249,92,24)" fg:x="159384" fg:w="40"/><text x="64.2506%" y="719.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (2,280 samples, 0.92%)</title><rect x="63.1036%" y="901" width="0.9155%" height="15" fill="rgb(231,189,14)" fg:x="157150" fg:w="2280"/><text x="63.3536%" y="911.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,280 samples, 0.92%)</title><rect x="63.1036%" y="885" width="0.9155%" height="15" fill="rgb(230,8,41)" fg:x="157150" fg:w="2280"/><text x="63.3536%" y="895.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,232 samples, 0.90%)</title><rect x="63.1229%" y="869" width="0.8963%" height="15" fill="rgb(249,7,27)" fg:x="157198" fg:w="2232"/><text x="63.3729%" y="879.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (2,039 samples, 0.82%)</title><rect x="63.2004%" y="853" width="0.8188%" height="15" fill="rgb(232,86,5)" fg:x="157391" fg:w="2039"/><text x="63.4504%" y="863.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1,681 samples, 0.68%)</title><rect x="63.3441%" y="837" width="0.6750%" height="15" fill="rgb(224,175,18)" fg:x="157749" fg:w="1681"/><text x="63.5941%" y="847.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (648 samples, 0.26%)</title><rect x="63.7589%" y="821" width="0.2602%" height="15" fill="rgb(220,129,12)" fg:x="158782" fg:w="648"/><text x="64.0089%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (644 samples, 0.26%)</title><rect x="63.7605%" y="805" width="0.2586%" height="15" fill="rgb(210,19,36)" fg:x="158786" fg:w="644"/><text x="64.0105%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (572 samples, 0.23%)</title><rect x="63.7894%" y="789" width="0.2297%" height="15" fill="rgb(219,96,14)" fg:x="158858" fg:w="572"/><text x="64.0394%" y="799.50"></text></g><g><title>cache_bin_dalloc_easy (46 samples, 0.02%)</title><rect x="64.0641%" y="757" width="0.0185%" height="15" fill="rgb(249,106,1)" fg:x="159542" fg:w="46"/><text x="64.3141%" y="767.50"></text></g><g><title>sz_index2size (38 samples, 0.02%)</title><rect x="64.0826%" y="757" width="0.0153%" height="15" fill="rgb(249,155,20)" fg:x="159588" fg:w="38"/><text x="64.3326%" y="767.50"></text></g><g><title>sz_index2size_lookup (38 samples, 0.02%)</title><rect x="64.0826%" y="741" width="0.0153%" height="15" fill="rgb(244,168,9)" fg:x="159588" fg:w="38"/><text x="64.3326%" y="751.50"></text></g><g><title>sz_index2size_lookup_impl (38 samples, 0.02%)</title><rect x="64.0826%" y="725" width="0.0153%" height="15" fill="rgb(216,23,50)" fg:x="159588" fg:w="38"/><text x="64.3326%" y="735.50"></text></g><g><title>_rjem_sdallocx (166 samples, 0.07%)</title><rect x="64.0348%" y="789" width="0.0667%" height="15" fill="rgb(224,219,20)" fg:x="159469" fg:w="166"/><text x="64.2848%" y="799.50"></text></g><g><title>free_fastpath (166 samples, 0.07%)</title><rect x="64.0348%" y="773" width="0.0667%" height="15" fill="rgb(222,156,15)" fg:x="159469" fg:w="166"/><text x="64.2848%" y="783.50"></text></g><g><title>inallocx (111 samples, 0.04%)</title><rect x="64.1665%" y="533" width="0.0446%" height="15" fill="rgb(231,97,17)" fg:x="159797" fg:w="111"/><text x="64.4165%" y="543.50"></text></g><g><title>aligned_usize_get (98 samples, 0.04%)</title><rect x="64.1717%" y="517" width="0.0394%" height="15" fill="rgb(218,70,48)" fg:x="159810" fg:w="98"/><text x="64.4217%" y="527.50"></text></g><g><title>sz_s2u (96 samples, 0.04%)</title><rect x="64.1725%" y="501" width="0.0385%" height="15" fill="rgb(212,196,52)" fg:x="159812" fg:w="96"/><text x="64.4225%" y="511.50"></text></g><g><title>sz_s2u_compute (93 samples, 0.04%)</title><rect x="64.1737%" y="485" width="0.0373%" height="15" fill="rgb(243,203,18)" fg:x="159815" fg:w="93"/><text x="64.4237%" y="495.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (37 samples, 0.01%)</title><rect x="64.2564%" y="421" width="0.0149%" height="15" fill="rgb(252,125,41)" fg:x="160021" fg:w="37"/><text x="64.5064%" y="431.50"></text></g><g><title>_rjem_je_pac_maybe_decay_purge (37 samples, 0.01%)</title><rect x="64.2564%" y="405" width="0.0149%" height="15" fill="rgb(223,180,33)" fg:x="160021" fg:w="37"/><text x="64.5064%" y="415.50"></text></g><g><title>_rjem_je_arena_decay (39 samples, 0.02%)</title><rect x="64.2560%" y="469" width="0.0157%" height="15" fill="rgb(254,159,46)" fg:x="160020" fg:w="39"/><text x="64.5060%" y="479.50"></text></g><g><title>arena_decay_dirty (39 samples, 0.02%)</title><rect x="64.2560%" y="453" width="0.0157%" height="15" fill="rgb(254,38,10)" fg:x="160020" fg:w="39"/><text x="64.5060%" y="463.50"></text></g><g><title>arena_decay_impl (39 samples, 0.02%)</title><rect x="64.2560%" y="437" width="0.0157%" height="15" fill="rgb(208,217,32)" fg:x="160020" fg:w="39"/><text x="64.5060%" y="447.50"></text></g><g><title>arena_get_from_edata (851 samples, 0.34%)</title><rect x="64.2873%" y="453" width="0.3417%" height="15" fill="rgb(221,120,13)" fg:x="160098" fg:w="851"/><text x="64.5373%" y="463.50"></text></g><g><title>atomic_load_p (851 samples, 0.34%)</title><rect x="64.2873%" y="437" width="0.3417%" height="15" fill="rgb(246,54,52)" fg:x="160098" fg:w="851"/><text x="64.5373%" y="447.50"></text></g><g><title>arena_background_thread_inactivity_check (61 samples, 0.02%)</title><rect x="64.6403%" y="421" width="0.0245%" height="15" fill="rgb(242,34,25)" fg:x="160977" fg:w="61"/><text x="64.8903%" y="431.50"></text></g><g><title>background_thread_enabled (58 samples, 0.02%)</title><rect x="64.6415%" y="405" width="0.0233%" height="15" fill="rgb(247,209,9)" fg:x="160980" fg:w="58"/><text x="64.8915%" y="415.50"></text></g><g><title>atomic_load_b (58 samples, 0.02%)</title><rect x="64.6415%" y="389" width="0.0233%" height="15" fill="rgb(228,71,26)" fg:x="160980" fg:w="58"/><text x="64.8915%" y="399.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (109 samples, 0.04%)</title><rect x="64.6331%" y="437" width="0.0438%" height="15" fill="rgb(222,145,49)" fg:x="160959" fg:w="109"/><text x="64.8831%" y="447.50"></text></g><g><title>decay_immediately (30 samples, 0.01%)</title><rect x="64.6648%" y="421" width="0.0120%" height="15" fill="rgb(218,121,17)" fg:x="161038" fg:w="30"/><text x="64.9148%" y="431.50"></text></g><g><title>decay_ms_read (30 samples, 0.01%)</title><rect x="64.6648%" y="405" width="0.0120%" height="15" fill="rgb(244,50,7)" fg:x="161038" fg:w="30"/><text x="64.9148%" y="415.50"></text></g><g><title>atomic_load_zd (30 samples, 0.01%)</title><rect x="64.6648%" y="389" width="0.0120%" height="15" fill="rgb(246,229,37)" fg:x="161038" fg:w="30"/><text x="64.9148%" y="399.50"></text></g><g><title>_rjem_je_emap_remap (46 samples, 0.02%)</title><rect x="64.6865%" y="421" width="0.0185%" height="15" fill="rgb(225,18,5)" fg:x="161092" fg:w="46"/><text x="64.9365%" y="431.50"></text></g><g><title>pa_nactive_sub (264 samples, 0.11%)</title><rect x="64.7142%" y="421" width="0.1060%" height="15" fill="rgb(213,204,8)" fg:x="161161" fg:w="264"/><text x="64.9642%" y="431.50"></text></g><g><title>atomic_fetch_sub_zu (264 samples, 0.11%)</title><rect x="64.7142%" y="405" width="0.1060%" height="15" fill="rgb(238,103,6)" fg:x="161161" fg:w="264"/><text x="64.9642%" y="415.50"></text></g><g><title>_rjem_je_pa_dalloc (428 samples, 0.17%)</title><rect x="64.6769%" y="437" width="0.1719%" height="15" fill="rgb(222,25,35)" fg:x="161068" fg:w="428"/><text x="64.9269%" y="447.50"></text></g><g><title>pai_dalloc (71 samples, 0.03%)</title><rect x="64.8202%" y="421" width="0.0285%" height="15" fill="rgb(213,203,35)" fg:x="161425" fg:w="71"/><text x="65.0702%" y="431.50"></text></g><g><title>[libc.so.6] (354 samples, 0.14%)</title><rect x="64.8648%" y="421" width="0.1421%" height="15" fill="rgb(221,79,53)" fg:x="161536" fg:w="354"/><text x="65.1148%" y="431.50"></text></g><g><title>edata_base_get (45 samples, 0.02%)</title><rect x="65.0069%" y="405" width="0.0181%" height="15" fill="rgb(243,200,35)" fg:x="161890" fg:w="45"/><text x="65.2569%" y="415.50"></text></g><g><title>_rjem_je_ecache_dalloc (48 samples, 0.02%)</title><rect x="65.0069%" y="421" width="0.0193%" height="15" fill="rgb(248,60,25)" fg:x="161890" fg:w="48"/><text x="65.2569%" y="431.50"></text></g><g><title>atomic_load_zu (60 samples, 0.02%)</title><rect x="65.0848%" y="405" width="0.0241%" height="15" fill="rgb(227,53,46)" fg:x="162084" fg:w="60"/><text x="65.3348%" y="415.50"></text></g><g><title>rtree_leaf_elm_lookup (27 samples, 0.01%)</title><rect x="65.1314%" y="357" width="0.0108%" height="15" fill="rgb(216,120,32)" fg:x="162200" fg:w="27"/><text x="65.3814%" y="367.50"></text></g><g><title>_rjem_je_emap_update_edata_state (76 samples, 0.03%)</title><rect x="65.1178%" y="373" width="0.0305%" height="15" fill="rgb(220,134,1)" fg:x="162166" fg:w="76"/><text x="65.3678%" y="383.50"></text></g><g><title>_rjem_je_edata_heap_empty (222 samples, 0.09%)</title><rect x="65.1945%" y="357" width="0.0891%" height="15" fill="rgb(237,168,5)" fg:x="162357" fg:w="222"/><text x="65.4445%" y="367.50"></text></g><g><title>edata_heap_ph_cmp (317 samples, 0.13%)</title><rect x="65.3233%" y="325" width="0.1273%" height="15" fill="rgb(231,100,33)" fg:x="162678" fg:w="317"/><text x="65.5733%" y="335.50"></text></g><g><title>edata_snad_comp (317 samples, 0.13%)</title><rect x="65.3233%" y="309" width="0.1273%" height="15" fill="rgb(236,177,47)" fg:x="162678" fg:w="317"/><text x="65.5733%" y="319.50"></text></g><g><title>edata_cmp_summary_get (304 samples, 0.12%)</title><rect x="65.3286%" y="293" width="0.1221%" height="15" fill="rgb(235,7,49)" fg:x="162691" fg:w="304"/><text x="65.5786%" y="303.50"></text></g><g><title>edata_sn_get (299 samples, 0.12%)</title><rect x="65.3306%" y="277" width="0.1201%" height="15" fill="rgb(232,119,22)" fg:x="162696" fg:w="299"/><text x="65.5806%" y="287.50"></text></g><g><title>phn_merge (26 samples, 0.01%)</title><rect x="65.4522%" y="309" width="0.0104%" height="15" fill="rgb(254,73,53)" fg:x="162999" fg:w="26"/><text x="65.7022%" y="319.50"></text></g><g><title>ph_try_aux_merge_pair (36 samples, 0.01%)</title><rect x="65.4514%" y="325" width="0.0145%" height="15" fill="rgb(251,35,20)" fg:x="162997" fg:w="36"/><text x="65.7014%" y="335.50"></text></g><g><title>_rjem_je_edata_heap_insert (492 samples, 0.20%)</title><rect x="65.2836%" y="357" width="0.1976%" height="15" fill="rgb(241,119,20)" fg:x="162579" fg:w="492"/><text x="65.5336%" y="367.50"></text></g><g><title>ph_insert (471 samples, 0.19%)</title><rect x="65.2920%" y="341" width="0.1891%" height="15" fill="rgb(207,102,14)" fg:x="162600" fg:w="471"/><text x="65.5420%" y="351.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (96 samples, 0.04%)</title><rect x="65.4812%" y="357" width="0.0385%" height="15" fill="rgb(248,201,50)" fg:x="163071" fg:w="96"/><text x="65.7312%" y="367.50"></text></g><g><title>sz_psz2ind (25 samples, 0.01%)</title><rect x="65.5097%" y="341" width="0.0100%" height="15" fill="rgb(222,185,44)" fg:x="163142" fg:w="25"/><text x="65.7597%" y="351.50"></text></g><g><title>edata_cmp_summary_comp (28 samples, 0.01%)</title><rect x="65.5205%" y="357" width="0.0112%" height="15" fill="rgb(218,107,18)" fg:x="163169" fg:w="28"/><text x="65.7705%" y="367.50"></text></g><g><title>edata_list_inactive_append (198 samples, 0.08%)</title><rect x="65.5342%" y="357" width="0.0795%" height="15" fill="rgb(237,177,39)" fg:x="163203" fg:w="198"/><text x="65.7842%" y="367.50"></text></g><g><title>atomic_load_zu (44 samples, 0.02%)</title><rect x="65.6193%" y="341" width="0.0177%" height="15" fill="rgb(246,69,6)" fg:x="163415" fg:w="44"/><text x="65.8693%" y="351.50"></text></g><g><title>eset_stats_add (61 samples, 0.02%)</title><rect x="65.6177%" y="357" width="0.0245%" height="15" fill="rgb(234,208,37)" fg:x="163411" fg:w="61"/><text x="65.8677%" y="367.50"></text></g><g><title>fb_set (25 samples, 0.01%)</title><rect x="65.6422%" y="357" width="0.0100%" height="15" fill="rgb(225,4,6)" fg:x="163472" fg:w="25"/><text x="65.8922%" y="367.50"></text></g><g><title>extent_deactivate_locked (1,393 samples, 0.56%)</title><rect x="65.1121%" y="405" width="0.5594%" height="15" fill="rgb(233,45,0)" fg:x="162152" fg:w="1393"/><text x="65.3621%" y="415.50"></text></g><g><title>extent_deactivate_locked_impl (1,393 samples, 0.56%)</title><rect x="65.1121%" y="389" width="0.5594%" height="15" fill="rgb(226,136,5)" fg:x="162152" fg:w="1393"/><text x="65.3621%" y="399.50"></text></g><g><title>_rjem_je_eset_insert (1,303 samples, 0.52%)</title><rect x="65.1483%" y="373" width="0.5232%" height="15" fill="rgb(211,91,47)" fg:x="162242" fg:w="1303"/><text x="65.3983%" y="383.50"></text></g><g><title>sz_psz2ind (48 samples, 0.02%)</title><rect x="65.6522%" y="357" width="0.0193%" height="15" fill="rgb(242,88,51)" fg:x="163497" fg:w="48"/><text x="65.9022%" y="367.50"></text></g><g><title>rtree_leaf_elm_lookup (34 samples, 0.01%)</title><rect x="65.8430%" y="325" width="0.0137%" height="15" fill="rgb(230,91,28)" fg:x="163972" fg:w="34"/><text x="66.0930%" y="335.50"></text></g><g><title>rtree_leaf_elm_state_update (142 samples, 0.06%)</title><rect x="65.8566%" y="325" width="0.0570%" height="15" fill="rgb(254,186,29)" fg:x="164006" fg:w="142"/><text x="66.1066%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (123 samples, 0.05%)</title><rect x="65.8642%" y="309" width="0.0494%" height="15" fill="rgb(238,6,4)" fg:x="164025" fg:w="123"/><text x="66.1142%" y="319.50"></text></g><g><title>atomic_load_p (123 samples, 0.05%)</title><rect x="65.8642%" y="293" width="0.0494%" height="15" fill="rgb(221,151,16)" fg:x="164025" fg:w="123"/><text x="66.1142%" y="303.50"></text></g><g><title>_rjem_je_emap_update_edata_state (220 samples, 0.09%)</title><rect x="65.8257%" y="341" width="0.0883%" height="15" fill="rgb(251,143,52)" fg:x="163929" fg:w="220"/><text x="66.0757%" y="351.50"></text></g><g><title>edata_past_get (25 samples, 0.01%)</title><rect x="65.9140%" y="341" width="0.0100%" height="15" fill="rgb(206,90,15)" fg:x="164149" fg:w="25"/><text x="66.1640%" y="351.50"></text></g><g><title>edata_committed_get (287 samples, 0.12%)</title><rect x="65.9598%" y="325" width="0.1152%" height="15" fill="rgb(218,35,8)" fg:x="164263" fg:w="287"/><text x="66.2098%" y="335.50"></text></g><g><title>extent_can_acquire_neighbor (417 samples, 0.17%)</title><rect x="65.9241%" y="341" width="0.1674%" height="15" fill="rgb(239,215,6)" fg:x="164174" fg:w="417"/><text x="66.1741%" y="351.50"></text></g><g><title>extent_neighbor_head_state_mergeable (25 samples, 0.01%)</title><rect x="66.0815%" y="325" width="0.0100%" height="15" fill="rgb(245,116,39)" fg:x="164566" fg:w="25"/><text x="66.3315%" y="335.50"></text></g><g><title>rtree_leaf_elm_lookup (64 samples, 0.03%)</title><rect x="66.0915%" y="341" width="0.0257%" height="15" fill="rgb(242,65,28)" fg:x="164591" fg:w="64"/><text x="66.3415%" y="351.50"></text></g><g><title>rtree_leaf_elm_bits_decode (27 samples, 0.01%)</title><rect x="66.1172%" y="325" width="0.0108%" height="15" fill="rgb(252,132,53)" fg:x="164655" fg:w="27"/><text x="66.3672%" y="335.50"></text></g><g><title>rtree_leaf_elm_read (314 samples, 0.13%)</title><rect x="66.1172%" y="341" width="0.1261%" height="15" fill="rgb(224,159,50)" fg:x="164655" fg:w="314"/><text x="66.3672%" y="351.50"></text></g><g><title>rtree_leaf_elm_bits_read (287 samples, 0.12%)</title><rect x="66.1281%" y="325" width="0.1152%" height="15" fill="rgb(224,93,4)" fg:x="164682" fg:w="287"/><text x="66.3781%" y="335.50"></text></g><g><title>atomic_load_p (287 samples, 0.12%)</title><rect x="66.1281%" y="309" width="0.1152%" height="15" fill="rgb(208,81,34)" fg:x="164682" fg:w="287"/><text x="66.3781%" y="319.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (1,218 samples, 0.49%)</title><rect x="65.7566%" y="373" width="0.4891%" height="15" fill="rgb(233,92,54)" fg:x="163757" fg:w="1218"/><text x="66.0066%" y="383.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (1,192 samples, 0.48%)</title><rect x="65.7671%" y="357" width="0.4786%" height="15" fill="rgb(237,21,14)" fg:x="163783" fg:w="1192"/><text x="66.0171%" y="367.50"></text></g><g><title>_rjem_je_edata_heap_first (38 samples, 0.02%)</title><rect x="66.2907%" y="341" width="0.0153%" height="15" fill="rgb(249,128,51)" fg:x="165087" fg:w="38"/><text x="66.5407%" y="351.50"></text></g><g><title>phn_next_get (60 samples, 0.02%)</title><rect x="66.4039%" y="277" width="0.0241%" height="15" fill="rgb(223,129,24)" fg:x="165369" fg:w="60"/><text x="66.6539%" y="287.50"></text></g><g><title>ph_merge_children (84 samples, 0.03%)</title><rect x="66.3947%" y="309" width="0.0337%" height="15" fill="rgb(231,168,25)" fg:x="165346" fg:w="84"/><text x="66.6447%" y="319.50"></text></g><g><title>phn_merge_siblings (69 samples, 0.03%)</title><rect x="66.4007%" y="293" width="0.0277%" height="15" fill="rgb(224,39,20)" fg:x="165361" fg:w="69"/><text x="66.6507%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_remove (376 samples, 0.15%)</title><rect x="66.3059%" y="341" width="0.1510%" height="15" fill="rgb(225,152,53)" fg:x="165125" fg:w="376"/><text x="66.5559%" y="351.50"></text></g><g><title>ph_remove (346 samples, 0.14%)</title><rect x="66.3180%" y="325" width="0.1389%" height="15" fill="rgb(252,17,24)" fg:x="165155" fg:w="346"/><text x="66.5680%" y="335.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (152 samples, 0.06%)</title><rect x="66.4569%" y="341" width="0.0610%" height="15" fill="rgb(250,114,30)" fg:x="165501" fg:w="152"/><text x="66.7069%" y="351.50"></text></g><g><title>sz_psz2ind (35 samples, 0.01%)</title><rect x="66.5039%" y="325" width="0.0141%" height="15" fill="rgb(229,5,4)" fg:x="165618" fg:w="35"/><text x="66.7539%" y="335.50"></text></g><g><title>edata_list_inactive_remove (190 samples, 0.08%)</title><rect x="66.5264%" y="341" width="0.0763%" height="15" fill="rgb(225,176,49)" fg:x="165674" fg:w="190"/><text x="66.7764%" y="351.50"></text></g><g><title>atomic_load_zu (288 samples, 0.12%)</title><rect x="66.6071%" y="325" width="0.1156%" height="15" fill="rgb(224,221,49)" fg:x="165875" fg:w="288"/><text x="66.8571%" y="335.50"></text></g><g><title>eset_stats_sub (300 samples, 0.12%)</title><rect x="66.6063%" y="341" width="0.1205%" height="15" fill="rgb(253,169,27)" fg:x="165873" fg:w="300"/><text x="66.8563%" y="351.50"></text></g><g><title>_rjem_je_eset_remove (1,251 samples, 0.50%)</title><rect x="66.2598%" y="357" width="0.5023%" height="15" fill="rgb(211,206,16)" fg:x="165010" fg:w="1251"/><text x="66.5098%" y="367.50"></text></g><g><title>sz_psz2ind (65 samples, 0.03%)</title><rect x="66.7360%" y="341" width="0.0261%" height="15" fill="rgb(244,87,35)" fg:x="166196" fg:w="65"/><text x="66.9860%" y="351.50"></text></g><g><title>atomic_load_p (25 samples, 0.01%)</title><rect x="66.8348%" y="293" width="0.0100%" height="15" fill="rgb(246,28,10)" fg:x="166442" fg:w="25"/><text x="67.0848%" y="303.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (134 samples, 0.05%)</title><rect x="66.7982%" y="325" width="0.0538%" height="15" fill="rgb(229,12,44)" fg:x="166351" fg:w="134"/><text x="67.0482%" y="335.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (131 samples, 0.05%)</title><rect x="66.7994%" y="309" width="0.0526%" height="15" fill="rgb(210,145,37)" fg:x="166354" fg:w="131"/><text x="67.0494%" y="319.50"></text></g><g><title>ehooks_merge (213 samples, 0.09%)</title><rect x="66.7866%" y="341" width="0.0855%" height="15" fill="rgb(227,112,52)" fg:x="166322" fg:w="213"/><text x="67.0366%" y="351.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (50 samples, 0.02%)</title><rect x="66.8520%" y="325" width="0.0201%" height="15" fill="rgb(238,155,34)" fg:x="166485" fg:w="50"/><text x="67.1020%" y="335.50"></text></g><g><title>atomic_load_p (50 samples, 0.02%)</title><rect x="66.8520%" y="309" width="0.0201%" height="15" fill="rgb(239,226,36)" fg:x="166485" fg:w="50"/><text x="67.1020%" y="319.50"></text></g><g><title>[libc.so.6] (235 samples, 0.09%)</title><rect x="66.8870%" y="325" width="0.0944%" height="15" fill="rgb(230,16,23)" fg:x="166572" fg:w="235"/><text x="67.1370%" y="335.50"></text></g><g><title>edata_avail_ph_cmp (190 samples, 0.08%)</title><rect x="67.0235%" y="277" width="0.0763%" height="15" fill="rgb(236,171,36)" fg:x="166912" fg:w="190"/><text x="67.2735%" y="287.50"></text></g><g><title>edata_esnead_comp (190 samples, 0.08%)</title><rect x="67.0235%" y="261" width="0.0763%" height="15" fill="rgb(221,22,14)" fg:x="166912" fg:w="190"/><text x="67.2735%" y="271.50"></text></g><g><title>edata_esn_comp (174 samples, 0.07%)</title><rect x="67.0299%" y="245" width="0.0699%" height="15" fill="rgb(242,43,11)" fg:x="166928" fg:w="174"/><text x="67.2799%" y="255.50"></text></g><g><title>edata_esn_get (160 samples, 0.06%)</title><rect x="67.0356%" y="229" width="0.0642%" height="15" fill="rgb(232,69,23)" fg:x="166942" fg:w="160"/><text x="67.2856%" y="239.50"></text></g><g><title>edata_avail_ph_cmp (130 samples, 0.05%)</title><rect x="67.1014%" y="245" width="0.0522%" height="15" fill="rgb(216,180,54)" fg:x="167106" fg:w="130"/><text x="67.3514%" y="255.50"></text></g><g><title>edata_esnead_comp (130 samples, 0.05%)</title><rect x="67.1014%" y="229" width="0.0522%" height="15" fill="rgb(216,5,24)" fg:x="167106" fg:w="130"/><text x="67.3514%" y="239.50"></text></g><g><title>edata_esn_comp (118 samples, 0.05%)</title><rect x="67.1062%" y="213" width="0.0474%" height="15" fill="rgb(225,89,9)" fg:x="167118" fg:w="118"/><text x="67.3562%" y="223.50"></text></g><g><title>edata_esn_get (110 samples, 0.04%)</title><rect x="67.1094%" y="197" width="0.0442%" height="15" fill="rgb(243,75,33)" fg:x="167126" fg:w="110"/><text x="67.3594%" y="207.50"></text></g><g><title>phn_merge (165 samples, 0.07%)</title><rect x="67.1010%" y="261" width="0.0663%" height="15" fill="rgb(247,141,45)" fg:x="167105" fg:w="165"/><text x="67.3510%" y="271.50"></text></g><g><title>phn_merge_ordered (34 samples, 0.01%)</title><rect x="67.1536%" y="245" width="0.0137%" height="15" fill="rgb(232,177,36)" fg:x="167236" fg:w="34"/><text x="67.4036%" y="255.50"></text></g><g><title>ph_try_aux_merge_pair (214 samples, 0.09%)</title><rect x="67.1002%" y="277" width="0.0859%" height="15" fill="rgb(219,125,36)" fg:x="167103" fg:w="214"/><text x="67.3502%" y="287.50"></text></g><g><title>phn_link_init (30 samples, 0.01%)</title><rect x="67.1958%" y="277" width="0.0120%" height="15" fill="rgb(227,94,9)" fg:x="167341" fg:w="30"/><text x="67.4458%" y="287.50"></text></g><g><title>_rjem_je_edata_avail_insert (553 samples, 0.22%)</title><rect x="66.9922%" y="309" width="0.2221%" height="15" fill="rgb(240,34,52)" fg:x="166834" fg:w="553"/><text x="67.2422%" y="319.50"></text></g><g><title>ph_insert (533 samples, 0.21%)</title><rect x="67.0002%" y="293" width="0.2140%" height="15" fill="rgb(216,45,12)" fg:x="166854" fg:w="533"/><text x="67.2502%" y="303.50"></text></g><g><title>pthread_mutex_trylock (453 samples, 0.18%)</title><rect x="67.2255%" y="277" width="0.1819%" height="15" fill="rgb(246,21,19)" fg:x="167415" fg:w="453"/><text x="67.4755%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (469 samples, 0.19%)</title><rect x="67.2199%" y="293" width="0.1883%" height="15" fill="rgb(213,98,42)" fg:x="167401" fg:w="469"/><text x="67.4699%" y="303.50"></text></g><g><title>malloc_mutex_lock (472 samples, 0.19%)</title><rect x="67.2191%" y="309" width="0.1895%" height="15" fill="rgb(250,136,47)" fg:x="167399" fg:w="472"/><text x="67.4691%" y="319.50"></text></g><g><title>_rjem_je_edata_cache_put (1,064 samples, 0.43%)</title><rect x="66.9822%" y="325" width="0.4272%" height="15" fill="rgb(251,124,27)" fg:x="166809" fg:w="1064"/><text x="67.2322%" y="335.50"></text></g><g><title>emap_rtree_write_acquired (41 samples, 0.02%)</title><rect x="67.4371%" y="309" width="0.0165%" height="15" fill="rgb(229,180,14)" fg:x="167942" fg:w="41"/><text x="67.6871%" y="319.50"></text></g><g><title>rtree_leaf_elm_write (34 samples, 0.01%)</title><rect x="67.4399%" y="293" width="0.0137%" height="15" fill="rgb(245,216,25)" fg:x="167949" fg:w="34"/><text x="67.6899%" y="303.50"></text></g><g><title>_rjem_je_emap_merge_commit (135 samples, 0.05%)</title><rect x="67.4094%" y="325" width="0.0542%" height="15" fill="rgb(251,43,5)" fg:x="167873" fg:w="135"/><text x="67.6594%" y="335.50"></text></g><g><title>rtree_leaf_elm_write (25 samples, 0.01%)</title><rect x="67.4536%" y="309" width="0.0100%" height="15" fill="rgb(250,128,24)" fg:x="167983" fg:w="25"/><text x="67.7036%" y="319.50"></text></g><g><title>rtree_leaf_elm_write_commit (25 samples, 0.01%)</title><rect x="67.4536%" y="293" width="0.0100%" height="15" fill="rgb(217,117,27)" fg:x="167983" fg:w="25"/><text x="67.7036%" y="303.50"></text></g><g><title>atomic_store_p (25 samples, 0.01%)</title><rect x="67.4536%" y="277" width="0.0100%" height="15" fill="rgb(245,147,4)" fg:x="167983" fg:w="25"/><text x="67.7036%" y="287.50"></text></g><g><title>edata_base_get (27 samples, 0.01%)</title><rect x="67.4873%" y="293" width="0.0108%" height="15" fill="rgb(242,201,35)" fg:x="168067" fg:w="27"/><text x="67.7373%" y="303.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (121 samples, 0.05%)</title><rect x="67.4789%" y="309" width="0.0486%" height="15" fill="rgb(218,181,1)" fg:x="168046" fg:w="121"/><text x="67.7289%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (61 samples, 0.02%)</title><rect x="67.5030%" y="293" width="0.0245%" height="15" fill="rgb(222,6,29)" fg:x="168106" fg:w="61"/><text x="67.7530%" y="303.50"></text></g><g><title>_rjem_je_emap_merge_prepare (162 samples, 0.07%)</title><rect x="67.4636%" y="325" width="0.0651%" height="15" fill="rgb(208,186,3)" fg:x="168008" fg:w="162"/><text x="67.7136%" y="335.50"></text></g><g><title>pthread_mutex_unlock (120 samples, 0.05%)</title><rect x="67.5431%" y="325" width="0.0482%" height="15" fill="rgb(216,36,26)" fg:x="168206" fg:w="120"/><text x="67.7931%" y="335.50"></text></g><g><title>extent_try_coalesce_large (4,784 samples, 1.92%)</title><rect x="65.6767%" y="405" width="1.9210%" height="15" fill="rgb(248,201,23)" fg:x="163558" fg:w="4784"/><text x="65.9267%" y="415.50">e..</text></g><g><title>extent_try_coalesce_impl (4,755 samples, 1.91%)</title><rect x="65.6884%" y="389" width="1.9094%" height="15" fill="rgb(251,170,31)" fg:x="163587" fg:w="4755"/><text x="65.9384%" y="399.50">e..</text></g><g><title>extent_coalesce (3,362 samples, 1.35%)</title><rect x="66.2477%" y="373" width="1.3500%" height="15" fill="rgb(207,110,25)" fg:x="164980" fg:w="3362"/><text x="66.4977%" y="383.50"></text></g><g><title>extent_merge_impl (2,081 samples, 0.84%)</title><rect x="66.7621%" y="357" width="0.8356%" height="15" fill="rgb(250,54,15)" fg:x="166261" fg:w="2081"/><text x="67.0121%" y="367.50"></text></g><g><title>extent_merge_impl (1,807 samples, 0.73%)</title><rect x="66.8721%" y="341" width="0.7256%" height="15" fill="rgb(227,68,33)" fg:x="166535" fg:w="1807"/><text x="67.1221%" y="351.50"></text></g><g><title>atomic_load_b (32 samples, 0.01%)</title><rect x="67.6058%" y="373" width="0.0128%" height="15" fill="rgb(238,34,41)" fg:x="168362" fg:w="32"/><text x="67.8558%" y="383.50"></text></g><g><title>pthread_mutex_trylock (74 samples, 0.03%)</title><rect x="67.6190%" y="357" width="0.0297%" height="15" fill="rgb(220,11,15)" fg:x="168395" fg:w="74"/><text x="67.8690%" y="367.50"></text></g><g><title>malloc_mutex_trylock_final (77 samples, 0.03%)</title><rect x="67.6186%" y="373" width="0.0309%" height="15" fill="rgb(246,111,35)" fg:x="168394" fg:w="77"/><text x="67.8686%" y="383.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (169 samples, 0.07%)</title><rect x="67.5989%" y="389" width="0.0679%" height="15" fill="rgb(209,88,53)" fg:x="168345" fg:w="169"/><text x="67.8489%" y="399.50"></text></g><g><title>spin_cpu_spinwait (43 samples, 0.02%)</title><rect x="67.6495%" y="373" width="0.0173%" height="15" fill="rgb(231,185,47)" fg:x="168471" fg:w="43"/><text x="67.8995%" y="383.50"></text></g><g><title>pthread_mutex_trylock (594 samples, 0.24%)</title><rect x="67.6696%" y="373" width="0.2385%" height="15" fill="rgb(233,154,1)" fg:x="168521" fg:w="594"/><text x="67.9196%" y="383.50"></text></g><g><title>malloc_mutex_trylock_final (674 samples, 0.27%)</title><rect x="67.6676%" y="389" width="0.2706%" height="15" fill="rgb(225,15,46)" fg:x="168516" fg:w="674"/><text x="67.9176%" y="399.50"></text></g><g><title>pthread_mutex_trylock@plt (75 samples, 0.03%)</title><rect x="67.9081%" y="373" width="0.0301%" height="15" fill="rgb(211,135,41)" fg:x="169115" fg:w="75"/><text x="68.1581%" y="383.50"></text></g><g><title>malloc_mutex_lock (850 samples, 0.34%)</title><rect x="67.5977%" y="405" width="0.3413%" height="15" fill="rgb(208,54,0)" fg:x="168342" fg:w="850"/><text x="67.8477%" y="415.50"></text></g><g><title>_rjem_je_extent_record (7,258 samples, 2.91%)</title><rect x="65.0266%" y="421" width="2.9144%" height="15" fill="rgb(244,136,14)" fg:x="161939" fg:w="7258"/><text x="65.2766%" y="431.50">_r..</text></g><g><title>pac_ehooks_get (134 samples, 0.05%)</title><rect x="67.9419%" y="421" width="0.0538%" height="15" fill="rgb(241,56,14)" fg:x="169199" fg:w="134"/><text x="68.1919%" y="431.50"></text></g><g><title>pthread_mutex_unlock (66 samples, 0.03%)</title><rect x="67.9957%" y="421" width="0.0265%" height="15" fill="rgb(205,80,24)" fg:x="169333" fg:w="66"/><text x="68.2457%" y="431.50"></text></g><g><title>large_dalloc_finish_impl (8,453 samples, 3.39%)</title><rect x="64.6291%" y="453" width="3.3943%" height="15" fill="rgb(220,57,4)" fg:x="160949" fg:w="8453"/><text x="64.8791%" y="463.50">lar..</text></g><g><title>pac_dalloc_impl (7,906 samples, 3.17%)</title><rect x="64.8487%" y="437" width="3.1747%" height="15" fill="rgb(226,193,50)" fg:x="161496" fg:w="7906"/><text x="65.0987%" y="447.50">pac..</text></g><g><title>locked_inc_u64 (421 samples, 0.17%)</title><rect x="68.1161%" y="405" width="0.1691%" height="15" fill="rgb(231,168,22)" fg:x="169633" fg:w="421"/><text x="68.3661%" y="415.50"></text></g><g><title>atomic_fetch_add_u64 (421 samples, 0.17%)</title><rect x="68.1161%" y="389" width="0.1691%" height="15" fill="rgb(254,215,14)" fg:x="169633" fg:w="421"/><text x="68.3661%" y="399.50"></text></g><g><title>arena_large_dalloc_stats_update (505 samples, 0.20%)</title><rect x="68.1061%" y="421" width="0.2028%" height="15" fill="rgb(211,115,16)" fg:x="169608" fg:w="505"/><text x="68.3561%" y="431.50"></text></g><g><title>sz_size2index (59 samples, 0.02%)</title><rect x="68.2852%" y="405" width="0.0237%" height="15" fill="rgb(236,210,16)" fg:x="170054" fg:w="59"/><text x="68.5352%" y="415.50"></text></g><g><title>sz_size2index_compute (59 samples, 0.02%)</title><rect x="68.2852%" y="389" width="0.0237%" height="15" fill="rgb(221,94,12)" fg:x="170054" fg:w="59"/><text x="68.5352%" y="399.50"></text></g><g><title>_rjem_je_large_dalloc (10,081 samples, 4.05%)</title><rect x="64.2721%" y="469" width="4.0480%" height="15" fill="rgb(235,218,49)" fg:x="160060" fg:w="10081"/><text x="64.5221%" y="479.50">_rje..</text></g><g><title>large_dalloc_prep_impl (739 samples, 0.30%)</title><rect x="68.0234%" y="453" width="0.2967%" height="15" fill="rgb(217,114,14)" fg:x="169402" fg:w="739"/><text x="68.2734%" y="463.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (534 samples, 0.21%)</title><rect x="68.1057%" y="437" width="0.2144%" height="15" fill="rgb(216,145,22)" fg:x="169607" fg:w="534"/><text x="68.3557%" y="447.50"></text></g><g><title>edata_usize_get (28 samples, 0.01%)</title><rect x="68.3089%" y="421" width="0.0112%" height="15" fill="rgb(217,112,39)" fg:x="170113" fg:w="28"/><text x="68.5589%" y="431.50"></text></g><g><title>rtree_leaf_elm_lookup (61 samples, 0.02%)</title><rect x="68.3209%" y="437" width="0.0245%" height="15" fill="rgb(225,85,32)" fg:x="170143" fg:w="61"/><text x="68.5709%" y="447.50"></text></g><g><title>isdalloct (10,795 samples, 4.33%)</title><rect x="64.2111%" y="517" width="4.3347%" height="15" fill="rgb(245,209,47)" fg:x="159908" fg:w="10795"/><text x="64.4611%" y="527.50">isdal..</text></g><g><title>arena_sdalloc (10,795 samples, 4.33%)</title><rect x="64.2111%" y="501" width="4.3347%" height="15" fill="rgb(218,220,15)" fg:x="159908" fg:w="10795"/><text x="64.4611%" y="511.50">arena..</text></g><g><title>arena_dalloc_large (10,783 samples, 4.33%)</title><rect x="64.2159%" y="485" width="4.3299%" height="15" fill="rgb(222,202,31)" fg:x="159920" fg:w="10783"/><text x="64.4659%" y="495.50">arena..</text></g><g><title>emap_edata_lookup (560 samples, 0.22%)</title><rect x="68.3209%" y="469" width="0.2249%" height="15" fill="rgb(243,203,4)" fg:x="170143" fg:w="560"/><text x="68.5709%" y="479.50"></text></g><g><title>rtree_read (560 samples, 0.22%)</title><rect x="68.3209%" y="453" width="0.2249%" height="15" fill="rgb(237,92,17)" fg:x="170143" fg:w="560"/><text x="68.5709%" y="463.50"></text></g><g><title>rtree_leaf_elm_read (499 samples, 0.20%)</title><rect x="68.3454%" y="437" width="0.2004%" height="15" fill="rgb(231,119,7)" fg:x="170204" fg:w="499"/><text x="68.5954%" y="447.50"></text></g><g><title>rtree_leaf_elm_bits_read (493 samples, 0.20%)</title><rect x="68.3478%" y="421" width="0.1980%" height="15" fill="rgb(237,82,41)" fg:x="170210" fg:w="493"/><text x="68.5978%" y="431.50"></text></g><g><title>atomic_load_p (493 samples, 0.20%)</title><rect x="68.3478%" y="405" width="0.1980%" height="15" fill="rgb(226,81,48)" fg:x="170210" fg:w="493"/><text x="68.5978%" y="415.50"></text></g><g><title>sz_size2index (82 samples, 0.03%)</title><rect x="68.5458%" y="517" width="0.0329%" height="15" fill="rgb(234,70,51)" fg:x="170703" fg:w="82"/><text x="68.7958%" y="527.50"></text></g><g><title>sz_size2index_compute (79 samples, 0.03%)</title><rect x="68.5470%" y="501" width="0.0317%" height="15" fill="rgb(251,86,4)" fg:x="170706" fg:w="79"/><text x="68.7970%" y="511.50"></text></g><g><title>_rjem_je_peak_dalloc_event_handler (67 samples, 0.03%)</title><rect x="68.5855%" y="485" width="0.0269%" height="15" fill="rgb(244,144,28)" fg:x="170802" fg:w="67"/><text x="68.8355%" y="495.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (42 samples, 0.02%)</title><rect x="68.6727%" y="469" width="0.0169%" height="15" fill="rgb(232,161,39)" fg:x="171019" fg:w="42"/><text x="68.9227%" y="479.50"></text></g><g><title>cache_bin_ncached_get_local (51 samples, 0.02%)</title><rect x="68.7582%" y="437" width="0.0205%" height="15" fill="rgb(247,34,51)" fg:x="171232" fg:w="51"/><text x="69.0082%" y="447.50"></text></g><g><title>cache_bin_ncached_get_internal (51 samples, 0.02%)</title><rect x="68.7582%" y="421" width="0.0205%" height="15" fill="rgb(225,132,2)" fg:x="171232" fg:w="51"/><text x="69.0082%" y="431.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (101 samples, 0.04%)</title><rect x="68.7494%" y="453" width="0.0406%" height="15" fill="rgb(209,159,44)" fg:x="171210" fg:w="101"/><text x="68.9994%" y="463.50"></text></g><g><title>cache_bin_nstashed_get_local (28 samples, 0.01%)</title><rect x="68.7787%" y="437" width="0.0112%" height="15" fill="rgb(251,214,1)" fg:x="171283" fg:w="28"/><text x="69.0287%" y="447.50"></text></g><g><title>cache_bin_nstashed_get_internal (28 samples, 0.01%)</title><rect x="68.7787%" y="421" width="0.0112%" height="15" fill="rgb(247,84,47)" fg:x="171283" fg:w="28"/><text x="69.0287%" y="431.50"></text></g><g><title>[libc.so.6] (38 samples, 0.02%)</title><rect x="68.7960%" y="389" width="0.0153%" height="15" fill="rgb(240,111,43)" fg:x="171326" fg:w="38"/><text x="69.0460%" y="399.50"></text></g><g><title>cache_bin_finish_flush (49 samples, 0.02%)</title><rect x="68.7947%" y="405" width="0.0197%" height="15" fill="rgb(215,214,35)" fg:x="171323" fg:w="49"/><text x="69.0447%" y="415.50"></text></g><g><title>_rjem_je_extent_record (34 samples, 0.01%)</title><rect x="68.8349%" y="357" width="0.0137%" height="15" fill="rgb(248,207,23)" fg:x="171423" fg:w="34"/><text x="69.0849%" y="367.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (55 samples, 0.02%)</title><rect x="68.8289%" y="389" width="0.0221%" height="15" fill="rgb(214,186,4)" fg:x="171408" fg:w="55"/><text x="69.0789%" y="399.50"></text></g><g><title>pac_dalloc_impl (45 samples, 0.02%)</title><rect x="68.8329%" y="373" width="0.0181%" height="15" fill="rgb(220,133,22)" fg:x="171418" fg:w="45"/><text x="69.0829%" y="383.50"></text></g><g><title>edata_arena_ind_get (41 samples, 0.02%)</title><rect x="68.8730%" y="389" width="0.0165%" height="15" fill="rgb(239,134,19)" fg:x="171518" fg:w="41"/><text x="69.1230%" y="399.50"></text></g><g><title>malloc_mutex_trylock_final (106 samples, 0.04%)</title><rect x="68.8899%" y="373" width="0.0426%" height="15" fill="rgb(250,140,9)" fg:x="171560" fg:w="106"/><text x="69.1399%" y="383.50"></text></g><g><title>pthread_mutex_trylock (105 samples, 0.04%)</title><rect x="68.8903%" y="357" width="0.0422%" height="15" fill="rgb(225,59,14)" fg:x="171561" fg:w="105"/><text x="69.1403%" y="367.50"></text></g><g><title>malloc_mutex_lock (115 samples, 0.05%)</title><rect x="68.8895%" y="389" width="0.0462%" height="15" fill="rgb(214,152,51)" fg:x="171559" fg:w="115"/><text x="69.1395%" y="399.50"></text></g><g><title>rtree_leaf_elm_read (85 samples, 0.03%)</title><rect x="68.9799%" y="357" width="0.0341%" height="15" fill="rgb(251,227,43)" fg:x="171784" fg:w="85"/><text x="69.2299%" y="367.50"></text></g><g><title>rtree_leaf_elm_bits_read (83 samples, 0.03%)</title><rect x="68.9807%" y="341" width="0.0333%" height="15" fill="rgb(241,96,17)" fg:x="171786" fg:w="83"/><text x="69.2307%" y="351.50"></text></g><g><title>atomic_load_p (83 samples, 0.03%)</title><rect x="68.9807%" y="325" width="0.0333%" height="15" fill="rgb(234,198,43)" fg:x="171786" fg:w="83"/><text x="69.2307%" y="335.50"></text></g><g><title>tcache_bin_flush_metadata_visitor (37 samples, 0.01%)</title><rect x="69.0140%" y="357" width="0.0149%" height="15" fill="rgb(220,108,29)" fg:x="171869" fg:w="37"/><text x="69.2640%" y="367.50"></text></g><g><title>util_prefetch_write_range (37 samples, 0.01%)</title><rect x="69.0140%" y="341" width="0.0149%" height="15" fill="rgb(226,163,33)" fg:x="171869" fg:w="37"/><text x="69.2640%" y="351.50"></text></g><g><title>util_prefetch_write (37 samples, 0.01%)</title><rect x="69.0140%" y="325" width="0.0149%" height="15" fill="rgb(205,194,45)" fg:x="171869" fg:w="37"/><text x="69.2640%" y="335.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (224 samples, 0.09%)</title><rect x="68.9425%" y="389" width="0.0899%" height="15" fill="rgb(206,143,44)" fg:x="171691" fg:w="224"/><text x="69.1925%" y="399.50"></text></g><g><title>emap_edata_lookup_batch (218 samples, 0.09%)</title><rect x="68.9449%" y="373" width="0.0875%" height="15" fill="rgb(236,136,36)" fg:x="171697" fg:w="218"/><text x="69.1949%" y="383.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (605 samples, 0.24%)</title><rect x="68.7911%" y="437" width="0.2429%" height="15" fill="rgb(249,172,42)" fg:x="171314" fg:w="605"/><text x="69.0411%" y="447.50"></text></g><g><title>tcache_bin_flush_bottom (598 samples, 0.24%)</title><rect x="68.7939%" y="421" width="0.2401%" height="15" fill="rgb(216,139,23)" fg:x="171321" fg:w="598"/><text x="69.0439%" y="431.50"></text></g><g><title>tcache_bin_flush_impl (546 samples, 0.22%)</title><rect x="68.8148%" y="405" width="0.2192%" height="15" fill="rgb(207,166,20)" fg:x="171373" fg:w="546"/><text x="69.0648%" y="415.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (866 samples, 0.35%)</title><rect x="68.6899%" y="469" width="0.3477%" height="15" fill="rgb(210,209,22)" fg:x="171062" fg:w="866"/><text x="68.9399%" y="479.50"></text></g><g><title>tcache_gc_small (617 samples, 0.25%)</title><rect x="68.7899%" y="453" width="0.2478%" height="15" fill="rgb(232,118,20)" fg:x="171311" fg:w="617"/><text x="69.0399%" y="463.50"></text></g><g><title>atomic_fence (54 samples, 0.02%)</title><rect x="69.0622%" y="405" width="0.0217%" height="15" fill="rgb(238,113,42)" fg:x="171989" fg:w="54"/><text x="69.3122%" y="415.50"></text></g><g><title>te_adjust_thresholds_helper (80 samples, 0.03%)</title><rect x="69.0582%" y="469" width="0.0321%" height="15" fill="rgb(231,42,5)" fg:x="171979" fg:w="80"/><text x="69.3082%" y="479.50"></text></g><g><title>te_ctx_next_event_set (76 samples, 0.03%)</title><rect x="69.0598%" y="453" width="0.0305%" height="15" fill="rgb(243,166,24)" fg:x="171983" fg:w="76"/><text x="69.3098%" y="463.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (73 samples, 0.03%)</title><rect x="69.0610%" y="437" width="0.0293%" height="15" fill="rgb(237,226,12)" fg:x="171986" fg:w="73"/><text x="69.3110%" y="447.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (71 samples, 0.03%)</title><rect x="69.0618%" y="421" width="0.0285%" height="15" fill="rgb(229,133,24)" fg:x="171988" fg:w="71"/><text x="69.3118%" y="431.50"></text></g><g><title>_rjem_je_te_event_trigger (1,210 samples, 0.49%)</title><rect x="68.6128%" y="485" width="0.4859%" height="15" fill="rgb(238,33,43)" fg:x="170870" fg:w="1210"/><text x="68.8628%" y="495.50"></text></g><g><title>isfree (12,194 samples, 4.90%)</title><rect x="64.2111%" y="533" width="4.8965%" height="15" fill="rgb(227,59,38)" fg:x="159908" fg:w="12194"/><text x="64.4611%" y="543.50">isfree</text></g><g><title>thread_dalloc_event (1,317 samples, 0.53%)</title><rect x="68.5787%" y="517" width="0.5288%" height="15" fill="rgb(230,97,0)" fg:x="170785" fg:w="1317"/><text x="68.8287%" y="527.50"></text></g><g><title>te_event_advance (1,317 samples, 0.53%)</title><rect x="68.5787%" y="501" width="0.5288%" height="15" fill="rgb(250,173,50)" fg:x="170785" fg:w="1317"/><text x="68.8287%" y="511.50"></text></g><g><title>_rjem_je_sdallocx_default (12,464 samples, 5.00%)</title><rect x="64.1420%" y="549" width="5.0049%" height="15" fill="rgb(240,15,50)" fg:x="159736" fg:w="12464"/><text x="64.3920%" y="559.50">_rjem_..</text></g><g><title>tsd_fetch_min (91 samples, 0.04%)</title><rect x="69.1104%" y="533" width="0.0365%" height="15" fill="rgb(221,93,22)" fg:x="172109" fg:w="91"/><text x="69.3604%" y="543.50"></text></g><g><title>tsd_fetch_impl (91 samples, 0.04%)</title><rect x="69.1104%" y="517" width="0.0365%" height="15" fill="rgb(245,180,53)" fg:x="172109" fg:w="91"/><text x="69.3604%" y="527.50"></text></g><g><title>tsd_state_get (80 samples, 0.03%)</title><rect x="69.1148%" y="501" width="0.0321%" height="15" fill="rgb(231,88,51)" fg:x="172120" fg:w="80"/><text x="69.3648%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,665 samples, 5.09%)</title><rect x="64.1416%" y="613" width="5.0856%" height="15" fill="rgb(240,58,21)" fg:x="159735" fg:w="12665"/><text x="64.3916%" y="623.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (12,665 samples, 5.09%)</title><rect x="64.1416%" y="597" width="5.0856%" height="15" fill="rgb(237,21,10)" fg:x="159735" fg:w="12665"/><text x="64.3916%" y="607.50">alloc:..</text></g><g><title>__rust_dealloc (12,665 samples, 5.09%)</title><rect x="64.1416%" y="581" width="5.0856%" height="15" fill="rgb(218,43,11)" fg:x="159735" fg:w="12665"/><text x="64.3916%" y="591.50">__rust..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (12,665 samples, 5.09%)</title><rect x="64.1416%" y="565" width="5.0856%" height="15" fill="rgb(218,221,29)" fg:x="159735" fg:w="12665"/><text x="64.3916%" y="575.50">&lt;tikv_..</text></g><g><title>_rjem_sdallocx (199 samples, 0.08%)</title><rect x="69.1473%" y="549" width="0.0799%" height="15" fill="rgb(214,118,42)" fg:x="172201" fg:w="199"/><text x="69.3973%" y="559.50"></text></g><g><title>free_fastpath (161 samples, 0.06%)</title><rect x="69.1626%" y="533" width="0.0646%" height="15" fill="rgb(251,200,26)" fg:x="172239" fg:w="161"/><text x="69.4126%" y="543.50"></text></g><g><title>core::mem::drop (12,763 samples, 5.12%)</title><rect x="64.1034%" y="725" width="5.1250%" height="15" fill="rgb(237,101,39)" fg:x="159640" fg:w="12763"/><text x="64.3534%" y="735.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (12,763 samples, 5.12%)</title><rect x="64.1034%" y="709" width="5.1250%" height="15" fill="rgb(251,117,11)" fg:x="159640" fg:w="12763"/><text x="64.3534%" y="719.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (12,668 samples, 5.09%)</title><rect x="64.1416%" y="693" width="5.0868%" height="15" fill="rgb(216,223,23)" fg:x="159735" fg:w="12668"/><text x="64.3916%" y="703.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12,668 samples, 5.09%)</title><rect x="64.1416%" y="677" width="5.0868%" height="15" fill="rgb(251,54,12)" fg:x="159735" fg:w="12668"/><text x="64.3916%" y="687.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12,668 samples, 5.09%)</title><rect x="64.1416%" y="661" width="5.0868%" height="15" fill="rgb(254,176,54)" fg:x="159735" fg:w="12668"/><text x="64.3916%" y="671.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,668 samples, 5.09%)</title><rect x="64.1416%" y="645" width="5.0868%" height="15" fill="rgb(210,32,8)" fg:x="159735" fg:w="12668"/><text x="64.3916%" y="655.50">&lt;alloc..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (12,668 samples, 5.09%)</title><rect x="64.1416%" y="629" width="5.0868%" height="15" fill="rgb(235,52,38)" fg:x="159735" fg:w="12668"/><text x="64.3916%" y="639.50">alloc:..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (761 samples, 0.31%)</title><rect x="69.2284%" y="725" width="0.3056%" height="15" fill="rgb(231,4,44)" fg:x="172403" fg:w="761"/><text x="69.4784%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (761 samples, 0.31%)</title><rect x="69.2284%" y="709" width="0.3056%" height="15" fill="rgb(249,2,32)" fg:x="172403" fg:w="761"/><text x="69.4784%" y="719.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (24,835 samples, 9.97%)</title><rect x="59.5683%" y="917" width="9.9725%" height="15" fill="rgb(224,65,26)" fg:x="148346" fg:w="24835"/><text x="59.8183%" y="927.50">epoxy_server::..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (13,748 samples, 5.52%)</title><rect x="64.0203%" y="901" width="5.5205%" height="15" fill="rgb(250,73,40)" fg:x="159433" fg:w="13748"/><text x="64.2703%" y="911.50">tokio::..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (13,748 samples, 5.52%)</title><rect x="64.0203%" y="885" width="5.5205%" height="15" fill="rgb(253,177,16)" fg:x="159433" fg:w="13748"/><text x="64.2703%" y="895.50">&lt;tokio_..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (13,748 samples, 5.52%)</title><rect x="64.0203%" y="869" width="5.5205%" height="15" fill="rgb(217,32,34)" fg:x="159433" fg:w="13748"/><text x="64.2703%" y="879.50">&lt;wisp_m..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (13,748 samples, 5.52%)</title><rect x="64.0203%" y="853" width="5.5205%" height="15" fill="rgb(212,7,10)" fg:x="159433" fg:w="13748"/><text x="64.2703%" y="863.50">&lt;future..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (13,728 samples, 5.51%)</title><rect x="64.0283%" y="837" width="5.5125%" height="15" fill="rgb(245,89,8)" fg:x="159453" fg:w="13728"/><text x="64.2783%" y="847.50">core::p..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (13,728 samples, 5.51%)</title><rect x="64.0283%" y="821" width="5.5125%" height="15" fill="rgb(237,16,53)" fg:x="159453" fg:w="13728"/><text x="64.2783%" y="831.50">core::p..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (13,728 samples, 5.51%)</title><rect x="64.0283%" y="805" width="5.5125%" height="15" fill="rgb(250,204,30)" fg:x="159453" fg:w="13728"/><text x="64.2783%" y="815.50">&lt;bytes:..</text></g><g><title>bytes::bytes_mut::shared_v_drop (13,546 samples, 5.44%)</title><rect x="64.1014%" y="789" width="5.4394%" height="15" fill="rgb(208,77,27)" fg:x="159635" fg:w="13546"/><text x="64.3514%" y="799.50">bytes::..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (13,546 samples, 5.44%)</title><rect x="64.1014%" y="773" width="5.4394%" height="15" fill="rgb(250,204,28)" fg:x="159635" fg:w="13546"/><text x="64.3514%" y="783.50">&lt;core::..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (13,546 samples, 5.44%)</title><rect x="64.1014%" y="757" width="5.4394%" height="15" fill="rgb(244,63,21)" fg:x="159635" fg:w="13546"/><text x="64.3514%" y="767.50">bytes::..</text></g><g><title>bytes::bytes_mut::release_shared (13,545 samples, 5.44%)</title><rect x="64.1018%" y="741" width="5.4390%" height="15" fill="rgb(236,85,44)" fg:x="159636" fg:w="13545"/><text x="64.3518%" y="751.50">bytes::..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.01%)</title><rect x="70.0231%" y="869" width="0.0100%" height="15" fill="rgb(215,98,4)" fg:x="174382" fg:w="25"/><text x="70.2731%" y="879.50"></text></g><g><title>[libc.so.6] (1,535 samples, 0.62%)</title><rect x="71.4377%" y="677" width="0.6164%" height="15" fill="rgb(235,38,11)" fg:x="177905" fg:w="1535"/><text x="71.6877%" y="687.50"></text></g><g><title>recv (4,631 samples, 1.86%)</title><rect x="70.4042%" y="693" width="1.8596%" height="15" fill="rgb(254,186,25)" fg:x="175331" fg:w="4631"/><text x="70.6542%" y="703.50">r..</text></g><g><title>[unknown] (522 samples, 0.21%)</title><rect x="72.0541%" y="677" width="0.2096%" height="15" fill="rgb(225,55,31)" fg:x="179440" fg:w="522"/><text x="72.3041%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (4,861 samples, 1.95%)</title><rect x="70.3989%" y="821" width="1.9519%" height="15" fill="rgb(211,15,21)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="831.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4,861 samples, 1.95%)</title><rect x="70.3989%" y="805" width="1.9519%" height="15" fill="rgb(215,187,41)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="815.50">m..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (4,861 samples, 1.95%)</title><rect x="70.3989%" y="789" width="1.9519%" height="15" fill="rgb(248,69,32)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="799.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (4,861 samples, 1.95%)</title><rect x="70.3989%" y="773" width="1.9519%" height="15" fill="rgb(252,102,52)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="783.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (4,861 samples, 1.95%)</title><rect x="70.3989%" y="757" width="1.9519%" height="15" fill="rgb(253,140,32)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="767.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (4,861 samples, 1.95%)</title><rect x="70.3989%" y="741" width="1.9519%" height="15" fill="rgb(216,56,42)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="751.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::read (4,861 samples, 1.95%)</title><rect x="70.3989%" y="725" width="1.9519%" height="15" fill="rgb(216,184,14)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="735.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (4,861 samples, 1.95%)</title><rect x="70.3989%" y="709" width="1.9519%" height="15" fill="rgb(237,187,27)" fg:x="175318" fg:w="4861"/><text x="70.6489%" y="719.50">s..</text></g><g><title>std::sys::pal::unix::cvt (217 samples, 0.09%)</title><rect x="72.2637%" y="693" width="0.0871%" height="15" fill="rgb(219,65,3)" fg:x="179962" fg:w="217"/><text x="72.5137%" y="703.50"></text></g><g><title>std::io::error::Error::last_os_error (190 samples, 0.08%)</title><rect x="72.2746%" y="677" width="0.0763%" height="15" fill="rgb(245,83,25)" fg:x="179989" fg:w="190"/><text x="72.5246%" y="687.50"></text></g><g><title>std::sys::pal::unix::os::errno (173 samples, 0.07%)</title><rect x="72.2814%" y="661" width="0.0695%" height="15" fill="rgb(214,205,45)" fg:x="180006" fg:w="173"/><text x="72.5314%" y="671.50"></text></g><g><title>__errno_location (173 samples, 0.07%)</title><rect x="72.2814%" y="645" width="0.0695%" height="15" fill="rgb(241,20,18)" fg:x="180006" fg:w="173"/><text x="72.5314%" y="655.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (177 samples, 0.07%)</title><rect x="72.3637%" y="805" width="0.0711%" height="15" fill="rgb(232,163,23)" fg:x="180211" fg:w="177"/><text x="72.6137%" y="815.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (177 samples, 0.07%)</title><rect x="72.3637%" y="789" width="0.0711%" height="15" fill="rgb(214,5,46)" fg:x="180211" fg:w="177"/><text x="72.6137%" y="799.50"></text></g><g><title>std::io::error::Error::kind (218 samples, 0.09%)</title><rect x="72.3593%" y="821" width="0.0875%" height="15" fill="rgb(229,78,17)" fg:x="180200" fg:w="218"/><text x="72.6093%" y="831.50"></text></g><g><title>std::sys::pal::unix::decode_error_kind (30 samples, 0.01%)</title><rect x="72.4348%" y="805" width="0.0120%" height="15" fill="rgb(248,89,10)" fg:x="180388" fg:w="30"/><text x="72.6848%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (93 samples, 0.04%)</title><rect x="72.4468%" y="805" width="0.0373%" height="15" fill="rgb(248,54,15)" fg:x="180418" fg:w="93"/><text x="72.6968%" y="815.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (142 samples, 0.06%)</title><rect x="72.4468%" y="821" width="0.0570%" height="15" fill="rgb(223,116,6)" fg:x="180418" fg:w="142"/><text x="72.6968%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (49 samples, 0.02%)</title><rect x="72.4842%" y="805" width="0.0197%" height="15" fill="rgb(205,125,38)" fg:x="180511" fg:w="49"/><text x="72.7342%" y="815.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (67 samples, 0.03%)</title><rect x="72.5039%" y="821" width="0.0269%" height="15" fill="rgb(251,78,38)" fg:x="180560" fg:w="67"/><text x="72.7539%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (80 samples, 0.03%)</title><rect x="72.5308%" y="821" width="0.0321%" height="15" fill="rgb(253,78,28)" fg:x="180627" fg:w="80"/><text x="72.7808%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (48 samples, 0.02%)</title><rect x="72.5436%" y="805" width="0.0193%" height="15" fill="rgb(209,120,3)" fg:x="180659" fg:w="48"/><text x="72.7936%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (48 samples, 0.02%)</title><rect x="72.5436%" y="789" width="0.0193%" height="15" fill="rgb(238,229,9)" fg:x="180659" fg:w="48"/><text x="72.7936%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.01%)</title><rect x="72.5629%" y="773" width="0.0133%" height="15" fill="rgb(253,159,18)" fg:x="180707" fg:w="33"/><text x="72.8129%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.01%)</title><rect x="72.5629%" y="757" width="0.0133%" height="15" fill="rgb(244,42,34)" fg:x="180707" fg:w="33"/><text x="72.8129%" y="767.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (44 samples, 0.02%)</title><rect x="72.5629%" y="821" width="0.0177%" height="15" fill="rgb(224,8,7)" fg:x="180707" fg:w="44"/><text x="72.8129%" y="831.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (44 samples, 0.02%)</title><rect x="72.5629%" y="805" width="0.0177%" height="15" fill="rgb(210,201,45)" fg:x="180707" fg:w="44"/><text x="72.8129%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (44 samples, 0.02%)</title><rect x="72.5629%" y="789" width="0.0177%" height="15" fill="rgb(252,185,21)" fg:x="180707" fg:w="44"/><text x="72.8129%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (46 samples, 0.02%)</title><rect x="72.6356%" y="741" width="0.0185%" height="15" fill="rgb(223,131,1)" fg:x="180888" fg:w="46"/><text x="72.8856%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (46 samples, 0.02%)</title><rect x="72.6356%" y="725" width="0.0185%" height="15" fill="rgb(245,141,16)" fg:x="180888" fg:w="46"/><text x="72.8856%" y="735.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (46 samples, 0.02%)</title><rect x="72.6356%" y="709" width="0.0185%" height="15" fill="rgb(229,55,45)" fg:x="180888" fg:w="46"/><text x="72.8856%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (32 samples, 0.01%)</title><rect x="72.6697%" y="709" width="0.0128%" height="15" fill="rgb(208,92,15)" fg:x="180973" fg:w="32"/><text x="72.9197%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (41 samples, 0.02%)</title><rect x="72.6894%" y="709" width="0.0165%" height="15" fill="rgb(234,185,47)" fg:x="181022" fg:w="41"/><text x="72.9394%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (36 samples, 0.01%)</title><rect x="72.6914%" y="693" width="0.0145%" height="15" fill="rgb(253,104,50)" fg:x="181027" fg:w="36"/><text x="72.9414%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (36 samples, 0.01%)</title><rect x="72.6914%" y="677" width="0.0145%" height="15" fill="rgb(205,70,7)" fg:x="181027" fg:w="36"/><text x="72.9414%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (34 samples, 0.01%)</title><rect x="72.6922%" y="661" width="0.0137%" height="15" fill="rgb(240,178,43)" fg:x="181029" fg:w="34"/><text x="72.9422%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (34 samples, 0.01%)</title><rect x="72.6922%" y="645" width="0.0137%" height="15" fill="rgb(214,112,2)" fg:x="181029" fg:w="34"/><text x="72.9422%" y="655.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (221 samples, 0.09%)</title><rect x="72.6340%" y="789" width="0.0887%" height="15" fill="rgb(206,46,17)" fg:x="180884" fg:w="221"/><text x="72.8840%" y="799.50"></text></g><g><title>tokio::runtime::context::budget (221 samples, 0.09%)</title><rect x="72.6340%" y="773" width="0.0887%" height="15" fill="rgb(225,220,16)" fg:x="180884" fg:w="221"/><text x="72.8840%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (221 samples, 0.09%)</title><rect x="72.6340%" y="757" width="0.0887%" height="15" fill="rgb(238,65,40)" fg:x="180884" fg:w="221"/><text x="72.8840%" y="767.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (171 samples, 0.07%)</title><rect x="72.6540%" y="741" width="0.0687%" height="15" fill="rgb(230,151,21)" fg:x="180934" fg:w="171"/><text x="72.9040%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (171 samples, 0.07%)</title><rect x="72.6540%" y="725" width="0.0687%" height="15" fill="rgb(218,58,49)" fg:x="180934" fg:w="171"/><text x="72.9040%" y="735.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (42 samples, 0.02%)</title><rect x="72.7058%" y="709" width="0.0169%" height="15" fill="rgb(219,179,14)" fg:x="181063" fg:w="42"/><text x="72.9558%" y="719.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (154 samples, 0.06%)</title><rect x="72.7480%" y="773" width="0.0618%" height="15" fill="rgb(223,72,1)" fg:x="181168" fg:w="154"/><text x="72.9980%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (149 samples, 0.06%)</title><rect x="72.7500%" y="757" width="0.0598%" height="15" fill="rgb(238,126,10)" fg:x="181173" fg:w="149"/><text x="73.0000%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (87 samples, 0.03%)</title><rect x="72.7749%" y="741" width="0.0349%" height="15" fill="rgb(224,206,38)" fg:x="181235" fg:w="87"/><text x="73.0249%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (87 samples, 0.03%)</title><rect x="72.7749%" y="725" width="0.0349%" height="15" fill="rgb(212,201,54)" fg:x="181235" fg:w="87"/><text x="73.0249%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (87 samples, 0.03%)</title><rect x="72.7749%" y="709" width="0.0349%" height="15" fill="rgb(218,154,48)" fg:x="181235" fg:w="87"/><text x="73.0249%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (646 samples, 0.26%)</title><rect x="72.8207%" y="773" width="0.2594%" height="15" fill="rgb(232,93,24)" fg:x="181349" fg:w="646"/><text x="73.0707%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (646 samples, 0.26%)</title><rect x="72.8207%" y="757" width="0.2594%" height="15" fill="rgb(245,30,21)" fg:x="181349" fg:w="646"/><text x="73.0707%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (25 samples, 0.01%)</title><rect x="73.0801%" y="773" width="0.0100%" height="15" fill="rgb(242,148,29)" fg:x="181995" fg:w="25"/><text x="73.3301%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (25 samples, 0.01%)</title><rect x="73.0801%" y="757" width="0.0100%" height="15" fill="rgb(244,153,54)" fg:x="181995" fg:w="25"/><text x="73.3301%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (25 samples, 0.01%)</title><rect x="73.0801%" y="741" width="0.0100%" height="15" fill="rgb(252,87,22)" fg:x="181995" fg:w="25"/><text x="73.3301%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (25 samples, 0.01%)</title><rect x="73.0801%" y="725" width="0.0100%" height="15" fill="rgb(210,51,29)" fg:x="181995" fg:w="25"/><text x="73.3301%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.01%)</title><rect x="73.0801%" y="709" width="0.0100%" height="15" fill="rgb(242,136,47)" fg:x="181995" fg:w="25"/><text x="73.3301%" y="719.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (7,641 samples, 3.07%)</title><rect x="70.0331%" y="869" width="3.0682%" height="15" fill="rgb(238,68,4)" fg:x="174407" fg:w="7641"/><text x="70.2831%" y="879.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (7,589 samples, 3.05%)</title><rect x="70.0540%" y="853" width="3.0474%" height="15" fill="rgb(242,161,30)" fg:x="174459" fg:w="7589"/><text x="70.3040%" y="863.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (6,856 samples, 2.75%)</title><rect x="70.3483%" y="837" width="2.7530%" height="15" fill="rgb(218,58,44)" fg:x="175192" fg:w="6856"/><text x="70.5983%" y="847.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (1,297 samples, 0.52%)</title><rect x="72.5806%" y="821" width="0.5208%" height="15" fill="rgb(252,125,32)" fg:x="180751" fg:w="1297"/><text x="72.8306%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (1,263 samples, 0.51%)</title><rect x="72.5942%" y="805" width="0.5072%" height="15" fill="rgb(219,178,0)" fg:x="180785" fg:w="1263"/><text x="72.8442%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (943 samples, 0.38%)</title><rect x="72.7227%" y="789" width="0.3787%" height="15" fill="rgb(213,152,7)" fg:x="181105" fg:w="943"/><text x="72.9727%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (33 samples, 0.01%)</title><rect x="73.1014%" y="869" width="0.0133%" height="15" fill="rgb(249,109,34)" fg:x="182048" fg:w="33"/><text x="73.3514%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (33 samples, 0.01%)</title><rect x="73.1014%" y="853" width="0.0133%" height="15" fill="rgb(232,96,21)" fg:x="182048" fg:w="33"/><text x="73.3514%" y="863.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (148 samples, 0.06%)</title><rect x="73.1146%" y="869" width="0.0594%" height="15" fill="rgb(228,27,39)" fg:x="182081" fg:w="148"/><text x="73.3646%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (27 samples, 0.01%)</title><rect x="73.1632%" y="853" width="0.0108%" height="15" fill="rgb(211,182,52)" fg:x="182202" fg:w="27"/><text x="73.4132%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.01%)</title><rect x="73.1632%" y="837" width="0.0108%" height="15" fill="rgb(234,178,38)" fg:x="182202" fg:w="27"/><text x="73.4132%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.01%)</title><rect x="73.1632%" y="821" width="0.0108%" height="15" fill="rgb(221,111,3)" fg:x="182202" fg:w="27"/><text x="73.4132%" y="831.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (8,341 samples, 3.35%)</title><rect x="69.8392%" y="885" width="3.3493%" height="15" fill="rgb(228,175,21)" fg:x="173924" fg:w="8341"/><text x="70.0892%" y="895.50">&lt;to..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (36 samples, 0.01%)</title><rect x="73.1741%" y="869" width="0.0145%" height="15" fill="rgb(228,174,43)" fg:x="182229" fg:w="36"/><text x="73.4241%" y="879.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (8,451 samples, 3.39%)</title><rect x="69.8388%" y="901" width="3.3935%" height="15" fill="rgb(211,191,0)" fg:x="173923" fg:w="8451"/><text x="70.0888%" y="911.50">&lt;to..</text></g><g><title>core::option::Option&lt;T&gt;::take (98 samples, 0.04%)</title><rect x="73.1929%" y="885" width="0.0394%" height="15" fill="rgb(253,117,3)" fg:x="182276" fg:w="98"/><text x="73.4429%" y="895.50"></text></g><g><title>core::mem::replace (98 samples, 0.04%)</title><rect x="73.1929%" y="869" width="0.0394%" height="15" fill="rgb(241,127,19)" fg:x="182276" fg:w="98"/><text x="73.4429%" y="879.50"></text></g><g><title>core::ptr::write (97 samples, 0.04%)</title><rect x="73.1933%" y="853" width="0.0390%" height="15" fill="rgb(218,103,12)" fg:x="182277" fg:w="97"/><text x="73.4433%" y="863.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (144 samples, 0.06%)</title><rect x="73.2323%" y="901" width="0.0578%" height="15" fill="rgb(236,214,43)" fg:x="182374" fg:w="144"/><text x="73.4823%" y="911.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (144 samples, 0.06%)</title><rect x="73.2323%" y="885" width="0.0578%" height="15" fill="rgb(244,144,19)" fg:x="182374" fg:w="144"/><text x="73.4823%" y="895.50"></text></g><g><title>core::cmp::min (29 samples, 0.01%)</title><rect x="73.2785%" y="869" width="0.0116%" height="15" fill="rgb(246,188,10)" fg:x="182489" fg:w="29"/><text x="73.5285%" y="879.50"></text></g><g><title>core::cmp::Ord::min (29 samples, 0.01%)</title><rect x="73.2785%" y="853" width="0.0116%" height="15" fill="rgb(212,193,33)" fg:x="182489" fg:w="29"/><text x="73.5285%" y="863.50"></text></g><g><title>core::cmp::min_by (29 samples, 0.01%)</title><rect x="73.2785%" y="837" width="0.0116%" height="15" fill="rgb(241,51,29)" fg:x="182489" fg:w="29"/><text x="73.5285%" y="847.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (149 samples, 0.06%)</title><rect x="73.5860%" y="885" width="0.0598%" height="15" fill="rgb(211,58,19)" fg:x="183255" fg:w="149"/><text x="73.8360%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload::{{closure}}&gt; (174 samples, 0.07%)</title><rect x="73.6459%" y="885" width="0.0699%" height="15" fill="rgb(229,111,26)" fg:x="183404" fg:w="174"/><text x="73.8959%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (82 samples, 0.03%)</title><rect x="74.1378%" y="869" width="0.0329%" height="15" fill="rgb(213,115,40)" fg:x="184629" fg:w="82"/><text x="74.3878%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (98 samples, 0.04%)</title><rect x="74.6036%" y="805" width="0.0394%" height="15" fill="rgb(209,56,44)" fg:x="185789" fg:w="98"/><text x="74.8536%" y="815.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (246 samples, 0.10%)</title><rect x="74.6449%" y="789" width="0.0988%" height="15" fill="rgb(230,108,32)" fg:x="185892" fg:w="246"/><text x="74.8949%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (89 samples, 0.04%)</title><rect x="74.7437%" y="789" width="0.0357%" height="15" fill="rgb(216,165,31)" fg:x="186138" fg:w="89"/><text x="74.9937%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::capacity (69 samples, 0.03%)</title><rect x="74.7517%" y="773" width="0.0277%" height="15" fill="rgb(218,122,21)" fg:x="186158" fg:w="69"/><text x="75.0017%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (1,557 samples, 0.63%)</title><rect x="74.6429%" y="805" width="0.6252%" height="15" fill="rgb(223,224,47)" fg:x="185887" fg:w="1557"/><text x="74.8929%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,213 samples, 0.49%)</title><rect x="74.7811%" y="789" width="0.4871%" height="15" fill="rgb(238,102,44)" fg:x="186231" fg:w="1213"/><text x="75.0311%" y="799.50"></text></g><g><title>[libc.so.6] (1,203 samples, 0.48%)</title><rect x="74.7851%" y="773" width="0.4831%" height="15" fill="rgb(236,46,40)" fg:x="186241" fg:w="1203"/><text x="75.0351%" y="783.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (2,525 samples, 1.01%)</title><rect x="74.2755%" y="821" width="1.0139%" height="15" fill="rgb(247,202,50)" fg:x="184972" fg:w="2525"/><text x="74.5255%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::Payload&gt; (53 samples, 0.02%)</title><rect x="75.2681%" y="805" width="0.0213%" height="15" fill="rgb(209,99,20)" fg:x="187444" fg:w="53"/><text x="75.5181%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (45 samples, 0.02%)</title><rect x="75.2713%" y="789" width="0.0181%" height="15" fill="rgb(252,27,34)" fg:x="187452" fg:w="45"/><text x="75.5213%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="75.2713%" y="773" width="0.0181%" height="15" fill="rgb(215,206,23)" fg:x="187452" fg:w="45"/><text x="75.5213%" y="783.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (32 samples, 0.01%)</title><rect x="75.2894%" y="773" width="0.0128%" height="15" fill="rgb(212,135,36)" fg:x="187497" fg:w="32"/><text x="75.5394%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (40 samples, 0.02%)</title><rect x="75.3023%" y="773" width="0.0161%" height="15" fill="rgb(240,189,1)" fg:x="187529" fg:w="40"/><text x="75.5523%" y="783.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (92 samples, 0.04%)</title><rect x="75.2894%" y="821" width="0.0369%" height="15" fill="rgb(242,56,20)" fg:x="187497" fg:w="92"/><text x="75.5394%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (92 samples, 0.04%)</title><rect x="75.2894%" y="805" width="0.0369%" height="15" fill="rgb(247,132,33)" fg:x="187497" fg:w="92"/><text x="75.5394%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (92 samples, 0.04%)</title><rect x="75.2894%" y="789" width="0.0369%" height="15" fill="rgb(208,149,11)" fg:x="187497" fg:w="92"/><text x="75.5394%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (37 samples, 0.01%)</title><rect x="75.3264%" y="773" width="0.0149%" height="15" fill="rgb(211,33,11)" fg:x="187589" fg:w="37"/><text x="75.5764%" y="783.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (423 samples, 0.17%)</title><rect x="75.3264%" y="821" width="0.1699%" height="15" fill="rgb(221,29,38)" fg:x="187589" fg:w="423"/><text x="75.5764%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (423 samples, 0.17%)</title><rect x="75.3264%" y="805" width="0.1699%" height="15" fill="rgb(206,182,49)" fg:x="187589" fg:w="423"/><text x="75.5764%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (423 samples, 0.17%)</title><rect x="75.3264%" y="789" width="0.1699%" height="15" fill="rgb(216,140,1)" fg:x="187589" fg:w="423"/><text x="75.5764%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (378 samples, 0.15%)</title><rect x="75.3444%" y="773" width="0.1518%" height="15" fill="rgb(232,57,40)" fg:x="187634" fg:w="378"/><text x="75.5944%" y="783.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (3,052 samples, 1.23%)</title><rect x="74.2727%" y="837" width="1.2255%" height="15" fill="rgb(224,186,18)" fg:x="184965" fg:w="3052"/><text x="74.5227%" y="847.50"></text></g><g><title>arena_slab_alloc (27 samples, 0.01%)</title><rect x="75.5243%" y="517" width="0.0108%" height="15" fill="rgb(215,121,11)" fg:x="188082" fg:w="27"/><text x="75.7743%" y="527.50"></text></g><g><title>pthread_mutex_trylock (43 samples, 0.02%)</title><rect x="75.5480%" y="485" width="0.0173%" height="15" fill="rgb(245,147,10)" fg:x="188141" fg:w="43"/><text x="75.7980%" y="495.50"></text></g><g><title>malloc_mutex_lock (52 samples, 0.02%)</title><rect x="75.5476%" y="517" width="0.0209%" height="15" fill="rgb(238,153,13)" fg:x="188140" fg:w="52"/><text x="75.7976%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (52 samples, 0.02%)</title><rect x="75.5476%" y="501" width="0.0209%" height="15" fill="rgb(233,108,0)" fg:x="188140" fg:w="52"/><text x="75.7976%" y="511.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (146 samples, 0.06%)</title><rect x="75.5163%" y="533" width="0.0586%" height="15" fill="rgb(212,157,17)" fg:x="188062" fg:w="146"/><text x="75.7663%" y="543.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (152 samples, 0.06%)</title><rect x="75.5147%" y="549" width="0.0610%" height="15" fill="rgb(225,213,38)" fg:x="188058" fg:w="152"/><text x="75.7647%" y="559.50"></text></g><g><title>imalloc_no_sample (169 samples, 0.07%)</title><rect x="75.5119%" y="613" width="0.0679%" height="15" fill="rgb(248,16,11)" fg:x="188051" fg:w="169"/><text x="75.7619%" y="623.50"></text></g><g><title>iallocztm (169 samples, 0.07%)</title><rect x="75.5119%" y="597" width="0.0679%" height="15" fill="rgb(241,33,4)" fg:x="188051" fg:w="169"/><text x="75.7619%" y="607.50"></text></g><g><title>arena_malloc (169 samples, 0.07%)</title><rect x="75.5119%" y="581" width="0.0679%" height="15" fill="rgb(222,26,43)" fg:x="188051" fg:w="169"/><text x="75.7619%" y="591.50"></text></g><g><title>tcache_alloc_small (169 samples, 0.07%)</title><rect x="75.5119%" y="565" width="0.0679%" height="15" fill="rgb(243,29,36)" fg:x="188051" fg:w="169"/><text x="75.7619%" y="575.50"></text></g><g><title>imalloc_body (173 samples, 0.07%)</title><rect x="75.5119%" y="629" width="0.0695%" height="15" fill="rgb(241,9,27)" fg:x="188051" fg:w="173"/><text x="75.7619%" y="639.50"></text></g><g><title>_rjem_je_malloc_default (176 samples, 0.07%)</title><rect x="75.5111%" y="661" width="0.0707%" height="15" fill="rgb(205,117,26)" fg:x="188049" fg:w="176"/><text x="75.7611%" y="671.50"></text></g><g><title>imalloc (174 samples, 0.07%)</title><rect x="75.5119%" y="645" width="0.0699%" height="15" fill="rgb(209,80,39)" fg:x="188051" fg:w="174"/><text x="75.7619%" y="655.50"></text></g><g><title>cache_bin_alloc_easy (801 samples, 0.32%)</title><rect x="76.1367%" y="629" width="0.3216%" height="15" fill="rgb(239,155,6)" fg:x="189607" fg:w="801"/><text x="76.3867%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (801 samples, 0.32%)</title><rect x="76.1367%" y="613" width="0.3216%" height="15" fill="rgb(212,104,12)" fg:x="189607" fg:w="801"/><text x="76.3867%" y="623.50"></text></g><g><title>sz_index2size_lookup_impl (234 samples, 0.09%)</title><rect x="76.4619%" y="613" width="0.0940%" height="15" fill="rgb(234,204,3)" fg:x="190417" fg:w="234"/><text x="76.7119%" y="623.50"></text></g><g><title>sz_size2index_usize_fastpath (294 samples, 0.12%)</title><rect x="76.4619%" y="629" width="0.1181%" height="15" fill="rgb(251,218,7)" fg:x="190417" fg:w="294"/><text x="76.7119%" y="639.50"></text></g><g><title>sz_size2index_lookup_impl (60 samples, 0.02%)</title><rect x="76.5559%" y="613" width="0.0241%" height="15" fill="rgb(221,81,32)" fg:x="190651" fg:w="60"/><text x="76.8059%" y="623.50"></text></g><g><title>__rust_alloc (2,673 samples, 1.07%)</title><rect x="75.5087%" y="693" width="1.0733%" height="15" fill="rgb(214,152,26)" fg:x="188043" fg:w="2673"/><text x="75.7587%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,673 samples, 1.07%)</title><rect x="75.5087%" y="677" width="1.0733%" height="15" fill="rgb(223,22,3)" fg:x="188043" fg:w="2673"/><text x="75.7587%" y="687.50"></text></g><g><title>_rjem_malloc (2,491 samples, 1.00%)</title><rect x="75.5817%" y="661" width="1.0003%" height="15" fill="rgb(207,174,7)" fg:x="188225" fg:w="2491"/><text x="75.8317%" y="671.50"></text></g><g><title>imalloc_fastpath (2,487 samples, 1.00%)</title><rect x="75.5834%" y="645" width="0.9987%" height="15" fill="rgb(224,19,52)" fg:x="188229" fg:w="2487"/><text x="75.8334%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,790 samples, 1.12%)</title><rect x="75.5087%" y="741" width="1.1203%" height="15" fill="rgb(228,24,14)" fg:x="188043" fg:w="2790"/><text x="75.7587%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,790 samples, 1.12%)</title><rect x="75.5087%" y="725" width="1.1203%" height="15" fill="rgb(230,153,43)" fg:x="188043" fg:w="2790"/><text x="75.7587%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2,790 samples, 1.12%)</title><rect x="75.5087%" y="709" width="1.1203%" height="15" fill="rgb(231,106,12)" fg:x="188043" fg:w="2790"/><text x="75.7587%" y="719.50"></text></g><g><title>core::ptr::read_volatile (117 samples, 0.05%)</title><rect x="76.5820%" y="693" width="0.0470%" height="15" fill="rgb(215,92,2)" fg:x="190716" fg:w="117"/><text x="76.8320%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,832 samples, 1.14%)</title><rect x="75.4982%" y="821" width="1.1372%" height="15" fill="rgb(249,143,25)" fg:x="188017" fg:w="2832"/><text x="75.7482%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,832 samples, 1.14%)</title><rect x="75.4982%" y="805" width="1.1372%" height="15" fill="rgb(252,7,35)" fg:x="188017" fg:w="2832"/><text x="75.7482%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,832 samples, 1.14%)</title><rect x="75.4982%" y="789" width="1.1372%" height="15" fill="rgb(216,69,40)" fg:x="188017" fg:w="2832"/><text x="75.7482%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,832 samples, 1.14%)</title><rect x="75.4982%" y="773" width="1.1372%" height="15" fill="rgb(240,36,33)" fg:x="188017" fg:w="2832"/><text x="75.7482%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,832 samples, 1.14%)</title><rect x="75.4982%" y="757" width="1.1372%" height="15" fill="rgb(231,128,14)" fg:x="188017" fg:w="2832"/><text x="75.7482%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (2,943 samples, 1.18%)</title><rect x="75.4982%" y="837" width="1.1818%" height="15" fill="rgb(245,143,14)" fg:x="188017" fg:w="2943"/><text x="75.7482%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (111 samples, 0.04%)</title><rect x="76.6354%" y="821" width="0.0446%" height="15" fill="rgb(222,130,28)" fg:x="190849" fg:w="111"/><text x="76.8854%" y="831.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (52 samples, 0.02%)</title><rect x="76.6591%" y="805" width="0.0209%" height="15" fill="rgb(212,10,48)" fg:x="190908" fg:w="52"/><text x="76.9091%" y="815.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (6,595 samples, 2.65%)</title><rect x="74.1731%" y="853" width="2.6482%" height="15" fill="rgb(254,118,45)" fg:x="184717" fg:w="6595"/><text x="74.4231%" y="863.50">wi..</text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (352 samples, 0.14%)</title><rect x="76.6800%" y="837" width="0.1413%" height="15" fill="rgb(228,6,45)" fg:x="190960" fg:w="352"/><text x="76.9300%" y="847.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (65 samples, 0.03%)</title><rect x="76.7952%" y="821" width="0.0261%" height="15" fill="rgb(241,18,35)" fg:x="191247" fg:w="65"/><text x="77.0452%" y="831.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (6,635 samples, 2.66%)</title><rect x="74.1707%" y="869" width="2.6643%" height="15" fill="rgb(227,214,53)" fg:x="184711" fg:w="6635"/><text x="74.4207%" y="879.50">wi..</text></g><g><title>wisp_mux::ws::Frame::binary (34 samples, 0.01%)</title><rect x="76.8213%" y="853" width="0.0137%" height="15" fill="rgb(224,107,51)" fg:x="191312" fg:w="34"/><text x="77.0713%" y="863.50"></text></g><g><title>wisp_mux::packet::Packet::new_data (66 samples, 0.03%)</title><rect x="76.8350%" y="869" width="0.0265%" height="15" fill="rgb(248,60,28)" fg:x="191346" fg:w="66"/><text x="77.0850%" y="879.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (79 samples, 0.03%)</title><rect x="77.6116%" y="853" width="0.0317%" height="15" fill="rgb(249,101,23)" fg:x="193280" fg:w="79"/><text x="77.8616%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (83 samples, 0.03%)</title><rect x="77.6433%" y="853" width="0.0333%" height="15" fill="rgb(228,51,19)" fg:x="193359" fg:w="83"/><text x="77.8933%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (823 samples, 0.33%)</title><rect x="77.6766%" y="853" width="0.3305%" height="15" fill="rgb(213,20,6)" fg:x="193442" fg:w="823"/><text x="77.9266%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (821 samples, 0.33%)</title><rect x="77.6774%" y="837" width="0.3297%" height="15" fill="rgb(212,124,10)" fg:x="193444" fg:w="821"/><text x="77.9274%" y="847.50"></text></g><g><title>extent_recycle_extract (25 samples, 0.01%)</title><rect x="78.5496%" y="437" width="0.0100%" height="15" fill="rgb(248,3,40)" fg:x="195616" fg:w="25"/><text x="78.7996%" y="447.50"></text></g><g><title>pac_alloc_real (37 samples, 0.01%)</title><rect x="78.5496%" y="485" width="0.0149%" height="15" fill="rgb(223,178,23)" fg:x="195616" fg:w="37"/><text x="78.7996%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc (37 samples, 0.01%)</title><rect x="78.5496%" y="469" width="0.0149%" height="15" fill="rgb(240,132,45)" fg:x="195616" fg:w="37"/><text x="78.7996%" y="479.50"></text></g><g><title>extent_recycle (37 samples, 0.01%)</title><rect x="78.5496%" y="453" width="0.0149%" height="15" fill="rgb(245,164,36)" fg:x="195616" fg:w="37"/><text x="78.7996%" y="463.50"></text></g><g><title>_rjem_je_pa_alloc (45 samples, 0.02%)</title><rect x="78.5468%" y="533" width="0.0181%" height="15" fill="rgb(231,188,53)" fg:x="195609" fg:w="45"/><text x="78.7968%" y="543.50"></text></g><g><title>pai_alloc (41 samples, 0.02%)</title><rect x="78.5484%" y="517" width="0.0165%" height="15" fill="rgb(237,198,39)" fg:x="195613" fg:w="41"/><text x="78.7984%" y="527.50"></text></g><g><title>pac_alloc_impl (40 samples, 0.02%)</title><rect x="78.5488%" y="501" width="0.0161%" height="15" fill="rgb(223,120,35)" fg:x="195614" fg:w="40"/><text x="78.7988%" y="511.50"></text></g><g><title>arena_slab_alloc (55 samples, 0.02%)</title><rect x="78.5432%" y="549" width="0.0221%" height="15" fill="rgb(253,107,49)" fg:x="195600" fg:w="55"/><text x="78.7932%" y="559.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (90 samples, 0.04%)</title><rect x="78.5392%" y="581" width="0.0361%" height="15" fill="rgb(216,44,31)" fg:x="195590" fg:w="90"/><text x="78.7892%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (89 samples, 0.04%)</title><rect x="78.5396%" y="565" width="0.0357%" height="15" fill="rgb(253,87,21)" fg:x="195591" fg:w="89"/><text x="78.7896%" y="575.50"></text></g><g><title>imalloc_no_sample (101 samples, 0.04%)</title><rect x="78.5384%" y="645" width="0.0406%" height="15" fill="rgb(226,18,2)" fg:x="195588" fg:w="101"/><text x="78.7884%" y="655.50"></text></g><g><title>iallocztm (101 samples, 0.04%)</title><rect x="78.5384%" y="629" width="0.0406%" height="15" fill="rgb(216,8,46)" fg:x="195588" fg:w="101"/><text x="78.7884%" y="639.50"></text></g><g><title>arena_malloc (101 samples, 0.04%)</title><rect x="78.5384%" y="613" width="0.0406%" height="15" fill="rgb(226,140,39)" fg:x="195588" fg:w="101"/><text x="78.7884%" y="623.50"></text></g><g><title>tcache_alloc_small (101 samples, 0.04%)</title><rect x="78.5384%" y="597" width="0.0406%" height="15" fill="rgb(221,194,54)" fg:x="195588" fg:w="101"/><text x="78.7884%" y="607.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (40 samples, 0.02%)</title><rect x="78.5898%" y="597" width="0.0161%" height="15" fill="rgb(213,92,11)" fg:x="195716" fg:w="40"/><text x="78.8398%" y="607.50"></text></g><g><title>tcache_event (40 samples, 0.02%)</title><rect x="78.5898%" y="581" width="0.0161%" height="15" fill="rgb(229,162,46)" fg:x="195716" fg:w="40"/><text x="78.8398%" y="591.50"></text></g><g><title>imalloc_body (174 samples, 0.07%)</title><rect x="78.5376%" y="661" width="0.0699%" height="15" fill="rgb(214,111,36)" fg:x="195586" fg:w="174"/><text x="78.7876%" y="671.50"></text></g><g><title>thread_alloc_event (71 samples, 0.03%)</title><rect x="78.5789%" y="645" width="0.0285%" height="15" fill="rgb(207,6,21)" fg:x="195689" fg:w="71"/><text x="78.8289%" y="655.50"></text></g><g><title>te_event_advance (71 samples, 0.03%)</title><rect x="78.5789%" y="629" width="0.0285%" height="15" fill="rgb(213,127,38)" fg:x="195689" fg:w="71"/><text x="78.8289%" y="639.50"></text></g><g><title>_rjem_je_te_event_trigger (64 samples, 0.03%)</title><rect x="78.5817%" y="613" width="0.0257%" height="15" fill="rgb(238,118,32)" fg:x="195696" fg:w="64"/><text x="78.8317%" y="623.50"></text></g><g><title>_rjem_je_malloc_default (180 samples, 0.07%)</title><rect x="78.5355%" y="693" width="0.0723%" height="15" fill="rgb(240,139,39)" fg:x="195581" fg:w="180"/><text x="78.7855%" y="703.50"></text></g><g><title>imalloc (175 samples, 0.07%)</title><rect x="78.5376%" y="677" width="0.0703%" height="15" fill="rgb(235,10,37)" fg:x="195586" fg:w="175"/><text x="78.7876%" y="687.50"></text></g><g><title>cache_bin_alloc_easy (224 samples, 0.09%)</title><rect x="78.6500%" y="661" width="0.0899%" height="15" fill="rgb(249,171,38)" fg:x="195866" fg:w="224"/><text x="78.9000%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (224 samples, 0.09%)</title><rect x="78.6500%" y="645" width="0.0899%" height="15" fill="rgb(242,144,32)" fg:x="195866" fg:w="224"/><text x="78.9000%" y="655.50"></text></g><g><title>sz_index2size_lookup_impl (40 samples, 0.02%)</title><rect x="78.7452%" y="645" width="0.0161%" height="15" fill="rgb(217,117,21)" fg:x="196103" fg:w="40"/><text x="78.9952%" y="655.50"></text></g><g><title>sz_size2index_usize_fastpath (51 samples, 0.02%)</title><rect x="78.7452%" y="661" width="0.0205%" height="15" fill="rgb(249,87,1)" fg:x="196103" fg:w="51"/><text x="78.9952%" y="671.50"></text></g><g><title>__rust_alloc (590 samples, 0.24%)</title><rect x="78.5299%" y="725" width="0.2369%" height="15" fill="rgb(248,196,48)" fg:x="195567" fg:w="590"/><text x="78.7799%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (590 samples, 0.24%)</title><rect x="78.5299%" y="709" width="0.2369%" height="15" fill="rgb(251,206,33)" fg:x="195567" fg:w="590"/><text x="78.7799%" y="719.50"></text></g><g><title>_rjem_malloc (396 samples, 0.16%)</title><rect x="78.6078%" y="693" width="0.1590%" height="15" fill="rgb(232,141,28)" fg:x="195761" fg:w="396"/><text x="78.8578%" y="703.50"></text></g><g><title>imalloc_fastpath (390 samples, 0.16%)</title><rect x="78.6102%" y="677" width="0.1566%" height="15" fill="rgb(209,167,14)" fg:x="195767" fg:w="390"/><text x="78.8602%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (861 samples, 0.35%)</title><rect x="78.4255%" y="837" width="0.3457%" height="15" fill="rgb(225,11,50)" fg:x="195307" fg:w="861"/><text x="78.6755%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (861 samples, 0.35%)</title><rect x="78.4255%" y="821" width="0.3457%" height="15" fill="rgb(209,50,20)" fg:x="195307" fg:w="861"/><text x="78.6755%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (861 samples, 0.35%)</title><rect x="78.4255%" y="805" width="0.3457%" height="15" fill="rgb(212,17,46)" fg:x="195307" fg:w="861"/><text x="78.6755%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (611 samples, 0.25%)</title><rect x="78.5259%" y="789" width="0.2453%" height="15" fill="rgb(216,101,39)" fg:x="195557" fg:w="611"/><text x="78.7759%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (601 samples, 0.24%)</title><rect x="78.5299%" y="773" width="0.2413%" height="15" fill="rgb(212,228,48)" fg:x="195567" fg:w="601"/><text x="78.7799%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (601 samples, 0.24%)</title><rect x="78.5299%" y="757" width="0.2413%" height="15" fill="rgb(250,6,50)" fg:x="195567" fg:w="601"/><text x="78.7799%" y="767.50"></text></g><g><title>alloc::alloc::alloc (601 samples, 0.24%)</title><rect x="78.5299%" y="741" width="0.2413%" height="15" fill="rgb(250,160,48)" fg:x="195567" fg:w="601"/><text x="78.7799%" y="751.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (27 samples, 0.01%)</title><rect x="79.2748%" y="533" width="0.0108%" height="15" fill="rgb(244,216,33)" fg:x="197422" fg:w="27"/><text x="79.5248%" y="543.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (78 samples, 0.03%)</title><rect x="79.2684%" y="565" width="0.0313%" height="15" fill="rgb(207,157,5)" fg:x="197406" fg:w="78"/><text x="79.5184%" y="575.50"></text></g><g><title>tcache_event (76 samples, 0.03%)</title><rect x="79.2692%" y="549" width="0.0305%" height="15" fill="rgb(228,199,8)" fg:x="197408" fg:w="76"/><text x="79.5192%" y="559.50"></text></g><g><title>_rjem_je_te_event_trigger (155 samples, 0.06%)</title><rect x="79.2443%" y="581" width="0.0622%" height="15" fill="rgb(227,80,20)" fg:x="197346" fg:w="155"/><text x="79.4943%" y="591.50"></text></g><g><title>imalloc_body (194 samples, 0.08%)</title><rect x="79.2298%" y="629" width="0.0779%" height="15" fill="rgb(222,9,33)" fg:x="197310" fg:w="194"/><text x="79.4798%" y="639.50"></text></g><g><title>thread_alloc_event (171 samples, 0.07%)</title><rect x="79.2391%" y="613" width="0.0687%" height="15" fill="rgb(239,44,28)" fg:x="197333" fg:w="171"/><text x="79.4891%" y="623.50"></text></g><g><title>te_event_advance (171 samples, 0.07%)</title><rect x="79.2391%" y="597" width="0.0687%" height="15" fill="rgb(249,187,43)" fg:x="197333" fg:w="171"/><text x="79.4891%" y="607.50"></text></g><g><title>_rjem_je_malloc_default (199 samples, 0.08%)</title><rect x="79.2282%" y="661" width="0.0799%" height="15" fill="rgb(216,141,28)" fg:x="197306" fg:w="199"/><text x="79.4782%" y="671.50"></text></g><g><title>imalloc (195 samples, 0.08%)</title><rect x="79.2298%" y="645" width="0.0783%" height="15" fill="rgb(230,154,53)" fg:x="197310" fg:w="195"/><text x="79.4798%" y="655.50"></text></g><g><title>cache_bin_alloc_easy (170 samples, 0.07%)</title><rect x="79.3623%" y="629" width="0.0683%" height="15" fill="rgb(227,82,4)" fg:x="197640" fg:w="170"/><text x="79.6123%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (170 samples, 0.07%)</title><rect x="79.3623%" y="613" width="0.0683%" height="15" fill="rgb(220,107,16)" fg:x="197640" fg:w="170"/><text x="79.6123%" y="623.50"></text></g><g><title>__rust_alloc (536 samples, 0.22%)</title><rect x="79.2270%" y="693" width="0.2152%" height="15" fill="rgb(207,187,2)" fg:x="197303" fg:w="536"/><text x="79.4770%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (536 samples, 0.22%)</title><rect x="79.2270%" y="677" width="0.2152%" height="15" fill="rgb(210,162,52)" fg:x="197303" fg:w="536"/><text x="79.4770%" y="687.50"></text></g><g><title>_rjem_malloc (334 samples, 0.13%)</title><rect x="79.3081%" y="661" width="0.1341%" height="15" fill="rgb(217,216,49)" fg:x="197505" fg:w="334"/><text x="79.5581%" y="671.50"></text></g><g><title>imalloc_fastpath (327 samples, 0.13%)</title><rect x="79.3109%" y="645" width="0.1313%" height="15" fill="rgb(218,146,49)" fg:x="197512" fg:w="327"/><text x="79.5609%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (940 samples, 0.38%)</title><rect x="79.1017%" y="805" width="0.3775%" height="15" fill="rgb(216,55,40)" fg:x="196991" fg:w="940"/><text x="79.3517%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (895 samples, 0.36%)</title><rect x="79.1198%" y="789" width="0.3594%" height="15" fill="rgb(208,196,21)" fg:x="197036" fg:w="895"/><text x="79.3698%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (895 samples, 0.36%)</title><rect x="79.1198%" y="773" width="0.3594%" height="15" fill="rgb(242,117,42)" fg:x="197036" fg:w="895"/><text x="79.3698%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (640 samples, 0.26%)</title><rect x="79.2222%" y="757" width="0.2570%" height="15" fill="rgb(210,11,23)" fg:x="197291" fg:w="640"/><text x="79.4722%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (628 samples, 0.25%)</title><rect x="79.2270%" y="741" width="0.2522%" height="15" fill="rgb(217,110,2)" fg:x="197303" fg:w="628"/><text x="79.4770%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (628 samples, 0.25%)</title><rect x="79.2270%" y="725" width="0.2522%" height="15" fill="rgb(229,77,54)" fg:x="197303" fg:w="628"/><text x="79.4770%" y="735.50"></text></g><g><title>alloc::alloc::alloc (628 samples, 0.25%)</title><rect x="79.2270%" y="709" width="0.2522%" height="15" fill="rgb(218,53,16)" fg:x="197303" fg:w="628"/><text x="79.4770%" y="719.50"></text></g><g><title>core::ptr::read_volatile (92 samples, 0.04%)</title><rect x="79.4422%" y="693" width="0.0369%" height="15" fill="rgb(215,38,13)" fg:x="197839" fg:w="92"/><text x="79.6922%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (89 samples, 0.04%)</title><rect x="81.1408%" y="741" width="0.0357%" height="15" fill="rgb(235,42,18)" fg:x="202069" fg:w="89"/><text x="81.3908%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (74 samples, 0.03%)</title><rect x="81.1765%" y="741" width="0.0297%" height="15" fill="rgb(219,66,54)" fg:x="202158" fg:w="74"/><text x="81.4265%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (148 samples, 0.06%)</title><rect x="81.6849%" y="725" width="0.0594%" height="15" fill="rgb(222,205,4)" fg:x="203424" fg:w="148"/><text x="81.9349%" y="735.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (258 samples, 0.10%)</title><rect x="82.0591%" y="709" width="0.1036%" height="15" fill="rgb(227,213,46)" fg:x="204356" fg:w="258"/><text x="82.3091%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (637 samples, 0.26%)</title><rect x="82.1627%" y="709" width="0.2558%" height="15" fill="rgb(250,145,42)" fg:x="204614" fg:w="637"/><text x="82.4127%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (56 samples, 0.02%)</title><rect x="82.4185%" y="709" width="0.0225%" height="15" fill="rgb(219,15,2)" fg:x="205251" fg:w="56"/><text x="82.6685%" y="719.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (338 samples, 0.14%)</title><rect x="82.5249%" y="677" width="0.1357%" height="15" fill="rgb(231,181,52)" fg:x="205516" fg:w="338"/><text x="82.7749%" y="687.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (37 samples, 0.01%)</title><rect x="82.6458%" y="661" width="0.0149%" height="15" fill="rgb(235,1,42)" fg:x="205817" fg:w="37"/><text x="82.8958%" y="671.50"></text></g><g><title>[libc.so.6] (1,327 samples, 0.53%)</title><rect x="83.5324%" y="533" width="0.5329%" height="15" fill="rgb(249,88,27)" fg:x="208025" fg:w="1327"/><text x="83.7824%" y="543.50"></text></g><g><title>__send (3,362 samples, 1.35%)</title><rect x="82.9124%" y="549" width="1.3500%" height="15" fill="rgb(235,145,16)" fg:x="206481" fg:w="3362"/><text x="83.1624%" y="559.50"></text></g><g><title>[unknown] (491 samples, 0.20%)</title><rect x="84.0653%" y="533" width="0.1972%" height="15" fill="rgb(237,114,19)" fg:x="209352" fg:w="491"/><text x="84.3153%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,579 samples, 1.44%)</title><rect x="82.9000%" y="645" width="1.4371%" height="15" fill="rgb(238,51,50)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="655.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,579 samples, 1.44%)</title><rect x="82.9000%" y="629" width="1.4371%" height="15" fill="rgb(205,194,25)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="639.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (3,579 samples, 1.44%)</title><rect x="82.9000%" y="613" width="1.4371%" height="15" fill="rgb(215,203,17)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="623.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,579 samples, 1.44%)</title><rect x="82.9000%" y="597" width="1.4371%" height="15" fill="rgb(233,112,49)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="607.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,579 samples, 1.44%)</title><rect x="82.9000%" y="581" width="1.4371%" height="15" fill="rgb(241,130,26)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="591.50"></text></g><g><title>std::sys_common::net::TcpStream::write (3,579 samples, 1.44%)</title><rect x="82.9000%" y="565" width="1.4371%" height="15" fill="rgb(252,223,19)" fg:x="206450" fg:w="3579"/><text x="83.1500%" y="575.50"></text></g><g><title>std::sys::pal::unix::cvt (186 samples, 0.07%)</title><rect x="84.2625%" y="549" width="0.0747%" height="15" fill="rgb(211,95,25)" fg:x="209843" fg:w="186"/><text x="84.5125%" y="559.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (173 samples, 0.07%)</title><rect x="84.2677%" y="533" width="0.0695%" height="15" fill="rgb(251,182,27)" fg:x="209856" fg:w="173"/><text x="84.5177%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (37 samples, 0.01%)</title><rect x="84.3869%" y="565" width="0.0149%" height="15" fill="rgb(238,24,4)" fg:x="210153" fg:w="37"/><text x="84.6369%" y="575.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (37 samples, 0.01%)</title><rect x="84.3869%" y="549" width="0.0149%" height="15" fill="rgb(224,220,25)" fg:x="210153" fg:w="37"/><text x="84.6369%" y="559.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (37 samples, 0.01%)</title><rect x="84.3869%" y="533" width="0.0149%" height="15" fill="rgb(239,133,26)" fg:x="210153" fg:w="37"/><text x="84.6369%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (26 samples, 0.01%)</title><rect x="84.4162%" y="533" width="0.0104%" height="15" fill="rgb(211,94,48)" fg:x="210226" fg:w="26"/><text x="84.6662%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (165 samples, 0.07%)</title><rect x="84.3825%" y="613" width="0.0663%" height="15" fill="rgb(239,87,6)" fg:x="210142" fg:w="165"/><text x="84.6325%" y="623.50"></text></g><g><title>tokio::runtime::context::budget (165 samples, 0.07%)</title><rect x="84.3825%" y="597" width="0.0663%" height="15" fill="rgb(227,62,0)" fg:x="210142" fg:w="165"/><text x="84.6325%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (165 samples, 0.07%)</title><rect x="84.3825%" y="581" width="0.0663%" height="15" fill="rgb(211,226,4)" fg:x="210142" fg:w="165"/><text x="84.6325%" y="591.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (117 samples, 0.05%)</title><rect x="84.4018%" y="565" width="0.0470%" height="15" fill="rgb(253,38,52)" fg:x="210190" fg:w="117"/><text x="84.6518%" y="575.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (117 samples, 0.05%)</title><rect x="84.4018%" y="549" width="0.0470%" height="15" fill="rgb(229,126,40)" fg:x="210190" fg:w="117"/><text x="84.6518%" y="559.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (25 samples, 0.01%)</title><rect x="84.4387%" y="533" width="0.0100%" height="15" fill="rgb(229,165,44)" fg:x="210282" fg:w="25"/><text x="84.6887%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (500 samples, 0.20%)</title><rect x="84.4717%" y="597" width="0.2008%" height="15" fill="rgb(247,95,47)" fg:x="210364" fg:w="500"/><text x="84.7217%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (500 samples, 0.20%)</title><rect x="84.4717%" y="581" width="0.2008%" height="15" fill="rgb(216,140,30)" fg:x="210364" fg:w="500"/><text x="84.7217%" y="591.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (5,395 samples, 2.17%)</title><rect x="82.5189%" y="693" width="2.1664%" height="15" fill="rgb(246,214,8)" fg:x="205501" fg:w="5395"/><text x="82.7689%" y="703.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (5,042 samples, 2.02%)</title><rect x="82.6607%" y="677" width="2.0246%" height="15" fill="rgb(227,224,15)" fg:x="205854" fg:w="5042"/><text x="82.9107%" y="687.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (4,645 samples, 1.87%)</title><rect x="82.8201%" y="661" width="1.8652%" height="15" fill="rgb(233,175,4)" fg:x="206251" fg:w="4645"/><text x="83.0701%" y="671.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (853 samples, 0.34%)</title><rect x="84.3428%" y="645" width="0.3425%" height="15" fill="rgb(221,66,45)" fg:x="210043" fg:w="853"/><text x="84.5928%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (824 samples, 0.33%)</title><rect x="84.3544%" y="629" width="0.3309%" height="15" fill="rgb(221,178,18)" fg:x="210072" fg:w="824"/><text x="84.6044%" y="639.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (589 samples, 0.24%)</title><rect x="84.4488%" y="613" width="0.2365%" height="15" fill="rgb(213,81,29)" fg:x="210307" fg:w="589"/><text x="84.6988%" y="623.50"></text></g><g><title>core::ptr::read (134 samples, 0.05%)</title><rect x="84.6925%" y="661" width="0.0538%" height="15" fill="rgb(220,89,49)" fg:x="210914" fg:w="134"/><text x="84.9425%" y="671.50"></text></g><g><title>core::mem::take (183 samples, 0.07%)</title><rect x="84.6925%" y="693" width="0.0735%" height="15" fill="rgb(227,60,33)" fg:x="210914" fg:w="183"/><text x="84.9425%" y="703.50"></text></g><g><title>core::mem::replace (183 samples, 0.07%)</title><rect x="84.6925%" y="677" width="0.0735%" height="15" fill="rgb(205,113,12)" fg:x="210914" fg:w="183"/><text x="84.9425%" y="687.50"></text></g><g><title>core::ptr::write (49 samples, 0.02%)</title><rect x="84.7463%" y="661" width="0.0197%" height="15" fill="rgb(211,32,1)" fg:x="211048" fg:w="49"/><text x="84.9963%" y="671.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (5,815 samples, 2.34%)</title><rect x="82.4410%" y="709" width="2.3350%" height="15" fill="rgb(246,2,12)" fg:x="205307" fg:w="5815"/><text x="82.6910%" y="719.50">&lt;..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (25 samples, 0.01%)</title><rect x="84.7660%" y="693" width="0.0100%" height="15" fill="rgb(243,37,27)" fg:x="211097" fg:w="25"/><text x="85.0160%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (25 samples, 0.01%)</title><rect x="84.7660%" y="677" width="0.0100%" height="15" fill="rgb(248,211,31)" fg:x="211097" fg:w="25"/><text x="85.0160%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (26 samples, 0.01%)</title><rect x="84.9081%" y="645" width="0.0104%" height="15" fill="rgb(242,146,47)" fg:x="211451" fg:w="26"/><text x="85.1581%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (52 samples, 0.02%)</title><rect x="84.9186%" y="645" width="0.0209%" height="15" fill="rgb(206,70,20)" fg:x="211477" fg:w="52"/><text x="85.1686%" y="655.50"></text></g><g><title>cache_bin_dalloc_easy (261 samples, 0.10%)</title><rect x="85.3286%" y="485" width="0.1048%" height="15" fill="rgb(215,10,51)" fg:x="212498" fg:w="261"/><text x="85.5786%" y="495.50"></text></g><g><title>cache_bin_full (47 samples, 0.02%)</title><rect x="85.4145%" y="469" width="0.0189%" height="15" fill="rgb(243,178,53)" fg:x="212712" fg:w="47"/><text x="85.6645%" y="479.50"></text></g><g><title>sz_index2size (123 samples, 0.05%)</title><rect x="85.4334%" y="485" width="0.0494%" height="15" fill="rgb(233,221,20)" fg:x="212759" fg:w="123"/><text x="85.6834%" y="495.50"></text></g><g><title>sz_index2size_lookup (123 samples, 0.05%)</title><rect x="85.4334%" y="469" width="0.0494%" height="15" fill="rgb(218,95,35)" fg:x="212759" fg:w="123"/><text x="85.6834%" y="479.50"></text></g><g><title>sz_index2size_lookup_impl (123 samples, 0.05%)</title><rect x="85.4334%" y="453" width="0.0494%" height="15" fill="rgb(229,13,5)" fg:x="212759" fg:w="123"/><text x="85.6834%" y="463.50"></text></g><g><title>sz_size2index_lookup (41 samples, 0.02%)</title><rect x="85.4828%" y="485" width="0.0165%" height="15" fill="rgb(252,164,30)" fg:x="212882" fg:w="41"/><text x="85.7328%" y="495.50"></text></g><g><title>sz_size2index_lookup_impl (41 samples, 0.02%)</title><rect x="85.4828%" y="469" width="0.0165%" height="15" fill="rgb(232,68,36)" fg:x="212882" fg:w="41"/><text x="85.7328%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,389 samples, 0.56%)</title><rect x="84.9423%" y="581" width="0.5578%" height="15" fill="rgb(219,59,54)" fg:x="211536" fg:w="1389"/><text x="85.1923%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1,389 samples, 0.56%)</title><rect x="84.9423%" y="565" width="0.5578%" height="15" fill="rgb(250,92,33)" fg:x="211536" fg:w="1389"/><text x="85.1923%" y="575.50"></text></g><g><title>__rust_dealloc (1,389 samples, 0.56%)</title><rect x="84.9423%" y="549" width="0.5578%" height="15" fill="rgb(229,162,54)" fg:x="211536" fg:w="1389"/><text x="85.1923%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,389 samples, 0.56%)</title><rect x="84.9423%" y="533" width="0.5578%" height="15" fill="rgb(244,114,52)" fg:x="211536" fg:w="1389"/><text x="85.1923%" y="543.50"></text></g><g><title>_rjem_sdallocx (1,334 samples, 0.54%)</title><rect x="84.9644%" y="517" width="0.5357%" height="15" fill="rgb(212,211,43)" fg:x="211591" fg:w="1334"/><text x="85.2144%" y="527.50"></text></g><g><title>free_fastpath (1,334 samples, 0.54%)</title><rect x="84.9644%" y="501" width="0.5357%" height="15" fill="rgb(226,147,8)" fg:x="211591" fg:w="1334"/><text x="85.2144%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (1,813 samples, 0.73%)</title><rect x="84.7760%" y="709" width="0.7280%" height="15" fill="rgb(226,23,13)" fg:x="211122" fg:w="1813"/><text x="85.0260%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (1,813 samples, 0.73%)</title><rect x="84.7760%" y="693" width="0.7280%" height="15" fill="rgb(240,63,4)" fg:x="211122" fg:w="1813"/><text x="85.0260%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (1,553 samples, 0.62%)</title><rect x="84.8804%" y="677" width="0.6236%" height="15" fill="rgb(221,1,32)" fg:x="211382" fg:w="1553"/><text x="85.1304%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (1,553 samples, 0.62%)</title><rect x="84.8804%" y="661" width="0.6236%" height="15" fill="rgb(242,117,10)" fg:x="211382" fg:w="1553"/><text x="85.1304%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,399 samples, 0.56%)</title><rect x="84.9423%" y="645" width="0.5618%" height="15" fill="rgb(249,172,44)" fg:x="211536" fg:w="1399"/><text x="85.1923%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,399 samples, 0.56%)</title><rect x="84.9423%" y="629" width="0.5618%" height="15" fill="rgb(244,46,45)" fg:x="211536" fg:w="1399"/><text x="85.1923%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,399 samples, 0.56%)</title><rect x="84.9423%" y="613" width="0.5618%" height="15" fill="rgb(206,43,17)" fg:x="211536" fg:w="1399"/><text x="85.1923%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,399 samples, 0.56%)</title><rect x="84.9423%" y="597" width="0.5618%" height="15" fill="rgb(239,218,39)" fg:x="211536" fg:w="1399"/><text x="85.1923%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (81 samples, 0.03%)</title><rect x="85.5181%" y="693" width="0.0325%" height="15" fill="rgb(208,169,54)" fg:x="212970" fg:w="81"/><text x="85.7681%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (81 samples, 0.03%)</title><rect x="85.5181%" y="677" width="0.0325%" height="15" fill="rgb(247,25,42)" fg:x="212970" fg:w="81"/><text x="85.7681%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (81 samples, 0.03%)</title><rect x="85.5181%" y="661" width="0.0325%" height="15" fill="rgb(226,23,31)" fg:x="212970" fg:w="81"/><text x="85.7681%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (81 samples, 0.03%)</title><rect x="85.5181%" y="645" width="0.0325%" height="15" fill="rgb(247,16,28)" fg:x="212970" fg:w="81"/><text x="85.7681%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (81 samples, 0.03%)</title><rect x="85.5181%" y="629" width="0.0325%" height="15" fill="rgb(231,147,38)" fg:x="212970" fg:w="81"/><text x="85.7681%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (41 samples, 0.02%)</title><rect x="85.5506%" y="693" width="0.0165%" height="15" fill="rgb(253,81,48)" fg:x="213051" fg:w="41"/><text x="85.8006%" y="703.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (41 samples, 0.02%)</title><rect x="85.5506%" y="677" width="0.0165%" height="15" fill="rgb(249,222,43)" fg:x="213051" fg:w="41"/><text x="85.8006%" y="687.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (41 samples, 0.02%)</title><rect x="85.5506%" y="661" width="0.0165%" height="15" fill="rgb(221,3,27)" fg:x="213051" fg:w="41"/><text x="85.8006%" y="671.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (55 samples, 0.02%)</title><rect x="85.5671%" y="693" width="0.0221%" height="15" fill="rgb(228,180,5)" fg:x="213092" fg:w="55"/><text x="85.8171%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (489 samples, 0.20%)</title><rect x="85.5892%" y="693" width="0.1964%" height="15" fill="rgb(227,131,42)" fg:x="213147" fg:w="489"/><text x="85.8392%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (489 samples, 0.20%)</title><rect x="85.5892%" y="677" width="0.1964%" height="15" fill="rgb(212,3,39)" fg:x="213147" fg:w="489"/><text x="85.8392%" y="687.50"></text></g><g><title>[libc.so.6] (466 samples, 0.19%)</title><rect x="85.5984%" y="661" width="0.1871%" height="15" fill="rgb(226,45,5)" fg:x="213170" fg:w="466"/><text x="85.8484%" y="671.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (289 samples, 0.12%)</title><rect x="85.7855%" y="693" width="0.1160%" height="15" fill="rgb(215,167,45)" fg:x="213636" fg:w="289"/><text x="86.0355%" y="703.50"></text></g><g><title>fastwebsockets::frame::Frame::write (1,008 samples, 0.40%)</title><rect x="85.5040%" y="709" width="0.4048%" height="15" fill="rgb(250,218,53)" fg:x="212935" fg:w="1008"/><text x="85.7540%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (51 samples, 0.02%)</title><rect x="86.0995%" y="693" width="0.0205%" height="15" fill="rgb(207,140,0)" fg:x="214418" fg:w="51"/><text x="86.3495%" y="703.50"></text></g><g><title>__send (32 samples, 0.01%)</title><rect x="86.1329%" y="533" width="0.0128%" height="15" fill="rgb(238,133,51)" fg:x="214501" fg:w="32"/><text x="86.3829%" y="543.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (40 samples, 0.02%)</title><rect x="86.1329%" y="629" width="0.0161%" height="15" fill="rgb(218,203,53)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="639.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (40 samples, 0.02%)</title><rect x="86.1329%" y="613" width="0.0161%" height="15" fill="rgb(226,184,25)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="623.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (40 samples, 0.02%)</title><rect x="86.1329%" y="597" width="0.0161%" height="15" fill="rgb(231,121,21)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="607.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (40 samples, 0.02%)</title><rect x="86.1329%" y="581" width="0.0161%" height="15" fill="rgb(251,14,34)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="591.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (40 samples, 0.02%)</title><rect x="86.1329%" y="565" width="0.0161%" height="15" fill="rgb(249,193,11)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="575.50"></text></g><g><title>std::sys_common::net::TcpStream::write (40 samples, 0.02%)</title><rect x="86.1329%" y="549" width="0.0161%" height="15" fill="rgb(220,172,37)" fg:x="214501" fg:w="40"/><text x="86.3829%" y="559.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (113 samples, 0.05%)</title><rect x="86.1236%" y="677" width="0.0454%" height="15" fill="rgb(231,229,43)" fg:x="214478" fg:w="113"/><text x="86.3736%" y="687.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (99 samples, 0.04%)</title><rect x="86.1293%" y="661" width="0.0398%" height="15" fill="rgb(250,161,5)" fg:x="214492" fg:w="99"/><text x="86.3793%" y="671.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (92 samples, 0.04%)</title><rect x="86.1321%" y="645" width="0.0369%" height="15" fill="rgb(218,225,18)" fg:x="214499" fg:w="92"/><text x="86.3821%" y="655.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (27 samples, 0.01%)</title><rect x="86.1582%" y="629" width="0.0108%" height="15" fill="rgb(245,45,42)" fg:x="214564" fg:w="27"/><text x="86.4082%" y="639.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (27 samples, 0.01%)</title><rect x="86.1582%" y="613" width="0.0108%" height="15" fill="rgb(211,115,1)" fg:x="214564" fg:w="27"/><text x="86.4082%" y="623.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (124 samples, 0.05%)</title><rect x="86.1200%" y="693" width="0.0498%" height="15" fill="rgb(248,133,52)" fg:x="214469" fg:w="124"/><text x="86.3700%" y="703.50"></text></g><g><title>&lt;epoxy_server::listener::Quintet&lt;A,B,C,D,E&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (122 samples, 0.05%)</title><rect x="86.1799%" y="661" width="0.0490%" height="15" fill="rgb(238,100,21)" fg:x="214618" fg:w="122"/><text x="86.4299%" y="671.50"></text></g><g><title>std::sys::pal::unix::cvt (101 samples, 0.04%)</title><rect x="86.3698%" y="469" width="0.0406%" height="15" fill="rgb(247,144,11)" fg:x="215091" fg:w="101"/><text x="86.6198%" y="479.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (90 samples, 0.04%)</title><rect x="86.3742%" y="453" width="0.0361%" height="15" fill="rgb(206,164,16)" fg:x="215102" fg:w="90"/><text x="86.6242%" y="463.50"></text></g><g><title>[libc.so.6] (1,453 samples, 0.58%)</title><rect x="87.4251%" y="453" width="0.5835%" height="15" fill="rgb(222,34,3)" fg:x="217719" fg:w="1453"/><text x="87.6751%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (4,615 samples, 1.85%)</title><rect x="86.3638%" y="597" width="1.8532%" height="15" fill="rgb(248,82,4)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="607.50">t..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (4,615 samples, 1.85%)</title><rect x="86.3638%" y="581" width="1.8532%" height="15" fill="rgb(228,81,46)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="591.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (4,615 samples, 1.85%)</title><rect x="86.3638%" y="565" width="1.8532%" height="15" fill="rgb(227,67,47)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="575.50">m..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (4,615 samples, 1.85%)</title><rect x="86.3638%" y="549" width="1.8532%" height="15" fill="rgb(215,93,53)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="559.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (4,615 samples, 1.85%)</title><rect x="86.3638%" y="533" width="1.8532%" height="15" fill="rgb(248,194,39)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="543.50">&lt;..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (4,615 samples, 1.85%)</title><rect x="86.3638%" y="517" width="1.8532%" height="15" fill="rgb(215,5,19)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="527.50">&lt;..</text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (4,615 samples, 1.85%)</title><rect x="86.3638%" y="501" width="1.8532%" height="15" fill="rgb(226,215,51)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="511.50">s..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (4,615 samples, 1.85%)</title><rect x="86.3638%" y="485" width="1.8532%" height="15" fill="rgb(225,56,26)" fg:x="215076" fg:w="4615"/><text x="86.6138%" y="495.50">s..</text></g><g><title>writev (4,499 samples, 1.81%)</title><rect x="86.4103%" y="469" width="1.8066%" height="15" fill="rgb(222,75,29)" fg:x="215192" fg:w="4499"/><text x="86.6603%" y="479.50">w..</text></g><g><title>[unknown] (519 samples, 0.21%)</title><rect x="88.0085%" y="453" width="0.2084%" height="15" fill="rgb(236,139,6)" fg:x="219172" fg:w="519"/><text x="88.2585%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (44 samples, 0.02%)</title><rect x="88.2454%" y="533" width="0.0177%" height="15" fill="rgb(223,137,36)" fg:x="219762" fg:w="44"/><text x="88.4954%" y="543.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (44 samples, 0.02%)</title><rect x="88.2454%" y="517" width="0.0177%" height="15" fill="rgb(226,99,2)" fg:x="219762" fg:w="44"/><text x="88.4954%" y="527.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (44 samples, 0.02%)</title><rect x="88.2454%" y="501" width="0.0177%" height="15" fill="rgb(206,133,23)" fg:x="219762" fg:w="44"/><text x="88.4954%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (26 samples, 0.01%)</title><rect x="88.2527%" y="485" width="0.0104%" height="15" fill="rgb(243,173,15)" fg:x="219780" fg:w="26"/><text x="88.5027%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (143 samples, 0.06%)</title><rect x="88.2438%" y="581" width="0.0574%" height="15" fill="rgb(228,69,28)" fg:x="219758" fg:w="143"/><text x="88.4938%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (143 samples, 0.06%)</title><rect x="88.2438%" y="565" width="0.0574%" height="15" fill="rgb(212,51,22)" fg:x="219758" fg:w="143"/><text x="88.4938%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (143 samples, 0.06%)</title><rect x="88.2438%" y="549" width="0.0574%" height="15" fill="rgb(227,113,0)" fg:x="219758" fg:w="143"/><text x="88.4938%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (95 samples, 0.04%)</title><rect x="88.2631%" y="533" width="0.0381%" height="15" fill="rgb(252,84,27)" fg:x="219806" fg:w="95"/><text x="88.5131%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (95 samples, 0.04%)</title><rect x="88.2631%" y="517" width="0.0381%" height="15" fill="rgb(223,145,39)" fg:x="219806" fg:w="95"/><text x="88.5131%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (191 samples, 0.08%)</title><rect x="88.3145%" y="565" width="0.0767%" height="15" fill="rgb(239,219,30)" fg:x="219934" fg:w="191"/><text x="88.5645%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (191 samples, 0.08%)</title><rect x="88.3145%" y="549" width="0.0767%" height="15" fill="rgb(224,196,39)" fg:x="219934" fg:w="191"/><text x="88.5645%" y="559.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (28 samples, 0.01%)</title><rect x="88.3912%" y="565" width="0.0112%" height="15" fill="rgb(205,35,43)" fg:x="220125" fg:w="28"/><text x="88.6412%" y="575.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (5,570 samples, 2.24%)</title><rect x="86.1698%" y="693" width="2.2366%" height="15" fill="rgb(228,201,21)" fg:x="214593" fg:w="5570"/><text x="86.4198%" y="703.50">&lt;..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (5,570 samples, 2.24%)</title><rect x="86.1698%" y="677" width="2.2366%" height="15" fill="rgb(237,118,16)" fg:x="214593" fg:w="5570"/><text x="86.4198%" y="687.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (5,423 samples, 2.18%)</title><rect x="86.2288%" y="661" width="2.1776%" height="15" fill="rgb(241,17,19)" fg:x="214740" fg:w="5423"/><text x="86.4788%" y="671.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (5,192 samples, 2.08%)</title><rect x="86.3216%" y="645" width="2.0848%" height="15" fill="rgb(214,10,25)" fg:x="214971" fg:w="5192"/><text x="86.5716%" y="655.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (5,192 samples, 2.08%)</title><rect x="86.3216%" y="629" width="2.0848%" height="15" fill="rgb(238,37,29)" fg:x="214971" fg:w="5192"/><text x="86.5716%" y="639.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (5,192 samples, 2.08%)</title><rect x="86.3216%" y="613" width="2.0848%" height="15" fill="rgb(253,83,25)" fg:x="214971" fg:w="5192"/><text x="86.5716%" y="623.50">t..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (472 samples, 0.19%)</title><rect x="88.2169%" y="597" width="0.1895%" height="15" fill="rgb(234,192,12)" fg:x="219691" fg:w="472"/><text x="88.4669%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (262 samples, 0.11%)</title><rect x="88.3012%" y="581" width="0.1052%" height="15" fill="rgb(241,216,45)" fg:x="219901" fg:w="262"/><text x="88.5512%" y="591.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (18,086 samples, 7.26%)</title><rect x="81.2063%" y="741" width="7.2624%" height="15" fill="rgb(242,22,33)" fg:x="202232" fg:w="18086"/><text x="81.4563%" y="751.50">fastwebsoc..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (16,746 samples, 6.72%)</title><rect x="81.7443%" y="725" width="6.7244%" height="15" fill="rgb(231,105,49)" fg:x="203572" fg:w="16746"/><text x="81.9943%" y="735.50">fastwebso..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (6,375 samples, 2.56%)</title><rect x="85.9088%" y="709" width="2.5599%" height="15" fill="rgb(218,204,15)" fg:x="213943" fg:w="6375"/><text x="86.1588%" y="719.50">fa..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (155 samples, 0.06%)</title><rect x="88.4064%" y="693" width="0.0622%" height="15" fill="rgb(235,138,41)" fg:x="220163" fg:w="155"/><text x="88.6564%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (25 samples, 0.01%)</title><rect x="88.4587%" y="677" width="0.0100%" height="15" fill="rgb(246,0,9)" fg:x="220293" fg:w="25"/><text x="88.7087%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.01%)</title><rect x="88.4587%" y="661" width="0.0100%" height="15" fill="rgb(210,74,4)" fg:x="220293" fg:w="25"/><text x="88.7087%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (20,983 samples, 8.43%)</title><rect x="80.1401%" y="773" width="8.4257%" height="15" fill="rgb(250,60,41)" fg:x="199577" fg:w="20983"/><text x="80.3901%" y="783.50">&lt;core::pin::..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (20,983 samples, 8.43%)</title><rect x="80.1401%" y="757" width="8.4257%" height="15" fill="rgb(220,115,12)" fg:x="199577" fg:w="20983"/><text x="80.3901%" y="767.50">wisp_mux::fa..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (242 samples, 0.10%)</title><rect x="88.4687%" y="741" width="0.0972%" height="15" fill="rgb(237,100,13)" fg:x="220318" fg:w="242"/><text x="88.7187%" y="751.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (197 samples, 0.08%)</title><rect x="88.4868%" y="725" width="0.0791%" height="15" fill="rgb(213,55,26)" fg:x="220363" fg:w="197"/><text x="88.7368%" y="735.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (73 samples, 0.03%)</title><rect x="88.8032%" y="581" width="0.0293%" height="15" fill="rgb(216,17,4)" fg:x="221151" fg:w="73"/><text x="89.0532%" y="591.50"></text></g><g><title>tcache_gc_small (29 samples, 0.01%)</title><rect x="88.8208%" y="565" width="0.0116%" height="15" fill="rgb(220,153,47)" fg:x="221195" fg:w="29"/><text x="89.0708%" y="575.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (29 samples, 0.01%)</title><rect x="88.8208%" y="549" width="0.0116%" height="15" fill="rgb(215,131,9)" fg:x="221195" fg:w="29"/><text x="89.0708%" y="559.50"></text></g><g><title>tcache_bin_flush_bottom (29 samples, 0.01%)</title><rect x="88.8208%" y="533" width="0.0116%" height="15" fill="rgb(233,46,42)" fg:x="221195" fg:w="29"/><text x="89.0708%" y="543.50"></text></g><g><title>tcache_bin_flush_impl (27 samples, 0.01%)</title><rect x="88.8217%" y="517" width="0.0108%" height="15" fill="rgb(226,86,7)" fg:x="221197" fg:w="27"/><text x="89.0717%" y="527.50"></text></g><g><title>_rjem_je_te_event_trigger (134 samples, 0.05%)</title><rect x="88.7855%" y="597" width="0.0538%" height="15" fill="rgb(239,226,21)" fg:x="221107" fg:w="134"/><text x="89.0355%" y="607.50"></text></g><g><title>isfree (152 samples, 0.06%)</title><rect x="88.7791%" y="645" width="0.0610%" height="15" fill="rgb(244,137,22)" fg:x="221091" fg:w="152"/><text x="89.0291%" y="655.50"></text></g><g><title>thread_dalloc_event (144 samples, 0.06%)</title><rect x="88.7823%" y="629" width="0.0578%" height="15" fill="rgb(211,139,35)" fg:x="221099" fg:w="144"/><text x="89.0323%" y="639.50"></text></g><g><title>te_event_advance (144 samples, 0.06%)</title><rect x="88.7823%" y="613" width="0.0578%" height="15" fill="rgb(214,62,50)" fg:x="221099" fg:w="144"/><text x="89.0323%" y="623.50"></text></g><g><title>_rjem_je_sdallocx_default (165 samples, 0.07%)</title><rect x="88.7747%" y="661" width="0.0663%" height="15" fill="rgb(212,113,44)" fg:x="221080" fg:w="165"/><text x="89.0247%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (589 samples, 0.24%)</title><rect x="89.1622%" y="629" width="0.2365%" height="15" fill="rgb(226,150,43)" fg:x="222045" fg:w="589"/><text x="89.4122%" y="639.50"></text></g><g><title>cache_bin_full (282 samples, 0.11%)</title><rect x="89.2854%" y="613" width="0.1132%" height="15" fill="rgb(250,71,37)" fg:x="222352" fg:w="282"/><text x="89.5354%" y="623.50"></text></g><g><title>sz_index2size (157 samples, 0.06%)</title><rect x="89.3987%" y="629" width="0.0630%" height="15" fill="rgb(219,76,19)" fg:x="222634" fg:w="157"/><text x="89.6487%" y="639.50"></text></g><g><title>sz_index2size_lookup (157 samples, 0.06%)</title><rect x="89.3987%" y="613" width="0.0630%" height="15" fill="rgb(250,39,11)" fg:x="222634" fg:w="157"/><text x="89.6487%" y="623.50"></text></g><g><title>sz_index2size_lookup_impl (157 samples, 0.06%)</title><rect x="89.3987%" y="597" width="0.0630%" height="15" fill="rgb(230,64,31)" fg:x="222634" fg:w="157"/><text x="89.6487%" y="607.50"></text></g><g><title>sz_size2index_lookup (29 samples, 0.01%)</title><rect x="89.4617%" y="629" width="0.0116%" height="15" fill="rgb(208,222,23)" fg:x="222791" fg:w="29"/><text x="89.7117%" y="639.50"></text></g><g><title>sz_size2index_lookup_impl (29 samples, 0.01%)</title><rect x="89.4617%" y="613" width="0.0116%" height="15" fill="rgb(227,125,18)" fg:x="222791" fg:w="29"/><text x="89.7117%" y="623.50"></text></g><g><title>_rjem_sdallocx (1,581 samples, 0.63%)</title><rect x="88.8409%" y="661" width="0.6349%" height="15" fill="rgb(234,210,9)" fg:x="221245" fg:w="1581"/><text x="89.0909%" y="671.50"></text></g><g><title>free_fastpath (1,579 samples, 0.63%)</title><rect x="88.8417%" y="645" width="0.6340%" height="15" fill="rgb(217,127,24)" fg:x="221247" fg:w="1579"/><text x="89.0917%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,823 samples, 0.73%)</title><rect x="88.7727%" y="725" width="0.7320%" height="15" fill="rgb(239,141,48)" fg:x="221075" fg:w="1823"/><text x="89.0227%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1,823 samples, 0.73%)</title><rect x="88.7727%" y="709" width="0.7320%" height="15" fill="rgb(227,109,8)" fg:x="221075" fg:w="1823"/><text x="89.0227%" y="719.50"></text></g><g><title>__rust_dealloc (1,823 samples, 0.73%)</title><rect x="88.7727%" y="693" width="0.7320%" height="15" fill="rgb(235,184,23)" fg:x="221075" fg:w="1823"/><text x="89.0227%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,823 samples, 0.73%)</title><rect x="88.7727%" y="677" width="0.7320%" height="15" fill="rgb(227,226,48)" fg:x="221075" fg:w="1823"/><text x="89.0227%" y="687.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (72 samples, 0.03%)</title><rect x="89.4758%" y="661" width="0.0289%" height="15" fill="rgb(206,150,11)" fg:x="222826" fg:w="72"/><text x="89.7258%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,870 samples, 0.75%)</title><rect x="88.7602%" y="741" width="0.7509%" height="15" fill="rgb(254,2,33)" fg:x="221044" fg:w="1870"/><text x="89.0102%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (2,494 samples, 1.00%)</title><rect x="88.5659%" y="773" width="1.0015%" height="15" fill="rgb(243,160,20)" fg:x="220560" fg:w="2494"/><text x="88.8159%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (2,494 samples, 1.00%)</title><rect x="88.5659%" y="757" width="1.0015%" height="15" fill="rgb(218,208,30)" fg:x="220560" fg:w="2494"/><text x="88.8159%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (140 samples, 0.06%)</title><rect x="89.5111%" y="741" width="0.0562%" height="15" fill="rgb(224,120,49)" fg:x="222914" fg:w="140"/><text x="89.7611%" y="751.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (51 samples, 0.02%)</title><rect x="89.7119%" y="517" width="0.0205%" height="15" fill="rgb(246,12,2)" fg:x="223414" fg:w="51"/><text x="89.9619%" y="527.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (50 samples, 0.02%)</title><rect x="89.7123%" y="501" width="0.0201%" height="15" fill="rgb(236,117,3)" fg:x="223415" fg:w="50"/><text x="89.9623%" y="511.50"></text></g><g><title>imalloc_no_sample (55 samples, 0.02%)</title><rect x="89.7115%" y="581" width="0.0221%" height="15" fill="rgb(216,128,52)" fg:x="223413" fg:w="55"/><text x="89.9615%" y="591.50"></text></g><g><title>iallocztm (55 samples, 0.02%)</title><rect x="89.7115%" y="565" width="0.0221%" height="15" fill="rgb(246,145,19)" fg:x="223413" fg:w="55"/><text x="89.9615%" y="575.50"></text></g><g><title>arena_malloc (55 samples, 0.02%)</title><rect x="89.7115%" y="549" width="0.0221%" height="15" fill="rgb(222,11,46)" fg:x="223413" fg:w="55"/><text x="89.9615%" y="559.50"></text></g><g><title>tcache_alloc_small (55 samples, 0.02%)</title><rect x="89.7115%" y="533" width="0.0221%" height="15" fill="rgb(245,82,36)" fg:x="223413" fg:w="55"/><text x="89.9615%" y="543.50"></text></g><g><title>tcache_gc_small (25 samples, 0.01%)</title><rect x="89.7749%" y="501" width="0.0100%" height="15" fill="rgb(250,73,51)" fg:x="223571" fg:w="25"/><text x="90.0249%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (25 samples, 0.01%)</title><rect x="89.7749%" y="485" width="0.0100%" height="15" fill="rgb(221,189,23)" fg:x="223571" fg:w="25"/><text x="90.0249%" y="495.50"></text></g><g><title>tcache_bin_flush_bottom (25 samples, 0.01%)</title><rect x="89.7749%" y="469" width="0.0100%" height="15" fill="rgb(210,33,7)" fg:x="223571" fg:w="25"/><text x="90.0249%" y="479.50"></text></g><g><title>tcache_bin_flush_impl (25 samples, 0.01%)</title><rect x="89.7749%" y="453" width="0.0100%" height="15" fill="rgb(210,107,22)" fg:x="223571" fg:w="25"/><text x="90.0249%" y="463.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (80 samples, 0.03%)</title><rect x="89.7585%" y="533" width="0.0321%" height="15" fill="rgb(222,116,37)" fg:x="223530" fg:w="80"/><text x="90.0085%" y="543.50"></text></g><g><title>tcache_event (79 samples, 0.03%)</title><rect x="89.7589%" y="517" width="0.0317%" height="15" fill="rgb(254,17,48)" fg:x="223531" fg:w="79"/><text x="90.0089%" y="527.50"></text></g><g><title>_rjem_je_malloc_default (230 samples, 0.09%)</title><rect x="89.7091%" y="629" width="0.0924%" height="15" fill="rgb(224,36,32)" fg:x="223407" fg:w="230"/><text x="89.9591%" y="639.50"></text></g><g><title>imalloc (227 samples, 0.09%)</title><rect x="89.7103%" y="613" width="0.0912%" height="15" fill="rgb(232,90,46)" fg:x="223410" fg:w="227"/><text x="89.9603%" y="623.50"></text></g><g><title>imalloc_body (227 samples, 0.09%)</title><rect x="89.7103%" y="597" width="0.0912%" height="15" fill="rgb(241,66,40)" fg:x="223410" fg:w="227"/><text x="89.9603%" y="607.50"></text></g><g><title>thread_alloc_event (169 samples, 0.07%)</title><rect x="89.7336%" y="581" width="0.0679%" height="15" fill="rgb(249,184,29)" fg:x="223468" fg:w="169"/><text x="89.9836%" y="591.50"></text></g><g><title>te_event_advance (169 samples, 0.07%)</title><rect x="89.7336%" y="565" width="0.0679%" height="15" fill="rgb(231,181,1)" fg:x="223468" fg:w="169"/><text x="89.9836%" y="575.50"></text></g><g><title>_rjem_je_te_event_trigger (154 samples, 0.06%)</title><rect x="89.7396%" y="549" width="0.0618%" height="15" fill="rgb(224,94,2)" fg:x="223483" fg:w="154"/><text x="89.9896%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (440 samples, 0.18%)</title><rect x="89.8621%" y="597" width="0.1767%" height="15" fill="rgb(229,170,15)" fg:x="223788" fg:w="440"/><text x="90.1121%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (440 samples, 0.18%)</title><rect x="89.8621%" y="581" width="0.1767%" height="15" fill="rgb(240,127,35)" fg:x="223788" fg:w="440"/><text x="90.1121%" y="591.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26,334 samples, 10.57%)</title><rect x="79.4792%" y="805" width="10.5744%" height="15" fill="rgb(248,196,34)" fg:x="197931" fg:w="26334"/><text x="79.7292%" y="815.50">&lt;core::pin::Pin..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (26,334 samples, 10.57%)</title><rect x="79.4792%" y="789" width="10.5744%" height="15" fill="rgb(236,137,7)" fg:x="197931" fg:w="26334"/><text x="79.7292%" y="799.50">&lt;alloc::boxed::..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (1,211 samples, 0.49%)</title><rect x="89.5673%" y="773" width="0.4863%" height="15" fill="rgb(235,127,16)" fg:x="223054" fg:w="1211"/><text x="89.8173%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1,175 samples, 0.47%)</title><rect x="89.5818%" y="757" width="0.4718%" height="15" fill="rgb(250,192,54)" fg:x="223090" fg:w="1175"/><text x="89.8318%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1,175 samples, 0.47%)</title><rect x="89.5818%" y="741" width="0.4718%" height="15" fill="rgb(218,98,20)" fg:x="223090" fg:w="1175"/><text x="89.8318%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (885 samples, 0.36%)</title><rect x="89.6982%" y="725" width="0.3554%" height="15" fill="rgb(230,176,47)" fg:x="223380" fg:w="885"/><text x="89.9482%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (875 samples, 0.35%)</title><rect x="89.7023%" y="709" width="0.3514%" height="15" fill="rgb(244,2,33)" fg:x="223390" fg:w="875"/><text x="89.9523%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (875 samples, 0.35%)</title><rect x="89.7023%" y="693" width="0.3514%" height="15" fill="rgb(231,100,17)" fg:x="223390" fg:w="875"/><text x="89.9523%" y="703.50"></text></g><g><title>alloc::alloc::alloc (871 samples, 0.35%)</title><rect x="89.7039%" y="677" width="0.3498%" height="15" fill="rgb(245,23,12)" fg:x="223394" fg:w="871"/><text x="89.9539%" y="687.50"></text></g><g><title>__rust_alloc (871 samples, 0.35%)</title><rect x="89.7039%" y="661" width="0.3498%" height="15" fill="rgb(249,55,22)" fg:x="223394" fg:w="871"/><text x="89.9539%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (871 samples, 0.35%)</title><rect x="89.7039%" y="645" width="0.3498%" height="15" fill="rgb(207,134,9)" fg:x="223394" fg:w="871"/><text x="89.9539%" y="655.50"></text></g><g><title>_rjem_malloc (628 samples, 0.25%)</title><rect x="89.8014%" y="629" width="0.2522%" height="15" fill="rgb(218,134,0)" fg:x="223637" fg:w="628"/><text x="90.0514%" y="639.50"></text></g><g><title>imalloc_fastpath (623 samples, 0.25%)</title><rect x="89.8034%" y="613" width="0.2502%" height="15" fill="rgb(213,212,33)" fg:x="223642" fg:w="623"/><text x="90.0534%" y="623.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (56 samples, 0.02%)</title><rect x="90.1568%" y="613" width="0.0225%" height="15" fill="rgb(252,106,18)" fg:x="224522" fg:w="56"/><text x="90.4068%" y="623.50"></text></g><g><title>_rjem_je_te_event_trigger (109 samples, 0.04%)</title><rect x="90.1411%" y="629" width="0.0438%" height="15" fill="rgb(208,126,42)" fg:x="224483" fg:w="109"/><text x="90.3911%" y="639.50"></text></g><g><title>isfree (130 samples, 0.05%)</title><rect x="90.1335%" y="677" width="0.0522%" height="15" fill="rgb(246,175,29)" fg:x="224464" fg:w="130"/><text x="90.3835%" y="687.50"></text></g><g><title>thread_dalloc_event (123 samples, 0.05%)</title><rect x="90.1363%" y="661" width="0.0494%" height="15" fill="rgb(215,13,50)" fg:x="224471" fg:w="123"/><text x="90.3863%" y="671.50"></text></g><g><title>te_event_advance (123 samples, 0.05%)</title><rect x="90.1363%" y="645" width="0.0494%" height="15" fill="rgb(216,172,15)" fg:x="224471" fg:w="123"/><text x="90.3863%" y="655.50"></text></g><g><title>_rjem_je_sdallocx_default (143 samples, 0.06%)</title><rect x="90.1299%" y="693" width="0.0574%" height="15" fill="rgb(212,103,13)" fg:x="224455" fg:w="143"/><text x="90.3799%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (193 samples, 0.08%)</title><rect x="90.2291%" y="661" width="0.0775%" height="15" fill="rgb(231,171,36)" fg:x="224702" fg:w="193"/><text x="90.4791%" y="671.50"></text></g><g><title>cache_bin_full (80 samples, 0.03%)</title><rect x="90.2745%" y="645" width="0.0321%" height="15" fill="rgb(250,123,20)" fg:x="224815" fg:w="80"/><text x="90.5245%" y="655.50"></text></g><g><title>_rjem_sdallocx (326 samples, 0.13%)</title><rect x="90.1873%" y="693" width="0.1309%" height="15" fill="rgb(212,53,50)" fg:x="224598" fg:w="326"/><text x="90.4373%" y="703.50"></text></g><g><title>free_fastpath (325 samples, 0.13%)</title><rect x="90.1877%" y="677" width="0.1305%" height="15" fill="rgb(243,54,12)" fg:x="224599" fg:w="325"/><text x="90.4377%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (510 samples, 0.20%)</title><rect x="90.1283%" y="757" width="0.2048%" height="15" fill="rgb(234,101,34)" fg:x="224451" fg:w="510"/><text x="90.3783%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (510 samples, 0.20%)</title><rect x="90.1283%" y="741" width="0.2048%" height="15" fill="rgb(254,67,22)" fg:x="224451" fg:w="510"/><text x="90.3783%" y="751.50"></text></g><g><title>__rust_dealloc (510 samples, 0.20%)</title><rect x="90.1283%" y="725" width="0.2048%" height="15" fill="rgb(250,35,47)" fg:x="224451" fg:w="510"/><text x="90.3783%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (510 samples, 0.20%)</title><rect x="90.1283%" y="709" width="0.2048%" height="15" fill="rgb(226,126,38)" fg:x="224451" fg:w="510"/><text x="90.3783%" y="719.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (37 samples, 0.01%)</title><rect x="90.3182%" y="693" width="0.0149%" height="15" fill="rgb(216,138,53)" fg:x="224924" fg:w="37"/><text x="90.5682%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (537 samples, 0.22%)</title><rect x="90.1211%" y="773" width="0.2156%" height="15" fill="rgb(246,199,43)" fg:x="224433" fg:w="537"/><text x="90.3711%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (28,829 samples, 11.58%)</title><rect x="78.7737%" y="837" width="11.5763%" height="15" fill="rgb(232,125,11)" fg:x="196174" fg:w="28829"/><text x="79.0237%" y="847.50">&lt;core::pin::Pin&lt;P..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (28,810 samples, 11.57%)</title><rect x="78.7813%" y="821" width="11.5687%" height="15" fill="rgb(218,219,45)" fg:x="196193" fg:w="28810"/><text x="79.0313%" y="831.50">&lt;alloc::boxed::Bo..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (738 samples, 0.30%)</title><rect x="90.0536%" y="805" width="0.2963%" height="15" fill="rgb(216,102,54)" fg:x="224265" fg:w="738"/><text x="90.3036%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (738 samples, 0.30%)</title><rect x="90.0536%" y="789" width="0.2963%" height="15" fill="rgb(250,228,7)" fg:x="224265" fg:w="738"/><text x="90.3036%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (33 samples, 0.01%)</title><rect x="90.3367%" y="773" width="0.0133%" height="15" fill="rgb(226,125,25)" fg:x="224970" fg:w="33"/><text x="90.5867%" y="783.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (84 samples, 0.03%)</title><rect x="90.4042%" y="821" width="0.0337%" height="15" fill="rgb(224,165,27)" fg:x="225138" fg:w="84"/><text x="90.6542%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (84 samples, 0.03%)</title><rect x="90.4042%" y="805" width="0.0337%" height="15" fill="rgb(233,86,3)" fg:x="225138" fg:w="84"/><text x="90.6542%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (45 samples, 0.02%)</title><rect x="90.4198%" y="789" width="0.0181%" height="15" fill="rgb(228,116,20)" fg:x="225177" fg:w="45"/><text x="90.6698%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (44 samples, 0.02%)</title><rect x="90.4202%" y="773" width="0.0177%" height="15" fill="rgb(209,192,17)" fg:x="225178" fg:w="44"/><text x="90.6702%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (44 samples, 0.02%)</title><rect x="90.4202%" y="757" width="0.0177%" height="15" fill="rgb(224,88,34)" fg:x="225178" fg:w="44"/><text x="90.6702%" y="767.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (123 samples, 0.05%)</title><rect x="90.4379%" y="821" width="0.0494%" height="15" fill="rgb(233,38,6)" fg:x="225222" fg:w="123"/><text x="90.6879%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (83 samples, 0.03%)</title><rect x="90.4917%" y="821" width="0.0333%" height="15" fill="rgb(212,59,30)" fg:x="225356" fg:w="83"/><text x="90.7417%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.03%)</title><rect x="90.4917%" y="805" width="0.0333%" height="15" fill="rgb(213,80,3)" fg:x="225356" fg:w="83"/><text x="90.7417%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (75 samples, 0.03%)</title><rect x="90.4949%" y="789" width="0.0301%" height="15" fill="rgb(251,178,7)" fg:x="225364" fg:w="75"/><text x="90.7449%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (75 samples, 0.03%)</title><rect x="90.4949%" y="773" width="0.0301%" height="15" fill="rgb(213,154,26)" fg:x="225364" fg:w="75"/><text x="90.7449%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (75 samples, 0.03%)</title><rect x="90.4949%" y="757" width="0.0301%" height="15" fill="rgb(238,165,49)" fg:x="225364" fg:w="75"/><text x="90.7449%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (27 samples, 0.01%)</title><rect x="90.5254%" y="821" width="0.0108%" height="15" fill="rgb(248,91,46)" fg:x="225440" fg:w="27"/><text x="90.7754%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_or (27 samples, 0.01%)</title><rect x="90.5254%" y="805" width="0.0108%" height="15" fill="rgb(244,21,52)" fg:x="225440" fg:w="27"/><text x="90.7754%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="90.5572%" y="805" width="0.0104%" height="15" fill="rgb(247,122,20)" fg:x="225519" fg:w="26"/><text x="90.8072%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="90.5572%" y="789" width="0.0104%" height="15" fill="rgb(218,27,9)" fg:x="225519" fg:w="26"/><text x="90.8072%" y="799.50"></text></g><g><title>core::mem::replace (60 samples, 0.02%)</title><rect x="90.5740%" y="773" width="0.0241%" height="15" fill="rgb(246,7,6)" fg:x="225561" fg:w="60"/><text x="90.8240%" y="783.50"></text></g><g><title>core::ptr::read (60 samples, 0.02%)</title><rect x="90.5740%" y="757" width="0.0241%" height="15" fill="rgb(227,135,54)" fg:x="225561" fg:w="60"/><text x="90.8240%" y="767.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (83 samples, 0.03%)</title><rect x="90.5684%" y="805" width="0.0333%" height="15" fill="rgb(247,14,11)" fg:x="225547" fg:w="83"/><text x="90.8184%" y="815.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (83 samples, 0.03%)</title><rect x="90.5684%" y="789" width="0.0333%" height="15" fill="rgb(206,149,34)" fg:x="225547" fg:w="83"/><text x="90.8184%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (42 samples, 0.02%)</title><rect x="90.6065%" y="773" width="0.0169%" height="15" fill="rgb(227,228,4)" fg:x="225642" fg:w="42"/><text x="90.8565%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.02%)</title><rect x="90.6065%" y="757" width="0.0169%" height="15" fill="rgb(238,218,28)" fg:x="225642" fg:w="42"/><text x="90.8565%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (247 samples, 0.10%)</title><rect x="90.5379%" y="821" width="0.0992%" height="15" fill="rgb(252,86,40)" fg:x="225471" fg:w="247"/><text x="90.7879%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (88 samples, 0.04%)</title><rect x="90.6017%" y="805" width="0.0353%" height="15" fill="rgb(251,225,11)" fg:x="225630" fg:w="88"/><text x="90.8517%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (76 samples, 0.03%)</title><rect x="90.6065%" y="789" width="0.0305%" height="15" fill="rgb(206,46,49)" fg:x="225642" fg:w="76"/><text x="90.8565%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (34 samples, 0.01%)</title><rect x="90.6234%" y="773" width="0.0137%" height="15" fill="rgb(245,128,24)" fg:x="225684" fg:w="34"/><text x="90.8734%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (31 samples, 0.01%)</title><rect x="90.6246%" y="757" width="0.0124%" height="15" fill="rgb(219,177,34)" fg:x="225687" fg:w="31"/><text x="90.8746%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (1,467 samples, 0.59%)</title><rect x="90.6371%" y="821" width="0.5891%" height="15" fill="rgb(218,60,48)" fg:x="225718" fg:w="1467"/><text x="90.8871%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1,467 samples, 0.59%)</title><rect x="90.6371%" y="805" width="0.5891%" height="15" fill="rgb(221,11,5)" fg:x="225718" fg:w="1467"/><text x="90.8871%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (1,467 samples, 0.59%)</title><rect x="90.6371%" y="789" width="0.5891%" height="15" fill="rgb(220,148,13)" fg:x="225718" fg:w="1467"/><text x="90.8871%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (44 samples, 0.02%)</title><rect x="91.2277%" y="805" width="0.0177%" height="15" fill="rgb(210,16,3)" fg:x="227189" fg:w="44"/><text x="91.4777%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (44 samples, 0.02%)</title><rect x="91.2277%" y="789" width="0.0177%" height="15" fill="rgb(236,80,2)" fg:x="227189" fg:w="44"/><text x="91.4777%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Waiter::register (51 samples, 0.02%)</title><rect x="91.2261%" y="821" width="0.0205%" height="15" fill="rgb(239,129,19)" fg:x="227185" fg:w="51"/><text x="91.4761%" y="831.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (199 samples, 0.08%)</title><rect x="91.2466%" y="821" width="0.0799%" height="15" fill="rgb(220,106,35)" fg:x="227236" fg:w="199"/><text x="91.4966%" y="831.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (199 samples, 0.08%)</title><rect x="91.2466%" y="805" width="0.0799%" height="15" fill="rgb(252,139,45)" fg:x="227236" fg:w="199"/><text x="91.4966%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (196 samples, 0.08%)</title><rect x="91.3346%" y="789" width="0.0787%" height="15" fill="rgb(229,8,36)" fg:x="227455" fg:w="196"/><text x="91.5846%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (196 samples, 0.08%)</title><rect x="91.3346%" y="773" width="0.0787%" height="15" fill="rgb(230,126,33)" fg:x="227455" fg:w="196"/><text x="91.5846%" y="783.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,652 samples, 1.06%)</title><rect x="90.3540%" y="837" width="1.0649%" height="15" fill="rgb(239,140,21)" fg:x="225013" fg:w="2652"/><text x="90.6040%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (230 samples, 0.09%)</title><rect x="91.3265%" y="821" width="0.0924%" height="15" fill="rgb(254,104,9)" fg:x="227435" fg:w="230"/><text x="91.5765%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (211 samples, 0.08%)</title><rect x="91.3341%" y="805" width="0.0847%" height="15" fill="rgb(239,52,14)" fg:x="227454" fg:w="211"/><text x="91.5841%" y="815.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (60 samples, 0.02%)</title><rect x="91.4614%" y="645" width="0.0241%" height="15" fill="rgb(208,227,44)" fg:x="227771" fg:w="60"/><text x="91.7114%" y="655.50"></text></g><g><title>tcache_gc_small (26 samples, 0.01%)</title><rect x="91.4751%" y="629" width="0.0104%" height="15" fill="rgb(246,18,19)" fg:x="227805" fg:w="26"/><text x="91.7251%" y="639.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (26 samples, 0.01%)</title><rect x="91.4751%" y="613" width="0.0104%" height="15" fill="rgb(235,228,25)" fg:x="227805" fg:w="26"/><text x="91.7251%" y="623.50"></text></g><g><title>tcache_bin_flush_bottom (26 samples, 0.01%)</title><rect x="91.4751%" y="597" width="0.0104%" height="15" fill="rgb(240,156,20)" fg:x="227805" fg:w="26"/><text x="91.7251%" y="607.50"></text></g><g><title>tcache_bin_flush_impl (26 samples, 0.01%)</title><rect x="91.4751%" y="581" width="0.0104%" height="15" fill="rgb(224,8,20)" fg:x="227805" fg:w="26"/><text x="91.7251%" y="591.50"></text></g><g><title>_rjem_je_te_event_trigger (96 samples, 0.04%)</title><rect x="91.4514%" y="661" width="0.0385%" height="15" fill="rgb(214,12,52)" fg:x="227746" fg:w="96"/><text x="91.7014%" y="671.50"></text></g><g><title>_rjem_je_sdallocx_default (115 samples, 0.05%)</title><rect x="91.4446%" y="725" width="0.0462%" height="15" fill="rgb(211,220,47)" fg:x="227729" fg:w="115"/><text x="91.6946%" y="735.50"></text></g><g><title>isfree (111 samples, 0.04%)</title><rect x="91.4462%" y="709" width="0.0446%" height="15" fill="rgb(250,173,5)" fg:x="227733" fg:w="111"/><text x="91.6962%" y="719.50"></text></g><g><title>thread_dalloc_event (110 samples, 0.04%)</title><rect x="91.4466%" y="693" width="0.0442%" height="15" fill="rgb(250,125,52)" fg:x="227734" fg:w="110"/><text x="91.6966%" y="703.50"></text></g><g><title>te_event_advance (110 samples, 0.04%)</title><rect x="91.4466%" y="677" width="0.0442%" height="15" fill="rgb(209,133,18)" fg:x="227734" fg:w="110"/><text x="91.6966%" y="687.50"></text></g><g><title>cache_bin_dalloc_easy (101 samples, 0.04%)</title><rect x="91.5229%" y="693" width="0.0406%" height="15" fill="rgb(216,173,22)" fg:x="227924" fg:w="101"/><text x="91.7729%" y="703.50"></text></g><g><title>cache_bin_full (31 samples, 0.01%)</title><rect x="91.5510%" y="677" width="0.0124%" height="15" fill="rgb(205,3,22)" fg:x="227994" fg:w="31"/><text x="91.8010%" y="687.50"></text></g><g><title>_rjem_sdallocx (208 samples, 0.08%)</title><rect x="91.4908%" y="725" width="0.0835%" height="15" fill="rgb(248,22,20)" fg:x="227844" fg:w="208"/><text x="91.7408%" y="735.50"></text></g><g><title>free_fastpath (208 samples, 0.08%)</title><rect x="91.4908%" y="709" width="0.0835%" height="15" fill="rgb(233,6,29)" fg:x="227844" fg:w="208"/><text x="91.7408%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (389 samples, 0.16%)</title><rect x="91.4398%" y="789" width="0.1562%" height="15" fill="rgb(240,22,54)" fg:x="227717" fg:w="389"/><text x="91.6898%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (389 samples, 0.16%)</title><rect x="91.4398%" y="773" width="0.1562%" height="15" fill="rgb(231,133,32)" fg:x="227717" fg:w="389"/><text x="91.6898%" y="783.50"></text></g><g><title>__rust_dealloc (389 samples, 0.16%)</title><rect x="91.4398%" y="757" width="0.1562%" height="15" fill="rgb(248,193,4)" fg:x="227717" fg:w="389"/><text x="91.6898%" y="767.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (389 samples, 0.16%)</title><rect x="91.4398%" y="741" width="0.1562%" height="15" fill="rgb(211,178,46)" fg:x="227717" fg:w="389"/><text x="91.6898%" y="751.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (54 samples, 0.02%)</title><rect x="91.5743%" y="725" width="0.0217%" height="15" fill="rgb(224,5,42)" fg:x="228052" fg:w="54"/><text x="91.8243%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (419 samples, 0.17%)</title><rect x="91.4313%" y="805" width="0.1682%" height="15" fill="rgb(239,176,25)" fg:x="227696" fg:w="419"/><text x="91.6813%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (484 samples, 0.19%)</title><rect x="91.4189%" y="837" width="0.1944%" height="15" fill="rgb(245,187,50)" fg:x="227665" fg:w="484"/><text x="91.6689%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (484 samples, 0.19%)</title><rect x="91.4189%" y="821" width="0.1944%" height="15" fill="rgb(248,24,15)" fg:x="227665" fg:w="484"/><text x="91.6689%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (34 samples, 0.01%)</title><rect x="91.5996%" y="805" width="0.0137%" height="15" fill="rgb(205,166,13)" fg:x="228115" fg:w="34"/><text x="91.8496%" y="815.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (803 samples, 0.32%)</title><rect x="91.6309%" y="789" width="0.3224%" height="15" fill="rgb(208,114,23)" fg:x="228193" fg:w="803"/><text x="91.8809%" y="799.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.04%)</title><rect x="91.9116%" y="773" width="0.0418%" height="15" fill="rgb(239,127,18)" fg:x="228892" fg:w="104"/><text x="92.1616%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.04%)</title><rect x="91.9116%" y="757" width="0.0418%" height="15" fill="rgb(219,154,28)" fg:x="228892" fg:w="104"/><text x="92.1616%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (104 samples, 0.04%)</title><rect x="91.9116%" y="741" width="0.0418%" height="15" fill="rgb(225,157,23)" fg:x="228892" fg:w="104"/><text x="92.1616%" y="751.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (61 samples, 0.02%)</title><rect x="91.9288%" y="725" width="0.0245%" height="15" fill="rgb(219,8,6)" fg:x="228935" fg:w="61"/><text x="92.1788%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (46 samples, 0.02%)</title><rect x="91.9557%" y="757" width="0.0185%" height="15" fill="rgb(212,47,6)" fg:x="229002" fg:w="46"/><text x="92.2057%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (451 samples, 0.18%)</title><rect x="91.9533%" y="789" width="0.1811%" height="15" fill="rgb(224,190,4)" fg:x="228996" fg:w="451"/><text x="92.2033%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (451 samples, 0.18%)</title><rect x="91.9533%" y="773" width="0.1811%" height="15" fill="rgb(239,183,29)" fg:x="228996" fg:w="451"/><text x="92.2033%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (399 samples, 0.16%)</title><rect x="91.9742%" y="757" width="0.1602%" height="15" fill="rgb(213,57,7)" fg:x="229048" fg:w="399"/><text x="92.2242%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (387 samples, 0.16%)</title><rect x="91.9790%" y="741" width="0.1554%" height="15" fill="rgb(216,148,1)" fg:x="229060" fg:w="387"/><text x="92.2290%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (387 samples, 0.16%)</title><rect x="91.9790%" y="725" width="0.1554%" height="15" fill="rgb(236,182,29)" fg:x="229060" fg:w="387"/><text x="92.2290%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (1,106 samples, 0.44%)</title><rect x="92.1364%" y="789" width="0.4441%" height="15" fill="rgb(244,120,48)" fg:x="229452" fg:w="1106"/><text x="92.3864%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_and (1,106 samples, 0.44%)</title><rect x="92.1364%" y="773" width="0.4441%" height="15" fill="rgb(206,71,34)" fg:x="229452" fg:w="1106"/><text x="92.3864%" y="783.50"></text></g><g><title>core::ptr::read (46 samples, 0.02%)</title><rect x="92.5854%" y="757" width="0.0185%" height="15" fill="rgb(242,32,6)" fg:x="230570" fg:w="46"/><text x="92.8354%" y="767.50"></text></g><g><title>core::mem::replace (56 samples, 0.02%)</title><rect x="92.5854%" y="773" width="0.0225%" height="15" fill="rgb(241,35,3)" fg:x="230570" fg:w="56"/><text x="92.8354%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (49 samples, 0.02%)</title><rect x="92.6091%" y="725" width="0.0197%" height="15" fill="rgb(222,62,19)" fg:x="230629" fg:w="49"/><text x="92.8591%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (49 samples, 0.02%)</title><rect x="92.6091%" y="709" width="0.0197%" height="15" fill="rgb(223,110,41)" fg:x="230629" fg:w="49"/><text x="92.8591%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.02%)</title><rect x="92.6111%" y="693" width="0.0177%" height="15" fill="rgb(208,224,4)" fg:x="230634" fg:w="44"/><text x="92.8611%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.02%)</title><rect x="92.6111%" y="677" width="0.0177%" height="15" fill="rgb(241,137,19)" fg:x="230634" fg:w="44"/><text x="92.8611%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (128 samples, 0.05%)</title><rect x="92.6296%" y="661" width="0.0514%" height="15" fill="rgb(244,24,17)" fg:x="230680" fg:w="128"/><text x="92.8796%" y="671.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (112 samples, 0.04%)</title><rect x="92.6360%" y="645" width="0.0450%" height="15" fill="rgb(245,178,49)" fg:x="230696" fg:w="112"/><text x="92.8860%" y="655.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (45 samples, 0.02%)</title><rect x="92.6629%" y="629" width="0.0181%" height="15" fill="rgb(219,160,38)" fg:x="230763" fg:w="45"/><text x="92.9129%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (42 samples, 0.02%)</title><rect x="92.6641%" y="613" width="0.0169%" height="15" fill="rgb(228,137,14)" fg:x="230766" fg:w="42"/><text x="92.9141%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (54 samples, 0.02%)</title><rect x="92.6822%" y="645" width="0.0217%" height="15" fill="rgb(237,134,11)" fg:x="230811" fg:w="54"/><text x="92.9322%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (54 samples, 0.02%)</title><rect x="92.6822%" y="629" width="0.0217%" height="15" fill="rgb(211,126,44)" fg:x="230811" fg:w="54"/><text x="92.9322%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (54 samples, 0.02%)</title><rect x="92.6822%" y="613" width="0.0217%" height="15" fill="rgb(226,171,33)" fg:x="230811" fg:w="54"/><text x="92.9322%" y="623.50"></text></g><g><title>core::ptr::read (32 samples, 0.01%)</title><rect x="92.7404%" y="597" width="0.0128%" height="15" fill="rgb(253,99,13)" fg:x="230956" fg:w="32"/><text x="92.9904%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (33 samples, 0.01%)</title><rect x="92.7404%" y="629" width="0.0133%" height="15" fill="rgb(244,48,7)" fg:x="230956" fg:w="33"/><text x="92.9904%" y="639.50"></text></g><g><title>core::mem::replace (33 samples, 0.01%)</title><rect x="92.7404%" y="613" width="0.0133%" height="15" fill="rgb(244,217,54)" fg:x="230956" fg:w="33"/><text x="92.9904%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (46 samples, 0.02%)</title><rect x="92.7556%" y="597" width="0.0185%" height="15" fill="rgb(224,15,18)" fg:x="230994" fg:w="46"/><text x="93.0056%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.02%)</title><rect x="92.7556%" y="581" width="0.0185%" height="15" fill="rgb(244,99,12)" fg:x="230994" fg:w="46"/><text x="93.0056%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (30 samples, 0.01%)</title><rect x="92.7741%" y="597" width="0.0120%" height="15" fill="rgb(233,226,8)" fg:x="231040" fg:w="30"/><text x="93.0241%" y="607.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (26 samples, 0.01%)</title><rect x="92.7757%" y="581" width="0.0104%" height="15" fill="rgb(229,211,3)" fg:x="231044" fg:w="26"/><text x="93.0257%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (33 samples, 0.01%)</title><rect x="92.7862%" y="597" width="0.0133%" height="15" fill="rgb(216,140,21)" fg:x="231070" fg:w="33"/><text x="93.0362%" y="607.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (25 samples, 0.01%)</title><rect x="92.7894%" y="581" width="0.0100%" height="15" fill="rgb(234,122,30)" fg:x="231078" fg:w="25"/><text x="93.0394%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (115 samples, 0.05%)</title><rect x="92.7536%" y="629" width="0.0462%" height="15" fill="rgb(236,25,46)" fg:x="230989" fg:w="115"/><text x="93.0036%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (115 samples, 0.05%)</title><rect x="92.7536%" y="613" width="0.0462%" height="15" fill="rgb(217,52,54)" fg:x="230989" fg:w="115"/><text x="93.0036%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (36 samples, 0.01%)</title><rect x="92.8139%" y="629" width="0.0145%" height="15" fill="rgb(222,29,26)" fg:x="231139" fg:w="36"/><text x="93.0639%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (36 samples, 0.01%)</title><rect x="92.8139%" y="613" width="0.0145%" height="15" fill="rgb(216,177,29)" fg:x="231139" fg:w="36"/><text x="93.0639%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (30 samples, 0.01%)</title><rect x="92.8307%" y="613" width="0.0120%" height="15" fill="rgb(247,136,51)" fg:x="231181" fg:w="30"/><text x="93.0807%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.01%)</title><rect x="92.8307%" y="597" width="0.0120%" height="15" fill="rgb(231,47,47)" fg:x="231181" fg:w="30"/><text x="93.0807%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (38 samples, 0.02%)</title><rect x="92.8283%" y="629" width="0.0153%" height="15" fill="rgb(211,192,36)" fg:x="231175" fg:w="38"/><text x="93.0783%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (25 samples, 0.01%)</title><rect x="92.8452%" y="597" width="0.0100%" height="15" fill="rgb(229,156,32)" fg:x="231217" fg:w="25"/><text x="93.0952%" y="607.50"></text></g><g><title>core::ptr::read (25 samples, 0.01%)</title><rect x="92.8452%" y="581" width="0.0100%" height="15" fill="rgb(248,213,20)" fg:x="231217" fg:w="25"/><text x="93.0952%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (91 samples, 0.04%)</title><rect x="92.8592%" y="581" width="0.0365%" height="15" fill="rgb(217,64,7)" fg:x="231252" fg:w="91"/><text x="93.1092%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (91 samples, 0.04%)</title><rect x="92.8592%" y="565" width="0.0365%" height="15" fill="rgb(232,142,8)" fg:x="231252" fg:w="91"/><text x="93.1092%" y="575.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (95 samples, 0.04%)</title><rect x="92.8580%" y="597" width="0.0381%" height="15" fill="rgb(224,92,44)" fg:x="231249" fg:w="95"/><text x="93.1080%" y="607.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (667 samples, 0.27%)</title><rect x="92.6287%" y="709" width="0.2678%" height="15" fill="rgb(214,169,17)" fg:x="230678" fg:w="667"/><text x="92.8787%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (665 samples, 0.27%)</title><rect x="92.6296%" y="693" width="0.2670%" height="15" fill="rgb(210,59,37)" fg:x="230680" fg:w="665"/><text x="92.8796%" y="703.50"></text></g><g><title>tokio::runtime::context::with_scheduler (665 samples, 0.27%)</title><rect x="92.6296%" y="677" width="0.2670%" height="15" fill="rgb(214,116,48)" fg:x="230680" fg:w="665"/><text x="92.8796%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (537 samples, 0.22%)</title><rect x="92.6809%" y="661" width="0.2156%" height="15" fill="rgb(244,191,6)" fg:x="230808" fg:w="537"/><text x="92.9309%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (473 samples, 0.19%)</title><rect x="92.7066%" y="645" width="0.1899%" height="15" fill="rgb(241,50,52)" fg:x="230872" fg:w="473"/><text x="92.9566%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (132 samples, 0.05%)</title><rect x="92.8436%" y="629" width="0.0530%" height="15" fill="rgb(236,75,39)" fg:x="231213" fg:w="132"/><text x="93.0936%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (128 samples, 0.05%)</title><rect x="92.8452%" y="613" width="0.0514%" height="15" fill="rgb(236,99,0)" fg:x="231217" fg:w="128"/><text x="93.0952%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (785 samples, 0.32%)</title><rect x="92.6287%" y="725" width="0.3152%" height="15" fill="rgb(207,202,15)" fg:x="230678" fg:w="785"/><text x="92.8787%" y="735.50"></text></g><g><title>tokio::runtime::task::raw::schedule (118 samples, 0.05%)</title><rect x="92.8966%" y="709" width="0.0474%" height="15" fill="rgb(233,207,14)" fg:x="231345" fg:w="118"/><text x="93.1466%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (36 samples, 0.01%)</title><rect x="92.9440%" y="693" width="0.0145%" height="15" fill="rgb(226,27,51)" fg:x="231463" fg:w="36"/><text x="93.1940%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (36 samples, 0.01%)</title><rect x="92.9440%" y="677" width="0.0145%" height="15" fill="rgb(206,104,42)" fg:x="231463" fg:w="36"/><text x="93.1940%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::load (379 samples, 0.15%)</title><rect x="92.9584%" y="693" width="0.1522%" height="15" fill="rgb(212,225,4)" fg:x="231499" fg:w="379"/><text x="93.2084%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (379 samples, 0.15%)</title><rect x="92.9584%" y="677" width="0.1522%" height="15" fill="rgb(233,96,42)" fg:x="231499" fg:w="379"/><text x="93.2084%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (379 samples, 0.15%)</title><rect x="92.9584%" y="661" width="0.1522%" height="15" fill="rgb(229,21,32)" fg:x="231499" fg:w="379"/><text x="93.2084%" y="671.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (1,332 samples, 0.53%)</title><rect x="92.5806%" y="789" width="0.5349%" height="15" fill="rgb(226,216,24)" fg:x="230558" fg:w="1332"/><text x="92.8306%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (1,264 samples, 0.51%)</title><rect x="92.6079%" y="773" width="0.5076%" height="15" fill="rgb(221,163,17)" fg:x="230626" fg:w="1264"/><text x="92.8579%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,264 samples, 0.51%)</title><rect x="92.6079%" y="757" width="0.5076%" height="15" fill="rgb(216,216,42)" fg:x="230626" fg:w="1264"/><text x="92.8579%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1,264 samples, 0.51%)</title><rect x="92.6079%" y="741" width="0.5076%" height="15" fill="rgb(240,118,7)" fg:x="230626" fg:w="1264"/><text x="92.8579%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (427 samples, 0.17%)</title><rect x="92.9440%" y="725" width="0.1715%" height="15" fill="rgb(221,67,37)" fg:x="231463" fg:w="427"/><text x="93.1940%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (427 samples, 0.17%)</title><rect x="92.9440%" y="709" width="0.1715%" height="15" fill="rgb(241,32,44)" fg:x="231463" fg:w="427"/><text x="93.1940%" y="719.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (60 samples, 0.02%)</title><rect x="93.1206%" y="773" width="0.0241%" height="15" fill="rgb(235,204,43)" fg:x="231903" fg:w="60"/><text x="93.3706%" y="783.50"></text></g><g><title>std::sync::poison::Flag::guard (60 samples, 0.02%)</title><rect x="93.1206%" y="757" width="0.0241%" height="15" fill="rgb(213,116,10)" fg:x="231903" fg:w="60"/><text x="93.3706%" y="767.50"></text></g><g><title>std::thread::panicking (41 samples, 0.02%)</title><rect x="93.1283%" y="741" width="0.0165%" height="15" fill="rgb(239,15,48)" fg:x="231922" fg:w="41"/><text x="93.3783%" y="751.50"></text></g><g><title>std::panicking::panicking (41 samples, 0.02%)</title><rect x="93.1283%" y="725" width="0.0165%" height="15" fill="rgb(207,123,36)" fg:x="231922" fg:w="41"/><text x="93.3783%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (41 samples, 0.02%)</title><rect x="93.1283%" y="709" width="0.0165%" height="15" fill="rgb(209,103,30)" fg:x="231922" fg:w="41"/><text x="93.3783%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.01%)</title><rect x="93.1347%" y="693" width="0.0100%" height="15" fill="rgb(238,100,19)" fg:x="231938" fg:w="25"/><text x="93.3847%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.01%)</title><rect x="93.1347%" y="677" width="0.0100%" height="15" fill="rgb(244,30,14)" fg:x="231938" fg:w="25"/><text x="93.3847%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (644 samples, 0.26%)</title><rect x="93.1467%" y="757" width="0.2586%" height="15" fill="rgb(249,174,6)" fg:x="231968" fg:w="644"/><text x="93.3967%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (644 samples, 0.26%)</title><rect x="93.1467%" y="741" width="0.2586%" height="15" fill="rgb(235,213,41)" fg:x="231968" fg:w="644"/><text x="93.3967%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (4,493 samples, 1.80%)</title><rect x="91.6132%" y="837" width="1.8042%" height="15" fill="rgb(213,118,6)" fg:x="228149" fg:w="4493"/><text x="91.8632%" y="847.50">c..</text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,481 samples, 1.80%)</title><rect x="91.6180%" y="821" width="1.7993%" height="15" fill="rgb(235,44,51)" fg:x="228161" fg:w="4481"/><text x="91.8680%" y="831.50">&lt;..</text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (4,481 samples, 1.80%)</title><rect x="91.6180%" y="805" width="1.7993%" height="15" fill="rgb(217,9,53)" fg:x="228161" fg:w="4481"/><text x="91.8680%" y="815.50">f..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (739 samples, 0.30%)</title><rect x="93.1206%" y="789" width="0.2967%" height="15" fill="rgb(237,172,34)" fg:x="231903" fg:w="739"/><text x="93.3706%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (679 samples, 0.27%)</title><rect x="93.1447%" y="773" width="0.2727%" height="15" fill="rgb(206,206,11)" fg:x="231963" fg:w="679"/><text x="93.3947%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (30 samples, 0.01%)</title><rect x="93.4053%" y="757" width="0.0120%" height="15" fill="rgb(214,149,29)" fg:x="232612" fg:w="30"/><text x="93.6553%" y="767.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (26 samples, 0.01%)</title><rect x="93.4070%" y="741" width="0.0104%" height="15" fill="rgb(208,123,3)" fg:x="232616" fg:w="26"/><text x="93.6570%" y="751.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (59,473 samples, 23.88%)</title><rect x="69.5408%" y="917" width="23.8814%" height="15" fill="rgb(229,126,4)" fg:x="173181" fg:w="59473"/><text x="69.7908%" y="927.50">epoxy_server::handle::wisp::copy_write..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (50,136 samples, 20.13%)</title><rect x="73.2901%" y="901" width="20.1321%" height="15" fill="rgb(222,92,36)" fg:x="182518" fg:w="50136"/><text x="73.5401%" y="911.50">wisp_mux::stream::MuxStreamWrite..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (49,076 samples, 19.71%)</title><rect x="73.7157%" y="885" width="19.7065%" height="15" fill="rgb(216,39,41)" fg:x="183578" fg:w="49076"/><text x="73.9657%" y="895.50">wisp_mux::stream::MuxStreamWrit..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (41,242 samples, 16.56%)</title><rect x="76.8615%" y="869" width="16.5607%" height="15" fill="rgb(253,127,28)" fg:x="191412" fg:w="41242"/><text x="77.1115%" y="879.50">wisp_mux::stream::MuxStrea..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (38,389 samples, 15.42%)</title><rect x="78.0071%" y="853" width="15.4151%" height="15" fill="rgb(249,152,51)" fg:x="194265" fg:w="38389"/><text x="78.2571%" y="863.50">wisp_mux::ws::LockedWebS..</text></g><g><title>core::ops::function::FnOnce::call_once (46 samples, 0.02%)</title><rect x="93.4222%" y="853" width="0.0185%" height="15" fill="rgb(209,123,42)" fg:x="232654" fg:w="46"/><text x="93.6722%" y="863.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (46 samples, 0.02%)</title><rect x="93.4222%" y="837" width="0.0185%" height="15" fill="rgb(241,118,22)" fg:x="232654" fg:w="46"/><text x="93.6722%" y="847.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (46 samples, 0.02%)</title><rect x="93.4222%" y="821" width="0.0185%" height="15" fill="rgb(208,25,7)" fg:x="232654" fg:w="46"/><text x="93.6722%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (46 samples, 0.02%)</title><rect x="93.4407%" y="837" width="0.0185%" height="15" fill="rgb(243,144,39)" fg:x="232700" fg:w="46"/><text x="93.6907%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (58 samples, 0.02%)</title><rect x="93.4592%" y="837" width="0.0233%" height="15" fill="rgb(250,50,5)" fg:x="232746" fg:w="58"/><text x="93.7092%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (58 samples, 0.02%)</title><rect x="93.4592%" y="821" width="0.0233%" height="15" fill="rgb(207,67,11)" fg:x="232746" fg:w="58"/><text x="93.7092%" y="831.50"></text></g><g><title>core::mem::replace (58 samples, 0.02%)</title><rect x="93.4592%" y="805" width="0.0233%" height="15" fill="rgb(245,204,40)" fg:x="232746" fg:w="58"/><text x="93.7092%" y="815.50"></text></g><g><title>core::ptr::write (58 samples, 0.02%)</title><rect x="93.4592%" y="789" width="0.0233%" height="15" fill="rgb(238,228,24)" fg:x="232746" fg:w="58"/><text x="93.7092%" y="799.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (84,764 samples, 34.04%)</title><rect x="59.4531%" y="949" width="34.0370%" height="15" fill="rgb(217,116,22)" fg:x="148059" fg:w="84764"/><text x="59.7031%" y="959.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::fut..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (84,764 samples, 34.04%)</title><rect x="59.4531%" y="933" width="34.0370%" height="15" fill="rgb(234,98,12)" fg:x="148059" fg:w="84764"/><text x="59.7031%" y="943.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}..</text></g><g><title>tokio::macros::support::thread_rng_n (169 samples, 0.07%)</title><rect x="93.4222%" y="917" width="0.0679%" height="15" fill="rgb(242,170,50)" fg:x="232654" fg:w="169"/><text x="93.6722%" y="927.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (169 samples, 0.07%)</title><rect x="93.4222%" y="901" width="0.0679%" height="15" fill="rgb(235,7,5)" fg:x="232654" fg:w="169"/><text x="93.6722%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (169 samples, 0.07%)</title><rect x="93.4222%" y="885" width="0.0679%" height="15" fill="rgb(241,114,28)" fg:x="232654" fg:w="169"/><text x="93.6722%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (169 samples, 0.07%)</title><rect x="93.4222%" y="869" width="0.0679%" height="15" fill="rgb(246,112,42)" fg:x="232654" fg:w="169"/><text x="93.6722%" y="879.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (123 samples, 0.05%)</title><rect x="93.4407%" y="853" width="0.0494%" height="15" fill="rgb(248,228,14)" fg:x="232700" fg:w="123"/><text x="93.6907%" y="863.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (85,455 samples, 34.31%)</title><rect x="59.1764%" y="981" width="34.3145%" height="15" fill="rgb(208,133,18)" fg:x="147370" fg:w="85455"/><text x="59.4264%" y="991.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}:..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (85,263 samples, 34.24%)</title><rect x="59.2535%" y="965" width="34.2374%" height="15" fill="rgb(207,35,49)" fg:x="147562" fg:w="85263"/><text x="59.5035%" y="975.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}:..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (117 samples, 0.05%)</title><rect x="93.4977%" y="901" width="0.0470%" height="15" fill="rgb(205,68,36)" fg:x="232842" fg:w="117"/><text x="93.7477%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (117 samples, 0.05%)</title><rect x="93.4977%" y="885" width="0.0470%" height="15" fill="rgb(245,62,40)" fg:x="232842" fg:w="117"/><text x="93.7477%" y="895.50"></text></g><g><title>core::mem::replace (117 samples, 0.05%)</title><rect x="93.4977%" y="869" width="0.0470%" height="15" fill="rgb(228,27,24)" fg:x="232842" fg:w="117"/><text x="93.7477%" y="879.50"></text></g><g><title>core::ptr::write (117 samples, 0.05%)</title><rect x="93.4977%" y="853" width="0.0470%" height="15" fill="rgb(253,19,12)" fg:x="232842" fg:w="117"/><text x="93.7477%" y="863.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (88,199 samples, 35.42%)</title><rect x="58.1613%" y="1013" width="35.4163%" height="15" fill="rgb(232,28,20)" fg:x="144842" fg:w="88199"/><text x="58.4113%" y="1023.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (88,199 samples, 35.42%)</title><rect x="58.1613%" y="997" width="35.4163%" height="15" fill="rgb(218,35,51)" fg:x="144842" fg:w="88199"/><text x="58.4113%" y="1007.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}::_..</text></g><g><title>tokio::macros::support::thread_rng_n (216 samples, 0.09%)</title><rect x="93.4909%" y="981" width="0.0867%" height="15" fill="rgb(212,90,40)" fg:x="232825" fg:w="216"/><text x="93.7409%" y="991.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (216 samples, 0.09%)</title><rect x="93.4909%" y="965" width="0.0867%" height="15" fill="rgb(220,172,12)" fg:x="232825" fg:w="216"/><text x="93.7409%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (216 samples, 0.09%)</title><rect x="93.4909%" y="949" width="0.0867%" height="15" fill="rgb(226,159,20)" fg:x="232825" fg:w="216"/><text x="93.7409%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (216 samples, 0.09%)</title><rect x="93.4909%" y="933" width="0.0867%" height="15" fill="rgb(234,205,16)" fg:x="232825" fg:w="216"/><text x="93.7409%" y="943.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (209 samples, 0.08%)</title><rect x="93.4937%" y="917" width="0.0839%" height="15" fill="rgb(207,9,39)" fg:x="232832" fg:w="209"/><text x="93.7437%" y="927.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (82 samples, 0.03%)</title><rect x="93.5447%" y="901" width="0.0329%" height="15" fill="rgb(249,143,15)" fg:x="232959" fg:w="82"/><text x="93.7947%" y="911.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (79 samples, 0.03%)</title><rect x="93.5459%" y="885" width="0.0317%" height="15" fill="rgb(253,133,29)" fg:x="232962" fg:w="79"/><text x="93.7959%" y="895.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (89,376 samples, 35.89%)</title><rect x="57.6959%" y="1029" width="35.8889%" height="15" fill="rgb(221,187,0)" fg:x="143683" fg:w="89376"/><text x="57.9459%" y="1039.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (170,595 samples, 68.50%)</title><rect x="25.1021%" y="1109" width="68.5024%" height="15" fill="rgb(205,204,26)" fg:x="62513" fg:w="170595"/><text x="25.3521%" y="1119.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (170,595 samples, 68.50%)</title><rect x="25.1021%" y="1093" width="68.5024%" height="15" fill="rgb(224,68,54)" fg:x="62513" fg:w="170595"/><text x="25.3521%" y="1103.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (170,595 samples, 68.50%)</title><rect x="25.1021%" y="1077" width="68.5024%" height="15" fill="rgb(209,67,4)" fg:x="62513" fg:w="170595"/><text x="25.3521%" y="1087.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (170,579 samples, 68.50%)</title><rect x="25.1085%" y="1061" width="68.4960%" height="15" fill="rgb(228,229,18)" fg:x="62529" fg:w="170579"/><text x="25.3585%" y="1071.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (170,579 samples, 68.50%)</title><rect x="25.1085%" y="1045" width="68.4960%" height="15" fill="rgb(231,89,13)" fg:x="62529" fg:w="170579"/><text x="25.3585%" y="1055.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (47 samples, 0.02%)</title><rect x="93.5856%" y="1029" width="0.0189%" height="15" fill="rgb(210,182,18)" fg:x="233061" fg:w="47"/><text x="93.8356%" y="1039.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (47 samples, 0.02%)</title><rect x="93.5856%" y="1013" width="0.0189%" height="15" fill="rgb(240,105,2)" fg:x="233061" fg:w="47"/><text x="93.8356%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.02%)</title><rect x="93.5856%" y="997" width="0.0189%" height="15" fill="rgb(207,170,50)" fg:x="233061" fg:w="47"/><text x="93.8356%" y="1007.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (25 samples, 0.01%)</title><rect x="93.5945%" y="981" width="0.0100%" height="15" fill="rgb(232,133,24)" fg:x="233083" fg:w="25"/><text x="93.8445%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (25 samples, 0.01%)</title><rect x="93.5945%" y="965" width="0.0100%" height="15" fill="rgb(235,166,27)" fg:x="233083" fg:w="25"/><text x="93.8445%" y="975.50"></text></g><g><title>core::mem::replace (25 samples, 0.01%)</title><rect x="93.5945%" y="949" width="0.0100%" height="15" fill="rgb(209,19,13)" fg:x="233083" fg:w="25"/><text x="93.8445%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (170,596 samples, 68.50%)</title><rect x="25.1021%" y="1173" width="68.5028%" height="15" fill="rgb(226,79,39)" fg:x="62513" fg:w="170596"/><text x="25.3521%" y="1183.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (170,596 samples, 68.50%)</title><rect x="25.1021%" y="1157" width="68.5028%" height="15" fill="rgb(222,163,10)" fg:x="62513" fg:w="170596"/><text x="25.3521%" y="1167.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (170,596 samples, 68.50%)</title><rect x="25.1021%" y="1141" width="68.5028%" height="15" fill="rgb(214,44,19)" fg:x="62513" fg:w="170596"/><text x="25.3521%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (170,596 samples, 68.50%)</title><rect x="25.1021%" y="1125" width="68.5028%" height="15" fill="rgb(210,217,13)" fg:x="62513" fg:w="170596"/><text x="25.3521%" y="1135.50">std::panicking::try::do_call</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (126 samples, 0.05%)</title><rect x="93.6089%" y="1141" width="0.0506%" height="15" fill="rgb(237,61,54)" fg:x="233119" fg:w="126"/><text x="93.8589%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (126 samples, 0.05%)</title><rect x="93.6089%" y="1125" width="0.0506%" height="15" fill="rgb(226,184,24)" fg:x="233119" fg:w="126"/><text x="93.8589%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_dec (27 samples, 0.01%)</title><rect x="93.6876%" y="1125" width="0.0108%" height="15" fill="rgb(223,226,4)" fg:x="233315" fg:w="27"/><text x="93.9376%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (248 samples, 0.10%)</title><rect x="93.6049%" y="1173" width="0.0996%" height="15" fill="rgb(210,26,41)" fg:x="233109" fg:w="248"/><text x="93.8549%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (248 samples, 0.10%)</title><rect x="93.6049%" y="1157" width="0.0996%" height="15" fill="rgb(220,221,6)" fg:x="233109" fg:w="248"/><text x="93.8549%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (103 samples, 0.04%)</title><rect x="93.6631%" y="1141" width="0.0414%" height="15" fill="rgb(225,89,49)" fg:x="233254" fg:w="103"/><text x="93.9131%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (111 samples, 0.04%)</title><rect x="93.7049%" y="1141" width="0.0446%" height="15" fill="rgb(218,70,45)" fg:x="233358" fg:w="111"/><text x="93.9549%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (111 samples, 0.04%)</title><rect x="93.7049%" y="1125" width="0.0446%" height="15" fill="rgb(238,166,21)" fg:x="233358" fg:w="111"/><text x="93.9549%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (186 samples, 0.07%)</title><rect x="93.7045%" y="1173" width="0.0747%" height="15" fill="rgb(224,141,44)" fg:x="233357" fg:w="186"/><text x="93.9545%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (186 samples, 0.07%)</title><rect x="93.7045%" y="1157" width="0.0747%" height="15" fill="rgb(230,12,49)" fg:x="233357" fg:w="186"/><text x="93.9545%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::_{{closure}} (68 samples, 0.03%)</title><rect x="93.7519%" y="1141" width="0.0273%" height="15" fill="rgb(212,174,12)" fg:x="233475" fg:w="68"/><text x="94.0019%" y="1151.50"></text></g><g><title>tokio::runtime::coop::budget (173,977 samples, 69.86%)</title><rect x="23.9272%" y="1301" width="69.8605%" height="15" fill="rgb(246,67,9)" fg:x="59587" fg:w="173977"/><text x="24.1772%" y="1311.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (173,977 samples, 69.86%)</title><rect x="23.9272%" y="1285" width="69.8605%" height="15" fill="rgb(239,35,23)" fg:x="59587" fg:w="173977"/><text x="24.1772%" y="1295.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (173,894 samples, 69.83%)</title><rect x="23.9605%" y="1269" width="69.8271%" height="15" fill="rgb(211,167,0)" fg:x="59670" fg:w="173894"/><text x="24.2105%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (173,197 samples, 69.55%)</title><rect x="24.2404%" y="1253" width="69.5473%" height="15" fill="rgb(225,119,45)" fg:x="60367" fg:w="173197"/><text x="24.4904%" y="1263.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (173,197 samples, 69.55%)</title><rect x="24.2404%" y="1237" width="69.5473%" height="15" fill="rgb(210,162,6)" fg:x="60367" fg:w="173197"/><text x="24.4904%" y="1247.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (172,891 samples, 69.42%)</title><rect x="24.3632%" y="1221" width="69.4244%" height="15" fill="rgb(208,118,35)" fg:x="60673" fg:w="172891"/><text x="24.6132%" y="1231.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (172,890 samples, 69.42%)</title><rect x="24.3636%" y="1205" width="69.4240%" height="15" fill="rgb(239,4,53)" fg:x="60674" fg:w="172890"/><text x="24.6136%" y="1215.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (171,330 samples, 68.80%)</title><rect x="24.9901%" y="1189" width="68.7976%" height="15" fill="rgb(213,130,21)" fg:x="62234" fg:w="171330"/><text x="25.2401%" y="1199.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (33 samples, 0.01%)</title><rect x="93.7876%" y="1301" width="0.0133%" height="15" fill="rgb(235,148,0)" fg:x="233564" fg:w="33"/><text x="94.0376%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (788 samples, 0.32%)</title><rect x="93.8390%" y="1237" width="0.3164%" height="15" fill="rgb(244,224,18)" fg:x="233692" fg:w="788"/><text x="94.0890%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (788 samples, 0.32%)</title><rect x="93.8390%" y="1221" width="0.3164%" height="15" fill="rgb(211,214,4)" fg:x="233692" fg:w="788"/><text x="94.0890%" y="1231.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (57 samples, 0.02%)</title><rect x="94.1651%" y="1221" width="0.0229%" height="15" fill="rgb(206,119,25)" fg:x="234504" fg:w="57"/><text x="94.4151%" y="1231.50"></text></g><g><title>clock_gettime (53 samples, 0.02%)</title><rect x="94.1667%" y="1205" width="0.0213%" height="15" fill="rgb(243,93,47)" fg:x="234508" fg:w="53"/><text x="94.4167%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (53 samples, 0.02%)</title><rect x="94.1667%" y="1189" width="0.0213%" height="15" fill="rgb(224,194,6)" fg:x="234508" fg:w="53"/><text x="94.4167%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (83 samples, 0.03%)</title><rect x="94.1554%" y="1237" width="0.0333%" height="15" fill="rgb(243,229,6)" fg:x="234480" fg:w="83"/><text x="94.4054%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (43 samples, 0.02%)</title><rect x="94.2028%" y="1221" width="0.0173%" height="15" fill="rgb(207,23,50)" fg:x="234598" fg:w="43"/><text x="94.4528%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (43 samples, 0.02%)</title><rect x="94.2028%" y="1205" width="0.0173%" height="15" fill="rgb(253,192,32)" fg:x="234598" fg:w="43"/><text x="94.4528%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (43 samples, 0.02%)</title><rect x="94.2028%" y="1189" width="0.0173%" height="15" fill="rgb(213,21,6)" fg:x="234598" fg:w="43"/><text x="94.4528%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::hash (89 samples, 0.04%)</title><rect x="94.2201%" y="1221" width="0.0357%" height="15" fill="rgb(243,151,13)" fg:x="234641" fg:w="89"/><text x="94.4701%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (515 samples, 0.21%)</title><rect x="94.1888%" y="1237" width="0.2068%" height="15" fill="rgb(233,165,41)" fg:x="234563" fg:w="515"/><text x="94.4388%" y="1247.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (348 samples, 0.14%)</title><rect x="94.2558%" y="1221" width="0.1397%" height="15" fill="rgb(246,176,45)" fg:x="234730" fg:w="348"/><text x="94.5058%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (346 samples, 0.14%)</title><rect x="94.2566%" y="1205" width="0.1389%" height="15" fill="rgb(217,170,52)" fg:x="234732" fg:w="346"/><text x="94.5066%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (346 samples, 0.14%)</title><rect x="94.2566%" y="1189" width="0.1389%" height="15" fill="rgb(214,203,54)" fg:x="234732" fg:w="346"/><text x="94.5066%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,515 samples, 0.61%)</title><rect x="93.8041%" y="1269" width="0.6083%" height="15" fill="rgb(248,215,49)" fg:x="233605" fg:w="1515"/><text x="94.0541%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1,515 samples, 0.61%)</title><rect x="93.8041%" y="1253" width="0.6083%" height="15" fill="rgb(208,46,10)" fg:x="233605" fg:w="1515"/><text x="94.0541%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (42 samples, 0.02%)</title><rect x="94.3956%" y="1237" width="0.0169%" height="15" fill="rgb(254,5,31)" fg:x="235078" fg:w="42"/><text x="94.6456%" y="1247.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (42 samples, 0.02%)</title><rect x="94.3956%" y="1221" width="0.0169%" height="15" fill="rgb(222,104,33)" fg:x="235078" fg:w="42"/><text x="94.6456%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (38 samples, 0.02%)</title><rect x="94.3972%" y="1205" width="0.0153%" height="15" fill="rgb(248,49,16)" fg:x="235082" fg:w="38"/><text x="94.6472%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (38 samples, 0.02%)</title><rect x="94.3972%" y="1189" width="0.0153%" height="15" fill="rgb(232,198,41)" fg:x="235082" fg:w="38"/><text x="94.6472%" y="1199.50"></text></g><g><title>syscall (102 samples, 0.04%)</title><rect x="94.4124%" y="1269" width="0.0410%" height="15" fill="rgb(214,125,3)" fg:x="235120" fg:w="102"/><text x="94.6624%" y="1279.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (85 samples, 0.03%)</title><rect x="94.4534%" y="1269" width="0.0341%" height="15" fill="rgb(229,220,28)" fg:x="235222" fg:w="85"/><text x="94.7034%" y="1279.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (80 samples, 0.03%)</title><rect x="94.4554%" y="1253" width="0.0321%" height="15" fill="rgb(222,64,37)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1263.50"></text></g><g><title>mio::waker::Waker::wake (80 samples, 0.03%)</title><rect x="94.4554%" y="1237" width="0.0321%" height="15" fill="rgb(249,184,13)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1247.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (80 samples, 0.03%)</title><rect x="94.4554%" y="1221" width="0.0321%" height="15" fill="rgb(252,176,6)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1231.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (80 samples, 0.03%)</title><rect x="94.4554%" y="1205" width="0.0321%" height="15" fill="rgb(228,153,7)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1215.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (80 samples, 0.03%)</title><rect x="94.4554%" y="1189" width="0.0321%" height="15" fill="rgb(242,193,5)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (80 samples, 0.03%)</title><rect x="94.4554%" y="1173" width="0.0321%" height="15" fill="rgb(232,140,9)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1183.50"></text></g><g><title>write (80 samples, 0.03%)</title><rect x="94.4554%" y="1157" width="0.0321%" height="15" fill="rgb(213,222,16)" fg:x="235227" fg:w="80"/><text x="94.7054%" y="1167.50"></text></g><g><title>[libc.so.6] (35 samples, 0.01%)</title><rect x="94.4735%" y="1141" width="0.0141%" height="15" fill="rgb(222,75,50)" fg:x="235272" fg:w="35"/><text x="94.7235%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (39 samples, 0.02%)</title><rect x="94.4875%" y="1269" width="0.0157%" height="15" fill="rgb(205,180,2)" fg:x="235307" fg:w="39"/><text x="94.7375%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (39 samples, 0.02%)</title><rect x="94.4875%" y="1253" width="0.0157%" height="15" fill="rgb(216,34,7)" fg:x="235307" fg:w="39"/><text x="94.7375%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.02%)</title><rect x="94.4875%" y="1237" width="0.0157%" height="15" fill="rgb(253,16,32)" fg:x="235307" fg:w="39"/><text x="94.7375%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.02%)</title><rect x="94.4875%" y="1221" width="0.0157%" height="15" fill="rgb(208,97,28)" fg:x="235307" fg:w="39"/><text x="94.7375%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (142 samples, 0.06%)</title><rect x="94.5478%" y="1237" width="0.0570%" height="15" fill="rgb(225,92,11)" fg:x="235457" fg:w="142"/><text x="94.7978%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (142 samples, 0.06%)</title><rect x="94.5478%" y="1221" width="0.0570%" height="15" fill="rgb(243,38,12)" fg:x="235457" fg:w="142"/><text x="94.7978%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (326 samples, 0.13%)</title><rect x="94.5032%" y="1269" width="0.1309%" height="15" fill="rgb(208,139,16)" fg:x="235346" fg:w="326"/><text x="94.7532%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (326 samples, 0.13%)</title><rect x="94.5032%" y="1253" width="0.1309%" height="15" fill="rgb(227,24,9)" fg:x="235346" fg:w="326"/><text x="94.7532%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (69 samples, 0.03%)</title><rect x="94.6064%" y="1237" width="0.0277%" height="15" fill="rgb(206,62,11)" fg:x="235603" fg:w="69"/><text x="94.8564%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (57 samples, 0.02%)</title><rect x="94.6112%" y="1221" width="0.0229%" height="15" fill="rgb(228,134,27)" fg:x="235615" fg:w="57"/><text x="94.8612%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (57 samples, 0.02%)</title><rect x="94.6112%" y="1205" width="0.0229%" height="15" fill="rgb(205,55,33)" fg:x="235615" fg:w="57"/><text x="94.8612%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (57 samples, 0.02%)</title><rect x="94.6112%" y="1189" width="0.0229%" height="15" fill="rgb(243,75,43)" fg:x="235615" fg:w="57"/><text x="94.8612%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (57 samples, 0.02%)</title><rect x="94.6112%" y="1173" width="0.0229%" height="15" fill="rgb(223,27,42)" fg:x="235615" fg:w="57"/><text x="94.8612%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.02%)</title><rect x="94.6112%" y="1157" width="0.0229%" height="15" fill="rgb(232,189,33)" fg:x="235615" fg:w="57"/><text x="94.8612%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (47 samples, 0.02%)</title><rect x="94.6425%" y="1173" width="0.0189%" height="15" fill="rgb(210,9,39)" fg:x="235693" fg:w="47"/><text x="94.8925%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (47 samples, 0.02%)</title><rect x="94.6425%" y="1157" width="0.0189%" height="15" fill="rgb(242,85,26)" fg:x="235693" fg:w="47"/><text x="94.8925%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (49 samples, 0.02%)</title><rect x="94.6421%" y="1237" width="0.0197%" height="15" fill="rgb(248,44,4)" fg:x="235692" fg:w="49"/><text x="94.8921%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (49 samples, 0.02%)</title><rect x="94.6421%" y="1221" width="0.0197%" height="15" fill="rgb(250,96,46)" fg:x="235692" fg:w="49"/><text x="94.8921%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="94.6421%" y="1205" width="0.0197%" height="15" fill="rgb(229,116,26)" fg:x="235692" fg:w="49"/><text x="94.8921%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (49 samples, 0.02%)</title><rect x="94.6421%" y="1189" width="0.0197%" height="15" fill="rgb(246,94,34)" fg:x="235692" fg:w="49"/><text x="94.8921%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (46 samples, 0.02%)</title><rect x="94.6694%" y="1221" width="0.0185%" height="15" fill="rgb(251,73,21)" fg:x="235760" fg:w="46"/><text x="94.9194%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (46 samples, 0.02%)</title><rect x="94.6694%" y="1205" width="0.0185%" height="15" fill="rgb(254,121,25)" fg:x="235760" fg:w="46"/><text x="94.9194%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (58 samples, 0.02%)</title><rect x="94.6662%" y="1237" width="0.0233%" height="15" fill="rgb(215,161,49)" fg:x="235752" fg:w="58"/><text x="94.9162%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (176,284 samples, 70.79%)</title><rect x="23.9103%" y="1317" width="70.7868%" height="15" fill="rgb(221,43,13)" fg:x="59545" fg:w="176284"/><text x="24.1603%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (2,232 samples, 0.90%)</title><rect x="93.8009%" y="1301" width="0.8963%" height="15" fill="rgb(249,5,37)" fg:x="233597" fg:w="2232"/><text x="94.0509%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (2,226 samples, 0.89%)</title><rect x="93.8033%" y="1285" width="0.8939%" height="15" fill="rgb(226,25,44)" fg:x="233603" fg:w="2226"/><text x="94.0533%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (157 samples, 0.06%)</title><rect x="94.6341%" y="1269" width="0.0630%" height="15" fill="rgb(238,189,16)" fg:x="235672" fg:w="157"/><text x="94.8841%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (151 samples, 0.06%)</title><rect x="94.6365%" y="1253" width="0.0606%" height="15" fill="rgb(251,186,8)" fg:x="235678" fg:w="151"/><text x="94.8865%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (26 samples, 0.01%)</title><rect x="94.7899%" y="1205" width="0.0104%" height="15" fill="rgb(254,34,31)" fg:x="236060" fg:w="26"/><text x="95.0399%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.01%)</title><rect x="94.7899%" y="1189" width="0.0104%" height="15" fill="rgb(225,215,27)" fg:x="236060" fg:w="26"/><text x="95.0399%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (70 samples, 0.03%)</title><rect x="94.7786%" y="1253" width="0.0281%" height="15" fill="rgb(221,192,48)" fg:x="236032" fg:w="70"/><text x="95.0286%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (63 samples, 0.03%)</title><rect x="94.7815%" y="1237" width="0.0253%" height="15" fill="rgb(219,137,20)" fg:x="236039" fg:w="63"/><text x="95.0315%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (63 samples, 0.03%)</title><rect x="94.7815%" y="1221" width="0.0253%" height="15" fill="rgb(219,84,11)" fg:x="236039" fg:w="63"/><text x="95.0315%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (91 samples, 0.04%)</title><rect x="94.7770%" y="1301" width="0.0365%" height="15" fill="rgb(224,10,23)" fg:x="236028" fg:w="91"/><text x="95.0270%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (91 samples, 0.04%)</title><rect x="94.7770%" y="1285" width="0.0365%" height="15" fill="rgb(248,22,39)" fg:x="236028" fg:w="91"/><text x="95.0270%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (91 samples, 0.04%)</title><rect x="94.7770%" y="1269" width="0.0365%" height="15" fill="rgb(212,154,20)" fg:x="236028" fg:w="91"/><text x="95.0270%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (113 samples, 0.05%)</title><rect x="94.8136%" y="1301" width="0.0454%" height="15" fill="rgb(236,199,50)" fg:x="236119" fg:w="113"/><text x="95.0636%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (113 samples, 0.05%)</title><rect x="94.8136%" y="1285" width="0.0454%" height="15" fill="rgb(211,9,17)" fg:x="236119" fg:w="113"/><text x="95.0636%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (113 samples, 0.05%)</title><rect x="94.8136%" y="1269" width="0.0454%" height="15" fill="rgb(243,216,36)" fg:x="236119" fg:w="113"/><text x="95.0636%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (113 samples, 0.05%)</title><rect x="94.8136%" y="1253" width="0.0454%" height="15" fill="rgb(250,2,10)" fg:x="236119" fg:w="113"/><text x="95.0636%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (137 samples, 0.06%)</title><rect x="94.8590%" y="1301" width="0.0550%" height="15" fill="rgb(226,50,48)" fg:x="236232" fg:w="137"/><text x="95.1090%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (136 samples, 0.05%)</title><rect x="94.8594%" y="1285" width="0.0546%" height="15" fill="rgb(243,81,16)" fg:x="236233" fg:w="136"/><text x="95.1094%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (136 samples, 0.05%)</title><rect x="94.8594%" y="1269" width="0.0546%" height="15" fill="rgb(250,14,2)" fg:x="236233" fg:w="136"/><text x="95.1094%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (136 samples, 0.05%)</title><rect x="94.8594%" y="1253" width="0.0546%" height="15" fill="rgb(233,135,29)" fg:x="236233" fg:w="136"/><text x="95.1094%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (136 samples, 0.05%)</title><rect x="94.8594%" y="1237" width="0.0546%" height="15" fill="rgb(224,64,43)" fg:x="236233" fg:w="136"/><text x="95.1094%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (140 samples, 0.06%)</title><rect x="94.9272%" y="1237" width="0.0562%" height="15" fill="rgb(238,84,13)" fg:x="236402" fg:w="140"/><text x="95.1772%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (140 samples, 0.06%)</title><rect x="94.9272%" y="1221" width="0.0562%" height="15" fill="rgb(253,48,26)" fg:x="236402" fg:w="140"/><text x="95.1772%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (180 samples, 0.07%)</title><rect x="94.9156%" y="1285" width="0.0723%" height="15" fill="rgb(205,223,31)" fg:x="236373" fg:w="180"/><text x="95.1656%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (180 samples, 0.07%)</title><rect x="94.9156%" y="1269" width="0.0723%" height="15" fill="rgb(221,41,32)" fg:x="236373" fg:w="180"/><text x="95.1656%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (180 samples, 0.07%)</title><rect x="94.9156%" y="1253" width="0.0723%" height="15" fill="rgb(213,158,31)" fg:x="236373" fg:w="180"/><text x="95.1656%" y="1263.50"></text></g><g><title>core::ptr::read (32 samples, 0.01%)</title><rect x="94.9879%" y="1253" width="0.0128%" height="15" fill="rgb(245,126,43)" fg:x="236553" fg:w="32"/><text x="95.2379%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (225 samples, 0.09%)</title><rect x="94.9140%" y="1301" width="0.0903%" height="15" fill="rgb(227,7,22)" fg:x="236369" fg:w="225"/><text x="95.1640%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (41 samples, 0.02%)</title><rect x="94.9879%" y="1285" width="0.0165%" height="15" fill="rgb(252,90,44)" fg:x="236553" fg:w="41"/><text x="95.2379%" y="1295.50"></text></g><g><title>core::mem::replace (41 samples, 0.02%)</title><rect x="94.9879%" y="1269" width="0.0165%" height="15" fill="rgb(253,91,0)" fg:x="236553" fg:w="41"/><text x="95.2379%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (333 samples, 0.13%)</title><rect x="95.0043%" y="1301" width="0.1337%" height="15" fill="rgb(252,175,49)" fg:x="236594" fg:w="333"/><text x="95.2543%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (316 samples, 0.13%)</title><rect x="95.0111%" y="1285" width="0.1269%" height="15" fill="rgb(246,150,1)" fg:x="236611" fg:w="316"/><text x="95.2611%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (1,105 samples, 0.44%)</title><rect x="94.6971%" y="1317" width="0.4437%" height="15" fill="rgb(241,192,25)" fg:x="235829" fg:w="1105"/><text x="94.9471%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (61 samples, 0.02%)</title><rect x="95.2866%" y="1301" width="0.0245%" height="15" fill="rgb(239,187,11)" fg:x="237297" fg:w="61"/><text x="95.5366%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (61 samples, 0.02%)</title><rect x="95.2866%" y="1285" width="0.0245%" height="15" fill="rgb(218,202,51)" fg:x="237297" fg:w="61"/><text x="95.5366%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (61 samples, 0.02%)</title><rect x="95.2866%" y="1269" width="0.0245%" height="15" fill="rgb(225,176,8)" fg:x="237297" fg:w="61"/><text x="95.5366%" y="1279.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (56 samples, 0.02%)</title><rect x="95.3111%" y="1301" width="0.0225%" height="15" fill="rgb(219,122,41)" fg:x="237358" fg:w="56"/><text x="95.5611%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (56 samples, 0.02%)</title><rect x="95.3111%" y="1285" width="0.0225%" height="15" fill="rgb(248,140,20)" fg:x="237358" fg:w="56"/><text x="95.5611%" y="1295.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (25 samples, 0.01%)</title><rect x="95.3235%" y="1269" width="0.0100%" height="15" fill="rgb(245,41,37)" fg:x="237389" fg:w="25"/><text x="95.5735%" y="1279.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (25 samples, 0.01%)</title><rect x="95.3476%" y="1285" width="0.0100%" height="15" fill="rgb(235,82,39)" fg:x="237449" fg:w="25"/><text x="95.5976%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (137 samples, 0.06%)</title><rect x="95.4267%" y="1269" width="0.0550%" height="15" fill="rgb(230,108,42)" fg:x="237646" fg:w="137"/><text x="95.6767%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (137 samples, 0.06%)</title><rect x="95.4267%" y="1253" width="0.0550%" height="15" fill="rgb(215,150,50)" fg:x="237646" fg:w="137"/><text x="95.6767%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (137 samples, 0.06%)</title><rect x="95.4267%" y="1237" width="0.0550%" height="15" fill="rgb(233,212,5)" fg:x="237646" fg:w="137"/><text x="95.6767%" y="1247.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (39 samples, 0.02%)</title><rect x="95.4818%" y="1269" width="0.0157%" height="15" fill="rgb(245,80,22)" fg:x="237783" fg:w="39"/><text x="95.7318%" y="1279.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (39 samples, 0.02%)</title><rect x="95.4818%" y="1253" width="0.0157%" height="15" fill="rgb(238,129,16)" fg:x="237783" fg:w="39"/><text x="95.7318%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (92 samples, 0.04%)</title><rect x="95.5034%" y="1269" width="0.0369%" height="15" fill="rgb(240,19,0)" fg:x="237837" fg:w="92"/><text x="95.7534%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (92 samples, 0.04%)</title><rect x="95.5034%" y="1253" width="0.0369%" height="15" fill="rgb(232,42,35)" fg:x="237837" fg:w="92"/><text x="95.7534%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (1,199 samples, 0.48%)</title><rect x="95.5404%" y="1269" width="0.4815%" height="15" fill="rgb(223,130,24)" fg:x="237929" fg:w="1199"/><text x="95.7904%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (1,199 samples, 0.48%)</title><rect x="95.5404%" y="1253" width="0.4815%" height="15" fill="rgb(237,16,22)" fg:x="237929" fg:w="1199"/><text x="95.7904%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (210 samples, 0.08%)</title><rect x="96.0218%" y="1269" width="0.0843%" height="15" fill="rgb(248,192,20)" fg:x="239128" fg:w="210"/><text x="96.2718%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (210 samples, 0.08%)</title><rect x="96.0218%" y="1253" width="0.0843%" height="15" fill="rgb(233,167,2)" fg:x="239128" fg:w="210"/><text x="96.2718%" y="1263.50"></text></g><g><title>core::ptr::read (210 samples, 0.08%)</title><rect x="96.0218%" y="1237" width="0.0843%" height="15" fill="rgb(252,71,44)" fg:x="239128" fg:w="210"/><text x="96.2718%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1,869 samples, 0.75%)</title><rect x="95.3758%" y="1285" width="0.7505%" height="15" fill="rgb(238,37,47)" fg:x="237519" fg:w="1869"/><text x="95.6258%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (49 samples, 0.02%)</title><rect x="96.1066%" y="1269" width="0.0197%" height="15" fill="rgb(214,202,54)" fg:x="239339" fg:w="49"/><text x="96.3566%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (1,988 samples, 0.80%)</title><rect x="95.3336%" y="1301" width="0.7983%" height="15" fill="rgb(254,165,40)" fg:x="237414" fg:w="1988"/><text x="95.5836%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (40 samples, 0.02%)</title><rect x="96.1319%" y="1301" width="0.0161%" height="15" fill="rgb(246,173,38)" fg:x="239402" fg:w="40"/><text x="96.3819%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (32 samples, 0.01%)</title><rect x="96.1351%" y="1285" width="0.0128%" height="15" fill="rgb(215,3,27)" fg:x="239410" fg:w="32"/><text x="96.3851%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (32 samples, 0.01%)</title><rect x="96.1351%" y="1269" width="0.0128%" height="15" fill="rgb(239,169,51)" fg:x="239410" fg:w="32"/><text x="96.3851%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.01%)</title><rect x="96.1351%" y="1253" width="0.0128%" height="15" fill="rgb(212,5,25)" fg:x="239410" fg:w="32"/><text x="96.3851%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.01%)</title><rect x="96.1351%" y="1237" width="0.0128%" height="15" fill="rgb(243,45,17)" fg:x="239410" fg:w="32"/><text x="96.3851%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (63 samples, 0.03%)</title><rect x="96.1540%" y="1269" width="0.0253%" height="15" fill="rgb(242,97,9)" fg:x="239457" fg:w="63"/><text x="96.4040%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (63 samples, 0.03%)</title><rect x="96.1540%" y="1253" width="0.0253%" height="15" fill="rgb(228,71,31)" fg:x="239457" fg:w="63"/><text x="96.4040%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (63 samples, 0.03%)</title><rect x="96.1540%" y="1237" width="0.0253%" height="15" fill="rgb(252,184,16)" fg:x="239457" fg:w="63"/><text x="96.4040%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (110 samples, 0.04%)</title><rect x="96.1479%" y="1301" width="0.0442%" height="15" fill="rgb(236,169,46)" fg:x="239442" fg:w="110"/><text x="96.3979%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (105 samples, 0.04%)</title><rect x="96.1499%" y="1285" width="0.0422%" height="15" fill="rgb(207,17,47)" fg:x="239447" fg:w="105"/><text x="96.3999%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::load (32 samples, 0.01%)</title><rect x="96.1793%" y="1269" width="0.0128%" height="15" fill="rgb(206,201,28)" fg:x="239520" fg:w="32"/><text x="96.4293%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.01%)</title><rect x="96.1793%" y="1253" width="0.0128%" height="15" fill="rgb(224,184,23)" fg:x="239520" fg:w="32"/><text x="96.4293%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.01%)</title><rect x="96.1793%" y="1237" width="0.0128%" height="15" fill="rgb(208,139,48)" fg:x="239520" fg:w="32"/><text x="96.4293%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (2,634 samples, 1.06%)</title><rect x="95.1408%" y="1317" width="1.0577%" height="15" fill="rgb(208,130,10)" fg:x="236934" fg:w="2634"/><text x="95.3908%" y="1327.50"></text></g><g><title>[libc.so.6] (221,069 samples, 88.77%)</title><rect x="7.5050%" y="1989" width="88.7703%" height="15" fill="rgb(211,213,45)" fg:x="18690" fg:w="221069"/><text x="7.7550%" y="1999.50">[libc.so.6]</text></g><g><title>[libc.so.6] (221,063 samples, 88.77%)</title><rect x="7.5074%" y="1973" width="88.7678%" height="15" fill="rgb(235,100,30)" fg:x="18696" fg:w="221063"/><text x="7.7574%" y="1983.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (221,062 samples, 88.77%)</title><rect x="7.5078%" y="1957" width="88.7674%" height="15" fill="rgb(206,144,31)" fg:x="18697" fg:w="221062"/><text x="7.7578%" y="1967.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (221,062 samples, 88.77%)</title><rect x="7.5078%" y="1941" width="88.7674%" height="15" fill="rgb(224,200,26)" fg:x="18697" fg:w="221062"/><text x="7.7578%" y="1951.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (221,062 samples, 88.77%)</title><rect x="7.5078%" y="1925" width="88.7674%" height="15" fill="rgb(247,104,53)" fg:x="18697" fg:w="221062"/><text x="7.7578%" y="1935.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (221,062 samples, 88.77%)</title><rect x="7.5078%" y="1909" width="88.7674%" height="15" fill="rgb(220,14,17)" fg:x="18697" fg:w="221062"/><text x="7.7578%" y="1919.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (221,062 samples, 88.77%)</title><rect x="7.5078%" y="1893" width="88.7674%" height="15" fill="rgb(230,140,40)" fg:x="18697" fg:w="221062"/><text x="7.7578%" y="1903.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1877" width="88.7670%" height="15" fill="rgb(229,2,41)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1861" width="88.7670%" height="15" fill="rgb(232,89,16)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1845" width="88.7670%" height="15" fill="rgb(247,59,52)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1855.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1829" width="88.7670%" height="15" fill="rgb(226,110,21)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1839.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1813" width="88.7670%" height="15" fill="rgb(224,176,43)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1823.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1797" width="88.7670%" height="15" fill="rgb(221,73,6)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1807.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1781" width="88.7670%" height="15" fill="rgb(232,78,19)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1791.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (221,061 samples, 88.77%)</title><rect x="7.5082%" y="1765" width="88.7670%" height="15" fill="rgb(233,112,48)" fg:x="18698" fg:w="221061"/><text x="7.7582%" y="1775.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1749" width="88.7590%" height="15" fill="rgb(243,131,47)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1759.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1733" width="88.7590%" height="15" fill="rgb(226,51,1)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1743.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1717" width="88.7590%" height="15" fill="rgb(247,58,7)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1727.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1701" width="88.7590%" height="15" fill="rgb(209,7,32)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1711.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1685" width="88.7590%" height="15" fill="rgb(209,39,41)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1695.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1669" width="88.7590%" height="15" fill="rgb(226,182,46)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1679.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1653" width="88.7590%" height="15" fill="rgb(230,219,10)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1663.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1637" width="88.7590%" height="15" fill="rgb(227,175,30)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1647.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1621" width="88.7590%" height="15" fill="rgb(217,2,50)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1631.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1605" width="88.7590%" height="15" fill="rgb(229,160,0)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1615.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1589" width="88.7590%" height="15" fill="rgb(207,78,37)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1599.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1573" width="88.7590%" height="15" fill="rgb(225,57,0)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1583.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1557" width="88.7590%" height="15" fill="rgb(232,154,2)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1567.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1541" width="88.7590%" height="15" fill="rgb(241,212,25)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1551.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1525" width="88.7590%" height="15" fill="rgb(226,69,20)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1535.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1509" width="88.7590%" height="15" fill="rgb(247,184,54)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1519.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1493" width="88.7590%" height="15" fill="rgb(210,145,0)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1503.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1477" width="88.7590%" height="15" fill="rgb(253,82,12)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (221,041 samples, 88.76%)</title><rect x="7.5162%" y="1461" width="88.7590%" height="15" fill="rgb(245,42,11)" fg:x="18718" fg:w="221041"/><text x="7.7662%" y="1471.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1445" width="88.7586%" height="15" fill="rgb(219,147,32)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1429" width="88.7586%" height="15" fill="rgb(246,12,7)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1439.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1413" width="88.7586%" height="15" fill="rgb(243,50,9)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1423.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1397" width="88.7586%" height="15" fill="rgb(219,149,6)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1407.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1381" width="88.7586%" height="15" fill="rgb(241,51,42)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1391.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1365" width="88.7586%" height="15" fill="rgb(226,128,27)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1375.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1349" width="88.7586%" height="15" fill="rgb(244,144,4)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1359.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (221,040 samples, 88.76%)</title><rect x="7.5166%" y="1333" width="88.7586%" height="15" fill="rgb(221,4,13)" fg:x="18719" fg:w="221040"/><text x="7.7666%" y="1343.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (191 samples, 0.08%)</title><rect x="96.1985%" y="1317" width="0.0767%" height="15" fill="rgb(208,170,28)" fg:x="239568" fg:w="191"/><text x="96.4485%" y="1327.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (25 samples, 0.01%)</title><rect x="96.7908%" y="1973" width="0.0100%" height="15" fill="rgb(226,131,13)" fg:x="241043" fg:w="25"/><text x="97.0408%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (51 samples, 0.02%)</title><rect x="97.1293%" y="1957" width="0.0205%" height="15" fill="rgb(215,72,41)" fg:x="241886" fg:w="51"/><text x="97.3793%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (1,180 samples, 0.47%)</title><rect x="96.8009%" y="1973" width="0.4738%" height="15" fill="rgb(243,108,20)" fg:x="241068" fg:w="1180"/><text x="97.0509%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (311 samples, 0.12%)</title><rect x="97.1498%" y="1957" width="0.1249%" height="15" fill="rgb(230,189,17)" fg:x="241937" fg:w="311"/><text x="97.3998%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (311 samples, 0.12%)</title><rect x="97.1498%" y="1941" width="0.1249%" height="15" fill="rgb(220,50,17)" fg:x="241937" fg:w="311"/><text x="97.3998%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (291 samples, 0.12%)</title><rect x="97.1578%" y="1925" width="0.1169%" height="15" fill="rgb(248,152,48)" fg:x="241957" fg:w="291"/><text x="97.4078%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (291 samples, 0.12%)</title><rect x="97.1578%" y="1909" width="0.1169%" height="15" fill="rgb(244,91,11)" fg:x="241957" fg:w="291"/><text x="97.4078%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (291 samples, 0.12%)</title><rect x="97.1578%" y="1893" width="0.1169%" height="15" fill="rgb(220,157,5)" fg:x="241957" fg:w="291"/><text x="97.4078%" y="1903.50"></text></g><g><title>__rust_dealloc (291 samples, 0.12%)</title><rect x="97.1578%" y="1877" width="0.1169%" height="15" fill="rgb(253,137,8)" fg:x="241957" fg:w="291"/><text x="97.4078%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (291 samples, 0.12%)</title><rect x="97.1578%" y="1861" width="0.1169%" height="15" fill="rgb(217,137,51)" fg:x="241957" fg:w="291"/><text x="97.4078%" y="1871.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (33 samples, 0.01%)</title><rect x="97.2895%" y="1973" width="0.0133%" height="15" fill="rgb(218,209,53)" fg:x="242285" fg:w="33"/><text x="97.5395%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (87 samples, 0.03%)</title><rect x="97.3843%" y="1957" width="0.0349%" height="15" fill="rgb(249,137,25)" fg:x="242521" fg:w="87"/><text x="97.6343%" y="1967.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (268 samples, 0.11%)</title><rect x="97.3140%" y="1973" width="0.1076%" height="15" fill="rgb(239,155,26)" fg:x="242346" fg:w="268"/><text x="97.5640%" y="1983.50"></text></g><g><title>[libc.so.6] (81 samples, 0.03%)</title><rect x="97.4253%" y="1973" width="0.0325%" height="15" fill="rgb(227,85,46)" fg:x="242623" fg:w="81"/><text x="97.6753%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="97.5048%" y="1973" width="0.0128%" height="15" fill="rgb(251,107,43)" fg:x="242821" fg:w="32"/><text x="97.7548%" y="1983.50"></text></g><g><title>clock_gettime (30 samples, 0.01%)</title><rect x="97.5321%" y="1973" width="0.0120%" height="15" fill="rgb(234,170,33)" fg:x="242889" fg:w="30"/><text x="97.7821%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (38 samples, 0.02%)</title><rect x="97.5554%" y="1973" width="0.0153%" height="15" fill="rgb(206,29,35)" fg:x="242947" fg:w="38"/><text x="97.8054%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (61 samples, 0.02%)</title><rect x="97.5730%" y="1973" width="0.0245%" height="15" fill="rgb(227,138,25)" fg:x="242991" fg:w="61"/><text x="97.8230%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Quintet&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::tcp::stream::TcpStream&gt;&gt;,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::io::split::WriteHalf&lt;tokio_rustls::server::TlsStream&lt;tokio::net::unix::stream::UnixStream&gt;&gt;,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (130 samples, 0.05%)</title><rect x="97.6084%" y="1973" width="0.0522%" height="15" fill="rgb(249,131,35)" fg:x="243079" fg:w="130"/><text x="97.8584%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::process_wisp_message::{{closure}}&gt; (85 samples, 0.03%)</title><rect x="97.6606%" y="1973" width="0.0341%" height="15" fill="rgb(239,6,40)" fg:x="243209" fg:w="85"/><text x="97.9106%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (115 samples, 0.05%)</title><rect x="97.7031%" y="1973" width="0.0462%" height="15" fill="rgb(246,136,47)" fg:x="243315" fg:w="115"/><text x="97.9531%" y="1983.50"></text></g><g><title>epoll_wait (31 samples, 0.01%)</title><rect x="97.7493%" y="1973" width="0.0124%" height="15" fill="rgb(253,58,26)" fg:x="243430" fg:w="31"/><text x="97.9993%" y="1983.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (109 samples, 0.04%)</title><rect x="97.7618%" y="1973" width="0.0438%" height="15" fill="rgb(237,141,10)" fg:x="243461" fg:w="109"/><text x="98.0118%" y="1983.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (136 samples, 0.05%)</title><rect x="97.8160%" y="1973" width="0.0546%" height="15" fill="rgb(234,156,12)" fg:x="243596" fg:w="136"/><text x="98.0660%" y="1983.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (114 samples, 0.05%)</title><rect x="97.8762%" y="1973" width="0.0458%" height="15" fill="rgb(243,224,36)" fg:x="243746" fg:w="114"/><text x="98.1262%" y="1983.50"></text></g><g><title>fastwebsockets::frame::Frame::write (27 samples, 0.01%)</title><rect x="97.9220%" y="1973" width="0.0108%" height="15" fill="rgb(205,229,51)" fg:x="243860" fg:w="27"/><text x="98.1720%" y="1983.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (81 samples, 0.03%)</title><rect x="97.9368%" y="1973" width="0.0325%" height="15" fill="rgb(223,189,4)" fg:x="243897" fg:w="81"/><text x="98.1868%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (30 samples, 0.01%)</title><rect x="97.9694%" y="1973" width="0.0120%" height="15" fill="rgb(249,167,54)" fg:x="243978" fg:w="30"/><text x="98.2194%" y="1983.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (41 samples, 0.02%)</title><rect x="97.9846%" y="1973" width="0.0165%" height="15" fill="rgb(218,34,28)" fg:x="244016" fg:w="41"/><text x="98.2346%" y="1983.50"></text></g><g><title>recv (62 samples, 0.02%)</title><rect x="98.0039%" y="1973" width="0.0249%" height="15" fill="rgb(232,109,42)" fg:x="244064" fg:w="62"/><text x="98.2539%" y="1983.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (33 samples, 0.01%)</title><rect x="98.0296%" y="1973" width="0.0133%" height="15" fill="rgb(248,214,46)" fg:x="244128" fg:w="33"/><text x="98.2796%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (109 samples, 0.04%)</title><rect x="98.0589%" y="1973" width="0.0438%" height="15" fill="rgb(244,216,40)" fg:x="244201" fg:w="109"/><text x="98.3089%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (54 samples, 0.02%)</title><rect x="98.1027%" y="1973" width="0.0217%" height="15" fill="rgb(231,226,31)" fg:x="244310" fg:w="54"/><text x="98.3527%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (64 samples, 0.03%)</title><rect x="98.1244%" y="1973" width="0.0257%" height="15" fill="rgb(238,38,43)" fg:x="244364" fg:w="64"/><text x="98.3744%" y="1983.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (97 samples, 0.04%)</title><rect x="98.1521%" y="1973" width="0.0390%" height="15" fill="rgb(208,88,43)" fg:x="244433" fg:w="97"/><text x="98.4021%" y="1983.50"></text></g><g><title>mio::poll::Poll::poll (33 samples, 0.01%)</title><rect x="98.1778%" y="1957" width="0.0133%" height="15" fill="rgb(205,136,37)" fg:x="244497" fg:w="33"/><text x="98.4278%" y="1967.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (33 samples, 0.01%)</title><rect x="98.1778%" y="1941" width="0.0133%" height="15" fill="rgb(237,34,14)" fg:x="244497" fg:w="33"/><text x="98.4278%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (217 samples, 0.09%)</title><rect x="98.1910%" y="1973" width="0.0871%" height="15" fill="rgb(236,193,44)" fg:x="244530" fg:w="217"/><text x="98.4410%" y="1983.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (37 samples, 0.01%)</title><rect x="98.2633%" y="1957" width="0.0149%" height="15" fill="rgb(231,48,10)" fg:x="244710" fg:w="37"/><text x="98.5133%" y="1967.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (37 samples, 0.01%)</title><rect x="98.2633%" y="1941" width="0.0149%" height="15" fill="rgb(213,141,34)" fg:x="244710" fg:w="37"/><text x="98.5133%" y="1951.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (124 samples, 0.05%)</title><rect x="98.2782%" y="1973" width="0.0498%" height="15" fill="rgb(249,130,34)" fg:x="244747" fg:w="124"/><text x="98.5282%" y="1983.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (41 samples, 0.02%)</title><rect x="98.3115%" y="1957" width="0.0165%" height="15" fill="rgb(219,42,41)" fg:x="244830" fg:w="41"/><text x="98.5615%" y="1967.50"></text></g><g><title>core::task::wake::Waker::wake (41 samples, 0.02%)</title><rect x="98.3115%" y="1941" width="0.0165%" height="15" fill="rgb(224,100,54)" fg:x="244830" fg:w="41"/><text x="98.5615%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (41 samples, 0.02%)</title><rect x="98.3300%" y="1973" width="0.0165%" height="15" fill="rgb(229,200,27)" fg:x="244876" fg:w="41"/><text x="98.5800%" y="1983.50"></text></g><g><title>tokio::runtime::signal::Driver::process (63 samples, 0.03%)</title><rect x="98.3548%" y="1973" width="0.0253%" height="15" fill="rgb(217,118,10)" fg:x="244938" fg:w="63"/><text x="98.6048%" y="1983.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (63 samples, 0.03%)</title><rect x="98.3548%" y="1957" width="0.0253%" height="15" fill="rgb(206,22,3)" fg:x="244938" fg:w="63"/><text x="98.6048%" y="1967.50"></text></g><g><title>tokio::runtime::task::raw::poll (137 samples, 0.06%)</title><rect x="98.3801%" y="1973" width="0.0550%" height="15" fill="rgb(232,163,46)" fg:x="245001" fg:w="137"/><text x="98.6301%" y="1983.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.01%)</title><rect x="98.4761%" y="1909" width="0.0112%" height="15" fill="rgb(206,95,13)" fg:x="245240" fg:w="28"/><text x="98.7261%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.01%)</title><rect x="98.4761%" y="1893" width="0.0112%" height="15" fill="rgb(253,154,18)" fg:x="245240" fg:w="28"/><text x="98.7261%" y="1903.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::_{{closure}} (28 samples, 0.01%)</title><rect x="98.4761%" y="1877" width="0.0112%" height="15" fill="rgb(219,32,23)" fg:x="245240" fg:w="28"/><text x="98.7261%" y="1887.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (28 samples, 0.01%)</title><rect x="98.4761%" y="1861" width="0.0112%" height="15" fill="rgb(230,191,45)" fg:x="245240" fg:w="28"/><text x="98.7261%" y="1871.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (28 samples, 0.01%)</title><rect x="98.4761%" y="1845" width="0.0112%" height="15" fill="rgb(229,64,36)" fg:x="245240" fg:w="28"/><text x="98.7261%" y="1855.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (31 samples, 0.01%)</title><rect x="98.4761%" y="1957" width="0.0124%" height="15" fill="rgb(205,129,25)" fg:x="245240" fg:w="31"/><text x="98.7261%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (31 samples, 0.01%)</title><rect x="98.4761%" y="1941" width="0.0124%" height="15" fill="rgb(254,112,7)" fg:x="245240" fg:w="31"/><text x="98.7261%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (31 samples, 0.01%)</title><rect x="98.4761%" y="1925" width="0.0124%" height="15" fill="rgb(226,53,48)" fg:x="245240" fg:w="31"/><text x="98.7261%" y="1935.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (31 samples, 0.01%)</title><rect x="98.4886%" y="1941" width="0.0124%" height="15" fill="rgb(214,153,38)" fg:x="245271" fg:w="31"/><text x="98.7386%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (31 samples, 0.01%)</title><rect x="98.4886%" y="1925" width="0.0124%" height="15" fill="rgb(243,101,7)" fg:x="245271" fg:w="31"/><text x="98.7386%" y="1935.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (31 samples, 0.01%)</title><rect x="98.4886%" y="1909" width="0.0124%" height="15" fill="rgb(240,140,22)" fg:x="245271" fg:w="31"/><text x="98.7386%" y="1919.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (31 samples, 0.01%)</title><rect x="98.4886%" y="1893" width="0.0124%" height="15" fill="rgb(235,114,2)" fg:x="245271" fg:w="31"/><text x="98.7386%" y="1903.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (33 samples, 0.01%)</title><rect x="98.4886%" y="1957" width="0.0133%" height="15" fill="rgb(242,59,12)" fg:x="245271" fg:w="33"/><text x="98.7386%" y="1967.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (157 samples, 0.06%)</title><rect x="98.4404%" y="1973" width="0.0630%" height="15" fill="rgb(252,134,9)" fg:x="245151" fg:w="157"/><text x="98.6904%" y="1983.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (52 samples, 0.02%)</title><rect x="98.5034%" y="1973" width="0.0209%" height="15" fill="rgb(236,4,44)" fg:x="245308" fg:w="52"/><text x="98.7534%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (35 samples, 0.01%)</title><rect x="98.5243%" y="1973" width="0.0141%" height="15" fill="rgb(254,172,41)" fg:x="245360" fg:w="35"/><text x="98.7743%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (191 samples, 0.08%)</title><rect x="98.5384%" y="1973" width="0.0767%" height="15" fill="rgb(244,63,20)" fg:x="245395" fg:w="191"/><text x="98.7884%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (123 samples, 0.05%)</title><rect x="98.6151%" y="1973" width="0.0494%" height="15" fill="rgb(250,73,31)" fg:x="245586" fg:w="123"/><text x="98.8651%" y="1983.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (248 samples, 0.10%)</title><rect x="98.6652%" y="1973" width="0.0996%" height="15" fill="rgb(241,38,36)" fg:x="245711" fg:w="248"/><text x="98.9152%" y="1983.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (246 samples, 0.10%)</title><rect x="98.6661%" y="1957" width="0.0988%" height="15" fill="rgb(245,211,2)" fg:x="245713" fg:w="246"/><text x="98.9161%" y="1967.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (34 samples, 0.01%)</title><rect x="98.7713%" y="1973" width="0.0137%" height="15" fill="rgb(206,120,28)" fg:x="245975" fg:w="34"/><text x="99.0213%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (55 samples, 0.02%)</title><rect x="98.8877%" y="1909" width="0.0221%" height="15" fill="rgb(211,59,34)" fg:x="246265" fg:w="55"/><text x="99.1377%" y="1919.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (331 samples, 0.13%)</title><rect x="98.7849%" y="1973" width="0.1329%" height="15" fill="rgb(233,168,5)" fg:x="246009" fg:w="331"/><text x="99.0349%" y="1983.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (75 samples, 0.03%)</title><rect x="98.8877%" y="1957" width="0.0301%" height="15" fill="rgb(234,33,13)" fg:x="246265" fg:w="75"/><text x="99.1377%" y="1967.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75 samples, 0.03%)</title><rect x="98.8877%" y="1941" width="0.0301%" height="15" fill="rgb(231,150,26)" fg:x="246265" fg:w="75"/><text x="99.1377%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (75 samples, 0.03%)</title><rect x="98.8877%" y="1925" width="0.0301%" height="15" fill="rgb(217,191,4)" fg:x="246265" fg:w="75"/><text x="99.1377%" y="1935.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (187 samples, 0.08%)</title><rect x="98.9178%" y="1957" width="0.0751%" height="15" fill="rgb(246,198,38)" fg:x="246340" fg:w="187"/><text x="99.1678%" y="1967.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (187 samples, 0.08%)</title><rect x="98.9178%" y="1941" width="0.0751%" height="15" fill="rgb(245,64,37)" fg:x="246340" fg:w="187"/><text x="99.1678%" y="1951.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (187 samples, 0.08%)</title><rect x="98.9178%" y="1925" width="0.0751%" height="15" fill="rgb(250,30,36)" fg:x="246340" fg:w="187"/><text x="99.1678%" y="1935.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (199 samples, 0.08%)</title><rect x="98.9178%" y="1973" width="0.0799%" height="15" fill="rgb(217,86,53)" fg:x="246340" fg:w="199"/><text x="99.1678%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (125 samples, 0.05%)</title><rect x="99.0098%" y="1973" width="0.0502%" height="15" fill="rgb(228,157,16)" fg:x="246569" fg:w="125"/><text x="99.2598%" y="1983.50"></text></g><g><title>[unknown] (6,966 samples, 2.80%)</title><rect x="96.2752%" y="1989" width="2.7972%" height="15" fill="rgb(217,59,31)" fg:x="239759" fg:w="6966"/><text x="96.5252%" y="1999.50">[u..</text></g><g><title>writev (31 samples, 0.01%)</title><rect x="99.0600%" y="1973" width="0.0124%" height="15" fill="rgb(237,138,41)" fg:x="246694" fg:w="31"/><text x="99.3100%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (27 samples, 0.01%)</title><rect x="99.0841%" y="1973" width="0.0108%" height="15" fill="rgb(227,91,49)" fg:x="246754" fg:w="27"/><text x="99.3341%" y="1983.50"></text></g><g><title>_rjem_je_global_mutex_names (31 samples, 0.01%)</title><rect x="99.0833%" y="1989" width="0.0124%" height="15" fill="rgb(247,21,44)" fg:x="246752" fg:w="31"/><text x="99.3333%" y="1999.50"></text></g><g><title>_rjem_je_sdallocx_default (63 samples, 0.03%)</title><rect x="99.1009%" y="1989" width="0.0253%" height="15" fill="rgb(219,210,51)" fg:x="246796" fg:w="63"/><text x="99.3509%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (78 samples, 0.03%)</title><rect x="99.1343%" y="1989" width="0.0313%" height="15" fill="rgb(209,140,6)" fg:x="246879" fg:w="78"/><text x="99.3843%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (28 samples, 0.01%)</title><rect x="99.1728%" y="1989" width="0.0112%" height="15" fill="rgb(221,188,24)" fg:x="246975" fg:w="28"/><text x="99.4228%" y="1999.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (71 samples, 0.03%)</title><rect x="99.2459%" y="1861" width="0.0285%" height="15" fill="rgb(232,154,20)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1871.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (71 samples, 0.03%)</title><rect x="99.2459%" y="1845" width="0.0285%" height="15" fill="rgb(244,137,50)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1855.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (71 samples, 0.03%)</title><rect x="99.2459%" y="1829" width="0.0285%" height="15" fill="rgb(225,185,43)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (71 samples, 0.03%)</title><rect x="99.2459%" y="1813" width="0.0285%" height="15" fill="rgb(213,205,38)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1823.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (71 samples, 0.03%)</title><rect x="99.2459%" y="1797" width="0.0285%" height="15" fill="rgb(236,73,12)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1807.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.03%)</title><rect x="99.2459%" y="1781" width="0.0285%" height="15" fill="rgb(235,219,13)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1791.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (71 samples, 0.03%)</title><rect x="99.2459%" y="1765" width="0.0285%" height="15" fill="rgb(218,59,36)" fg:x="247157" fg:w="71"/><text x="99.4959%" y="1775.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (176 samples, 0.07%)</title><rect x="99.2459%" y="1877" width="0.0707%" height="15" fill="rgb(205,110,39)" fg:x="247157" fg:w="176"/><text x="99.4959%" y="1887.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (104 samples, 0.04%)</title><rect x="99.2748%" y="1861" width="0.0418%" height="15" fill="rgb(218,206,42)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1871.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (104 samples, 0.04%)</title><rect x="99.2748%" y="1845" width="0.0418%" height="15" fill="rgb(248,125,24)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1855.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (104 samples, 0.04%)</title><rect x="99.2748%" y="1829" width="0.0418%" height="15" fill="rgb(242,28,27)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (104 samples, 0.04%)</title><rect x="99.2748%" y="1813" width="0.0418%" height="15" fill="rgb(216,228,15)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (104 samples, 0.04%)</title><rect x="99.2748%" y="1797" width="0.0418%" height="15" fill="rgb(235,116,46)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (104 samples, 0.04%)</title><rect x="99.2748%" y="1781" width="0.0418%" height="15" fill="rgb(224,18,32)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1791.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (104 samples, 0.04%)</title><rect x="99.2748%" y="1765" width="0.0418%" height="15" fill="rgb(252,5,12)" fg:x="247229" fg:w="104"/><text x="99.5248%" y="1775.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (343 samples, 0.14%)</title><rect x="99.1901%" y="1989" width="0.1377%" height="15" fill="rgb(251,36,5)" fg:x="247018" fg:w="343"/><text x="99.4401%" y="1999.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (205 samples, 0.08%)</title><rect x="99.2455%" y="1973" width="0.0823%" height="15" fill="rgb(217,53,14)" fg:x="247156" fg:w="205"/><text x="99.4955%" y="1983.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (205 samples, 0.08%)</title><rect x="99.2455%" y="1957" width="0.0823%" height="15" fill="rgb(215,86,45)" fg:x="247156" fg:w="205"/><text x="99.4955%" y="1967.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (204 samples, 0.08%)</title><rect x="99.2459%" y="1941" width="0.0819%" height="15" fill="rgb(242,169,11)" fg:x="247157" fg:w="204"/><text x="99.4959%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (204 samples, 0.08%)</title><rect x="99.2459%" y="1925" width="0.0819%" height="15" fill="rgb(211,213,45)" fg:x="247157" fg:w="204"/><text x="99.4959%" y="1935.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (204 samples, 0.08%)</title><rect x="99.2459%" y="1909" width="0.0819%" height="15" fill="rgb(205,88,11)" fg:x="247157" fg:w="204"/><text x="99.4959%" y="1919.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (204 samples, 0.08%)</title><rect x="99.2459%" y="1893" width="0.0819%" height="15" fill="rgb(252,69,26)" fg:x="247157" fg:w="204"/><text x="99.4959%" y="1903.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (28 samples, 0.01%)</title><rect x="99.3166%" y="1877" width="0.0112%" height="15" fill="rgb(246,123,37)" fg:x="247333" fg:w="28"/><text x="99.5666%" y="1887.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (50 samples, 0.02%)</title><rect x="99.3318%" y="1989" width="0.0201%" height="15" fill="rgb(212,205,5)" fg:x="247371" fg:w="50"/><text x="99.5818%" y="1999.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (43 samples, 0.02%)</title><rect x="99.3627%" y="1989" width="0.0173%" height="15" fill="rgb(253,148,0)" fg:x="247448" fg:w="43"/><text x="99.6127%" y="1999.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (35 samples, 0.01%)</title><rect x="99.3848%" y="1989" width="0.0141%" height="15" fill="rgb(239,22,4)" fg:x="247503" fg:w="35"/><text x="99.6348%" y="1999.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (27 samples, 0.01%)</title><rect x="99.4029%" y="1989" width="0.0108%" height="15" fill="rgb(226,26,53)" fg:x="247548" fg:w="27"/><text x="99.6529%" y="1999.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (69 samples, 0.03%)</title><rect x="99.4491%" y="1989" width="0.0277%" height="15" fill="rgb(225,229,45)" fg:x="247663" fg:w="69"/><text x="99.6991%" y="1999.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (30 samples, 0.01%)</title><rect x="99.4647%" y="1973" width="0.0120%" height="15" fill="rgb(220,60,37)" fg:x="247702" fg:w="30"/><text x="99.7147%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (56 samples, 0.02%)</title><rect x="99.4768%" y="1989" width="0.0225%" height="15" fill="rgb(217,180,35)" fg:x="247732" fg:w="56"/><text x="99.7268%" y="1999.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (51 samples, 0.02%)</title><rect x="99.4993%" y="1989" width="0.0205%" height="15" fill="rgb(229,7,53)" fg:x="247788" fg:w="51"/><text x="99.7493%" y="1999.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (33 samples, 0.01%)</title><rect x="99.5226%" y="1989" width="0.0133%" height="15" fill="rgb(254,137,3)" fg:x="247846" fg:w="33"/><text x="99.7726%" y="1999.50"></text></g><g><title>tokio::runtime::task::raw::poll (499 samples, 0.20%)</title><rect x="99.5511%" y="1989" width="0.2004%" height="15" fill="rgb(215,140,41)" fg:x="247917" fg:w="499"/><text x="99.8011%" y="1999.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (53 samples, 0.02%)</title><rect x="99.7615%" y="1989" width="0.0213%" height="15" fill="rgb(250,80,15)" fg:x="248441" fg:w="53"/><text x="100.0115%" y="1999.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (114 samples, 0.05%)</title><rect x="99.7848%" y="1989" width="0.0458%" height="15" fill="rgb(252,191,6)" fg:x="248499" fg:w="114"/><text x="100.0348%" y="1999.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (57 samples, 0.02%)</title><rect x="99.8864%" y="1973" width="0.0229%" height="15" fill="rgb(246,217,18)" fg:x="248752" fg:w="57"/><text x="100.1364%" y="1983.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (57 samples, 0.02%)</title><rect x="99.8864%" y="1957" width="0.0229%" height="15" fill="rgb(223,93,7)" fg:x="248752" fg:w="57"/><text x="100.1364%" y="1967.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (57 samples, 0.02%)</title><rect x="99.8864%" y="1941" width="0.0229%" height="15" fill="rgb(225,55,52)" fg:x="248752" fg:w="57"/><text x="100.1364%" y="1951.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.02%)</title><rect x="99.8864%" y="1925" width="0.0229%" height="15" fill="rgb(240,31,24)" fg:x="248752" fg:w="57"/><text x="100.1364%" y="1935.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (181 samples, 0.07%)</title><rect x="99.8482%" y="1989" width="0.0727%" height="15" fill="rgb(205,56,52)" fg:x="248657" fg:w="181"/><text x="100.0982%" y="1999.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (29 samples, 0.01%)</title><rect x="99.9092%" y="1973" width="0.0116%" height="15" fill="rgb(246,146,12)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (29 samples, 0.01%)</title><rect x="99.9092%" y="1957" width="0.0116%" height="15" fill="rgb(239,84,36)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="99.9092%" y="1941" width="0.0116%" height="15" fill="rgb(207,41,40)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="99.9092%" y="1925" width="0.0116%" height="15" fill="rgb(241,179,25)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="99.9092%" y="1909" width="0.0116%" height="15" fill="rgb(210,0,34)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (29 samples, 0.01%)</title><rect x="99.9092%" y="1893" width="0.0116%" height="15" fill="rgb(225,217,29)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (29 samples, 0.01%)</title><rect x="99.9092%" y="1877" width="0.0116%" height="15" fill="rgb(216,191,38)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (29 samples, 0.01%)</title><rect x="99.9092%" y="1861" width="0.0116%" height="15" fill="rgb(232,140,52)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="99.9092%" y="1845" width="0.0116%" height="15" fill="rgb(223,158,51)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1855.50"></text></g><g><title>__rust_alloc (29 samples, 0.01%)</title><rect x="99.9092%" y="1829" width="0.0116%" height="15" fill="rgb(235,29,51)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1839.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (29 samples, 0.01%)</title><rect x="99.9092%" y="1813" width="0.0116%" height="15" fill="rgb(215,181,18)" fg:x="248809" fg:w="29"/><text x="100.1592%" y="1823.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27 samples, 0.01%)</title><rect x="99.9751%" y="1941" width="0.0108%" height="15" fill="rgb(227,125,34)" fg:x="248973" fg:w="27"/><text x="100.2251%" y="1951.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (185 samples, 0.07%)</title><rect x="99.9209%" y="1989" width="0.0743%" height="15" fill="rgb(230,197,49)" fg:x="248838" fg:w="185"/><text x="100.1709%" y="1999.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (82 samples, 0.03%)</title><rect x="99.9623%" y="1973" width="0.0329%" height="15" fill="rgb(239,141,16)" fg:x="248941" fg:w="82"/><text x="100.2123%" y="1983.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (75 samples, 0.03%)</title><rect x="99.9651%" y="1957" width="0.0301%" height="15" fill="rgb(225,105,43)" fg:x="248948" fg:w="75"/><text x="100.2151%" y="1967.50"></text></g><g><title>all (249,035 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(214,131,14)" fg:x="0" fg:w="249035"/><text x="0.2500%" y="2031.50"></text></g><g><title>tokio-runtime-w (248,942 samples, 99.96%)</title><rect x="0.0373%" y="2005" width="99.9627%" height="15" fill="rgb(229,177,11)" fg:x="93" fg:w="248942"/><text x="0.2873%" y="2015.50">tokio-runtime-w</text></g></svg></svg>