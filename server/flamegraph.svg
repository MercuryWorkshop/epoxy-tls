<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1686" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1669.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1669.00"> </text><svg id="frames" x="10" width="1180" total_samples="139225"><g><title>epoxy-server (34 samples, 0.02%)</title><rect x="0.0000%" y="1621" width="0.0244%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="34"/><text x="0.2500%" y="1631.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="0.0244%" y="1605" width="0.0259%" height="15" fill="rgb(217,0,24)" fg:x="34" fg:w="36"/><text x="0.2744%" y="1615.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (27 samples, 0.02%)</title><rect x="0.0309%" y="1589" width="0.0194%" height="15" fill="rgb(221,193,54)" fg:x="43" fg:w="27"/><text x="0.2809%" y="1599.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (27 samples, 0.02%)</title><rect x="0.0309%" y="1573" width="0.0194%" height="15" fill="rgb(248,212,6)" fg:x="43" fg:w="27"/><text x="0.2809%" y="1583.50"></text></g><g><title>event_listener::TaskRef::into_task (27 samples, 0.02%)</title><rect x="0.0309%" y="1557" width="0.0194%" height="15" fill="rgb(208,68,35)" fg:x="43" fg:w="27"/><text x="0.2809%" y="1567.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="0.0309%" y="1541" width="0.0194%" height="15" fill="rgb(232,128,0)" fg:x="43" fg:w="27"/><text x="0.2809%" y="1551.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="0.1810%" y="1461" width="0.0180%" height="15" fill="rgb(207,160,47)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1471.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (25 samples, 0.02%)</title><rect x="0.1810%" y="1445" width="0.0180%" height="15" fill="rgb(228,23,34)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1455.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (25 samples, 0.02%)</title><rect x="0.1810%" y="1429" width="0.0180%" height="15" fill="rgb(218,30,26)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1439.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (25 samples, 0.02%)</title><rect x="0.1810%" y="1413" width="0.0180%" height="15" fill="rgb(220,122,19)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1423.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (25 samples, 0.02%)</title><rect x="0.1810%" y="1397" width="0.0180%" height="15" fill="rgb(250,228,42)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1407.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.02%)</title><rect x="0.1810%" y="1381" width="0.0180%" height="15" fill="rgb(240,193,28)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1391.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (25 samples, 0.02%)</title><rect x="0.1810%" y="1365" width="0.0180%" height="15" fill="rgb(216,20,37)" fg:x="252" fg:w="25"/><text x="0.4310%" y="1375.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (27 samples, 0.02%)</title><rect x="0.1810%" y="1477" width="0.0194%" height="15" fill="rgb(206,188,39)" fg:x="252" fg:w="27"/><text x="0.4310%" y="1487.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (219 samples, 0.16%)</title><rect x="0.0524%" y="1605" width="0.1573%" height="15" fill="rgb(217,207,13)" fg:x="73" fg:w="219"/><text x="0.3024%" y="1615.50"></text></g><g><title>tokio::runtime::coop::with_unconstrained (50 samples, 0.04%)</title><rect x="0.1738%" y="1589" width="0.0359%" height="15" fill="rgb(231,73,38)" fg:x="242" fg:w="50"/><text x="0.4238%" y="1599.50"></text></g><g><title>tokio::runtime::coop::with_budget (50 samples, 0.04%)</title><rect x="0.1738%" y="1573" width="0.0359%" height="15" fill="rgb(225,20,46)" fg:x="242" fg:w="50"/><text x="0.4238%" y="1583.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (50 samples, 0.04%)</title><rect x="0.1738%" y="1557" width="0.0359%" height="15" fill="rgb(210,31,41)" fg:x="242" fg:w="50"/><text x="0.4238%" y="1567.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (40 samples, 0.03%)</title><rect x="0.1810%" y="1541" width="0.0287%" height="15" fill="rgb(221,200,47)" fg:x="252" fg:w="40"/><text x="0.4310%" y="1551.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (40 samples, 0.03%)</title><rect x="0.1810%" y="1525" width="0.0287%" height="15" fill="rgb(226,26,5)" fg:x="252" fg:w="40"/><text x="0.4310%" y="1535.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (40 samples, 0.03%)</title><rect x="0.1810%" y="1509" width="0.0287%" height="15" fill="rgb(249,33,26)" fg:x="252" fg:w="40"/><text x="0.4310%" y="1519.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (40 samples, 0.03%)</title><rect x="0.1810%" y="1493" width="0.0287%" height="15" fill="rgb(235,183,28)" fg:x="252" fg:w="40"/><text x="0.4310%" y="1503.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (45 samples, 0.03%)</title><rect x="0.2097%" y="1605" width="0.0323%" height="15" fill="rgb(221,5,38)" fg:x="292" fg:w="45"/><text x="0.4597%" y="1615.50"></text></g><g><title>tokio::runtime::driver::Driver::park (41 samples, 0.03%)</title><rect x="0.2550%" y="1589" width="0.0294%" height="15" fill="rgb(247,18,42)" fg:x="355" fg:w="41"/><text x="0.5050%" y="1599.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (15 samples, 0.01%)</title><rect x="0.2931%" y="1589" width="0.0108%" height="15" fill="rgb(241,131,45)" fg:x="408" fg:w="15"/><text x="0.5431%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (18 samples, 0.01%)</title><rect x="0.3096%" y="1589" width="0.0129%" height="15" fill="rgb(249,31,29)" fg:x="431" fg:w="18"/><text x="0.5596%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (18 samples, 0.01%)</title><rect x="0.3096%" y="1573" width="0.0129%" height="15" fill="rgb(225,111,53)" fg:x="431" fg:w="18"/><text x="0.5596%" y="1583.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (18 samples, 0.01%)</title><rect x="0.3096%" y="1557" width="0.0129%" height="15" fill="rgb(238,160,17)" fg:x="431" fg:w="18"/><text x="0.5596%" y="1567.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.01%)</title><rect x="0.3096%" y="1541" width="0.0129%" height="15" fill="rgb(214,148,48)" fg:x="431" fg:w="18"/><text x="0.5596%" y="1551.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.01%)</title><rect x="0.3096%" y="1525" width="0.0129%" height="15" fill="rgb(232,36,49)" fg:x="431" fg:w="18"/><text x="0.5596%" y="1535.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (16 samples, 0.01%)</title><rect x="0.3261%" y="1589" width="0.0115%" height="15" fill="rgb(209,103,24)" fg:x="454" fg:w="16"/><text x="0.5761%" y="1599.50"></text></g><g><title>[[heap]] (134 samples, 0.10%)</title><rect x="0.2428%" y="1605" width="0.0962%" height="15" fill="rgb(229,88,8)" fg:x="338" fg:w="134"/><text x="0.4928%" y="1615.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (29 samples, 0.02%)</title><rect x="0.3390%" y="1589" width="0.0208%" height="15" fill="rgb(213,181,19)" fg:x="472" fg:w="29"/><text x="0.5890%" y="1599.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="0.4547%" y="1573" width="0.0165%" height="15" fill="rgb(254,191,54)" fg:x="633" fg:w="23"/><text x="0.7047%" y="1583.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (158 samples, 0.11%)</title><rect x="0.3613%" y="1589" width="0.1135%" height="15" fill="rgb(241,83,37)" fg:x="503" fg:w="158"/><text x="0.6113%" y="1599.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (59 samples, 0.04%)</title><rect x="0.5883%" y="1541" width="0.0424%" height="15" fill="rgb(233,36,39)" fg:x="819" fg:w="59"/><text x="0.8383%" y="1551.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (59 samples, 0.04%)</title><rect x="0.5883%" y="1525" width="0.0424%" height="15" fill="rgb(226,3,54)" fg:x="819" fg:w="59"/><text x="0.8383%" y="1535.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (59 samples, 0.04%)</title><rect x="0.5883%" y="1509" width="0.0424%" height="15" fill="rgb(245,192,40)" fg:x="819" fg:w="59"/><text x="0.8383%" y="1519.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (225 samples, 0.16%)</title><rect x="0.4748%" y="1589" width="0.1616%" height="15" fill="rgb(238,167,29)" fg:x="661" fg:w="225"/><text x="0.7248%" y="1599.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (70 samples, 0.05%)</title><rect x="0.5861%" y="1573" width="0.0503%" height="15" fill="rgb(232,182,51)" fg:x="816" fg:w="70"/><text x="0.8361%" y="1583.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (70 samples, 0.05%)</title><rect x="0.5861%" y="1557" width="0.0503%" height="15" fill="rgb(231,60,39)" fg:x="816" fg:w="70"/><text x="0.8361%" y="1567.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (181 samples, 0.13%)</title><rect x="0.6450%" y="1589" width="0.1300%" height="15" fill="rgb(208,69,12)" fg:x="898" fg:w="181"/><text x="0.8950%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (51 samples, 0.04%)</title><rect x="0.8159%" y="1573" width="0.0366%" height="15" fill="rgb(235,93,37)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (51 samples, 0.04%)</title><rect x="0.8159%" y="1557" width="0.0366%" height="15" fill="rgb(213,116,39)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1567.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.04%)</title><rect x="0.8159%" y="1541" width="0.0366%" height="15" fill="rgb(222,207,29)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.04%)</title><rect x="0.8159%" y="1525" width="0.0366%" height="15" fill="rgb(206,96,30)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1535.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.04%)</title><rect x="0.8159%" y="1509" width="0.0366%" height="15" fill="rgb(218,138,4)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1519.50"></text></g><g><title>__rdl_dealloc (51 samples, 0.04%)</title><rect x="0.8159%" y="1493" width="0.0366%" height="15" fill="rgb(250,191,14)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1503.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (51 samples, 0.04%)</title><rect x="0.8159%" y="1477" width="0.0366%" height="15" fill="rgb(239,60,40)" fg:x="1136" fg:w="51"/><text x="1.0659%" y="1487.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (97 samples, 0.07%)</title><rect x="0.7858%" y="1589" width="0.0697%" height="15" fill="rgb(206,27,48)" fg:x="1094" fg:w="97"/><text x="1.0358%" y="1599.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (31 samples, 0.02%)</title><rect x="0.8554%" y="1589" width="0.0223%" height="15" fill="rgb(225,35,8)" fg:x="1191" fg:w="31"/><text x="1.1054%" y="1599.50"></text></g><g><title>[libc.so.6] (146 samples, 0.10%)</title><rect x="0.8777%" y="1589" width="0.1049%" height="15" fill="rgb(250,213,24)" fg:x="1222" fg:w="146"/><text x="1.1277%" y="1599.50"></text></g><g><title>__floattidf (177 samples, 0.13%)</title><rect x="0.9833%" y="1589" width="0.1271%" height="15" fill="rgb(247,123,22)" fg:x="1369" fg:w="177"/><text x="1.2333%" y="1599.50"></text></g><g><title>__vdso_clock_gettime (58 samples, 0.04%)</title><rect x="1.1205%" y="1589" width="0.0417%" height="15" fill="rgb(231,138,38)" fg:x="1560" fg:w="58"/><text x="1.3705%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (34 samples, 0.02%)</title><rect x="1.1657%" y="1589" width="0.0244%" height="15" fill="rgb(231,145,46)" fg:x="1623" fg:w="34"/><text x="1.4157%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (50 samples, 0.04%)</title><rect x="1.1902%" y="1589" width="0.0359%" height="15" fill="rgb(251,118,11)" fg:x="1657" fg:w="50"/><text x="1.4402%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (27 samples, 0.02%)</title><rect x="1.2268%" y="1573" width="0.0194%" height="15" fill="rgb(217,147,25)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1583.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (27 samples, 0.02%)</title><rect x="1.2268%" y="1557" width="0.0194%" height="15" fill="rgb(247,81,37)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1567.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="1.2268%" y="1541" width="0.0194%" height="15" fill="rgb(209,12,38)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1551.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.02%)</title><rect x="1.2268%" y="1525" width="0.0194%" height="15" fill="rgb(227,1,9)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1535.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="1.2268%" y="1509" width="0.0194%" height="15" fill="rgb(248,47,43)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1519.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.02%)</title><rect x="1.2268%" y="1493" width="0.0194%" height="15" fill="rgb(221,10,30)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1503.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="1.2268%" y="1477" width="0.0194%" height="15" fill="rgb(210,229,1)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1487.50"></text></g><g><title>__rdl_alloc (27 samples, 0.02%)</title><rect x="1.2268%" y="1461" width="0.0194%" height="15" fill="rgb(222,148,37)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1471.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 0.02%)</title><rect x="1.2268%" y="1445" width="0.0194%" height="15" fill="rgb(234,67,33)" fg:x="1708" fg:w="27"/><text x="1.4768%" y="1455.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (72 samples, 0.05%)</title><rect x="1.2261%" y="1589" width="0.0517%" height="15" fill="rgb(247,98,35)" fg:x="1707" fg:w="72"/><text x="1.4761%" y="1599.50"></text></g><g><title>core::fmt::Arguments::new_v1 (44 samples, 0.03%)</title><rect x="1.2462%" y="1573" width="0.0316%" height="15" fill="rgb(247,138,52)" fg:x="1735" fg:w="44"/><text x="1.4962%" y="1583.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (142 samples, 0.10%)</title><rect x="1.2778%" y="1589" width="0.1020%" height="15" fill="rgb(213,79,30)" fg:x="1779" fg:w="142"/><text x="1.5278%" y="1599.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (142 samples, 0.10%)</title><rect x="1.2778%" y="1573" width="0.1020%" height="15" fill="rgb(246,177,23)" fg:x="1779" fg:w="142"/><text x="1.5278%" y="1583.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (142 samples, 0.10%)</title><rect x="1.2778%" y="1557" width="0.1020%" height="15" fill="rgb(230,62,27)" fg:x="1779" fg:w="142"/><text x="1.5278%" y="1567.50"></text></g><g><title>cfree (53 samples, 0.04%)</title><rect x="1.3798%" y="1589" width="0.0381%" height="15" fill="rgb(216,154,8)" fg:x="1921" fg:w="53"/><text x="1.6298%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;wisp_mux::ws::AppendingWebSocketRead&lt;fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_frame::{{closure}}&gt; (49 samples, 0.04%)</title><rect x="1.4229%" y="1589" width="0.0352%" height="15" fill="rgb(244,35,45)" fg:x="1981" fg:w="49"/><text x="1.6729%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (21 samples, 0.02%)</title><rect x="1.4581%" y="1589" width="0.0151%" height="15" fill="rgb(251,115,12)" fg:x="2030" fg:w="21"/><text x="1.7081%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;::read_frame&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;&gt;::wisp_read_frame::{{closure}}::{{closure}}::{{closure}},wisp_mux::WispError,wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;&gt;::wisp_read_frame::{{closure}}::{{closure}}&gt;::{{closure}}&gt; (90 samples, 0.06%)</title><rect x="1.4732%" y="1589" width="0.0646%" height="15" fill="rgb(240,54,50)" fg:x="2051" fg:w="90"/><text x="1.7232%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (132 samples, 0.09%)</title><rect x="1.5378%" y="1589" width="0.0948%" height="15" fill="rgb(233,84,52)" fg:x="2141" fg:w="132"/><text x="1.7878%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (15 samples, 0.01%)</title><rect x="1.6326%" y="1589" width="0.0108%" height="15" fill="rgb(207,117,47)" fg:x="2273" fg:w="15"/><text x="1.8826%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (47 samples, 0.03%)</title><rect x="1.6434%" y="1589" width="0.0338%" height="15" fill="rgb(249,43,39)" fg:x="2288" fg:w="47"/><text x="1.8934%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (209 samples, 0.15%)</title><rect x="1.6850%" y="1589" width="0.1501%" height="15" fill="rgb(209,38,44)" fg:x="2346" fg:w="209"/><text x="1.9350%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (691 samples, 0.50%)</title><rect x="1.8409%" y="1589" width="0.4963%" height="15" fill="rgb(236,212,23)" fg:x="2563" fg:w="691"/><text x="2.0909%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::packet::PacketType&gt; (32 samples, 0.02%)</title><rect x="2.3372%" y="1589" width="0.0230%" height="15" fill="rgb(242,79,21)" fg:x="3254" fg:w="32"/><text x="2.5872%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (88 samples, 0.06%)</title><rect x="2.3602%" y="1589" width="0.0632%" height="15" fill="rgb(211,96,35)" fg:x="3286" fg:w="88"/><text x="2.6102%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (29 samples, 0.02%)</title><rect x="2.4234%" y="1589" width="0.0208%" height="15" fill="rgb(253,215,40)" fg:x="3374" fg:w="29"/><text x="2.6734%" y="1599.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (42 samples, 0.03%)</title><rect x="2.4514%" y="1589" width="0.0302%" height="15" fill="rgb(211,81,21)" fg:x="3413" fg:w="42"/><text x="2.7014%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_pin_mut (34 samples, 0.02%)</title><rect x="2.4572%" y="1573" width="0.0244%" height="15" fill="rgb(208,190,38)" fg:x="3421" fg:w="34"/><text x="2.7072%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (34 samples, 0.02%)</title><rect x="2.4572%" y="1557" width="0.0244%" height="15" fill="rgb(235,213,38)" fg:x="3421" fg:w="34"/><text x="2.7072%" y="1567.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (88 samples, 0.06%)</title><rect x="2.4816%" y="1589" width="0.0632%" height="15" fill="rgb(237,122,38)" fg:x="3455" fg:w="88"/><text x="2.7316%" y="1599.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (18 samples, 0.01%)</title><rect x="2.5319%" y="1573" width="0.0129%" height="15" fill="rgb(244,218,35)" fg:x="3525" fg:w="18"/><text x="2.7819%" y="1583.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (186 samples, 0.13%)</title><rect x="2.5448%" y="1589" width="0.1336%" height="15" fill="rgb(240,68,47)" fg:x="3543" fg:w="186"/><text x="2.7948%" y="1599.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (132 samples, 0.09%)</title><rect x="2.5836%" y="1573" width="0.0948%" height="15" fill="rgb(210,16,53)" fg:x="3597" fg:w="132"/><text x="2.8336%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (122 samples, 0.09%)</title><rect x="2.5908%" y="1557" width="0.0876%" height="15" fill="rgb(235,124,12)" fg:x="3607" fg:w="122"/><text x="2.8408%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (122 samples, 0.09%)</title><rect x="2.5908%" y="1541" width="0.0876%" height="15" fill="rgb(224,169,11)" fg:x="3607" fg:w="122"/><text x="2.8408%" y="1551.50"></text></g><g><title>fastwebsockets::frame::&lt;impl core::convert::From&lt;fastwebsockets::frame::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (23 samples, 0.02%)</title><rect x="2.6784%" y="1589" width="0.0165%" height="15" fill="rgb(250,166,2)" fg:x="3729" fg:w="23"/><text x="2.9284%" y="1599.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (73 samples, 0.05%)</title><rect x="2.7208%" y="1573" width="0.0524%" height="15" fill="rgb(242,216,29)" fg:x="3788" fg:w="73"/><text x="2.9708%" y="1583.50"></text></g><g><title>fastwebsockets::frame::Frame::write (139 samples, 0.10%)</title><rect x="2.6949%" y="1589" width="0.0998%" height="15" fill="rgb(230,116,27)" fg:x="3752" fg:w="139"/><text x="2.9449%" y="1599.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (30 samples, 0.02%)</title><rect x="2.7732%" y="1573" width="0.0215%" height="15" fill="rgb(228,99,48)" fg:x="3861" fg:w="30"/><text x="3.0232%" y="1583.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.02%)</title><rect x="2.7732%" y="1557" width="0.0215%" height="15" fill="rgb(253,11,6)" fg:x="3861" fg:w="30"/><text x="3.0232%" y="1567.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (40 samples, 0.03%)</title><rect x="2.7976%" y="1589" width="0.0287%" height="15" fill="rgb(247,143,39)" fg:x="3895" fg:w="40"/><text x="3.0476%" y="1599.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (71 samples, 0.05%)</title><rect x="2.8264%" y="1589" width="0.0510%" height="15" fill="rgb(236,97,10)" fg:x="3935" fg:w="71"/><text x="3.0764%" y="1599.50"></text></g><g><title>malloc (41 samples, 0.03%)</title><rect x="2.8774%" y="1589" width="0.0294%" height="15" fill="rgb(233,208,19)" fg:x="4006" fg:w="41"/><text x="3.1274%" y="1599.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (26 samples, 0.02%)</title><rect x="2.9068%" y="1589" width="0.0187%" height="15" fill="rgb(216,164,2)" fg:x="4047" fg:w="26"/><text x="3.1568%" y="1599.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (17 samples, 0.01%)</title><rect x="2.9255%" y="1589" width="0.0122%" height="15" fill="rgb(220,129,5)" fg:x="4073" fg:w="17"/><text x="3.1755%" y="1599.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (25 samples, 0.02%)</title><rect x="2.9449%" y="1589" width="0.0180%" height="15" fill="rgb(242,17,10)" fg:x="4100" fg:w="25"/><text x="3.1949%" y="1599.50"></text></g><g><title>pow (25 samples, 0.02%)</title><rect x="2.9628%" y="1589" width="0.0180%" height="15" fill="rgb(242,107,0)" fg:x="4125" fg:w="25"/><text x="3.2128%" y="1599.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (42 samples, 0.03%)</title><rect x="2.9829%" y="1589" width="0.0302%" height="15" fill="rgb(251,28,31)" fg:x="4153" fg:w="42"/><text x="3.2329%" y="1599.50"></text></g><g><title>std::time::Instant::now (26 samples, 0.02%)</title><rect x="3.0181%" y="1589" width="0.0187%" height="15" fill="rgb(233,223,10)" fg:x="4202" fg:w="26"/><text x="3.2681%" y="1599.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (28 samples, 0.02%)</title><rect x="3.1410%" y="1557" width="0.0201%" height="15" fill="rgb(215,21,27)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1567.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (28 samples, 0.02%)</title><rect x="3.1410%" y="1541" width="0.0201%" height="15" fill="rgb(232,23,21)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1551.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (28 samples, 0.02%)</title><rect x="3.1410%" y="1525" width="0.0201%" height="15" fill="rgb(244,5,23)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1535.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (28 samples, 0.02%)</title><rect x="3.1410%" y="1509" width="0.0201%" height="15" fill="rgb(226,81,46)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1519.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (28 samples, 0.02%)</title><rect x="3.1410%" y="1493" width="0.0201%" height="15" fill="rgb(247,70,30)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1503.50"></text></g><g><title>std::sys_common::net::TcpStream::read (28 samples, 0.02%)</title><rect x="3.1410%" y="1477" width="0.0201%" height="15" fill="rgb(212,68,19)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1487.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (28 samples, 0.02%)</title><rect x="3.1410%" y="1461" width="0.0201%" height="15" fill="rgb(240,187,13)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1471.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (28 samples, 0.02%)</title><rect x="3.1410%" y="1445" width="0.0201%" height="15" fill="rgb(223,113,26)" fg:x="4373" fg:w="28"/><text x="3.3910%" y="1455.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (192 samples, 0.14%)</title><rect x="3.0375%" y="1589" width="0.1379%" height="15" fill="rgb(206,192,2)" fg:x="4229" fg:w="192"/><text x="3.2875%" y="1599.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (49 samples, 0.04%)</title><rect x="3.1402%" y="1573" width="0.0352%" height="15" fill="rgb(241,108,4)" fg:x="4372" fg:w="49"/><text x="3.3902%" y="1583.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (20 samples, 0.01%)</title><rect x="3.1611%" y="1557" width="0.0144%" height="15" fill="rgb(247,173,49)" fg:x="4401" fg:w="20"/><text x="3.4111%" y="1567.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (34 samples, 0.02%)</title><rect x="3.3076%" y="1557" width="0.0244%" height="15" fill="rgb(224,114,35)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1567.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (34 samples, 0.02%)</title><rect x="3.3076%" y="1541" width="0.0244%" height="15" fill="rgb(245,159,27)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1551.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (34 samples, 0.02%)</title><rect x="3.3076%" y="1525" width="0.0244%" height="15" fill="rgb(245,172,44)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1535.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (34 samples, 0.02%)</title><rect x="3.3076%" y="1509" width="0.0244%" height="15" fill="rgb(236,23,11)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1519.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (34 samples, 0.02%)</title><rect x="3.3076%" y="1493" width="0.0244%" height="15" fill="rgb(205,117,38)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1503.50"></text></g><g><title>std::sys_common::net::TcpStream::write (34 samples, 0.02%)</title><rect x="3.3076%" y="1477" width="0.0244%" height="15" fill="rgb(237,72,25)" fg:x="4605" fg:w="34"/><text x="3.5576%" y="1487.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (225 samples, 0.16%)</title><rect x="3.1754%" y="1589" width="0.1616%" height="15" fill="rgb(244,70,9)" fg:x="4421" fg:w="225"/><text x="3.4254%" y="1599.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (41 samples, 0.03%)</title><rect x="3.3076%" y="1573" width="0.0294%" height="15" fill="rgb(217,125,39)" fg:x="4605" fg:w="41"/><text x="3.5576%" y="1583.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (79 samples, 0.06%)</title><rect x="3.3600%" y="1589" width="0.0567%" height="15" fill="rgb(235,36,10)" fg:x="4678" fg:w="79"/><text x="3.6100%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (14 samples, 0.01%)</title><rect x="3.4254%" y="1589" width="0.0101%" height="15" fill="rgb(251,123,47)" fg:x="4769" fg:w="14"/><text x="3.6754%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (25 samples, 0.02%)</title><rect x="3.4354%" y="1589" width="0.0180%" height="15" fill="rgb(221,13,13)" fg:x="4783" fg:w="25"/><text x="3.6854%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (58 samples, 0.04%)</title><rect x="3.4584%" y="1589" width="0.0417%" height="15" fill="rgb(238,131,9)" fg:x="4815" fg:w="58"/><text x="3.7084%" y="1599.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (17 samples, 0.01%)</title><rect x="3.5001%" y="1573" width="0.0122%" height="15" fill="rgb(211,50,8)" fg:x="4873" fg:w="17"/><text x="3.7501%" y="1583.50"></text></g><g><title>core::mem::replace (17 samples, 0.01%)</title><rect x="3.5001%" y="1557" width="0.0122%" height="15" fill="rgb(245,182,24)" fg:x="4873" fg:w="17"/><text x="3.7501%" y="1567.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="3.5001%" y="1541" width="0.0122%" height="15" fill="rgb(242,14,37)" fg:x="4873" fg:w="17"/><text x="3.7501%" y="1551.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (28 samples, 0.02%)</title><rect x="3.5001%" y="1589" width="0.0201%" height="15" fill="rgb(246,228,12)" fg:x="4873" fg:w="28"/><text x="3.7501%" y="1599.50"></text></g><g><title>tokio::runtime::coop::budget (123 samples, 0.09%)</title><rect x="3.5331%" y="1573" width="0.0883%" height="15" fill="rgb(213,55,15)" fg:x="4919" fg:w="123"/><text x="3.7831%" y="1583.50"></text></g><g><title>tokio::runtime::coop::with_budget (123 samples, 0.09%)</title><rect x="3.5331%" y="1557" width="0.0883%" height="15" fill="rgb(209,9,3)" fg:x="4919" fg:w="123"/><text x="3.7831%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (123 samples, 0.09%)</title><rect x="3.5331%" y="1541" width="0.0883%" height="15" fill="rgb(230,59,30)" fg:x="4919" fg:w="123"/><text x="3.7831%" y="1551.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (123 samples, 0.09%)</title><rect x="3.5331%" y="1525" width="0.0883%" height="15" fill="rgb(209,121,21)" fg:x="4919" fg:w="123"/><text x="3.7831%" y="1535.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (123 samples, 0.09%)</title><rect x="3.5331%" y="1509" width="0.0883%" height="15" fill="rgb(220,109,13)" fg:x="4919" fg:w="123"/><text x="3.7831%" y="1519.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (142 samples, 0.10%)</title><rect x="3.5202%" y="1589" width="0.1020%" height="15" fill="rgb(232,18,1)" fg:x="4901" fg:w="142"/><text x="3.7702%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (27 samples, 0.02%)</title><rect x="3.6380%" y="1205" width="0.0194%" height="15" fill="rgb(215,41,42)" fg:x="5065" fg:w="27"/><text x="3.8880%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::poll (46 samples, 0.03%)</title><rect x="3.6308%" y="1589" width="0.0330%" height="15" fill="rgb(224,123,36)" fg:x="5055" fg:w="46"/><text x="3.8808%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (45 samples, 0.03%)</title><rect x="3.6315%" y="1573" width="0.0323%" height="15" fill="rgb(240,125,3)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1583.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (45 samples, 0.03%)</title><rect x="3.6315%" y="1557" width="0.0323%" height="15" fill="rgb(205,98,50)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1567.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (45 samples, 0.03%)</title><rect x="3.6315%" y="1541" width="0.0323%" height="15" fill="rgb(205,185,37)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1551.50"></text></g><g><title>std::panic::catch_unwind (45 samples, 0.03%)</title><rect x="3.6315%" y="1525" width="0.0323%" height="15" fill="rgb(238,207,15)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1535.50"></text></g><g><title>std::panicking::try (45 samples, 0.03%)</title><rect x="3.6315%" y="1509" width="0.0323%" height="15" fill="rgb(213,199,42)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1519.50"></text></g><g><title>std::panicking::try::do_call (45 samples, 0.03%)</title><rect x="3.6315%" y="1493" width="0.0323%" height="15" fill="rgb(235,201,11)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1503.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (45 samples, 0.03%)</title><rect x="3.6315%" y="1477" width="0.0323%" height="15" fill="rgb(207,46,11)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1487.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1461" width="0.0323%" height="15" fill="rgb(241,35,35)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1471.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (45 samples, 0.03%)</title><rect x="3.6315%" y="1445" width="0.0323%" height="15" fill="rgb(243,32,47)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1455.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (45 samples, 0.03%)</title><rect x="3.6315%" y="1429" width="0.0323%" height="15" fill="rgb(247,202,23)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1439.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1413" width="0.0323%" height="15" fill="rgb(219,102,11)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1423.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.03%)</title><rect x="3.6315%" y="1397" width="0.0323%" height="15" fill="rgb(243,110,44)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1407.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1381" width="0.0323%" height="15" fill="rgb(222,74,54)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1391.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (45 samples, 0.03%)</title><rect x="3.6315%" y="1365" width="0.0323%" height="15" fill="rgb(216,99,12)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1375.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (45 samples, 0.03%)</title><rect x="3.6315%" y="1349" width="0.0323%" height="15" fill="rgb(226,22,26)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1359.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1333" width="0.0323%" height="15" fill="rgb(217,163,10)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1343.50"></text></g><g><title>tokio::runtime::context::set_scheduler (45 samples, 0.03%)</title><rect x="3.6315%" y="1317" width="0.0323%" height="15" fill="rgb(213,25,53)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (45 samples, 0.03%)</title><rect x="3.6315%" y="1301" width="0.0323%" height="15" fill="rgb(252,105,26)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (45 samples, 0.03%)</title><rect x="3.6315%" y="1285" width="0.0323%" height="15" fill="rgb(220,39,43)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1295.50"></text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1269" width="0.0323%" height="15" fill="rgb(229,68,48)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1279.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (45 samples, 0.03%)</title><rect x="3.6315%" y="1253" width="0.0323%" height="15" fill="rgb(252,8,32)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (45 samples, 0.03%)</title><rect x="3.6315%" y="1237" width="0.0323%" height="15" fill="rgb(223,20,43)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (45 samples, 0.03%)</title><rect x="3.6315%" y="1221" width="0.0323%" height="15" fill="rgb(229,81,49)" fg:x="5056" fg:w="45"/><text x="3.8815%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (56 samples, 0.04%)</title><rect x="3.6667%" y="1557" width="0.0402%" height="15" fill="rgb(236,28,36)" fg:x="5105" fg:w="56"/><text x="3.9167%" y="1567.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (260 samples, 0.19%)</title><rect x="3.6646%" y="1589" width="0.1867%" height="15" fill="rgb(249,185,26)" fg:x="5102" fg:w="260"/><text x="3.9146%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (257 samples, 0.18%)</title><rect x="3.6667%" y="1573" width="0.1846%" height="15" fill="rgb(249,174,33)" fg:x="5105" fg:w="257"/><text x="3.9167%" y="1583.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (201 samples, 0.14%)</title><rect x="3.7069%" y="1557" width="0.1444%" height="15" fill="rgb(233,201,37)" fg:x="5161" fg:w="201"/><text x="3.9569%" y="1567.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (201 samples, 0.14%)</title><rect x="3.7069%" y="1541" width="0.1444%" height="15" fill="rgb(221,78,26)" fg:x="5161" fg:w="201"/><text x="3.9569%" y="1551.50"></text></g><g><title>tokio::runtime::task::state::State::load (201 samples, 0.14%)</title><rect x="3.7069%" y="1525" width="0.1444%" height="15" fill="rgb(250,127,30)" fg:x="5161" fg:w="201"/><text x="3.9569%" y="1535.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (201 samples, 0.14%)</title><rect x="3.7069%" y="1509" width="0.1444%" height="15" fill="rgb(230,49,44)" fg:x="5161" fg:w="201"/><text x="3.9569%" y="1519.50"></text></g><g><title>core::sync::atomic::atomic_load (201 samples, 0.14%)</title><rect x="3.7069%" y="1493" width="0.1444%" height="15" fill="rgb(229,67,23)" fg:x="5161" fg:w="201"/><text x="3.9569%" y="1503.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (16 samples, 0.01%)</title><rect x="3.8513%" y="1589" width="0.0115%" height="15" fill="rgb(249,83,47)" fg:x="5362" fg:w="16"/><text x="4.1013%" y="1599.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (94 samples, 0.07%)</title><rect x="3.8628%" y="1589" width="0.0675%" height="15" fill="rgb(215,43,3)" fg:x="5378" fg:w="94"/><text x="4.1128%" y="1599.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (122 samples, 0.09%)</title><rect x="3.9303%" y="1589" width="0.0876%" height="15" fill="rgb(238,154,13)" fg:x="5472" fg:w="122"/><text x="4.1803%" y="1599.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (18 samples, 0.01%)</title><rect x="4.0223%" y="1589" width="0.0129%" height="15" fill="rgb(219,56,2)" fg:x="5600" fg:w="18"/><text x="4.2723%" y="1599.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (140 samples, 0.10%)</title><rect x="4.0453%" y="1589" width="0.1006%" height="15" fill="rgb(233,0,4)" fg:x="5632" fg:w="140"/><text x="4.2953%" y="1599.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (174 samples, 0.12%)</title><rect x="4.1458%" y="1589" width="0.1250%" height="15" fill="rgb(235,30,7)" fg:x="5772" fg:w="174"/><text x="4.3958%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (30 samples, 0.02%)</title><rect x="4.2492%" y="1573" width="0.0215%" height="15" fill="rgb(250,79,13)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1583.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (30 samples, 0.02%)</title><rect x="4.2492%" y="1557" width="0.0215%" height="15" fill="rgb(211,146,34)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1567.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.02%)</title><rect x="4.2492%" y="1541" width="0.0215%" height="15" fill="rgb(228,22,38)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1551.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (30 samples, 0.02%)</title><rect x="4.2492%" y="1525" width="0.0215%" height="15" fill="rgb(235,168,5)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (30 samples, 0.02%)</title><rect x="4.2492%" y="1509" width="0.0215%" height="15" fill="rgb(221,155,16)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.02%)</title><rect x="4.2492%" y="1493" width="0.0215%" height="15" fill="rgb(215,215,53)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1503.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.02%)</title><rect x="4.2492%" y="1477" width="0.0215%" height="15" fill="rgb(223,4,10)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1487.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.02%)</title><rect x="4.2492%" y="1461" width="0.0215%" height="15" fill="rgb(234,103,6)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1471.50"></text></g><g><title>__rdl_alloc (30 samples, 0.02%)</title><rect x="4.2492%" y="1445" width="0.0215%" height="15" fill="rgb(227,97,0)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1455.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (30 samples, 0.02%)</title><rect x="4.2492%" y="1429" width="0.0215%" height="15" fill="rgb(234,150,53)" fg:x="5916" fg:w="30"/><text x="4.4992%" y="1439.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (112 samples, 0.08%)</title><rect x="4.2708%" y="1589" width="0.0804%" height="15" fill="rgb(228,201,54)" fg:x="5946" fg:w="112"/><text x="4.5208%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (17 samples, 0.01%)</title><rect x="4.5071%" y="1541" width="0.0122%" height="15" fill="rgb(222,22,37)" fg:x="6275" fg:w="17"/><text x="4.7571%" y="1551.50"></text></g><g><title>[anon] (5,906 samples, 4.24%)</title><rect x="0.3390%" y="1605" width="4.2421%" height="15" fill="rgb(237,53,32)" fg:x="472" fg:w="5906"/><text x="0.5890%" y="1615.50">[anon]</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (320 samples, 0.23%)</title><rect x="4.3512%" y="1589" width="0.2298%" height="15" fill="rgb(233,25,53)" fg:x="6058" fg:w="320"/><text x="4.6012%" y="1599.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (192 samples, 0.14%)</title><rect x="4.4432%" y="1573" width="0.1379%" height="15" fill="rgb(210,40,34)" fg:x="6186" fg:w="192"/><text x="4.6932%" y="1583.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (185 samples, 0.13%)</title><rect x="4.4482%" y="1557" width="0.1329%" height="15" fill="rgb(241,220,44)" fg:x="6193" fg:w="185"/><text x="4.6982%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (86 samples, 0.06%)</title><rect x="4.5193%" y="1541" width="0.0618%" height="15" fill="rgb(235,28,35)" fg:x="6292" fg:w="86"/><text x="4.7693%" y="1551.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (86 samples, 0.06%)</title><rect x="4.5193%" y="1525" width="0.0618%" height="15" fill="rgb(210,56,17)" fg:x="6292" fg:w="86"/><text x="4.7693%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83 samples, 0.06%)</title><rect x="4.5215%" y="1509" width="0.0596%" height="15" fill="rgb(224,130,29)" fg:x="6295" fg:w="83"/><text x="4.7715%" y="1519.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (83 samples, 0.06%)</title><rect x="4.5215%" y="1493" width="0.0596%" height="15" fill="rgb(235,212,8)" fg:x="6295" fg:w="83"/><text x="4.7715%" y="1503.50"></text></g><g><title>alloc::alloc::dealloc (83 samples, 0.06%)</title><rect x="4.5215%" y="1477" width="0.0596%" height="15" fill="rgb(223,33,50)" fg:x="6295" fg:w="83"/><text x="4.7715%" y="1487.50"></text></g><g><title>__rdl_dealloc (83 samples, 0.06%)</title><rect x="4.5215%" y="1461" width="0.0596%" height="15" fill="rgb(219,149,13)" fg:x="6295" fg:w="83"/><text x="4.7715%" y="1471.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (83 samples, 0.06%)</title><rect x="4.5215%" y="1445" width="0.0596%" height="15" fill="rgb(250,156,29)" fg:x="6295" fg:w="83"/><text x="4.7715%" y="1455.50"></text></g><g><title>[epoxy-server] (36 samples, 0.03%)</title><rect x="4.5811%" y="1605" width="0.0259%" height="15" fill="rgb(216,193,19)" fg:x="6378" fg:w="36"/><text x="4.8311%" y="1615.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (14 samples, 0.01%)</title><rect x="4.5969%" y="1589" width="0.0101%" height="15" fill="rgb(216,135,14)" fg:x="6400" fg:w="14"/><text x="4.8469%" y="1599.50"></text></g><g><title>parking_lot_core::parking_lot::park (20 samples, 0.01%)</title><rect x="4.6098%" y="1301" width="0.0144%" height="15" fill="rgb(241,47,5)" fg:x="6418" fg:w="20"/><text x="4.8598%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (20 samples, 0.01%)</title><rect x="4.6098%" y="1285" width="0.0144%" height="15" fill="rgb(233,42,35)" fg:x="6418" fg:w="20"/><text x="4.8598%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (19 samples, 0.01%)</title><rect x="4.6105%" y="1269" width="0.0136%" height="15" fill="rgb(231,13,6)" fg:x="6419" fg:w="19"/><text x="4.8605%" y="1279.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="4.6091%" y="1365" width="0.0165%" height="15" fill="rgb(207,181,40)" fg:x="6417" fg:w="23"/><text x="4.8591%" y="1375.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (23 samples, 0.02%)</title><rect x="4.6091%" y="1349" width="0.0165%" height="15" fill="rgb(254,173,49)" fg:x="6417" fg:w="23"/><text x="4.8591%" y="1359.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (23 samples, 0.02%)</title><rect x="4.6091%" y="1333" width="0.0165%" height="15" fill="rgb(221,1,38)" fg:x="6417" fg:w="23"/><text x="4.8591%" y="1343.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (23 samples, 0.02%)</title><rect x="4.6091%" y="1317" width="0.0165%" height="15" fill="rgb(206,124,46)" fg:x="6417" fg:w="23"/><text x="4.8591%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="4.7319%" y="933" width="0.0108%" height="15" fill="rgb(249,21,11)" fg:x="6588" fg:w="15"/><text x="4.9819%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (15 samples, 0.01%)</title><rect x="4.7319%" y="917" width="0.0108%" height="15" fill="rgb(222,201,40)" fg:x="6588" fg:w="15"/><text x="4.9819%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="4.7319%" y="901" width="0.0108%" height="15" fill="rgb(235,61,29)" fg:x="6588" fg:w="15"/><text x="4.9819%" y="911.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (33 samples, 0.02%)</title><rect x="4.9230%" y="917" width="0.0237%" height="15" fill="rgb(219,207,3)" fg:x="6854" fg:w="33"/><text x="5.1730%" y="927.50"></text></g><g><title>std::time::Instant::duration_since (33 samples, 0.02%)</title><rect x="4.9230%" y="901" width="0.0237%" height="15" fill="rgb(222,56,46)" fg:x="6854" fg:w="33"/><text x="5.1730%" y="911.50"></text></g><g><title>std::time::Instant::checked_duration_since (33 samples, 0.02%)</title><rect x="4.9230%" y="885" width="0.0237%" height="15" fill="rgb(239,76,54)" fg:x="6854" fg:w="33"/><text x="5.1730%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (33 samples, 0.02%)</title><rect x="4.9230%" y="869" width="0.0237%" height="15" fill="rgb(231,124,27)" fg:x="6854" fg:w="33"/><text x="5.1730%" y="879.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (23 samples, 0.02%)</title><rect x="4.9301%" y="853" width="0.0165%" height="15" fill="rgb(249,195,6)" fg:x="6864" fg:w="23"/><text x="5.1801%" y="863.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (84 samples, 0.06%)</title><rect x="4.9467%" y="885" width="0.0603%" height="15" fill="rgb(237,174,47)" fg:x="6887" fg:w="84"/><text x="5.1967%" y="895.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_shl (23 samples, 0.02%)</title><rect x="4.9905%" y="869" width="0.0165%" height="15" fill="rgb(206,201,31)" fg:x="6948" fg:w="23"/><text x="5.2405%" y="879.50"></text></g><g><title>core::num::&lt;impl u128&gt;::unchecked_shl (23 samples, 0.02%)</title><rect x="4.9905%" y="853" width="0.0165%" height="15" fill="rgb(231,57,52)" fg:x="6948" fg:w="23"/><text x="5.2405%" y="863.50"></text></g><g><title>__floattidf (120 samples, 0.09%)</title><rect x="4.9467%" y="917" width="0.0862%" height="15" fill="rgb(248,177,22)" fg:x="6887" fg:w="120"/><text x="5.1967%" y="927.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (120 samples, 0.09%)</title><rect x="4.9467%" y="901" width="0.0862%" height="15" fill="rgb(215,211,37)" fg:x="6887" fg:w="120"/><text x="5.1967%" y="911.50"></text></g><g><title>core::num::&lt;impl i128&gt;::unsigned_abs (25 samples, 0.02%)</title><rect x="5.0149%" y="885" width="0.0180%" height="15" fill="rgb(241,128,51)" fg:x="6982" fg:w="25"/><text x="5.2649%" y="895.50"></text></g><g><title>core::num::&lt;impl i128&gt;::wrapping_abs (25 samples, 0.02%)</title><rect x="5.0149%" y="869" width="0.0180%" height="15" fill="rgb(227,165,31)" fg:x="6982" fg:w="25"/><text x="5.2649%" y="879.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (1,357 samples, 0.97%)</title><rect x="5.0400%" y="917" width="0.9747%" height="15" fill="rgb(228,167,24)" fg:x="7017" fg:w="1357"/><text x="5.2900%" y="927.50"></text></g><g><title>pow (1,354 samples, 0.97%)</title><rect x="5.0422%" y="901" width="0.9725%" height="15" fill="rgb(228,143,12)" fg:x="7020" fg:w="1354"/><text x="5.2922%" y="911.50"></text></g><g><title>[libm.so.6] (805 samples, 0.58%)</title><rect x="5.4365%" y="885" width="0.5782%" height="15" fill="rgb(249,149,8)" fg:x="7569" fg:w="805"/><text x="5.6865%" y="895.50"></text></g><g><title>clock_gettime (522 samples, 0.37%)</title><rect x="6.0384%" y="901" width="0.3749%" height="15" fill="rgb(243,35,44)" fg:x="8407" fg:w="522"/><text x="6.2884%" y="911.50"></text></g><g><title>__vdso_clock_gettime (271 samples, 0.19%)</title><rect x="6.2187%" y="885" width="0.1946%" height="15" fill="rgb(246,89,9)" fg:x="8658" fg:w="271"/><text x="6.4687%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (561 samples, 0.40%)</title><rect x="6.0147%" y="917" width="0.4029%" height="15" fill="rgb(233,213,13)" fg:x="8374" fg:w="561"/><text x="6.2647%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (2,324 samples, 1.67%)</title><rect x="4.7491%" y="933" width="1.6692%" height="15" fill="rgb(233,141,41)" fg:x="6612" fg:w="2324"/><text x="4.9991%" y="943.50"></text></g><g><title>clock_gettime (632 samples, 0.45%)</title><rect x="6.4529%" y="901" width="0.4539%" height="15" fill="rgb(239,167,4)" fg:x="8984" fg:w="632"/><text x="6.7029%" y="911.50"></text></g><g><title>__vdso_clock_gettime (385 samples, 0.28%)</title><rect x="6.6303%" y="885" width="0.2765%" height="15" fill="rgb(209,217,16)" fg:x="9231" fg:w="385"/><text x="6.8803%" y="895.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (681 samples, 0.49%)</title><rect x="6.4234%" y="917" width="0.4891%" height="15" fill="rgb(219,88,35)" fg:x="8943" fg:w="681"/><text x="6.6734%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (689 samples, 0.49%)</title><rect x="6.4184%" y="933" width="0.4949%" height="15" fill="rgb(220,193,23)" fg:x="8936" fg:w="689"/><text x="6.6684%" y="943.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (28 samples, 0.02%)</title><rect x="6.9693%" y="901" width="0.0201%" height="15" fill="rgb(230,90,52)" fg:x="9703" fg:w="28"/><text x="7.2193%" y="911.50"></text></g><g><title>pow (27 samples, 0.02%)</title><rect x="6.9700%" y="885" width="0.0194%" height="15" fill="rgb(252,106,19)" fg:x="9704" fg:w="27"/><text x="7.2200%" y="895.50"></text></g><g><title>[libm.so.6] (15 samples, 0.01%)</title><rect x="6.9786%" y="869" width="0.0108%" height="15" fill="rgb(206,74,20)" fg:x="9716" fg:w="15"/><text x="7.2286%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (55 samples, 0.04%)</title><rect x="6.9571%" y="917" width="0.0395%" height="15" fill="rgb(230,138,44)" fg:x="9686" fg:w="55"/><text x="7.2071%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (33 samples, 0.02%)</title><rect x="7.0181%" y="725" width="0.0237%" height="15" fill="rgb(235,182,43)" fg:x="9771" fg:w="33"/><text x="7.2681%" y="735.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (33 samples, 0.02%)</title><rect x="7.0181%" y="709" width="0.0237%" height="15" fill="rgb(242,16,51)" fg:x="9771" fg:w="33"/><text x="7.2681%" y="719.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (33 samples, 0.02%)</title><rect x="7.0181%" y="693" width="0.0237%" height="15" fill="rgb(248,9,4)" fg:x="9771" fg:w="33"/><text x="7.2681%" y="703.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (30 samples, 0.02%)</title><rect x="7.0203%" y="677" width="0.0215%" height="15" fill="rgb(210,31,22)" fg:x="9774" fg:w="30"/><text x="7.2703%" y="687.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (30 samples, 0.02%)</title><rect x="7.0203%" y="661" width="0.0215%" height="15" fill="rgb(239,54,39)" fg:x="9774" fg:w="30"/><text x="7.2703%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (30 samples, 0.02%)</title><rect x="7.0203%" y="645" width="0.0215%" height="15" fill="rgb(230,99,41)" fg:x="9774" fg:w="30"/><text x="7.2703%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (30 samples, 0.02%)</title><rect x="7.0203%" y="629" width="0.0215%" height="15" fill="rgb(253,106,12)" fg:x="9774" fg:w="30"/><text x="7.2703%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.02%)</title><rect x="7.0203%" y="613" width="0.0215%" height="15" fill="rgb(213,46,41)" fg:x="9774" fg:w="30"/><text x="7.2703%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (35 samples, 0.03%)</title><rect x="7.0181%" y="805" width="0.0251%" height="15" fill="rgb(215,133,35)" fg:x="9771" fg:w="35"/><text x="7.2681%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (35 samples, 0.03%)</title><rect x="7.0181%" y="789" width="0.0251%" height="15" fill="rgb(213,28,5)" fg:x="9771" fg:w="35"/><text x="7.2681%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (35 samples, 0.03%)</title><rect x="7.0181%" y="773" width="0.0251%" height="15" fill="rgb(215,77,49)" fg:x="9771" fg:w="35"/><text x="7.2681%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (35 samples, 0.03%)</title><rect x="7.0181%" y="757" width="0.0251%" height="15" fill="rgb(248,100,22)" fg:x="9771" fg:w="35"/><text x="7.2681%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (35 samples, 0.03%)</title><rect x="7.0181%" y="741" width="0.0251%" height="15" fill="rgb(208,67,9)" fg:x="9771" fg:w="35"/><text x="7.2681%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.04%)</title><rect x="7.0181%" y="869" width="0.0359%" height="15" fill="rgb(219,133,21)" fg:x="9771" fg:w="50"/><text x="7.2681%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (50 samples, 0.04%)</title><rect x="7.0181%" y="853" width="0.0359%" height="15" fill="rgb(246,46,29)" fg:x="9771" fg:w="50"/><text x="7.2681%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (50 samples, 0.04%)</title><rect x="7.0181%" y="837" width="0.0359%" height="15" fill="rgb(246,185,52)" fg:x="9771" fg:w="50"/><text x="7.2681%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (50 samples, 0.04%)</title><rect x="7.0181%" y="821" width="0.0359%" height="15" fill="rgb(252,136,11)" fg:x="9771" fg:w="50"/><text x="7.2681%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.01%)</title><rect x="7.0433%" y="805" width="0.0108%" height="15" fill="rgb(219,138,53)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="7.0433%" y="789" width="0.0108%" height="15" fill="rgb(211,51,23)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.01%)</title><rect x="7.0433%" y="773" width="0.0108%" height="15" fill="rgb(247,221,28)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (15 samples, 0.01%)</title><rect x="7.0433%" y="757" width="0.0108%" height="15" fill="rgb(251,222,45)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="7.0433%" y="741" width="0.0108%" height="15" fill="rgb(217,162,53)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="7.0433%" y="725" width="0.0108%" height="15" fill="rgb(229,93,14)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="735.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.01%)</title><rect x="7.0433%" y="709" width="0.0108%" height="15" fill="rgb(209,67,49)" fg:x="9806" fg:w="15"/><text x="7.2933%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (58 samples, 0.04%)</title><rect x="7.0540%" y="869" width="0.0417%" height="15" fill="rgb(213,87,29)" fg:x="9821" fg:w="58"/><text x="7.3040%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (58 samples, 0.04%)</title><rect x="7.0540%" y="853" width="0.0417%" height="15" fill="rgb(205,151,52)" fg:x="9821" fg:w="58"/><text x="7.3040%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (58 samples, 0.04%)</title><rect x="7.0540%" y="837" width="0.0417%" height="15" fill="rgb(253,215,39)" fg:x="9821" fg:w="58"/><text x="7.3040%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.04%)</title><rect x="7.0540%" y="821" width="0.0417%" height="15" fill="rgb(221,220,41)" fg:x="9821" fg:w="58"/><text x="7.3040%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (58 samples, 0.04%)</title><rect x="7.0540%" y="805" width="0.0417%" height="15" fill="rgb(218,133,21)" fg:x="9821" fg:w="58"/><text x="7.3040%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (57 samples, 0.04%)</title><rect x="7.0548%" y="789" width="0.0409%" height="15" fill="rgb(221,193,43)" fg:x="9822" fg:w="57"/><text x="7.3048%" y="799.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (57 samples, 0.04%)</title><rect x="7.0548%" y="773" width="0.0409%" height="15" fill="rgb(240,128,52)" fg:x="9822" fg:w="57"/><text x="7.3048%" y="783.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (57 samples, 0.04%)</title><rect x="7.0548%" y="757" width="0.0409%" height="15" fill="rgb(253,114,12)" fg:x="9822" fg:w="57"/><text x="7.3048%" y="767.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (56 samples, 0.04%)</title><rect x="7.0555%" y="741" width="0.0402%" height="15" fill="rgb(215,223,47)" fg:x="9823" fg:w="56"/><text x="7.3055%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="7.0957%" y="837" width="0.0158%" height="15" fill="rgb(248,225,23)" fg:x="9879" fg:w="22"/><text x="7.3457%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;]&gt; (22 samples, 0.02%)</title><rect x="7.0957%" y="821" width="0.0158%" height="15" fill="rgb(250,108,0)" fg:x="9879" fg:w="22"/><text x="7.3457%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (20 samples, 0.01%)</title><rect x="7.0971%" y="805" width="0.0144%" height="15" fill="rgb(228,208,7)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (20 samples, 0.01%)</title><rect x="7.0971%" y="789" width="0.0144%" height="15" fill="rgb(244,45,10)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="799.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.01%)</title><rect x="7.0971%" y="773" width="0.0144%" height="15" fill="rgb(207,125,25)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.01%)</title><rect x="7.0971%" y="757" width="0.0144%" height="15" fill="rgb(210,195,18)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (20 samples, 0.01%)</title><rect x="7.0971%" y="741" width="0.0144%" height="15" fill="rgb(249,80,12)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.01%)</title><rect x="7.0971%" y="725" width="0.0144%" height="15" fill="rgb(221,65,9)" fg:x="9881" fg:w="20"/><text x="7.3471%" y="735.50"></text></g><g><title>core::mem::drop (25 samples, 0.02%)</title><rect x="7.0957%" y="869" width="0.0180%" height="15" fill="rgb(235,49,36)" fg:x="9879" fg:w="25"/><text x="7.3457%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt;&gt; (25 samples, 0.02%)</title><rect x="7.0957%" y="853" width="0.0180%" height="15" fill="rgb(225,32,20)" fg:x="9879" fg:w="25"/><text x="7.3457%" y="863.50"></text></g><g><title>mio::poll::Poll::poll (17 samples, 0.01%)</title><rect x="7.1216%" y="853" width="0.0122%" height="15" fill="rgb(215,141,46)" fg:x="9915" fg:w="17"/><text x="7.3716%" y="863.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (17 samples, 0.01%)</title><rect x="7.1216%" y="837" width="0.0122%" height="15" fill="rgb(250,160,47)" fg:x="9915" fg:w="17"/><text x="7.3716%" y="847.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (22 samples, 0.02%)</title><rect x="7.1359%" y="853" width="0.0158%" height="15" fill="rgb(216,222,40)" fg:x="9935" fg:w="22"/><text x="7.3859%" y="863.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (76 samples, 0.05%)</title><rect x="7.1208%" y="869" width="0.0546%" height="15" fill="rgb(234,217,39)" fg:x="9914" fg:w="76"/><text x="7.3708%" y="879.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (33 samples, 0.02%)</title><rect x="7.1517%" y="853" width="0.0237%" height="15" fill="rgb(207,178,40)" fg:x="9957" fg:w="33"/><text x="7.4017%" y="863.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (24 samples, 0.02%)</title><rect x="7.1582%" y="837" width="0.0172%" height="15" fill="rgb(221,136,13)" fg:x="9966" fg:w="24"/><text x="7.4082%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.02%)</title><rect x="7.1582%" y="821" width="0.0172%" height="15" fill="rgb(249,199,10)" fg:x="9966" fg:w="24"/><text x="7.4082%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (24 samples, 0.02%)</title><rect x="7.1582%" y="805" width="0.0172%" height="15" fill="rgb(249,222,13)" fg:x="9966" fg:w="24"/><text x="7.4082%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (24 samples, 0.02%)</title><rect x="7.1582%" y="789" width="0.0172%" height="15" fill="rgb(244,185,38)" fg:x="9966" fg:w="24"/><text x="7.4082%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (16 samples, 0.01%)</title><rect x="7.1639%" y="773" width="0.0115%" height="15" fill="rgb(236,202,9)" fg:x="9974" fg:w="16"/><text x="7.4139%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (16 samples, 0.01%)</title><rect x="7.1639%" y="757" width="0.0115%" height="15" fill="rgb(250,229,37)" fg:x="9974" fg:w="16"/><text x="7.4139%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::load (16 samples, 0.01%)</title><rect x="7.1639%" y="741" width="0.0115%" height="15" fill="rgb(206,174,23)" fg:x="9974" fg:w="16"/><text x="7.4139%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.01%)</title><rect x="7.1639%" y="725" width="0.0115%" height="15" fill="rgb(211,33,43)" fg:x="9974" fg:w="16"/><text x="7.4139%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="7.1639%" y="709" width="0.0115%" height="15" fill="rgb(245,58,50)" fg:x="9974" fg:w="16"/><text x="7.4139%" y="719.50"></text></g><g><title>core::mem::drop (20 samples, 0.01%)</title><rect x="7.1797%" y="677" width="0.0144%" height="15" fill="rgb(244,68,36)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (20 samples, 0.01%)</title><rect x="7.1797%" y="661" width="0.0144%" height="15" fill="rgb(232,229,15)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (20 samples, 0.01%)</title><rect x="7.1797%" y="645" width="0.0144%" height="15" fill="rgb(254,30,23)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="655.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.01%)</title><rect x="7.1797%" y="629" width="0.0144%" height="15" fill="rgb(235,160,14)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.01%)</title><rect x="7.1797%" y="613" width="0.0144%" height="15" fill="rgb(212,155,44)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (20 samples, 0.01%)</title><rect x="7.1797%" y="597" width="0.0144%" height="15" fill="rgb(226,2,50)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.01%)</title><rect x="7.1797%" y="581" width="0.0144%" height="15" fill="rgb(234,177,6)" fg:x="9996" fg:w="20"/><text x="7.4297%" y="591.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (25 samples, 0.02%)</title><rect x="7.1941%" y="677" width="0.0180%" height="15" fill="rgb(217,24,9)" fg:x="10016" fg:w="25"/><text x="7.4441%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="7.1963%" y="661" width="0.0158%" height="15" fill="rgb(220,13,46)" fg:x="10019" fg:w="22"/><text x="7.4463%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.02%)</title><rect x="7.1963%" y="645" width="0.0158%" height="15" fill="rgb(239,221,27)" fg:x="10019" fg:w="22"/><text x="7.4463%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.02%)</title><rect x="7.1963%" y="629" width="0.0158%" height="15" fill="rgb(222,198,25)" fg:x="10019" fg:w="22"/><text x="7.4463%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (22 samples, 0.02%)</title><rect x="7.1963%" y="613" width="0.0158%" height="15" fill="rgb(211,99,13)" fg:x="10019" fg:w="22"/><text x="7.4463%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="7.1963%" y="597" width="0.0158%" height="15" fill="rgb(232,111,31)" fg:x="10019" fg:w="22"/><text x="7.4463%" y="607.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (14 samples, 0.01%)</title><rect x="7.2121%" y="661" width="0.0101%" height="15" fill="rgb(245,82,37)" fg:x="10041" fg:w="14"/><text x="7.4621%" y="671.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (16 samples, 0.01%)</title><rect x="7.2121%" y="677" width="0.0115%" height="15" fill="rgb(227,149,46)" fg:x="10041" fg:w="16"/><text x="7.4621%" y="687.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (80 samples, 0.06%)</title><rect x="7.1769%" y="853" width="0.0575%" height="15" fill="rgb(218,36,50)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (80 samples, 0.06%)</title><rect x="7.1769%" y="837" width="0.0575%" height="15" fill="rgb(226,80,48)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (80 samples, 0.06%)</title><rect x="7.1769%" y="821" width="0.0575%" height="15" fill="rgb(238,224,15)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (80 samples, 0.06%)</title><rect x="7.1769%" y="805" width="0.0575%" height="15" fill="rgb(241,136,10)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.06%)</title><rect x="7.1769%" y="789" width="0.0575%" height="15" fill="rgb(208,32,45)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (80 samples, 0.06%)</title><rect x="7.1769%" y="773" width="0.0575%" height="15" fill="rgb(207,135,9)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (80 samples, 0.06%)</title><rect x="7.1769%" y="757" width="0.0575%" height="15" fill="rgb(206,86,44)" fg:x="9992" fg:w="80"/><text x="7.4269%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (78 samples, 0.06%)</title><rect x="7.1783%" y="741" width="0.0560%" height="15" fill="rgb(245,177,15)" fg:x="9994" fg:w="78"/><text x="7.4283%" y="751.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (78 samples, 0.06%)</title><rect x="7.1783%" y="725" width="0.0560%" height="15" fill="rgb(206,64,50)" fg:x="9994" fg:w="78"/><text x="7.4283%" y="735.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (78 samples, 0.06%)</title><rect x="7.1783%" y="709" width="0.0560%" height="15" fill="rgb(234,36,40)" fg:x="9994" fg:w="78"/><text x="7.4283%" y="719.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (78 samples, 0.06%)</title><rect x="7.1783%" y="693" width="0.0560%" height="15" fill="rgb(213,64,8)" fg:x="9994" fg:w="78"/><text x="7.4283%" y="703.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (90 samples, 0.06%)</title><rect x="7.1754%" y="869" width="0.0646%" height="15" fill="rgb(210,75,36)" fg:x="9990" fg:w="90"/><text x="7.4254%" y="879.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (314 samples, 0.23%)</title><rect x="7.0174%" y="885" width="0.2255%" height="15" fill="rgb(229,88,21)" fg:x="9770" fg:w="314"/><text x="7.2674%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (334 samples, 0.24%)</title><rect x="7.0117%" y="901" width="0.2399%" height="15" fill="rgb(252,204,47)" fg:x="9762" fg:w="334"/><text x="7.2617%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (353 samples, 0.25%)</title><rect x="7.0009%" y="917" width="0.2535%" height="15" fill="rgb(208,77,27)" fg:x="9747" fg:w="353"/><text x="7.2509%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (482 samples, 0.35%)</title><rect x="6.9133%" y="933" width="0.3462%" height="15" fill="rgb(221,76,26)" fg:x="9625" fg:w="482"/><text x="7.1633%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (45 samples, 0.03%)</title><rect x="7.4728%" y="917" width="0.0323%" height="15" fill="rgb(225,139,18)" fg:x="10404" fg:w="45"/><text x="7.7228%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (45 samples, 0.03%)</title><rect x="7.4728%" y="901" width="0.0323%" height="15" fill="rgb(230,137,11)" fg:x="10404" fg:w="45"/><text x="7.7228%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (45 samples, 0.03%)</title><rect x="7.4728%" y="885" width="0.0323%" height="15" fill="rgb(212,28,1)" fg:x="10404" fg:w="45"/><text x="7.7228%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (23 samples, 0.02%)</title><rect x="7.6725%" y="901" width="0.0165%" height="15" fill="rgb(248,164,17)" fg:x="10682" fg:w="23"/><text x="7.9225%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.02%)</title><rect x="7.6911%" y="869" width="0.0223%" height="15" fill="rgb(222,171,42)" fg:x="10708" fg:w="31"/><text x="7.9411%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.02%)</title><rect x="7.6911%" y="853" width="0.0223%" height="15" fill="rgb(243,84,45)" fg:x="10708" fg:w="31"/><text x="7.9411%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (25 samples, 0.02%)</title><rect x="7.7156%" y="869" width="0.0180%" height="15" fill="rgb(252,49,23)" fg:x="10742" fg:w="25"/><text x="7.9656%" y="879.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (15 samples, 0.01%)</title><rect x="7.7228%" y="853" width="0.0108%" height="15" fill="rgb(215,19,7)" fg:x="10752" fg:w="15"/><text x="7.9728%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.01%)</title><rect x="7.7228%" y="837" width="0.0108%" height="15" fill="rgb(238,81,41)" fg:x="10752" fg:w="15"/><text x="7.9728%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.01%)</title><rect x="7.7228%" y="821" width="0.0108%" height="15" fill="rgb(210,199,37)" fg:x="10752" fg:w="15"/><text x="7.9728%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (63 samples, 0.05%)</title><rect x="7.6890%" y="901" width="0.0453%" height="15" fill="rgb(244,192,49)" fg:x="10705" fg:w="63"/><text x="7.9390%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (63 samples, 0.05%)</title><rect x="7.6890%" y="885" width="0.0453%" height="15" fill="rgb(226,211,11)" fg:x="10705" fg:w="63"/><text x="7.9390%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (39 samples, 0.03%)</title><rect x="7.7421%" y="885" width="0.0280%" height="15" fill="rgb(236,162,54)" fg:x="10779" fg:w="39"/><text x="7.9921%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (39 samples, 0.03%)</title><rect x="7.7421%" y="869" width="0.0280%" height="15" fill="rgb(220,229,9)" fg:x="10779" fg:w="39"/><text x="7.9921%" y="879.50"></text></g><g><title>core::cell::BorrowRefMut::new (39 samples, 0.03%)</title><rect x="7.7421%" y="853" width="0.0280%" height="15" fill="rgb(250,87,22)" fg:x="10779" fg:w="39"/><text x="7.9921%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::defer::Defer::wake (52 samples, 0.04%)</title><rect x="7.7407%" y="901" width="0.0373%" height="15" fill="rgb(239,43,17)" fg:x="10777" fg:w="52"/><text x="7.9907%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (126 samples, 0.09%)</title><rect x="7.7895%" y="869" width="0.0905%" height="15" fill="rgb(231,177,25)" fg:x="10845" fg:w="126"/><text x="8.0395%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (126 samples, 0.09%)</title><rect x="7.7895%" y="853" width="0.0905%" height="15" fill="rgb(219,179,1)" fg:x="10845" fg:w="126"/><text x="8.0395%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;()&gt;&gt; (22 samples, 0.02%)</title><rect x="7.8894%" y="853" width="0.0158%" height="15" fill="rgb(238,219,53)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (22 samples, 0.02%)</title><rect x="7.8894%" y="837" width="0.0158%" height="15" fill="rgb(232,167,36)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="7.8894%" y="821" width="0.0158%" height="15" fill="rgb(244,19,51)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (22 samples, 0.02%)</title><rect x="7.8894%" y="805" width="0.0158%" height="15" fill="rgb(224,6,22)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.02%)</title><rect x="7.8894%" y="789" width="0.0158%" height="15" fill="rgb(224,145,5)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="7.8894%" y="773" width="0.0158%" height="15" fill="rgb(234,130,49)" fg:x="10984" fg:w="22"/><text x="8.1394%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (180 samples, 0.13%)</title><rect x="7.9052%" y="853" width="0.1293%" height="15" fill="rgb(254,6,2)" fg:x="11006" fg:w="180"/><text x="8.1552%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (180 samples, 0.13%)</title><rect x="7.9052%" y="837" width="0.1293%" height="15" fill="rgb(208,96,46)" fg:x="11006" fg:w="180"/><text x="8.1552%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (323 samples, 0.23%)</title><rect x="8.0388%" y="805" width="0.2320%" height="15" fill="rgb(239,3,39)" fg:x="11192" fg:w="323"/><text x="8.2888%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (322 samples, 0.23%)</title><rect x="8.0395%" y="789" width="0.2313%" height="15" fill="rgb(233,210,1)" fg:x="11193" fg:w="322"/><text x="8.2895%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (322 samples, 0.23%)</title><rect x="8.0395%" y="773" width="0.2313%" height="15" fill="rgb(244,137,37)" fg:x="11193" fg:w="322"/><text x="8.2895%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (507 samples, 0.36%)</title><rect x="8.3340%" y="741" width="0.3642%" height="15" fill="rgb(240,136,2)" fg:x="11603" fg:w="507"/><text x="8.5840%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (507 samples, 0.36%)</title><rect x="8.3340%" y="725" width="0.3642%" height="15" fill="rgb(239,18,37)" fg:x="11603" fg:w="507"/><text x="8.5840%" y="735.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (676 samples, 0.49%)</title><rect x="8.3139%" y="757" width="0.4855%" height="15" fill="rgb(218,185,22)" fg:x="11575" fg:w="676"/><text x="8.5639%" y="767.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (141 samples, 0.10%)</title><rect x="8.6982%" y="741" width="0.1013%" height="15" fill="rgb(225,218,4)" fg:x="12110" fg:w="141"/><text x="8.9482%" y="751.50"></text></g><g><title>syscall (140 samples, 0.10%)</title><rect x="8.6989%" y="725" width="0.1006%" height="15" fill="rgb(230,182,32)" fg:x="12111" fg:w="140"/><text x="8.9489%" y="735.50"></text></g><g><title>[unknown] (24 samples, 0.02%)</title><rect x="8.7822%" y="709" width="0.0172%" height="15" fill="rgb(242,56,43)" fg:x="12227" fg:w="24"/><text x="9.0322%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (24 samples, 0.02%)</title><rect x="8.8001%" y="725" width="0.0172%" height="15" fill="rgb(233,99,24)" fg:x="12252" fg:w="24"/><text x="9.0501%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (24 samples, 0.02%)</title><rect x="8.8001%" y="709" width="0.0172%" height="15" fill="rgb(234,209,42)" fg:x="12252" fg:w="24"/><text x="9.0501%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="8.8001%" y="693" width="0.0172%" height="15" fill="rgb(227,7,12)" fg:x="12252" fg:w="24"/><text x="9.0501%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (26 samples, 0.02%)</title><rect x="8.8001%" y="757" width="0.0187%" height="15" fill="rgb(245,203,43)" fg:x="12252" fg:w="26"/><text x="9.0501%" y="767.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::_{{closure}} (26 samples, 0.02%)</title><rect x="8.8001%" y="741" width="0.0187%" height="15" fill="rgb(238,205,33)" fg:x="12252" fg:w="26"/><text x="9.0501%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (31 samples, 0.02%)</title><rect x="8.8267%" y="741" width="0.0223%" height="15" fill="rgb(231,56,7)" fg:x="12289" fg:w="31"/><text x="9.0767%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (31 samples, 0.02%)</title><rect x="8.8267%" y="725" width="0.0223%" height="15" fill="rgb(244,186,29)" fg:x="12289" fg:w="31"/><text x="9.0767%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.02%)</title><rect x="8.8267%" y="709" width="0.0223%" height="15" fill="rgb(234,111,31)" fg:x="12289" fg:w="31"/><text x="9.0767%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::hash (73 samples, 0.05%)</title><rect x="8.8490%" y="741" width="0.0524%" height="15" fill="rgb(241,149,10)" fg:x="12320" fg:w="73"/><text x="9.0990%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (340 samples, 0.24%)</title><rect x="8.8188%" y="757" width="0.2442%" height="15" fill="rgb(249,206,44)" fg:x="12278" fg:w="340"/><text x="9.0688%" y="767.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (225 samples, 0.16%)</title><rect x="8.9014%" y="741" width="0.1616%" height="15" fill="rgb(251,153,30)" fg:x="12393" fg:w="225"/><text x="9.1514%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (225 samples, 0.16%)</title><rect x="8.9014%" y="725" width="0.1616%" height="15" fill="rgb(239,152,38)" fg:x="12393" fg:w="225"/><text x="9.1514%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (225 samples, 0.16%)</title><rect x="8.9014%" y="709" width="0.1616%" height="15" fill="rgb(249,139,47)" fg:x="12393" fg:w="225"/><text x="9.1514%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (1,088 samples, 0.78%)</title><rect x="8.3067%" y="773" width="0.7815%" height="15" fill="rgb(244,64,35)" fg:x="11565" fg:w="1088"/><text x="8.5567%" y="783.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (35 samples, 0.03%)</title><rect x="9.0630%" y="757" width="0.0251%" height="15" fill="rgb(216,46,15)" fg:x="12618" fg:w="35"/><text x="9.3130%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.03%)</title><rect x="9.0630%" y="741" width="0.0251%" height="15" fill="rgb(250,74,19)" fg:x="12618" fg:w="35"/><text x="9.3130%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.03%)</title><rect x="9.0630%" y="725" width="0.0251%" height="15" fill="rgb(249,42,33)" fg:x="12618" fg:w="35"/><text x="9.3130%" y="735.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,498 samples, 1.08%)</title><rect x="8.0345%" y="853" width="1.0760%" height="15" fill="rgb(242,149,17)" fg:x="11186" fg:w="1498"/><text x="8.2845%" y="863.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (1,498 samples, 1.08%)</title><rect x="8.0345%" y="837" width="1.0760%" height="15" fill="rgb(244,29,21)" fg:x="11186" fg:w="1498"/><text x="8.2845%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,497 samples, 1.08%)</title><rect x="8.0352%" y="821" width="1.0752%" height="15" fill="rgb(220,130,37)" fg:x="11187" fg:w="1497"/><text x="8.2852%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park (1,169 samples, 0.84%)</title><rect x="8.2708%" y="805" width="0.8396%" height="15" fill="rgb(211,67,2)" fg:x="11515" fg:w="1169"/><text x="8.5208%" y="815.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,169 samples, 0.84%)</title><rect x="8.2708%" y="789" width="0.8396%" height="15" fill="rgb(235,68,52)" fg:x="11515" fg:w="1169"/><text x="8.5208%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.02%)</title><rect x="9.0882%" y="773" width="0.0223%" height="15" fill="rgb(246,142,3)" fg:x="12653" fg:w="31"/><text x="9.3382%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.02%)</title><rect x="9.0882%" y="757" width="0.0223%" height="15" fill="rgb(241,25,7)" fg:x="12653" fg:w="31"/><text x="9.3382%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (31 samples, 0.02%)</title><rect x="9.0882%" y="741" width="0.0223%" height="15" fill="rgb(242,119,39)" fg:x="12653" fg:w="31"/><text x="9.3382%" y="751.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (31 samples, 0.02%)</title><rect x="9.0882%" y="725" width="0.0223%" height="15" fill="rgb(241,98,45)" fg:x="12653" fg:w="31"/><text x="9.3382%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (1,756 samples, 1.26%)</title><rect x="7.8801%" y="869" width="1.2613%" height="15" fill="rgb(254,28,30)" fg:x="10971" fg:w="1756"/><text x="8.1301%" y="879.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (43 samples, 0.03%)</title><rect x="9.1104%" y="853" width="0.0309%" height="15" fill="rgb(241,142,54)" fg:x="12684" fg:w="43"/><text x="9.3604%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (29 samples, 0.02%)</title><rect x="9.1205%" y="837" width="0.0208%" height="15" fill="rgb(222,85,15)" fg:x="12698" fg:w="29"/><text x="9.3705%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (29 samples, 0.02%)</title><rect x="9.1205%" y="821" width="0.0208%" height="15" fill="rgb(210,85,47)" fg:x="12698" fg:w="29"/><text x="9.3705%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (29 samples, 0.02%)</title><rect x="9.1205%" y="805" width="0.0208%" height="15" fill="rgb(224,206,25)" fg:x="12698" fg:w="29"/><text x="9.3705%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.02%)</title><rect x="9.1205%" y="789" width="0.0208%" height="15" fill="rgb(243,201,19)" fg:x="12698" fg:w="29"/><text x="9.3705%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (75 samples, 0.05%)</title><rect x="9.1995%" y="853" width="0.0539%" height="15" fill="rgb(236,59,4)" fg:x="12808" fg:w="75"/><text x="9.4495%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (75 samples, 0.05%)</title><rect x="9.1995%" y="837" width="0.0539%" height="15" fill="rgb(254,179,45)" fg:x="12808" fg:w="75"/><text x="9.4495%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (428 samples, 0.31%)</title><rect x="9.2534%" y="853" width="0.3074%" height="15" fill="rgb(226,14,10)" fg:x="12883" fg:w="428"/><text x="9.5034%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (428 samples, 0.31%)</title><rect x="9.2534%" y="837" width="0.3074%" height="15" fill="rgb(244,27,41)" fg:x="12883" fg:w="428"/><text x="9.5034%" y="847.50"></text></g><g><title>tokio::runtime::driver::Driver::park (104 samples, 0.07%)</title><rect x="9.5608%" y="853" width="0.0747%" height="15" fill="rgb(235,35,32)" fg:x="13311" fg:w="104"/><text x="9.8108%" y="863.50"></text></g><g><title>tokio::runtime::driver::TimeDriver::park (103 samples, 0.07%)</title><rect x="9.5615%" y="837" width="0.0740%" height="15" fill="rgb(218,68,31)" fg:x="13312" fg:w="103"/><text x="9.8115%" y="847.50"></text></g><g><title>tokio::runtime::time::Driver::park (14 samples, 0.01%)</title><rect x="9.6254%" y="821" width="0.0101%" height="15" fill="rgb(207,120,37)" fg:x="13401" fg:w="14"/><text x="9.8754%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (20 samples, 0.01%)</title><rect x="9.7030%" y="677" width="0.0144%" height="15" fill="rgb(227,98,0)" fg:x="13509" fg:w="20"/><text x="9.9530%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::_{{closure}} (20 samples, 0.01%)</title><rect x="9.7030%" y="661" width="0.0144%" height="15" fill="rgb(207,7,3)" fg:x="13509" fg:w="20"/><text x="9.9530%" y="671.50"></text></g><g><title>core::ptr::write (20 samples, 0.01%)</title><rect x="9.7030%" y="645" width="0.0144%" height="15" fill="rgb(206,98,19)" fg:x="13509" fg:w="20"/><text x="9.9530%" y="655.50"></text></g><g><title>tokio::runtime::driver::Handle::time (32 samples, 0.02%)</title><rect x="9.7174%" y="661" width="0.0230%" height="15" fill="rgb(217,5,26)" fg:x="13529" fg:w="32"/><text x="9.9674%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (32 samples, 0.02%)</title><rect x="9.7174%" y="645" width="0.0230%" height="15" fill="rgb(235,190,38)" fg:x="13529" fg:w="32"/><text x="9.9674%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (22 samples, 0.02%)</title><rect x="9.8409%" y="645" width="0.0158%" height="15" fill="rgb(247,86,24)" fg:x="13701" fg:w="22"/><text x="10.0909%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (22 samples, 0.02%)</title><rect x="9.8409%" y="629" width="0.0158%" height="15" fill="rgb(205,101,16)" fg:x="13701" fg:w="22"/><text x="10.0909%" y="639.50"></text></g><g><title>core::slice::index::get_noubcheck (22 samples, 0.02%)</title><rect x="9.8409%" y="613" width="0.0158%" height="15" fill="rgb(246,168,33)" fg:x="13701" fg:w="22"/><text x="10.0909%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (16 samples, 0.01%)</title><rect x="9.8567%" y="597" width="0.0115%" height="15" fill="rgb(231,114,1)" fg:x="13723" fg:w="16"/><text x="10.1067%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (16 samples, 0.01%)</title><rect x="9.8567%" y="581" width="0.0115%" height="15" fill="rgb(207,184,53)" fg:x="13723" fg:w="16"/><text x="10.1067%" y="591.50"></text></g><g><title>core::iter::adapters::map::map_fold::_{{closure}} (1,670 samples, 1.20%)</title><rect x="9.7030%" y="693" width="1.1995%" height="15" fill="rgb(224,95,51)" fg:x="13509" fg:w="1670"/><text x="9.9530%" y="703.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (1,650 samples, 1.19%)</title><rect x="9.7174%" y="677" width="1.1851%" height="15" fill="rgb(212,188,45)" fg:x="13529" fg:w="1650"/><text x="9.9674%" y="687.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (1,618 samples, 1.16%)</title><rect x="9.7403%" y="661" width="1.1621%" height="15" fill="rgb(223,154,38)" fg:x="13561" fg:w="1618"/><text x="9.9903%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,456 samples, 1.05%)</title><rect x="9.8567%" y="645" width="1.0458%" height="15" fill="rgb(251,22,52)" fg:x="13723" fg:w="1456"/><text x="10.1067%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,456 samples, 1.05%)</title><rect x="9.8567%" y="629" width="1.0458%" height="15" fill="rgb(229,209,22)" fg:x="13723" fg:w="1456"/><text x="10.1067%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,456 samples, 1.05%)</title><rect x="9.8567%" y="613" width="1.0458%" height="15" fill="rgb(234,138,34)" fg:x="13723" fg:w="1456"/><text x="10.1067%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,440 samples, 1.03%)</title><rect x="9.8682%" y="597" width="1.0343%" height="15" fill="rgb(212,95,11)" fg:x="13739" fg:w="1440"/><text x="10.1182%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,440 samples, 1.03%)</title><rect x="9.8682%" y="581" width="1.0343%" height="15" fill="rgb(240,179,47)" fg:x="13739" fg:w="1440"/><text x="10.1182%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1,692 samples, 1.22%)</title><rect x="9.7030%" y="773" width="1.2153%" height="15" fill="rgb(240,163,11)" fg:x="13509" fg:w="1692"/><text x="9.9530%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (1,692 samples, 1.22%)</title><rect x="9.7030%" y="757" width="1.2153%" height="15" fill="rgb(236,37,12)" fg:x="13509" fg:w="1692"/><text x="9.9530%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,692 samples, 1.22%)</title><rect x="9.7030%" y="741" width="1.2153%" height="15" fill="rgb(232,164,16)" fg:x="13509" fg:w="1692"/><text x="9.9530%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1,692 samples, 1.22%)</title><rect x="9.7030%" y="725" width="1.2153%" height="15" fill="rgb(244,205,15)" fg:x="13509" fg:w="1692"/><text x="9.9530%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,692 samples, 1.22%)</title><rect x="9.7030%" y="709" width="1.2153%" height="15" fill="rgb(223,117,47)" fg:x="13509" fg:w="1692"/><text x="9.9530%" y="719.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (22 samples, 0.02%)</title><rect x="10.9025%" y="693" width="0.0158%" height="15" fill="rgb(244,107,35)" fg:x="15179" fg:w="22"/><text x="11.1525%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (22 samples, 0.02%)</title><rect x="10.9025%" y="677" width="0.0158%" height="15" fill="rgb(205,140,8)" fg:x="15179" fg:w="22"/><text x="11.1525%" y="687.50"></text></g><g><title>__rdl_alloc (499 samples, 0.36%)</title><rect x="10.9262%" y="661" width="0.3584%" height="15" fill="rgb(228,84,46)" fg:x="15212" fg:w="499"/><text x="11.1762%" y="671.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (499 samples, 0.36%)</title><rect x="10.9262%" y="645" width="0.3584%" height="15" fill="rgb(254,188,9)" fg:x="15212" fg:w="499"/><text x="11.1762%" y="655.50"></text></g><g><title>malloc (499 samples, 0.36%)</title><rect x="10.9262%" y="629" width="0.3584%" height="15" fill="rgb(206,112,54)" fg:x="15212" fg:w="499"/><text x="11.1762%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (523 samples, 0.38%)</title><rect x="10.9262%" y="709" width="0.3757%" height="15" fill="rgb(216,84,49)" fg:x="15212" fg:w="523"/><text x="11.1762%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (523 samples, 0.38%)</title><rect x="10.9262%" y="693" width="0.3757%" height="15" fill="rgb(214,194,35)" fg:x="15212" fg:w="523"/><text x="11.1762%" y="703.50"></text></g><g><title>alloc::alloc::alloc (523 samples, 0.38%)</title><rect x="10.9262%" y="677" width="0.3757%" height="15" fill="rgb(249,28,3)" fg:x="15212" fg:w="523"/><text x="11.1762%" y="687.50"></text></g><g><title>core::ptr::read_volatile (24 samples, 0.02%)</title><rect x="11.2846%" y="661" width="0.0172%" height="15" fill="rgb(222,56,52)" fg:x="15711" fg:w="24"/><text x="11.5346%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,244 samples, 1.61%)</title><rect x="9.6908%" y="837" width="1.6118%" height="15" fill="rgb(245,217,50)" fg:x="13492" fg:w="2244"/><text x="9.9408%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,244 samples, 1.61%)</title><rect x="9.6908%" y="821" width="1.6118%" height="15" fill="rgb(213,201,24)" fg:x="13492" fg:w="2244"/><text x="9.9408%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,244 samples, 1.61%)</title><rect x="9.6908%" y="805" width="1.6118%" height="15" fill="rgb(248,116,28)" fg:x="13492" fg:w="2244"/><text x="9.9408%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,244 samples, 1.61%)</title><rect x="9.6908%" y="789" width="1.6118%" height="15" fill="rgb(219,72,43)" fg:x="13492" fg:w="2244"/><text x="9.9408%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (535 samples, 0.38%)</title><rect x="10.9183%" y="773" width="0.3843%" height="15" fill="rgb(209,138,14)" fg:x="15201" fg:w="535"/><text x="11.1683%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (535 samples, 0.38%)</title><rect x="10.9183%" y="757" width="0.3843%" height="15" fill="rgb(222,18,33)" fg:x="15201" fg:w="535"/><text x="11.1683%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (535 samples, 0.38%)</title><rect x="10.9183%" y="741" width="0.3843%" height="15" fill="rgb(213,199,7)" fg:x="15201" fg:w="535"/><text x="11.1683%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (535 samples, 0.38%)</title><rect x="10.9183%" y="725" width="0.3843%" height="15" fill="rgb(250,110,10)" fg:x="15201" fg:w="535"/><text x="11.1683%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.03%)</title><rect x="11.3471%" y="757" width="0.0259%" height="15" fill="rgb(248,123,6)" fg:x="15798" fg:w="36"/><text x="11.5971%" y="767.50"></text></g><g><title>&lt;tokio::loom::std::parking_lot::MutexGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="11.3730%" y="725" width="0.0108%" height="15" fill="rgb(206,91,31)" fg:x="15834" fg:w="15"/><text x="11.6230%" y="735.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="11.3730%" y="709" width="0.0108%" height="15" fill="rgb(211,154,13)" fg:x="15834" fg:w="15"/><text x="11.6230%" y="719.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="11.3730%" y="693" width="0.0108%" height="15" fill="rgb(225,148,7)" fg:x="15834" fg:w="15"/><text x="11.6230%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.13%)</title><rect x="12.5997%" y="693" width="0.1336%" height="15" fill="rgb(220,160,43)" fg:x="17542" fg:w="186"/><text x="12.8497%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 0.13%)</title><rect x="12.5997%" y="677" width="0.1336%" height="15" fill="rgb(213,52,39)" fg:x="17542" fg:w="186"/><text x="12.8497%" y="687.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (95 samples, 0.07%)</title><rect x="12.6651%" y="661" width="0.0682%" height="15" fill="rgb(243,137,7)" fg:x="17633" fg:w="95"/><text x="12.9151%" y="671.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (276 samples, 0.20%)</title><rect x="12.7333%" y="693" width="0.1982%" height="15" fill="rgb(230,79,13)" fg:x="17728" fg:w="276"/><text x="12.9833%" y="703.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (276 samples, 0.20%)</title><rect x="12.7333%" y="677" width="0.1982%" height="15" fill="rgb(247,105,23)" fg:x="17728" fg:w="276"/><text x="12.9833%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (39 samples, 0.03%)</title><rect x="12.9316%" y="677" width="0.0280%" height="15" fill="rgb(223,179,41)" fg:x="18004" fg:w="39"/><text x="13.1816%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (39 samples, 0.03%)</title><rect x="12.9316%" y="661" width="0.0280%" height="15" fill="rgb(218,9,34)" fg:x="18004" fg:w="39"/><text x="13.1816%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (2,342 samples, 1.68%)</title><rect x="11.3026%" y="837" width="1.6822%" height="15" fill="rgb(222,106,8)" fg:x="15736" fg:w="2342"/><text x="11.5526%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (2,342 samples, 1.68%)</title><rect x="11.3026%" y="821" width="1.6822%" height="15" fill="rgb(211,220,0)" fg:x="15736" fg:w="2342"/><text x="11.5526%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (2,342 samples, 1.68%)</title><rect x="11.3026%" y="805" width="1.6822%" height="15" fill="rgb(229,52,16)" fg:x="15736" fg:w="2342"/><text x="11.5526%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,342 samples, 1.68%)</title><rect x="11.3026%" y="789" width="1.6822%" height="15" fill="rgb(212,155,18)" fg:x="15736" fg:w="2342"/><text x="11.5526%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (2,342 samples, 1.68%)</title><rect x="11.3026%" y="773" width="1.6822%" height="15" fill="rgb(242,21,14)" fg:x="15736" fg:w="2342"/><text x="11.5526%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2,244 samples, 1.61%)</title><rect x="11.3730%" y="757" width="1.6118%" height="15" fill="rgb(222,19,48)" fg:x="15834" fg:w="2244"/><text x="11.6230%" y="767.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (2,244 samples, 1.61%)</title><rect x="11.3730%" y="741" width="1.6118%" height="15" fill="rgb(232,45,27)" fg:x="15834" fg:w="2244"/><text x="11.6230%" y="751.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (2,229 samples, 1.60%)</title><rect x="11.3837%" y="725" width="1.6010%" height="15" fill="rgb(249,103,42)" fg:x="15849" fg:w="2229"/><text x="11.6337%" y="735.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (2,196 samples, 1.58%)</title><rect x="11.4074%" y="709" width="1.5773%" height="15" fill="rgb(246,81,33)" fg:x="15882" fg:w="2196"/><text x="11.6574%" y="719.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (74 samples, 0.05%)</title><rect x="12.9316%" y="693" width="0.0532%" height="15" fill="rgb(252,33,42)" fg:x="18004" fg:w="74"/><text x="13.1816%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (35 samples, 0.03%)</title><rect x="12.9596%" y="677" width="0.0251%" height="15" fill="rgb(209,212,41)" fg:x="18043" fg:w="35"/><text x="13.2096%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,198 samples, 0.86%)</title><rect x="12.9847%" y="805" width="0.8605%" height="15" fill="rgb(207,154,6)" fg:x="18078" fg:w="1198"/><text x="13.2347%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;]&gt; (1,198 samples, 0.86%)</title><rect x="12.9847%" y="789" width="0.8605%" height="15" fill="rgb(223,64,47)" fg:x="18078" fg:w="1198"/><text x="13.2347%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (1,136 samples, 0.82%)</title><rect x="13.0293%" y="773" width="0.8159%" height="15" fill="rgb(211,161,38)" fg:x="18140" fg:w="1136"/><text x="13.2793%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (1,136 samples, 0.82%)</title><rect x="13.0293%" y="757" width="0.8159%" height="15" fill="rgb(219,138,40)" fg:x="18140" fg:w="1136"/><text x="13.2793%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1,136 samples, 0.82%)</title><rect x="13.0293%" y="741" width="0.8159%" height="15" fill="rgb(241,228,46)" fg:x="18140" fg:w="1136"/><text x="13.2793%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1,136 samples, 0.82%)</title><rect x="13.0293%" y="725" width="0.8159%" height="15" fill="rgb(223,209,38)" fg:x="18140" fg:w="1136"/><text x="13.2793%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1,127 samples, 0.81%)</title><rect x="13.0357%" y="709" width="0.8095%" height="15" fill="rgb(236,164,45)" fg:x="18149" fg:w="1127"/><text x="13.2857%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1,127 samples, 0.81%)</title><rect x="13.0357%" y="693" width="0.8095%" height="15" fill="rgb(231,15,5)" fg:x="18149" fg:w="1127"/><text x="13.2857%" y="703.50"></text></g><g><title>core::mem::drop (1,367 samples, 0.98%)</title><rect x="12.9847%" y="837" width="0.9819%" height="15" fill="rgb(252,35,15)" fg:x="18078" fg:w="1367"/><text x="13.2347%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt;&gt; (1,367 samples, 0.98%)</title><rect x="12.9847%" y="821" width="0.9819%" height="15" fill="rgb(248,181,18)" fg:x="18078" fg:w="1367"/><text x="13.2347%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt;&gt; (169 samples, 0.12%)</title><rect x="13.8452%" y="805" width="0.1214%" height="15" fill="rgb(233,39,42)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.12%)</title><rect x="13.8452%" y="789" width="0.1214%" height="15" fill="rgb(238,110,33)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (169 samples, 0.12%)</title><rect x="13.8452%" y="773" width="0.1214%" height="15" fill="rgb(233,195,10)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (169 samples, 0.12%)</title><rect x="13.8452%" y="757" width="0.1214%" height="15" fill="rgb(254,105,3)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="767.50"></text></g><g><title>__rdl_dealloc (169 samples, 0.12%)</title><rect x="13.8452%" y="741" width="0.1214%" height="15" fill="rgb(221,225,9)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="751.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (169 samples, 0.12%)</title><rect x="13.8452%" y="725" width="0.1214%" height="15" fill="rgb(224,227,45)" fg:x="19276" fg:w="169"/><text x="14.0952%" y="735.50"></text></g><g><title>cfree (167 samples, 0.12%)</title><rect x="13.8467%" y="709" width="0.1199%" height="15" fill="rgb(229,198,43)" fg:x="19278" fg:w="167"/><text x="14.0967%" y="719.50"></text></g><g><title>[libc.so.6] (50 samples, 0.04%)</title><rect x="13.9307%" y="693" width="0.0359%" height="15" fill="rgb(206,209,35)" fg:x="19395" fg:w="50"/><text x="14.1807%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (60 samples, 0.04%)</title><rect x="13.9752%" y="805" width="0.0431%" height="15" fill="rgb(245,195,53)" fg:x="19457" fg:w="60"/><text x="14.2252%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (60 samples, 0.04%)</title><rect x="13.9752%" y="789" width="0.0431%" height="15" fill="rgb(240,92,26)" fg:x="19457" fg:w="60"/><text x="14.2252%" y="799.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.04%)</title><rect x="13.9752%" y="773" width="0.0431%" height="15" fill="rgb(207,40,23)" fg:x="19457" fg:w="60"/><text x="14.2252%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (60 samples, 0.04%)</title><rect x="13.9752%" y="757" width="0.0431%" height="15" fill="rgb(223,111,35)" fg:x="19457" fg:w="60"/><text x="14.2252%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (59 samples, 0.04%)</title><rect x="13.9759%" y="741" width="0.0424%" height="15" fill="rgb(229,147,28)" fg:x="19458" fg:w="59"/><text x="14.2259%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.04%)</title><rect x="13.9759%" y="725" width="0.0424%" height="15" fill="rgb(211,29,28)" fg:x="19458" fg:w="59"/><text x="14.2259%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (60 samples, 0.04%)</title><rect x="14.0183%" y="805" width="0.0431%" height="15" fill="rgb(228,72,33)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (60 samples, 0.04%)</title><rect x="14.0183%" y="789" width="0.0431%" height="15" fill="rgb(205,214,31)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="799.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.04%)</title><rect x="14.0183%" y="773" width="0.0431%" height="15" fill="rgb(224,111,15)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (60 samples, 0.04%)</title><rect x="14.0183%" y="757" width="0.0431%" height="15" fill="rgb(253,21,26)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (60 samples, 0.04%)</title><rect x="14.0183%" y="741" width="0.0431%" height="15" fill="rgb(245,139,43)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (60 samples, 0.04%)</title><rect x="14.0183%" y="725" width="0.0431%" height="15" fill="rgb(252,170,7)" fg:x="19517" fg:w="60"/><text x="14.2683%" y="735.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (130 samples, 0.09%)</title><rect x="14.0614%" y="805" width="0.0934%" height="15" fill="rgb(231,118,14)" fg:x="19577" fg:w="130"/><text x="14.3114%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (130 samples, 0.09%)</title><rect x="14.0614%" y="789" width="0.0934%" height="15" fill="rgb(238,83,0)" fg:x="19577" fg:w="130"/><text x="14.3114%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (130 samples, 0.09%)</title><rect x="14.0614%" y="773" width="0.0934%" height="15" fill="rgb(221,39,39)" fg:x="19577" fg:w="130"/><text x="14.3114%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (130 samples, 0.09%)</title><rect x="14.0614%" y="757" width="0.0934%" height="15" fill="rgb(222,119,46)" fg:x="19577" fg:w="130"/><text x="14.3114%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (130 samples, 0.09%)</title><rect x="14.0614%" y="741" width="0.0934%" height="15" fill="rgb(222,165,49)" fg:x="19577" fg:w="130"/><text x="14.3114%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (96 samples, 0.07%)</title><rect x="14.1605%" y="757" width="0.0690%" height="15" fill="rgb(219,113,52)" fg:x="19715" fg:w="96"/><text x="14.4105%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (96 samples, 0.07%)</title><rect x="14.1605%" y="741" width="0.0690%" height="15" fill="rgb(214,7,15)" fg:x="19715" fg:w="96"/><text x="14.4105%" y="751.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (506 samples, 0.36%)</title><rect x="13.9680%" y="837" width="0.3634%" height="15" fill="rgb(235,32,4)" fg:x="19447" fg:w="506"/><text x="14.2180%" y="847.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (506 samples, 0.36%)</title><rect x="13.9680%" y="821" width="0.3634%" height="15" fill="rgb(238,90,54)" fg:x="19447" fg:w="506"/><text x="14.2180%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (246 samples, 0.18%)</title><rect x="14.1548%" y="805" width="0.1767%" height="15" fill="rgb(213,208,19)" fg:x="19707" fg:w="246"/><text x="14.4048%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (246 samples, 0.18%)</title><rect x="14.1548%" y="789" width="0.1767%" height="15" fill="rgb(233,156,4)" fg:x="19707" fg:w="246"/><text x="14.4048%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (246 samples, 0.18%)</title><rect x="14.1548%" y="773" width="0.1767%" height="15" fill="rgb(207,194,5)" fg:x="19707" fg:w="246"/><text x="14.4048%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (142 samples, 0.10%)</title><rect x="14.2295%" y="757" width="0.1020%" height="15" fill="rgb(206,111,30)" fg:x="19811" fg:w="142"/><text x="14.4795%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (142 samples, 0.10%)</title><rect x="14.2295%" y="741" width="0.1020%" height="15" fill="rgb(243,70,54)" fg:x="19811" fg:w="142"/><text x="14.4795%" y="751.50"></text></g><g><title>tokio::runtime::driver::Handle::time (53 samples, 0.04%)</title><rect x="14.3315%" y="837" width="0.0381%" height="15" fill="rgb(242,28,8)" fg:x="19953" fg:w="53"/><text x="14.5815%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (53 samples, 0.04%)</title><rect x="14.3315%" y="821" width="0.0381%" height="15" fill="rgb(219,106,18)" fg:x="19953" fg:w="53"/><text x="14.5815%" y="831.50"></text></g><g><title>tokio::runtime::driver::IoStack::park (30 samples, 0.02%)</title><rect x="14.3695%" y="837" width="0.0215%" height="15" fill="rgb(244,222,10)" fg:x="20006" fg:w="30"/><text x="14.6195%" y="847.50"></text></g><g><title>tokio::runtime::process::Driver::park (24 samples, 0.02%)</title><rect x="14.3739%" y="821" width="0.0172%" height="15" fill="rgb(236,179,52)" fg:x="20012" fg:w="24"/><text x="14.6239%" y="831.50"></text></g><g><title>tokio::runtime::signal::Driver::park (24 samples, 0.02%)</title><rect x="14.3739%" y="805" width="0.0172%" height="15" fill="rgb(213,23,39)" fg:x="20012" fg:w="24"/><text x="14.6239%" y="815.50"></text></g><g><title>tokio::runtime::io::driver::Driver::park (24 samples, 0.02%)</title><rect x="14.3739%" y="789" width="0.0172%" height="15" fill="rgb(238,48,10)" fg:x="20012" fg:w="24"/><text x="14.6239%" y="799.50"></text></g><g><title>tokio::runtime::driver::Handle::io (21 samples, 0.02%)</title><rect x="14.3760%" y="773" width="0.0151%" height="15" fill="rgb(251,196,23)" fg:x="20015" fg:w="21"/><text x="14.6260%" y="783.50"></text></g><g><title>tokio::runtime::driver::IoHandle::as_ref (21 samples, 0.02%)</title><rect x="14.3760%" y="757" width="0.0151%" height="15" fill="rgb(250,152,24)" fg:x="20015" fg:w="21"/><text x="14.6260%" y="767.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (139 samples, 0.10%)</title><rect x="14.4170%" y="821" width="0.0998%" height="15" fill="rgb(209,150,17)" fg:x="20072" fg:w="139"/><text x="14.6670%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (132 samples, 0.09%)</title><rect x="14.4220%" y="805" width="0.0948%" height="15" fill="rgb(234,202,34)" fg:x="20079" fg:w="132"/><text x="14.6720%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (132 samples, 0.09%)</title><rect x="14.4220%" y="789" width="0.0948%" height="15" fill="rgb(253,148,53)" fg:x="20079" fg:w="132"/><text x="14.6720%" y="799.50"></text></g><g><title>mio::event::event::Event::token (16 samples, 0.01%)</title><rect x="14.5168%" y="821" width="0.0115%" height="15" fill="rgb(218,129,16)" fg:x="20211" fg:w="16"/><text x="14.7668%" y="831.50"></text></g><g><title>mio::sys::unix::selector::epoll::event::token (16 samples, 0.01%)</title><rect x="14.5168%" y="805" width="0.0115%" height="15" fill="rgb(216,85,19)" fg:x="20211" fg:w="16"/><text x="14.7668%" y="815.50"></text></g><g><title>[libc.so.6] (261 samples, 0.19%)</title><rect x="14.9722%" y="773" width="0.1875%" height="15" fill="rgb(235,228,7)" fg:x="20845" fg:w="261"/><text x="15.2222%" y="783.50"></text></g><g><title>mio::poll::Poll::poll (935 samples, 0.67%)</title><rect x="14.5283%" y="821" width="0.6716%" height="15" fill="rgb(245,175,0)" fg:x="20227" fg:w="935"/><text x="14.7783%" y="831.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (911 samples, 0.65%)</title><rect x="14.5455%" y="805" width="0.6543%" height="15" fill="rgb(208,168,36)" fg:x="20251" fg:w="911"/><text x="14.7955%" y="815.50"></text></g><g><title>epoll_wait (674 samples, 0.48%)</title><rect x="14.7157%" y="789" width="0.4841%" height="15" fill="rgb(246,171,24)" fg:x="20488" fg:w="674"/><text x="14.9657%" y="799.50"></text></g><g><title>[unknown] (56 samples, 0.04%)</title><rect x="15.1596%" y="773" width="0.0402%" height="15" fill="rgb(215,142,24)" fg:x="21106" fg:w="56"/><text x="15.4096%" y="783.50"></text></g><g><title>tokio::io::ready::Ready::from_mio (46 samples, 0.03%)</title><rect x="15.1999%" y="821" width="0.0330%" height="15" fill="rgb(250,187,7)" fg:x="21162" fg:w="46"/><text x="15.4499%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (481 samples, 0.35%)</title><rect x="15.2408%" y="805" width="0.3455%" height="15" fill="rgb(228,66,33)" fg:x="21219" fg:w="481"/><text x="15.4908%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (481 samples, 0.35%)</title><rect x="15.2408%" y="789" width="0.3455%" height="15" fill="rgb(234,215,21)" fg:x="21219" fg:w="481"/><text x="15.4908%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1,114 samples, 0.80%)</title><rect x="15.5863%" y="805" width="0.8001%" height="15" fill="rgb(222,191,20)" fg:x="21700" fg:w="1114"/><text x="15.8363%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (1,114 samples, 0.80%)</title><rect x="15.5863%" y="789" width="0.8001%" height="15" fill="rgb(245,79,54)" fg:x="21700" fg:w="1114"/><text x="15.8363%" y="799.50"></text></g><g><title>tokio::util::bit::Pack::pack (21 samples, 0.02%)</title><rect x="16.3915%" y="805" width="0.0151%" height="15" fill="rgb(240,10,37)" fg:x="22821" fg:w="21"/><text x="16.6415%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (1,632 samples, 1.17%)</title><rect x="15.2365%" y="821" width="1.1722%" height="15" fill="rgb(214,192,32)" fg:x="21213" fg:w="1632"/><text x="15.4865%" y="831.50"></text></g><g><title>core::mem::drop (492 samples, 0.35%)</title><rect x="16.4424%" y="805" width="0.3534%" height="15" fill="rgb(209,36,54)" fg:x="22892" fg:w="492"/><text x="16.6924%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (492 samples, 0.35%)</title><rect x="16.4424%" y="789" width="0.3534%" height="15" fill="rgb(220,10,11)" fg:x="22892" fg:w="492"/><text x="16.6924%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (492 samples, 0.35%)</title><rect x="16.4424%" y="773" width="0.3534%" height="15" fill="rgb(221,106,17)" fg:x="22892" fg:w="492"/><text x="16.6924%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (492 samples, 0.35%)</title><rect x="16.4424%" y="757" width="0.3534%" height="15" fill="rgb(251,142,44)" fg:x="22892" fg:w="492"/><text x="16.6924%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (492 samples, 0.35%)</title><rect x="16.4424%" y="741" width="0.3534%" height="15" fill="rgb(238,13,15)" fg:x="22892" fg:w="492"/><text x="16.6924%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (489 samples, 0.35%)</title><rect x="16.4446%" y="725" width="0.3512%" height="15" fill="rgb(208,107,27)" fg:x="22895" fg:w="489"/><text x="16.6946%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (489 samples, 0.35%)</title><rect x="16.4446%" y="709" width="0.3512%" height="15" fill="rgb(205,136,37)" fg:x="22895" fg:w="489"/><text x="16.6946%" y="719.50"></text></g><g><title>core::ptr::read (17 samples, 0.01%)</title><rect x="16.7958%" y="773" width="0.0122%" height="15" fill="rgb(250,205,27)" fg:x="23384" fg:w="17"/><text x="17.0458%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.01%)</title><rect x="16.7958%" y="805" width="0.0136%" height="15" fill="rgb(210,80,43)" fg:x="23384" fg:w="19"/><text x="17.0458%" y="815.50"></text></g><g><title>core::mem::replace (19 samples, 0.01%)</title><rect x="16.7958%" y="789" width="0.0136%" height="15" fill="rgb(247,160,36)" fg:x="23384" fg:w="19"/><text x="17.0458%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (136 samples, 0.10%)</title><rect x="16.8217%" y="805" width="0.0977%" height="15" fill="rgb(234,13,49)" fg:x="23420" fg:w="136"/><text x="17.0717%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (136 samples, 0.10%)</title><rect x="16.8217%" y="789" width="0.0977%" height="15" fill="rgb(234,122,0)" fg:x="23420" fg:w="136"/><text x="17.0717%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (136 samples, 0.10%)</title><rect x="16.8217%" y="773" width="0.0977%" height="15" fill="rgb(207,146,38)" fg:x="23420" fg:w="136"/><text x="17.0717%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (132 samples, 0.09%)</title><rect x="16.8246%" y="757" width="0.0948%" height="15" fill="rgb(207,177,25)" fg:x="23424" fg:w="132"/><text x="17.0746%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (132 samples, 0.09%)</title><rect x="16.8246%" y="741" width="0.0948%" height="15" fill="rgb(211,178,42)" fg:x="23424" fg:w="132"/><text x="17.0746%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (140 samples, 0.10%)</title><rect x="16.9503%" y="741" width="0.1006%" height="15" fill="rgb(230,69,54)" fg:x="23599" fg:w="140"/><text x="17.2003%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (139 samples, 0.10%)</title><rect x="16.9510%" y="725" width="0.0998%" height="15" fill="rgb(214,135,41)" fg:x="23600" fg:w="139"/><text x="17.2010%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (136 samples, 0.10%)</title><rect x="16.9531%" y="709" width="0.0977%" height="15" fill="rgb(237,67,25)" fg:x="23603" fg:w="136"/><text x="17.2031%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (136 samples, 0.10%)</title><rect x="16.9531%" y="693" width="0.0977%" height="15" fill="rgb(222,189,50)" fg:x="23603" fg:w="136"/><text x="17.2031%" y="703.50"></text></g><g><title>core::ops::function::FnOnce::call_once (27 samples, 0.02%)</title><rect x="17.0580%" y="661" width="0.0194%" height="15" fill="rgb(245,148,34)" fg:x="23749" fg:w="27"/><text x="17.3080%" y="671.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (27 samples, 0.02%)</title><rect x="17.0580%" y="645" width="0.0194%" height="15" fill="rgb(222,29,6)" fg:x="23749" fg:w="27"/><text x="17.3080%" y="655.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (27 samples, 0.02%)</title><rect x="17.0580%" y="629" width="0.0194%" height="15" fill="rgb(221,189,43)" fg:x="23749" fg:w="27"/><text x="17.3080%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (27 samples, 0.02%)</title><rect x="17.0580%" y="613" width="0.0194%" height="15" fill="rgb(207,36,27)" fg:x="23749" fg:w="27"/><text x="17.3080%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.05%)</title><rect x="17.0580%" y="677" width="0.0453%" height="15" fill="rgb(217,90,24)" fg:x="23749" fg:w="63"/><text x="17.3080%" y="687.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (36 samples, 0.03%)</title><rect x="17.0774%" y="661" width="0.0259%" height="15" fill="rgb(224,66,35)" fg:x="23776" fg:w="36"/><text x="17.3274%" y="671.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="17.0846%" y="645" width="0.0187%" height="15" fill="rgb(221,13,50)" fg:x="23786" fg:w="26"/><text x="17.3346%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (25 samples, 0.02%)</title><rect x="17.0853%" y="629" width="0.0180%" height="15" fill="rgb(236,68,49)" fg:x="23787" fg:w="25"/><text x="17.3353%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (30 samples, 0.02%)</title><rect x="17.1241%" y="661" width="0.0215%" height="15" fill="rgb(229,146,28)" fg:x="23841" fg:w="30"/><text x="17.3741%" y="671.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (30 samples, 0.02%)</title><rect x="17.1241%" y="645" width="0.0215%" height="15" fill="rgb(225,31,38)" fg:x="23841" fg:w="30"/><text x="17.3741%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (30 samples, 0.02%)</title><rect x="17.1241%" y="629" width="0.0215%" height="15" fill="rgb(250,208,3)" fg:x="23841" fg:w="30"/><text x="17.3741%" y="639.50"></text></g><g><title>core::ptr::read (23 samples, 0.02%)</title><rect x="17.2189%" y="613" width="0.0165%" height="15" fill="rgb(246,54,23)" fg:x="23973" fg:w="23"/><text x="17.4689%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (24 samples, 0.02%)</title><rect x="17.2189%" y="645" width="0.0172%" height="15" fill="rgb(243,76,11)" fg:x="23973" fg:w="24"/><text x="17.4689%" y="655.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="17.2189%" y="629" width="0.0172%" height="15" fill="rgb(245,21,50)" fg:x="23973" fg:w="24"/><text x="17.4689%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (257 samples, 0.18%)</title><rect x="17.0566%" y="725" width="0.1846%" height="15" fill="rgb(228,9,43)" fg:x="23747" fg:w="257"/><text x="17.3066%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (255 samples, 0.18%)</title><rect x="17.0580%" y="709" width="0.1832%" height="15" fill="rgb(208,100,47)" fg:x="23749" fg:w="255"/><text x="17.3080%" y="719.50"></text></g><g><title>tokio::runtime::context::with_scheduler (255 samples, 0.18%)</title><rect x="17.0580%" y="693" width="0.1832%" height="15" fill="rgb(232,26,8)" fg:x="23749" fg:w="255"/><text x="17.3080%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (192 samples, 0.14%)</title><rect x="17.1033%" y="677" width="0.1379%" height="15" fill="rgb(216,166,38)" fg:x="23812" fg:w="192"/><text x="17.3533%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (118 samples, 0.08%)</title><rect x="17.1564%" y="661" width="0.0848%" height="15" fill="rgb(251,202,51)" fg:x="23886" fg:w="118"/><text x="17.4064%" y="671.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (419 samples, 0.30%)</title><rect x="17.0508%" y="741" width="0.3010%" height="15" fill="rgb(254,216,34)" fg:x="23739" fg:w="419"/><text x="17.3008%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::schedule (154 samples, 0.11%)</title><rect x="17.2412%" y="725" width="0.1106%" height="15" fill="rgb(251,32,27)" fg:x="24004" fg:w="154"/><text x="17.4912%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (82 samples, 0.06%)</title><rect x="17.3539%" y="709" width="0.0589%" height="15" fill="rgb(208,127,28)" fg:x="24161" fg:w="82"/><text x="17.6039%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (82 samples, 0.06%)</title><rect x="17.3539%" y="693" width="0.0589%" height="15" fill="rgb(224,137,22)" fg:x="24161" fg:w="82"/><text x="17.6039%" y="703.50"></text></g><g><title>tokio::runtime::task::state::State::load (559 samples, 0.40%)</title><rect x="17.4128%" y="709" width="0.4015%" height="15" fill="rgb(254,70,32)" fg:x="24243" fg:w="559"/><text x="17.6628%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (559 samples, 0.40%)</title><rect x="17.4128%" y="693" width="0.4015%" height="15" fill="rgb(229,75,37)" fg:x="24243" fg:w="559"/><text x="17.6628%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (559 samples, 0.40%)</title><rect x="17.4128%" y="677" width="0.4015%" height="15" fill="rgb(252,64,23)" fg:x="24243" fg:w="559"/><text x="17.6628%" y="687.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (4,784 samples, 3.44%)</title><rect x="14.3911%" y="837" width="3.4362%" height="15" fill="rgb(232,162,48)" fg:x="20036" fg:w="4784"/><text x="14.6411%" y="847.50">tok..</text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,975 samples, 1.42%)</title><rect x="16.4087%" y="821" width="1.4186%" height="15" fill="rgb(246,160,12)" fg:x="22845" fg:w="1975"/><text x="16.6587%" y="831.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (1,235 samples, 0.89%)</title><rect x="16.9402%" y="805" width="0.8871%" height="15" fill="rgb(247,166,0)" fg:x="23585" fg:w="1235"/><text x="17.1902%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (1,223 samples, 0.88%)</title><rect x="16.9488%" y="789" width="0.8784%" height="15" fill="rgb(249,219,21)" fg:x="23597" fg:w="1223"/><text x="17.1988%" y="799.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (1,222 samples, 0.88%)</title><rect x="16.9495%" y="773" width="0.8777%" height="15" fill="rgb(205,209,3)" fg:x="23598" fg:w="1222"/><text x="17.1995%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (1,222 samples, 0.88%)</title><rect x="16.9495%" y="757" width="0.8777%" height="15" fill="rgb(243,44,1)" fg:x="23598" fg:w="1222"/><text x="17.1995%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (662 samples, 0.48%)</title><rect x="17.3518%" y="741" width="0.4755%" height="15" fill="rgb(206,159,16)" fg:x="24158" fg:w="662"/><text x="17.6018%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (662 samples, 0.48%)</title><rect x="17.3518%" y="725" width="0.4755%" height="15" fill="rgb(244,77,30)" fg:x="24158" fg:w="662"/><text x="17.6018%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val::_{{closure}} (18 samples, 0.01%)</title><rect x="17.8143%" y="709" width="0.0129%" height="15" fill="rgb(218,69,12)" fg:x="24802" fg:w="18"/><text x="18.0643%" y="719.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (35 samples, 0.03%)</title><rect x="17.8811%" y="821" width="0.0251%" height="15" fill="rgb(212,87,7)" fg:x="24895" fg:w="35"/><text x="18.1311%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.03%)</title><rect x="17.8811%" y="805" width="0.0251%" height="15" fill="rgb(245,114,25)" fg:x="24895" fg:w="35"/><text x="18.1311%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="17.8811%" y="789" width="0.0251%" height="15" fill="rgb(210,61,42)" fg:x="24895" fg:w="35"/><text x="18.1311%" y="799.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (22 samples, 0.02%)</title><rect x="17.8905%" y="773" width="0.0158%" height="15" fill="rgb(211,52,33)" fg:x="24908" fg:w="22"/><text x="18.1405%" y="783.50"></text></g><g><title>&lt;u32 as core::iter::range::Step&gt;::forward_unchecked (46 samples, 0.03%)</title><rect x="17.9609%" y="677" width="0.0330%" height="15" fill="rgb(234,58,33)" fg:x="25006" fg:w="46"/><text x="18.2109%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::unchecked_add (46 samples, 0.03%)</title><rect x="17.9609%" y="661" width="0.0330%" height="15" fill="rgb(220,115,36)" fg:x="25006" fg:w="46"/><text x="18.2109%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (73 samples, 0.05%)</title><rect x="17.9508%" y="709" width="0.0524%" height="15" fill="rgb(243,153,54)" fg:x="24992" fg:w="73"/><text x="18.2008%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (73 samples, 0.05%)</title><rect x="17.9508%" y="693" width="0.0524%" height="15" fill="rgb(251,47,18)" fg:x="24992" fg:w="73"/><text x="18.2008%" y="703.50"></text></g><g><title>core::mem::drop (972 samples, 0.70%)</title><rect x="18.2374%" y="645" width="0.6982%" height="15" fill="rgb(242,102,42)" fg:x="25391" fg:w="972"/><text x="18.4874%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (972 samples, 0.70%)</title><rect x="18.2374%" y="629" width="0.6982%" height="15" fill="rgb(234,31,38)" fg:x="25391" fg:w="972"/><text x="18.4874%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (972 samples, 0.70%)</title><rect x="18.2374%" y="613" width="0.6982%" height="15" fill="rgb(221,117,51)" fg:x="25391" fg:w="972"/><text x="18.4874%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (972 samples, 0.70%)</title><rect x="18.2374%" y="597" width="0.6982%" height="15" fill="rgb(212,20,18)" fg:x="25391" fg:w="972"/><text x="18.4874%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (972 samples, 0.70%)</title><rect x="18.2374%" y="581" width="0.6982%" height="15" fill="rgb(245,133,36)" fg:x="25391" fg:w="972"/><text x="18.4874%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (963 samples, 0.69%)</title><rect x="18.2438%" y="565" width="0.6917%" height="15" fill="rgb(212,6,19)" fg:x="25400" fg:w="963"/><text x="18.4938%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (963 samples, 0.69%)</title><rect x="18.2438%" y="549" width="0.6917%" height="15" fill="rgb(218,1,36)" fg:x="25400" fg:w="963"/><text x="18.4938%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (36 samples, 0.03%)</title><rect x="19.0813%" y="629" width="0.0259%" height="15" fill="rgb(246,84,54)" fg:x="26566" fg:w="36"/><text x="19.3313%" y="639.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (36 samples, 0.03%)</title><rect x="19.0813%" y="613" width="0.0259%" height="15" fill="rgb(242,110,6)" fg:x="26566" fg:w="36"/><text x="19.3313%" y="623.50"></text></g><g><title>core::slice::index::get_noubcheck (36 samples, 0.03%)</title><rect x="19.0813%" y="597" width="0.0259%" height="15" fill="rgb(214,47,5)" fg:x="26566" fg:w="36"/><text x="19.3313%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (18 samples, 0.01%)</title><rect x="19.1072%" y="581" width="0.0129%" height="15" fill="rgb(218,159,25)" fg:x="26602" fg:w="18"/><text x="19.3572%" y="591.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (18 samples, 0.01%)</title><rect x="19.1072%" y="565" width="0.0129%" height="15" fill="rgb(215,211,28)" fg:x="26602" fg:w="18"/><text x="19.3572%" y="575.50"></text></g><g><title>tokio::runtime::time::Inner::lock_sharded_wheel (1,582 samples, 1.14%)</title><rect x="18.9355%" y="645" width="1.1363%" height="15" fill="rgb(238,59,32)" fg:x="26363" fg:w="1582"/><text x="19.1855%" y="655.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1,343 samples, 0.96%)</title><rect x="19.1072%" y="629" width="0.9646%" height="15" fill="rgb(226,82,3)" fg:x="26602" fg:w="1343"/><text x="19.3572%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1,343 samples, 0.96%)</title><rect x="19.1072%" y="613" width="0.9646%" height="15" fill="rgb(240,164,32)" fg:x="26602" fg:w="1343"/><text x="19.3572%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1,343 samples, 0.96%)</title><rect x="19.1072%" y="597" width="0.9646%" height="15" fill="rgb(232,46,7)" fg:x="26602" fg:w="1343"/><text x="19.3572%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1,325 samples, 0.95%)</title><rect x="19.1201%" y="581" width="0.9517%" height="15" fill="rgb(229,129,53)" fg:x="26620" fg:w="1325"/><text x="19.3701%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,325 samples, 0.95%)</title><rect x="19.1201%" y="565" width="0.9517%" height="15" fill="rgb(234,188,29)" fg:x="26620" fg:w="1325"/><text x="19.3701%" y="575.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::elapsed (39 samples, 0.03%)</title><rect x="20.0718%" y="645" width="0.0280%" height="15" fill="rgb(246,141,4)" fg:x="27945" fg:w="39"/><text x="20.3218%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.09%)</title><rect x="20.5667%" y="613" width="0.0927%" height="15" fill="rgb(229,23,39)" fg:x="28634" fg:w="129"/><text x="20.8167%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (129 samples, 0.09%)</title><rect x="20.5667%" y="597" width="0.0927%" height="15" fill="rgb(206,12,3)" fg:x="28634" fg:w="129"/><text x="20.8167%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (65 samples, 0.05%)</title><rect x="20.6127%" y="581" width="0.0467%" height="15" fill="rgb(252,226,20)" fg:x="28698" fg:w="65"/><text x="20.8627%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (250 samples, 0.18%)</title><rect x="20.6594%" y="613" width="0.1796%" height="15" fill="rgb(216,123,35)" fg:x="28763" fg:w="250"/><text x="20.9094%" y="623.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (250 samples, 0.18%)</title><rect x="20.6594%" y="597" width="0.1796%" height="15" fill="rgb(212,68,40)" fg:x="28763" fg:w="250"/><text x="20.9094%" y="607.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (1,056 samples, 0.76%)</title><rect x="20.0998%" y="629" width="0.7585%" height="15" fill="rgb(254,125,32)" fg:x="27984" fg:w="1056"/><text x="20.3498%" y="639.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (27 samples, 0.02%)</title><rect x="20.8389%" y="613" width="0.0194%" height="15" fill="rgb(253,97,22)" fg:x="29013" fg:w="27"/><text x="21.0889%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (27 samples, 0.02%)</title><rect x="20.8389%" y="597" width="0.0194%" height="15" fill="rgb(241,101,14)" fg:x="29013" fg:w="27"/><text x="21.0889%" y="607.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (36 samples, 0.03%)</title><rect x="20.8583%" y="629" width="0.0259%" height="15" fill="rgb(238,103,29)" fg:x="29040" fg:w="36"/><text x="21.1083%" y="639.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (1,155 samples, 0.83%)</title><rect x="20.0998%" y="645" width="0.8296%" height="15" fill="rgb(233,195,47)" fg:x="27984" fg:w="1155"/><text x="20.3498%" y="655.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (63 samples, 0.05%)</title><rect x="20.8842%" y="629" width="0.0453%" height="15" fill="rgb(246,218,30)" fg:x="29076" fg:w="63"/><text x="21.1342%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (26 samples, 0.02%)</title><rect x="20.9108%" y="613" width="0.0187%" height="15" fill="rgb(219,145,47)" fg:x="29113" fg:w="26"/><text x="21.1608%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.03%)</title><rect x="20.9294%" y="629" width="0.0323%" height="15" fill="rgb(243,12,26)" fg:x="29139" fg:w="45"/><text x="21.1794%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.11%)</title><rect x="21.2325%" y="613" width="0.1106%" height="15" fill="rgb(214,87,16)" fg:x="29561" fg:w="154"/><text x="21.4825%" y="623.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.11%)</title><rect x="21.2325%" y="597" width="0.1106%" height="15" fill="rgb(208,99,42)" fg:x="29561" fg:w="154"/><text x="21.4825%" y="607.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (63 samples, 0.05%)</title><rect x="21.2979%" y="581" width="0.0453%" height="15" fill="rgb(253,99,2)" fg:x="29652" fg:w="63"/><text x="21.5479%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (232 samples, 0.17%)</title><rect x="21.3431%" y="613" width="0.1666%" height="15" fill="rgb(220,168,23)" fg:x="29715" fg:w="232"/><text x="21.5931%" y="623.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (232 samples, 0.17%)</title><rect x="21.3431%" y="597" width="0.1666%" height="15" fill="rgb(242,38,24)" fg:x="29715" fg:w="232"/><text x="21.5931%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (32 samples, 0.02%)</title><rect x="21.5098%" y="597" width="0.0230%" height="15" fill="rgb(225,182,9)" fg:x="29947" fg:w="32"/><text x="21.7598%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (32 samples, 0.02%)</title><rect x="21.5098%" y="581" width="0.0230%" height="15" fill="rgb(243,178,37)" fg:x="29947" fg:w="32"/><text x="21.7598%" y="591.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (864 samples, 0.62%)</title><rect x="20.9294%" y="645" width="0.6206%" height="15" fill="rgb(232,139,19)" fg:x="29139" fg:w="864"/><text x="21.1794%" y="655.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (819 samples, 0.59%)</title><rect x="20.9618%" y="629" width="0.5883%" height="15" fill="rgb(225,201,24)" fg:x="29184" fg:w="819"/><text x="21.2118%" y="639.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (56 samples, 0.04%)</title><rect x="21.5098%" y="613" width="0.0402%" height="15" fill="rgb(221,47,46)" fg:x="29947" fg:w="56"/><text x="21.7598%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (24 samples, 0.02%)</title><rect x="21.5328%" y="597" width="0.0172%" height="15" fill="rgb(249,23,13)" fg:x="29979" fg:w="24"/><text x="21.7828%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (5,121 samples, 3.68%)</title><rect x="17.9120%" y="805" width="3.6782%" height="15" fill="rgb(219,9,5)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="815.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (5,121 samples, 3.68%)</title><rect x="17.9120%" y="789" width="3.6782%" height="15" fill="rgb(254,171,16)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="799.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5,121 samples, 3.68%)</title><rect x="17.9120%" y="773" width="3.6782%" height="15" fill="rgb(230,171,20)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="783.50">core..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,121 samples, 3.68%)</title><rect x="17.9120%" y="757" width="3.6782%" height="15" fill="rgb(210,71,41)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="767.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (5,121 samples, 3.68%)</title><rect x="17.9120%" y="741" width="3.6782%" height="15" fill="rgb(206,173,20)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="751.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5,121 samples, 3.68%)</title><rect x="17.9120%" y="725" width="3.6782%" height="15" fill="rgb(233,88,34)" fg:x="24938" fg:w="5121"/><text x="18.1620%" y="735.50">core..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (4,994 samples, 3.59%)</title><rect x="18.0032%" y="709" width="3.5870%" height="15" fill="rgb(223,209,46)" fg:x="25065" fg:w="4994"/><text x="18.2532%" y="719.50">core..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4,994 samples, 3.59%)</title><rect x="18.0032%" y="693" width="3.5870%" height="15" fill="rgb(250,43,18)" fg:x="25065" fg:w="4994"/><text x="18.2532%" y="703.50">core..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (4,962 samples, 3.56%)</title><rect x="18.0262%" y="677" width="3.5640%" height="15" fill="rgb(208,13,10)" fg:x="25097" fg:w="4962"/><text x="18.2762%" y="687.50">toki..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (4,917 samples, 3.53%)</title><rect x="18.0585%" y="661" width="3.5317%" height="15" fill="rgb(212,200,36)" fg:x="25142" fg:w="4917"/><text x="18.3085%" y="671.50">tok..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (49 samples, 0.04%)</title><rect x="21.5550%" y="645" width="0.0352%" height="15" fill="rgb(225,90,30)" fg:x="30010" fg:w="49"/><text x="21.8050%" y="655.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (5,148 samples, 3.70%)</title><rect x="17.9063%" y="821" width="3.6976%" height="15" fill="rgb(236,182,39)" fg:x="24930" fg:w="5148"/><text x="18.1563%" y="831.50">toki..</text></g><g><title>tokio::runtime::time::next_wake_time (15 samples, 0.01%)</title><rect x="21.5931%" y="805" width="0.0108%" height="15" fill="rgb(212,144,35)" fg:x="30063" fg:w="15"/><text x="21.8431%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (15 samples, 0.01%)</title><rect x="21.5931%" y="789" width="0.0108%" height="15" fill="rgb(228,63,44)" fg:x="30063" fg:w="15"/><text x="21.8431%" y="799.50"></text></g><g><title>core::time::Duration::as_millis (34 samples, 0.02%)</title><rect x="21.6147%" y="789" width="0.0244%" height="15" fill="rgb(228,109,6)" fg:x="30093" fg:w="34"/><text x="21.8647%" y="799.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (99 samples, 0.07%)</title><rect x="21.6046%" y="805" width="0.0711%" height="15" fill="rgb(238,117,24)" fg:x="30079" fg:w="99"/><text x="21.8546%" y="815.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (51 samples, 0.04%)</title><rect x="21.6391%" y="789" width="0.0366%" height="15" fill="rgb(242,26,26)" fg:x="30127" fg:w="51"/><text x="21.8891%" y="799.50"></text></g><g><title>std::time::Instant::duration_since (51 samples, 0.04%)</title><rect x="21.6391%" y="773" width="0.0366%" height="15" fill="rgb(221,92,48)" fg:x="30127" fg:w="51"/><text x="21.8891%" y="783.50"></text></g><g><title>std::time::Instant::checked_duration_since (49 samples, 0.04%)</title><rect x="21.6405%" y="757" width="0.0352%" height="15" fill="rgb(209,209,32)" fg:x="30129" fg:w="49"/><text x="21.8905%" y="767.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (49 samples, 0.04%)</title><rect x="21.6405%" y="741" width="0.0352%" height="15" fill="rgb(221,70,22)" fg:x="30129" fg:w="49"/><text x="21.8905%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (39 samples, 0.03%)</title><rect x="21.6477%" y="725" width="0.0280%" height="15" fill="rgb(248,145,5)" fg:x="30139" fg:w="39"/><text x="21.8977%" y="735.50"></text></g><g><title>clock_gettime (586 samples, 0.42%)</title><rect x="21.6886%" y="757" width="0.4209%" height="15" fill="rgb(226,116,26)" fg:x="30196" fg:w="586"/><text x="21.9386%" y="767.50"></text></g><g><title>__vdso_clock_gettime (366 samples, 0.26%)</title><rect x="21.8467%" y="741" width="0.2629%" height="15" fill="rgb(244,5,17)" fg:x="30416" fg:w="366"/><text x="22.0967%" y="751.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (610 samples, 0.44%)</title><rect x="21.6757%" y="773" width="0.4381%" height="15" fill="rgb(252,159,33)" fg:x="30178" fg:w="610"/><text x="21.9257%" y="783.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (5,958 samples, 4.28%)</title><rect x="17.8366%" y="837" width="4.2794%" height="15" fill="rgb(206,71,0)" fg:x="24833" fg:w="5958"/><text x="18.0866%" y="847.50">tokio..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (712 samples, 0.51%)</title><rect x="21.6046%" y="821" width="0.5114%" height="15" fill="rgb(233,118,54)" fg:x="30079" fg:w="712"/><text x="21.8546%" y="831.50"></text></g><g><title>tokio::time::clock::Clock::now (613 samples, 0.44%)</title><rect x="21.6757%" y="805" width="0.4403%" height="15" fill="rgb(234,83,48)" fg:x="30178" fg:w="613"/><text x="21.9257%" y="815.50"></text></g><g><title>tokio::time::clock::now (613 samples, 0.44%)</title><rect x="21.6757%" y="789" width="0.4403%" height="15" fill="rgb(228,3,54)" fg:x="30178" fg:w="613"/><text x="21.9257%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (18,077 samples, 12.98%)</title><rect x="9.1413%" y="869" width="12.9840%" height="15" fill="rgb(226,155,13)" fg:x="12727" fg:w="18077"/><text x="9.3913%" y="879.50">tokio::runtime::sche..</text></g><g><title>tokio::runtime::time::Driver::park_internal (17,389 samples, 12.49%)</title><rect x="9.6355%" y="853" width="12.4899%" height="15" fill="rgb(241,28,37)" fg:x="13415" fg:w="17389"/><text x="9.8855%" y="863.50">tokio::runtime::tim..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (20,501 samples, 14.73%)</title><rect x="7.7781%" y="901" width="14.7251%" height="15" fill="rgb(233,93,10)" fg:x="10829" fg:w="20501"/><text x="8.0281%" y="911.50">tokio::runtime::schedu..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (20,501 samples, 14.73%)</title><rect x="7.7781%" y="885" width="14.7251%" height="15" fill="rgb(225,113,19)" fg:x="10829" fg:w="20501"/><text x="8.0281%" y="895.50">tokio::runtime::schedu..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (526 samples, 0.38%)</title><rect x="22.1253%" y="869" width="0.3778%" height="15" fill="rgb(241,2,18)" fg:x="30804" fg:w="526"/><text x="22.3753%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (526 samples, 0.38%)</title><rect x="22.1253%" y="853" width="0.3778%" height="15" fill="rgb(228,207,21)" fg:x="30804" fg:w="526"/><text x="22.3753%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (526 samples, 0.38%)</title><rect x="22.1253%" y="837" width="0.3778%" height="15" fill="rgb(213,211,35)" fg:x="30804" fg:w="526"/><text x="22.3753%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (25 samples, 0.02%)</title><rect x="22.5218%" y="869" width="0.0180%" height="15" fill="rgb(209,83,10)" fg:x="31356" fg:w="25"/><text x="22.7718%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (25 samples, 0.02%)</title><rect x="22.5218%" y="853" width="0.0180%" height="15" fill="rgb(209,164,1)" fg:x="31356" fg:w="25"/><text x="22.7718%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (55 samples, 0.04%)</title><rect x="22.5031%" y="901" width="0.0395%" height="15" fill="rgb(213,184,43)" fg:x="31330" fg:w="55"/><text x="22.7531%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (55 samples, 0.04%)</title><rect x="22.5031%" y="885" width="0.0395%" height="15" fill="rgb(231,61,34)" fg:x="31330" fg:w="55"/><text x="22.7531%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (22 samples, 0.02%)</title><rect x="22.5434%" y="869" width="0.0158%" height="15" fill="rgb(235,75,3)" fg:x="31386" fg:w="22"/><text x="22.7934%" y="879.50"></text></g><g><title>core::ptr::read (18 samples, 0.01%)</title><rect x="22.5462%" y="853" width="0.0129%" height="15" fill="rgb(220,106,47)" fg:x="31390" fg:w="18"/><text x="22.7962%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (38 samples, 0.03%)</title><rect x="22.5692%" y="853" width="0.0273%" height="15" fill="rgb(210,196,33)" fg:x="31422" fg:w="38"/><text x="22.8192%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (38 samples, 0.03%)</title><rect x="22.5692%" y="837" width="0.0273%" height="15" fill="rgb(229,154,42)" fg:x="31422" fg:w="38"/><text x="22.8192%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (42 samples, 0.03%)</title><rect x="22.5678%" y="869" width="0.0302%" height="15" fill="rgb(228,114,26)" fg:x="31420" fg:w="42"/><text x="22.8178%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (81 samples, 0.06%)</title><rect x="22.5426%" y="901" width="0.0582%" height="15" fill="rgb(208,144,1)" fg:x="31385" fg:w="81"/><text x="22.7926%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (80 samples, 0.06%)</title><rect x="22.5434%" y="885" width="0.0575%" height="15" fill="rgb(239,112,37)" fg:x="31386" fg:w="80"/><text x="22.7934%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (21,192 samples, 15.22%)</title><rect x="7.5051%" y="917" width="15.2214%" height="15" fill="rgb(210,96,50)" fg:x="10449" fg:w="21192"/><text x="7.7551%" y="927.50">tokio::runtime::schedul..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (175 samples, 0.13%)</title><rect x="22.6008%" y="901" width="0.1257%" height="15" fill="rgb(222,178,2)" fg:x="31466" fg:w="175"/><text x="22.8508%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::len (75 samples, 0.05%)</title><rect x="22.6727%" y="885" width="0.0539%" height="15" fill="rgb(226,74,18)" fg:x="31566" fg:w="75"/><text x="22.9227%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (70 samples, 0.05%)</title><rect x="22.6762%" y="869" width="0.0503%" height="15" fill="rgb(225,67,54)" fg:x="31571" fg:w="70"/><text x="22.9262%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (64 samples, 0.05%)</title><rect x="22.6806%" y="853" width="0.0460%" height="15" fill="rgb(251,92,32)" fg:x="31577" fg:w="64"/><text x="22.9306%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (64 samples, 0.05%)</title><rect x="22.6806%" y="837" width="0.0460%" height="15" fill="rgb(228,149,22)" fg:x="31577" fg:w="64"/><text x="22.9306%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (298 samples, 0.21%)</title><rect x="23.1596%" y="901" width="0.2140%" height="15" fill="rgb(243,54,13)" fg:x="32244" fg:w="298"/><text x="23.4096%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (298 samples, 0.21%)</title><rect x="23.1596%" y="885" width="0.2140%" height="15" fill="rgb(243,180,28)" fg:x="32244" fg:w="298"/><text x="23.4096%" y="895.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (298 samples, 0.21%)</title><rect x="23.1596%" y="869" width="0.2140%" height="15" fill="rgb(208,167,24)" fg:x="32244" fg:w="298"/><text x="23.4096%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (298 samples, 0.21%)</title><rect x="23.1596%" y="853" width="0.2140%" height="15" fill="rgb(245,73,45)" fg:x="32244" fg:w="298"/><text x="23.4096%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (293 samples, 0.21%)</title><rect x="23.1632%" y="837" width="0.2105%" height="15" fill="rgb(237,203,48)" fg:x="32249" fg:w="293"/><text x="23.4132%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (293 samples, 0.21%)</title><rect x="23.1632%" y="821" width="0.2105%" height="15" fill="rgb(211,197,16)" fg:x="32249" fg:w="293"/><text x="23.4132%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (177 samples, 0.13%)</title><rect x="23.3744%" y="853" width="0.1271%" height="15" fill="rgb(243,99,51)" fg:x="32543" fg:w="177"/><text x="23.6244%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (177 samples, 0.13%)</title><rect x="23.3744%" y="837" width="0.1271%" height="15" fill="rgb(215,123,29)" fg:x="32543" fg:w="177"/><text x="23.6244%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (206 samples, 0.15%)</title><rect x="23.3737%" y="901" width="0.1480%" height="15" fill="rgb(239,186,37)" fg:x="32542" fg:w="206"/><text x="23.6237%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (206 samples, 0.15%)</title><rect x="23.3737%" y="885" width="0.1480%" height="15" fill="rgb(252,136,39)" fg:x="32542" fg:w="206"/><text x="23.6237%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (206 samples, 0.15%)</title><rect x="23.3737%" y="869" width="0.1480%" height="15" fill="rgb(223,213,32)" fg:x="32542" fg:w="206"/><text x="23.6237%" y="879.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (28 samples, 0.02%)</title><rect x="23.5015%" y="853" width="0.0201%" height="15" fill="rgb(233,115,5)" fg:x="32720" fg:w="28"/><text x="23.7515%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (1,130 samples, 0.81%)</title><rect x="22.7265%" y="917" width="0.8116%" height="15" fill="rgb(207,226,44)" fg:x="31641" fg:w="1130"/><text x="22.9765%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (23 samples, 0.02%)</title><rect x="23.5216%" y="901" width="0.0165%" height="15" fill="rgb(208,126,0)" fg:x="32748" fg:w="23"/><text x="23.7716%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (81 samples, 0.06%)</title><rect x="23.5547%" y="885" width="0.0582%" height="15" fill="rgb(244,66,21)" fg:x="32794" fg:w="81"/><text x="23.8047%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (81 samples, 0.06%)</title><rect x="23.5547%" y="869" width="0.0582%" height="15" fill="rgb(222,97,12)" fg:x="32794" fg:w="81"/><text x="23.8047%" y="879.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.06%)</title><rect x="23.5547%" y="853" width="0.0582%" height="15" fill="rgb(219,213,19)" fg:x="32794" fg:w="81"/><text x="23.8047%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (81 samples, 0.06%)</title><rect x="23.5547%" y="837" width="0.0582%" height="15" fill="rgb(252,169,30)" fg:x="32794" fg:w="81"/><text x="23.8047%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (79 samples, 0.06%)</title><rect x="23.5561%" y="821" width="0.0567%" height="15" fill="rgb(206,32,51)" fg:x="32796" fg:w="79"/><text x="23.8061%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (79 samples, 0.06%)</title><rect x="23.5561%" y="805" width="0.0567%" height="15" fill="rgb(250,172,42)" fg:x="32796" fg:w="79"/><text x="23.8061%" y="815.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (194 samples, 0.14%)</title><rect x="23.6416%" y="837" width="0.1393%" height="15" fill="rgb(209,34,43)" fg:x="32915" fg:w="194"/><text x="23.8916%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (194 samples, 0.14%)</title><rect x="23.6416%" y="821" width="0.1393%" height="15" fill="rgb(223,11,35)" fg:x="32915" fg:w="194"/><text x="23.8916%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (248 samples, 0.18%)</title><rect x="23.6129%" y="885" width="0.1781%" height="15" fill="rgb(251,219,26)" fg:x="32875" fg:w="248"/><text x="23.8629%" y="895.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (248 samples, 0.18%)</title><rect x="23.6129%" y="869" width="0.1781%" height="15" fill="rgb(231,119,3)" fg:x="32875" fg:w="248"/><text x="23.8629%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (248 samples, 0.18%)</title><rect x="23.6129%" y="853" width="0.1781%" height="15" fill="rgb(216,97,11)" fg:x="32875" fg:w="248"/><text x="23.8629%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="23.7809%" y="837" width="0.0101%" height="15" fill="rgb(223,59,9)" fg:x="33109" fg:w="14"/><text x="24.0309%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (60 samples, 0.04%)</title><rect x="23.7917%" y="837" width="0.0431%" height="15" fill="rgb(233,93,31)" fg:x="33124" fg:w="60"/><text x="24.0417%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (60 samples, 0.04%)</title><rect x="23.7917%" y="821" width="0.0431%" height="15" fill="rgb(239,81,33)" fg:x="33124" fg:w="60"/><text x="24.0417%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (399 samples, 0.29%)</title><rect x="23.5511%" y="901" width="0.2866%" height="15" fill="rgb(213,120,34)" fg:x="32789" fg:w="399"/><text x="23.8011%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (65 samples, 0.05%)</title><rect x="23.7910%" y="885" width="0.0467%" height="15" fill="rgb(243,49,53)" fg:x="33123" fg:w="65"/><text x="24.0410%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (65 samples, 0.05%)</title><rect x="23.7910%" y="869" width="0.0467%" height="15" fill="rgb(247,216,33)" fg:x="33123" fg:w="65"/><text x="24.0410%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (65 samples, 0.05%)</title><rect x="23.7910%" y="853" width="0.0467%" height="15" fill="rgb(226,26,14)" fg:x="33123" fg:w="65"/><text x="24.0410%" y="863.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (17 samples, 0.01%)</title><rect x="23.9059%" y="885" width="0.0122%" height="15" fill="rgb(215,49,53)" fg:x="33283" fg:w="17"/><text x="24.1559%" y="895.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (17 samples, 0.01%)</title><rect x="23.9059%" y="869" width="0.0122%" height="15" fill="rgb(245,162,40)" fg:x="33283" fg:w="17"/><text x="24.1559%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (29 samples, 0.02%)</title><rect x="23.9181%" y="885" width="0.0208%" height="15" fill="rgb(229,68,17)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (29 samples, 0.02%)</title><rect x="23.9181%" y="869" width="0.0208%" height="15" fill="rgb(213,182,10)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="879.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.02%)</title><rect x="23.9181%" y="853" width="0.0208%" height="15" fill="rgb(245,125,30)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (29 samples, 0.02%)</title><rect x="23.9181%" y="837" width="0.0208%" height="15" fill="rgb(232,202,2)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (29 samples, 0.02%)</title><rect x="23.9181%" y="821" width="0.0208%" height="15" fill="rgb(237,140,51)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.02%)</title><rect x="23.9181%" y="805" width="0.0208%" height="15" fill="rgb(236,157,25)" fg:x="33300" fg:w="29"/><text x="24.1681%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (25 samples, 0.02%)</title><rect x="23.9389%" y="837" width="0.0180%" height="15" fill="rgb(219,209,0)" fg:x="33329" fg:w="25"/><text x="24.1889%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="23.9389%" y="821" width="0.0180%" height="15" fill="rgb(240,116,54)" fg:x="33329" fg:w="25"/><text x="24.1889%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (26 samples, 0.02%)</title><rect x="23.9389%" y="885" width="0.0187%" height="15" fill="rgb(216,10,36)" fg:x="33329" fg:w="26"/><text x="24.1889%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.02%)</title><rect x="23.9389%" y="869" width="0.0187%" height="15" fill="rgb(222,72,44)" fg:x="33329" fg:w="26"/><text x="24.1889%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.02%)</title><rect x="23.9389%" y="853" width="0.0187%" height="15" fill="rgb(232,159,9)" fg:x="33329" fg:w="26"/><text x="24.1889%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (216 samples, 0.16%)</title><rect x="23.8377%" y="901" width="0.1551%" height="15" fill="rgb(210,39,32)" fg:x="33188" fg:w="216"/><text x="24.0877%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (49 samples, 0.04%)</title><rect x="23.9576%" y="885" width="0.0352%" height="15" fill="rgb(216,194,45)" fg:x="33355" fg:w="49"/><text x="24.2076%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.04%)</title><rect x="23.9576%" y="869" width="0.0352%" height="15" fill="rgb(218,18,35)" fg:x="33355" fg:w="49"/><text x="24.2076%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (49 samples, 0.04%)</title><rect x="23.9576%" y="853" width="0.0352%" height="15" fill="rgb(207,83,51)" fg:x="33355" fg:w="49"/><text x="24.2076%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (643 samples, 0.46%)</title><rect x="23.5382%" y="917" width="0.4618%" height="15" fill="rgb(225,63,43)" fg:x="32771" fg:w="643"/><text x="23.7882%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68 samples, 0.05%)</title><rect x="24.0230%" y="885" width="0.0488%" height="15" fill="rgb(207,57,36)" fg:x="33446" fg:w="68"/><text x="24.2730%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (372 samples, 0.27%)</title><rect x="24.0718%" y="885" width="0.2672%" height="15" fill="rgb(216,99,33)" fg:x="33514" fg:w="372"/><text x="24.3218%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (372 samples, 0.27%)</title><rect x="24.0718%" y="869" width="0.2672%" height="15" fill="rgb(225,42,16)" fg:x="33514" fg:w="372"/><text x="24.3218%" y="879.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (372 samples, 0.27%)</title><rect x="24.0718%" y="853" width="0.2672%" height="15" fill="rgb(220,201,45)" fg:x="33514" fg:w="372"/><text x="24.3218%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (372 samples, 0.27%)</title><rect x="24.0718%" y="837" width="0.2672%" height="15" fill="rgb(225,33,4)" fg:x="33514" fg:w="372"/><text x="24.3218%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (371 samples, 0.27%)</title><rect x="24.0725%" y="821" width="0.2665%" height="15" fill="rgb(224,33,50)" fg:x="33515" fg:w="371"/><text x="24.3225%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (371 samples, 0.27%)</title><rect x="24.0725%" y="805" width="0.2665%" height="15" fill="rgb(246,198,51)" fg:x="33515" fg:w="371"/><text x="24.3225%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (80 samples, 0.06%)</title><rect x="24.3405%" y="837" width="0.0575%" height="15" fill="rgb(205,22,4)" fg:x="33888" fg:w="80"/><text x="24.5905%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (80 samples, 0.06%)</title><rect x="24.3405%" y="821" width="0.0575%" height="15" fill="rgb(206,3,8)" fg:x="33888" fg:w="80"/><text x="24.5905%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (20 samples, 0.01%)</title><rect x="24.3986%" y="821" width="0.0144%" height="15" fill="rgb(251,23,15)" fg:x="33969" fg:w="20"/><text x="24.6486%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.01%)</title><rect x="24.3986%" y="805" width="0.0144%" height="15" fill="rgb(252,88,28)" fg:x="33969" fg:w="20"/><text x="24.6486%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (109 samples, 0.08%)</title><rect x="24.3390%" y="885" width="0.0783%" height="15" fill="rgb(212,127,14)" fg:x="33886" fg:w="109"/><text x="24.5890%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (109 samples, 0.08%)</title><rect x="24.3390%" y="869" width="0.0783%" height="15" fill="rgb(247,145,37)" fg:x="33886" fg:w="109"/><text x="24.5890%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (109 samples, 0.08%)</title><rect x="24.3390%" y="853" width="0.0783%" height="15" fill="rgb(209,117,53)" fg:x="33886" fg:w="109"/><text x="24.5890%" y="863.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (27 samples, 0.02%)</title><rect x="24.3979%" y="837" width="0.0194%" height="15" fill="rgb(212,90,42)" fg:x="33968" fg:w="27"/><text x="24.6479%" y="847.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (607 samples, 0.44%)</title><rect x="24.0230%" y="901" width="0.4360%" height="15" fill="rgb(218,164,37)" fg:x="33446" fg:w="607"/><text x="24.2730%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (58 samples, 0.04%)</title><rect x="24.4173%" y="885" width="0.0417%" height="15" fill="rgb(246,65,34)" fg:x="33995" fg:w="58"/><text x="24.6673%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (53 samples, 0.04%)</title><rect x="24.4209%" y="869" width="0.0381%" height="15" fill="rgb(231,100,33)" fg:x="34000" fg:w="53"/><text x="24.6709%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.04%)</title><rect x="24.4209%" y="853" width="0.0381%" height="15" fill="rgb(228,126,14)" fg:x="34000" fg:w="53"/><text x="24.6709%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="24.4719%" y="885" width="0.0101%" height="15" fill="rgb(215,173,21)" fg:x="34071" fg:w="14"/><text x="24.7219%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19 samples, 0.01%)</title><rect x="24.4884%" y="837" width="0.0136%" height="15" fill="rgb(210,6,40)" fg:x="34094" fg:w="19"/><text x="24.7384%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.01%)</title><rect x="24.4884%" y="821" width="0.0136%" height="15" fill="rgb(212,48,18)" fg:x="34094" fg:w="19"/><text x="24.7384%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (41 samples, 0.03%)</title><rect x="24.4841%" y="885" width="0.0294%" height="15" fill="rgb(230,214,11)" fg:x="34088" fg:w="41"/><text x="24.7341%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (35 samples, 0.03%)</title><rect x="24.4884%" y="869" width="0.0251%" height="15" fill="rgb(254,105,39)" fg:x="34094" fg:w="35"/><text x="24.7384%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (35 samples, 0.03%)</title><rect x="24.4884%" y="853" width="0.0251%" height="15" fill="rgb(245,158,5)" fg:x="34094" fg:w="35"/><text x="24.7384%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (16 samples, 0.01%)</title><rect x="24.5021%" y="837" width="0.0115%" height="15" fill="rgb(249,208,11)" fg:x="34113" fg:w="16"/><text x="24.7521%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="24.5021%" y="821" width="0.0115%" height="15" fill="rgb(210,39,28)" fg:x="34113" fg:w="16"/><text x="24.7521%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (78 samples, 0.06%)</title><rect x="24.4590%" y="901" width="0.0560%" height="15" fill="rgb(211,56,53)" fg:x="34053" fg:w="78"/><text x="24.7090%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (24,038 samples, 17.27%)</title><rect x="7.2595%" y="933" width="17.2656%" height="15" fill="rgb(226,201,30)" fg:x="10107" fg:w="24038"/><text x="7.5095%" y="943.50">tokio::runtime::scheduler::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (731 samples, 0.53%)</title><rect x="24.0000%" y="917" width="0.5250%" height="15" fill="rgb(239,101,34)" fg:x="33414" fg:w="731"/><text x="24.2500%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::has_tasks (14 samples, 0.01%)</title><rect x="24.5150%" y="901" width="0.0101%" height="15" fill="rgb(226,209,5)" fg:x="34131" fg:w="14"/><text x="24.7650%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (14 samples, 0.01%)</title><rect x="24.5401%" y="885" width="0.0101%" height="15" fill="rgb(250,105,47)" fg:x="34166" fg:w="14"/><text x="24.7901%" y="895.50"></text></g><g><title>core::ops::function::FnOnce::call_once (20 samples, 0.01%)</title><rect x="24.5502%" y="853" width="0.0144%" height="15" fill="rgb(230,72,3)" fg:x="34180" fg:w="20"/><text x="24.8002%" y="863.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (20 samples, 0.01%)</title><rect x="24.5502%" y="837" width="0.0144%" height="15" fill="rgb(232,218,39)" fg:x="34180" fg:w="20"/><text x="24.8002%" y="847.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (20 samples, 0.01%)</title><rect x="24.5502%" y="821" width="0.0144%" height="15" fill="rgb(248,166,6)" fg:x="34180" fg:w="20"/><text x="24.8002%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="24.5545%" y="805" width="0.0101%" height="15" fill="rgb(247,89,20)" fg:x="34186" fg:w="14"/><text x="24.8045%" y="815.50"></text></g><g><title>tokio::runtime::context::budget (36 samples, 0.03%)</title><rect x="24.5502%" y="885" width="0.0259%" height="15" fill="rgb(248,130,54)" fg:x="34180" fg:w="36"/><text x="24.8002%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="24.5502%" y="869" width="0.0259%" height="15" fill="rgb(234,196,4)" fg:x="34180" fg:w="36"/><text x="24.8002%" y="879.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (16 samples, 0.01%)</title><rect x="24.5646%" y="853" width="0.0115%" height="15" fill="rgb(250,143,31)" fg:x="34200" fg:w="16"/><text x="24.8146%" y="863.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (16 samples, 0.01%)</title><rect x="24.5646%" y="837" width="0.0115%" height="15" fill="rgb(211,110,34)" fg:x="34200" fg:w="16"/><text x="24.8146%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (101 samples, 0.07%)</title><rect x="24.5847%" y="869" width="0.0725%" height="15" fill="rgb(215,124,48)" fg:x="34228" fg:w="101"/><text x="24.8347%" y="879.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (101 samples, 0.07%)</title><rect x="24.5847%" y="853" width="0.0725%" height="15" fill="rgb(216,46,13)" fg:x="34228" fg:w="101"/><text x="24.8347%" y="863.50"></text></g><g><title>core::cell::BorrowRefMut::new (101 samples, 0.07%)</title><rect x="24.5847%" y="837" width="0.0725%" height="15" fill="rgb(205,184,25)" fg:x="34228" fg:w="101"/><text x="24.8347%" y="847.50"></text></g><g><title>core::ptr::read (245 samples, 0.18%)</title><rect x="24.6572%" y="837" width="0.1760%" height="15" fill="rgb(228,1,10)" fg:x="34329" fg:w="245"/><text x="24.9072%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (248 samples, 0.18%)</title><rect x="24.6572%" y="869" width="0.1781%" height="15" fill="rgb(213,116,27)" fg:x="34329" fg:w="248"/><text x="24.9072%" y="879.50"></text></g><g><title>core::mem::replace (248 samples, 0.18%)</title><rect x="24.6572%" y="853" width="0.1781%" height="15" fill="rgb(241,95,50)" fg:x="34329" fg:w="248"/><text x="24.9072%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (14 samples, 0.01%)</title><rect x="24.8382%" y="821" width="0.0101%" height="15" fill="rgb(238,48,32)" fg:x="34581" fg:w="14"/><text x="25.0882%" y="831.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (14 samples, 0.01%)</title><rect x="24.8382%" y="805" width="0.0101%" height="15" fill="rgb(235,113,49)" fg:x="34581" fg:w="14"/><text x="25.0882%" y="815.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="24.8382%" y="789" width="0.0101%" height="15" fill="rgb(205,127,43)" fg:x="34581" fg:w="14"/><text x="25.0882%" y="799.50"></text></g><g><title>tokio::runtime::coop::has_budget_remaining (38 samples, 0.03%)</title><rect x="24.8368%" y="869" width="0.0273%" height="15" fill="rgb(250,162,2)" fg:x="34579" fg:w="38"/><text x="25.0868%" y="879.50"></text></g><g><title>tokio::runtime::context::budget (36 samples, 0.03%)</title><rect x="24.8382%" y="853" width="0.0259%" height="15" fill="rgb(220,13,41)" fg:x="34581" fg:w="36"/><text x="25.0882%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.03%)</title><rect x="24.8382%" y="837" width="0.0259%" height="15" fill="rgb(249,221,25)" fg:x="34581" fg:w="36"/><text x="25.0882%" y="847.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (22 samples, 0.02%)</title><rect x="24.8483%" y="821" width="0.0158%" height="15" fill="rgb(215,208,19)" fg:x="34595" fg:w="22"/><text x="25.0983%" y="831.50"></text></g><g><title>tokio::runtime::coop::has_budget_remaining::_{{closure}} (22 samples, 0.02%)</title><rect x="24.8483%" y="805" width="0.0158%" height="15" fill="rgb(236,175,2)" fg:x="34595" fg:w="22"/><text x="25.0983%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="24.8483%" y="789" width="0.0158%" height="15" fill="rgb(241,52,2)" fg:x="34595" fg:w="22"/><text x="25.0983%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (111 samples, 0.08%)</title><rect x="24.8641%" y="869" width="0.0797%" height="15" fill="rgb(248,140,14)" fg:x="34617" fg:w="111"/><text x="25.1141%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.02%)</title><rect x="24.9194%" y="853" width="0.0244%" height="15" fill="rgb(253,22,42)" fg:x="34694" fg:w="34"/><text x="25.1694%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (34 samples, 0.02%)</title><rect x="24.9194%" y="837" width="0.0244%" height="15" fill="rgb(234,61,47)" fg:x="34694" fg:w="34"/><text x="25.1694%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (34 samples, 0.02%)</title><rect x="24.9194%" y="821" width="0.0244%" height="15" fill="rgb(208,226,15)" fg:x="34694" fg:w="34"/><text x="25.1694%" y="831.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (23 samples, 0.02%)</title><rect x="25.1758%" y="709" width="0.0165%" height="15" fill="rgb(217,221,4)" fg:x="35051" fg:w="23"/><text x="25.4258%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (23 samples, 0.02%)</title><rect x="25.1758%" y="693" width="0.0165%" height="15" fill="rgb(212,174,34)" fg:x="35051" fg:w="23"/><text x="25.4258%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (22 samples, 0.02%)</title><rect x="25.1973%" y="709" width="0.0158%" height="15" fill="rgb(253,83,4)" fg:x="35081" fg:w="22"/><text x="25.4473%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (22 samples, 0.02%)</title><rect x="25.1973%" y="693" width="0.0158%" height="15" fill="rgb(250,195,49)" fg:x="35081" fg:w="22"/><text x="25.4473%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (15 samples, 0.01%)</title><rect x="25.2131%" y="709" width="0.0108%" height="15" fill="rgb(241,192,25)" fg:x="35103" fg:w="15"/><text x="25.4631%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (112 samples, 0.08%)</title><rect x="25.1679%" y="805" width="0.0804%" height="15" fill="rgb(208,124,10)" fg:x="35040" fg:w="112"/><text x="25.4179%" y="815.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (111 samples, 0.08%)</title><rect x="25.1686%" y="789" width="0.0797%" height="15" fill="rgb(222,33,0)" fg:x="35041" fg:w="111"/><text x="25.4186%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (111 samples, 0.08%)</title><rect x="25.1686%" y="773" width="0.0797%" height="15" fill="rgb(234,209,28)" fg:x="35041" fg:w="111"/><text x="25.4186%" y="783.50"></text></g><g><title>tokio::runtime::context::with_scheduler (111 samples, 0.08%)</title><rect x="25.1686%" y="757" width="0.0797%" height="15" fill="rgb(224,11,23)" fg:x="35041" fg:w="111"/><text x="25.4186%" y="767.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (109 samples, 0.08%)</title><rect x="25.1700%" y="741" width="0.0783%" height="15" fill="rgb(232,99,1)" fg:x="35043" fg:w="109"/><text x="25.4200%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (101 samples, 0.07%)</title><rect x="25.1758%" y="725" width="0.0725%" height="15" fill="rgb(237,95,45)" fg:x="35051" fg:w="101"/><text x="25.4258%" y="735.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (34 samples, 0.02%)</title><rect x="25.2239%" y="709" width="0.0244%" height="15" fill="rgb(208,109,11)" fg:x="35118" fg:w="34"/><text x="25.4739%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (29 samples, 0.02%)</title><rect x="25.2275%" y="693" width="0.0208%" height="15" fill="rgb(216,190,48)" fg:x="35123" fg:w="29"/><text x="25.4775%" y="703.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (26 samples, 0.02%)</title><rect x="25.2297%" y="677" width="0.0187%" height="15" fill="rgb(251,171,36)" fg:x="35126" fg:w="26"/><text x="25.4797%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.02%)</title><rect x="25.2297%" y="661" width="0.0187%" height="15" fill="rgb(230,62,22)" fg:x="35126" fg:w="26"/><text x="25.4797%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.02%)</title><rect x="25.2297%" y="645" width="0.0187%" height="15" fill="rgb(225,114,35)" fg:x="35126" fg:w="26"/><text x="25.4797%" y="655.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (45 samples, 0.03%)</title><rect x="25.4681%" y="453" width="0.0323%" height="15" fill="rgb(215,118,42)" fg:x="35458" fg:w="45"/><text x="25.7181%" y="463.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as futures_core::future::FusedFuture&gt;::is_terminated (23 samples, 0.02%)</title><rect x="25.4839%" y="437" width="0.0165%" height="15" fill="rgb(243,119,21)" fg:x="35480" fg:w="23"/><text x="25.7339%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (23 samples, 0.02%)</title><rect x="25.4839%" y="421" width="0.0165%" height="15" fill="rgb(252,177,53)" fg:x="35480" fg:w="23"/><text x="25.7339%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (23 samples, 0.02%)</title><rect x="25.4839%" y="405" width="0.0165%" height="15" fill="rgb(237,209,29)" fg:x="35480" fg:w="23"/><text x="25.7339%" y="415.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (70 samples, 0.05%)</title><rect x="26.9319%" y="325" width="0.0503%" height="15" fill="rgb(212,65,23)" fg:x="37496" fg:w="70"/><text x="27.1819%" y="335.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (70 samples, 0.05%)</title><rect x="26.9319%" y="309" width="0.0503%" height="15" fill="rgb(230,222,46)" fg:x="37496" fg:w="70"/><text x="27.1819%" y="319.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="26.9851%" y="325" width="0.0266%" height="15" fill="rgb(215,135,32)" fg:x="37570" fg:w="37"/><text x="27.2351%" y="335.50"></text></g><g><title>core::cmp::PartialEq::ne (77 samples, 0.06%)</title><rect x="27.0117%" y="325" width="0.0553%" height="15" fill="rgb(246,101,22)" fg:x="37607" fg:w="77"/><text x="27.2617%" y="335.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (77 samples, 0.06%)</title><rect x="27.0117%" y="309" width="0.0553%" height="15" fill="rgb(206,107,13)" fg:x="37607" fg:w="77"/><text x="27.2617%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.01%)</title><rect x="27.6100%" y="309" width="0.0115%" height="15" fill="rgb(250,100,44)" fg:x="38440" fg:w="16"/><text x="27.8600%" y="319.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (29 samples, 0.02%)</title><rect x="28.4453%" y="261" width="0.0208%" height="15" fill="rgb(231,147,38)" fg:x="39603" fg:w="29"/><text x="28.6953%" y="271.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (39 samples, 0.03%)</title><rect x="28.4396%" y="277" width="0.0280%" height="15" fill="rgb(229,8,40)" fg:x="39595" fg:w="39"/><text x="28.6896%" y="287.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (213 samples, 0.15%)</title><rect x="28.4726%" y="261" width="0.1530%" height="15" fill="rgb(221,135,30)" fg:x="39641" fg:w="213"/><text x="28.7226%" y="271.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (123 samples, 0.09%)</title><rect x="28.5373%" y="245" width="0.0883%" height="15" fill="rgb(249,193,18)" fg:x="39731" fg:w="123"/><text x="28.7873%" y="255.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (107 samples, 0.08%)</title><rect x="28.5488%" y="229" width="0.0769%" height="15" fill="rgb(209,133,39)" fg:x="39747" fg:w="107"/><text x="28.7988%" y="239.50"></text></g><g><title>[libc.so.6] (604 samples, 0.43%)</title><rect x="29.1442%" y="53" width="0.4338%" height="15" fill="rgb(232,100,14)" fg:x="40576" fg:w="604"/><text x="29.3942%" y="63.50"></text></g><g><title>recv (1,148 samples, 0.82%)</title><rect x="28.8059%" y="69" width="0.8246%" height="15" fill="rgb(224,185,1)" fg:x="40105" fg:w="1148"/><text x="29.0559%" y="79.50"></text></g><g><title>[unknown] (73 samples, 0.05%)</title><rect x="29.5780%" y="53" width="0.0524%" height="15" fill="rgb(223,139,8)" fg:x="41180" fg:w="73"/><text x="29.8280%" y="63.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (102 samples, 0.07%)</title><rect x="29.6319%" y="53" width="0.0733%" height="15" fill="rgb(232,213,38)" fg:x="41255" fg:w="102"/><text x="29.8819%" y="63.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (1,255 samples, 0.90%)</title><rect x="28.8045%" y="197" width="0.9014%" height="15" fill="rgb(207,94,22)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="207.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,255 samples, 0.90%)</title><rect x="28.8045%" y="181" width="0.9014%" height="15" fill="rgb(219,183,54)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="191.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1,255 samples, 0.90%)</title><rect x="28.8045%" y="165" width="0.9014%" height="15" fill="rgb(216,185,54)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="175.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (1,255 samples, 0.90%)</title><rect x="28.8045%" y="149" width="0.9014%" height="15" fill="rgb(254,217,39)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="159.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (1,255 samples, 0.90%)</title><rect x="28.8045%" y="133" width="0.9014%" height="15" fill="rgb(240,178,23)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="143.50"></text></g><g><title>std::sys_common::net::TcpStream::read (1,255 samples, 0.90%)</title><rect x="28.8045%" y="117" width="0.9014%" height="15" fill="rgb(218,11,47)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="127.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (1,255 samples, 0.90%)</title><rect x="28.8045%" y="101" width="0.9014%" height="15" fill="rgb(218,51,51)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="111.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (1,255 samples, 0.90%)</title><rect x="28.8045%" y="85" width="0.9014%" height="15" fill="rgb(238,126,27)" fg:x="40103" fg:w="1255"/><text x="29.0545%" y="95.50"></text></g><g><title>std::sys::pal::unix::cvt (105 samples, 0.08%)</title><rect x="29.6305%" y="69" width="0.0754%" height="15" fill="rgb(249,202,22)" fg:x="41253" fg:w="105"/><text x="29.8805%" y="79.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (62 samples, 0.04%)</title><rect x="29.7109%" y="197" width="0.0445%" height="15" fill="rgb(254,195,49)" fg:x="41365" fg:w="62"/><text x="29.9609%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.01%)</title><rect x="29.7619%" y="149" width="0.0115%" height="15" fill="rgb(208,123,14)" fg:x="41436" fg:w="16"/><text x="30.0119%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.01%)</title><rect x="29.7619%" y="133" width="0.0115%" height="15" fill="rgb(224,200,8)" fg:x="41436" fg:w="16"/><text x="30.0119%" y="143.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (35 samples, 0.03%)</title><rect x="29.7612%" y="197" width="0.0251%" height="15" fill="rgb(217,61,36)" fg:x="41435" fg:w="35"/><text x="30.0112%" y="207.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (35 samples, 0.03%)</title><rect x="29.7612%" y="181" width="0.0251%" height="15" fill="rgb(206,35,45)" fg:x="41435" fg:w="35"/><text x="30.0112%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (34 samples, 0.02%)</title><rect x="29.7619%" y="165" width="0.0244%" height="15" fill="rgb(217,65,33)" fg:x="41436" fg:w="34"/><text x="30.0119%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.01%)</title><rect x="29.7734%" y="149" width="0.0129%" height="15" fill="rgb(222,158,48)" fg:x="41452" fg:w="18"/><text x="30.0234%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.01%)</title><rect x="29.7734%" y="133" width="0.0129%" height="15" fill="rgb(254,2,54)" fg:x="41452" fg:w="18"/><text x="30.0234%" y="143.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="29.7978%" y="117" width="0.0108%" height="15" fill="rgb(250,143,38)" fg:x="41486" fg:w="15"/><text x="30.0478%" y="127.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (15 samples, 0.01%)</title><rect x="29.7978%" y="101" width="0.0108%" height="15" fill="rgb(248,25,0)" fg:x="41486" fg:w="15"/><text x="30.0478%" y="111.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="29.7978%" y="85" width="0.0108%" height="15" fill="rgb(206,152,27)" fg:x="41486" fg:w="15"/><text x="30.0478%" y="95.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (23 samples, 0.02%)</title><rect x="29.7978%" y="165" width="0.0165%" height="15" fill="rgb(240,77,30)" fg:x="41486" fg:w="23"/><text x="30.0478%" y="175.50"></text></g><g><title>tokio::runtime::context::budget (23 samples, 0.02%)</title><rect x="29.7978%" y="149" width="0.0165%" height="15" fill="rgb(231,5,3)" fg:x="41486" fg:w="23"/><text x="30.0478%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.02%)</title><rect x="29.7978%" y="133" width="0.0165%" height="15" fill="rgb(207,226,32)" fg:x="41486" fg:w="23"/><text x="30.0478%" y="143.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="29.8215%" y="149" width="0.0194%" height="15" fill="rgb(222,207,47)" fg:x="41519" fg:w="27"/><text x="30.0715%" y="159.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (27 samples, 0.02%)</title><rect x="29.8215%" y="133" width="0.0194%" height="15" fill="rgb(229,115,45)" fg:x="41519" fg:w="27"/><text x="30.0715%" y="143.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (15 samples, 0.01%)</title><rect x="29.8301%" y="117" width="0.0108%" height="15" fill="rgb(224,191,6)" fg:x="41531" fg:w="15"/><text x="30.0801%" y="127.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="29.8301%" y="101" width="0.0108%" height="15" fill="rgb(230,227,24)" fg:x="41531" fg:w="15"/><text x="30.0801%" y="111.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="29.8301%" y="85" width="0.0108%" height="15" fill="rgb(228,80,19)" fg:x="41531" fg:w="15"/><text x="30.0801%" y="95.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (323 samples, 0.23%)</title><rect x="29.8423%" y="149" width="0.2320%" height="15" fill="rgb(247,229,0)" fg:x="41548" fg:w="323"/><text x="30.0923%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_load (323 samples, 0.23%)</title><rect x="29.8423%" y="133" width="0.2320%" height="15" fill="rgb(237,194,15)" fg:x="41548" fg:w="323"/><text x="30.0923%" y="143.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (2,023 samples, 1.45%)</title><rect x="28.6342%" y="261" width="1.4530%" height="15" fill="rgb(219,203,20)" fg:x="39866" fg:w="2023"/><text x="28.8842%" y="271.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (2,020 samples, 1.45%)</title><rect x="28.6364%" y="245" width="1.4509%" height="15" fill="rgb(234,128,8)" fg:x="39869" fg:w="2020"/><text x="28.8864%" y="255.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,899 samples, 1.36%)</title><rect x="28.7233%" y="229" width="1.3640%" height="15" fill="rgb(248,202,8)" fg:x="39990" fg:w="1899"/><text x="28.9733%" y="239.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,840 samples, 1.32%)</title><rect x="28.7657%" y="213" width="1.3216%" height="15" fill="rgb(206,104,37)" fg:x="40049" fg:w="1840"/><text x="29.0157%" y="223.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (419 samples, 0.30%)</title><rect x="29.7863%" y="197" width="0.3010%" height="15" fill="rgb(223,8,27)" fg:x="41470" fg:w="419"/><text x="30.0363%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (414 samples, 0.30%)</title><rect x="29.7899%" y="181" width="0.2974%" height="15" fill="rgb(216,217,28)" fg:x="41475" fg:w="414"/><text x="30.0399%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (380 samples, 0.27%)</title><rect x="29.8143%" y="165" width="0.2729%" height="15" fill="rgb(249,199,1)" fg:x="41509" fg:w="380"/><text x="30.0643%" y="175.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.02%)</title><rect x="30.0873%" y="261" width="0.0151%" height="15" fill="rgb(240,85,17)" fg:x="41889" fg:w="21"/><text x="30.3373%" y="271.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (2,302 samples, 1.65%)</title><rect x="28.4690%" y="277" width="1.6534%" height="15" fill="rgb(206,108,45)" fg:x="39636" fg:w="2302"/><text x="28.7190%" y="287.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (23 samples, 0.02%)</title><rect x="30.1268%" y="261" width="0.0165%" height="15" fill="rgb(245,210,41)" fg:x="41944" fg:w="23"/><text x="30.3768%" y="271.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (22 samples, 0.02%)</title><rect x="30.1275%" y="245" width="0.0158%" height="15" fill="rgb(206,13,37)" fg:x="41945" fg:w="22"/><text x="30.3775%" y="255.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (31 samples, 0.02%)</title><rect x="30.1225%" y="277" width="0.0223%" height="15" fill="rgb(250,61,18)" fg:x="41938" fg:w="31"/><text x="30.3725%" y="287.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (38 samples, 0.03%)</title><rect x="30.1483%" y="261" width="0.0273%" height="15" fill="rgb(235,172,48)" fg:x="41974" fg:w="38"/><text x="30.3983%" y="271.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (38 samples, 0.03%)</title><rect x="30.1483%" y="245" width="0.0273%" height="15" fill="rgb(249,201,17)" fg:x="41974" fg:w="38"/><text x="30.3983%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.01%)</title><rect x="30.1634%" y="229" width="0.0122%" height="15" fill="rgb(219,208,6)" fg:x="41995" fg:w="17"/><text x="30.4134%" y="239.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (44 samples, 0.03%)</title><rect x="30.1447%" y="277" width="0.0316%" height="15" fill="rgb(248,31,23)" fg:x="41969" fg:w="44"/><text x="30.3947%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16,920 samples, 12.15%)</title><rect x="30.2395%" y="197" width="12.1530%" height="15" fill="rgb(245,15,42)" fg:x="42101" fg:w="16920"/><text x="30.4895%" y="207.50">core::intrinsics::..</text></g><g><title>[libc.so.6] (16,917 samples, 12.15%)</title><rect x="30.2417%" y="181" width="12.1508%" height="15" fill="rgb(222,217,39)" fg:x="42104" fg:w="16917"/><text x="30.4917%" y="191.50">[libc.so.6]</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16,948 samples, 12.17%)</title><rect x="30.2209%" y="245" width="12.1731%" height="15" fill="rgb(210,219,27)" fg:x="42075" fg:w="16948"/><text x="30.4709%" y="255.50">alloc::vec::Vec&lt;T,..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16,948 samples, 12.17%)</title><rect x="30.2209%" y="229" width="12.1731%" height="15" fill="rgb(252,166,36)" fg:x="42075" fg:w="16948"/><text x="30.4709%" y="239.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16,948 samples, 12.17%)</title><rect x="30.2209%" y="213" width="12.1731%" height="15" fill="rgb(245,132,34)" fg:x="42075" fg:w="16948"/><text x="30.4709%" y="223.50">alloc::vec::Vec&lt;T,..</text></g><g><title>[libc.so.6] (44 samples, 0.03%)</title><rect x="44.9697%" y="53" width="0.0316%" height="15" fill="rgb(236,54,3)" fg:x="62609" fg:w="44"/><text x="45.2197%" y="63.50"></text></g><g><title>[libc.so.6] (2,578 samples, 1.85%)</title><rect x="43.1503%" y="85" width="1.8517%" height="15" fill="rgb(241,173,43)" fg:x="60076" fg:w="2578"/><text x="43.4003%" y="95.50">[..</text></g><g><title>[libc.so.6] (916 samples, 0.66%)</title><rect x="44.3440%" y="69" width="0.6579%" height="15" fill="rgb(215,190,9)" fg:x="61738" fg:w="916"/><text x="44.5940%" y="79.50"></text></g><g><title>__rdl_alloc (3,606 samples, 2.59%)</title><rect x="42.4198%" y="133" width="2.5901%" height="15" fill="rgb(242,101,16)" fg:x="59059" fg:w="3606"/><text x="42.6698%" y="143.50">__..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3,606 samples, 2.59%)</title><rect x="42.4198%" y="117" width="2.5901%" height="15" fill="rgb(223,190,21)" fg:x="59059" fg:w="3606"/><text x="42.6698%" y="127.50">st..</text></g><g><title>malloc (3,600 samples, 2.59%)</title><rect x="42.4241%" y="101" width="2.5857%" height="15" fill="rgb(215,228,25)" fg:x="59065" fg:w="3600"/><text x="42.6741%" y="111.50">ma..</text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,646 samples, 2.62%)</title><rect x="42.3968%" y="245" width="2.6188%" height="15" fill="rgb(225,36,22)" fg:x="59027" fg:w="3646"/><text x="42.6468%" y="255.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,646 samples, 2.62%)</title><rect x="42.3968%" y="229" width="2.6188%" height="15" fill="rgb(251,106,46)" fg:x="59027" fg:w="3646"/><text x="42.6468%" y="239.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,646 samples, 2.62%)</title><rect x="42.3968%" y="213" width="2.6188%" height="15" fill="rgb(208,90,1)" fg:x="59027" fg:w="3646"/><text x="42.6468%" y="223.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (3,646 samples, 2.62%)</title><rect x="42.3968%" y="197" width="2.6188%" height="15" fill="rgb(243,10,4)" fg:x="59027" fg:w="3646"/><text x="42.6468%" y="207.50">al..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,614 samples, 2.60%)</title><rect x="42.4198%" y="181" width="2.5958%" height="15" fill="rgb(212,137,27)" fg:x="59059" fg:w="3614"/><text x="42.6698%" y="191.50">&lt;a..</text></g><g><title>alloc::alloc::Global::alloc_impl (3,614 samples, 2.60%)</title><rect x="42.4198%" y="165" width="2.5958%" height="15" fill="rgb(231,220,49)" fg:x="59059" fg:w="3614"/><text x="42.6698%" y="175.50">al..</text></g><g><title>alloc::alloc::alloc (3,614 samples, 2.60%)</title><rect x="42.4198%" y="149" width="2.5958%" height="15" fill="rgb(237,96,20)" fg:x="59059" fg:w="3614"/><text x="42.6698%" y="159.50">al..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (49 samples, 0.04%)</title><rect x="45.0171%" y="245" width="0.0352%" height="15" fill="rgb(239,229,30)" fg:x="62675" fg:w="49"/><text x="45.2671%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (49 samples, 0.04%)</title><rect x="45.0171%" y="229" width="0.0352%" height="15" fill="rgb(219,65,33)" fg:x="62675" fg:w="49"/><text x="45.2671%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (49 samples, 0.04%)</title><rect x="45.0171%" y="213" width="0.0352%" height="15" fill="rgb(243,134,7)" fg:x="62675" fg:w="49"/><text x="45.2671%" y="223.50"></text></g><g><title>bytes::bytes_mut::release_shared (998 samples, 0.72%)</title><rect x="45.0609%" y="245" width="0.7168%" height="15" fill="rgb(216,177,54)" fg:x="62736" fg:w="998"/><text x="45.3109%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (992 samples, 0.71%)</title><rect x="45.0652%" y="229" width="0.7125%" height="15" fill="rgb(211,160,20)" fg:x="62742" fg:w="992"/><text x="45.3152%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (992 samples, 0.71%)</title><rect x="45.0652%" y="213" width="0.7125%" height="15" fill="rgb(239,85,39)" fg:x="62742" fg:w="992"/><text x="45.3152%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.01%)</title><rect x="45.7806%" y="245" width="0.0136%" height="15" fill="rgb(232,125,22)" fg:x="63738" fg:w="19"/><text x="46.0306%" y="255.50"></text></g><g><title>[libc.so.6] (19 samples, 0.01%)</title><rect x="45.7806%" y="229" width="0.0136%" height="15" fill="rgb(244,57,34)" fg:x="63738" fg:w="19"/><text x="46.0306%" y="239.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (21,755 samples, 15.63%)</title><rect x="30.1763%" y="277" width="15.6258%" height="15" fill="rgb(214,203,32)" fg:x="42013" fg:w="21755"/><text x="30.4263%" y="287.50">bytes::bytes_mut::BytesM..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (21,744 samples, 15.62%)</title><rect x="30.1842%" y="261" width="15.6179%" height="15" fill="rgb(207,58,43)" fg:x="42024" fg:w="21744"/><text x="30.4342%" y="271.50">bytes::bytes_mut::BytesM..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (16 samples, 0.01%)</title><rect x="45.8129%" y="261" width="0.0115%" height="15" fill="rgb(215,193,15)" fg:x="63783" fg:w="16"/><text x="46.0629%" y="271.50"></text></g><g><title>[libc.so.6] (1,056 samples, 0.76%)</title><rect x="46.7804%" y="101" width="0.7585%" height="15" fill="rgb(232,15,44)" fg:x="65130" fg:w="1056"/><text x="47.0304%" y="111.50"></text></g><g><title>[libc.so.6] (145 samples, 0.10%)</title><rect x="47.4347%" y="85" width="0.1041%" height="15" fill="rgb(212,3,48)" fg:x="66041" fg:w="145"/><text x="47.6847%" y="95.50"></text></g><g><title>__rdl_alloc (2,333 samples, 1.68%)</title><rect x="45.8660%" y="149" width="1.6757%" height="15" fill="rgb(218,128,7)" fg:x="63857" fg:w="2333"/><text x="46.1160%" y="159.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2,333 samples, 1.68%)</title><rect x="45.8660%" y="133" width="1.6757%" height="15" fill="rgb(226,216,39)" fg:x="63857" fg:w="2333"/><text x="46.1160%" y="143.50"></text></g><g><title>malloc (2,331 samples, 1.67%)</title><rect x="45.8675%" y="117" width="1.6743%" height="15" fill="rgb(243,47,51)" fg:x="63859" fg:w="2331"/><text x="46.1175%" y="127.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2,453 samples, 1.76%)</title><rect x="45.8546%" y="229" width="1.7619%" height="15" fill="rgb(241,183,40)" fg:x="63841" fg:w="2453"/><text x="46.1046%" y="239.50"></text></g><g><title>alloc::alloc::exchange_malloc (2,440 samples, 1.75%)</title><rect x="45.8639%" y="213" width="1.7526%" height="15" fill="rgb(231,217,32)" fg:x="63854" fg:w="2440"/><text x="46.1139%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,437 samples, 1.75%)</title><rect x="45.8660%" y="197" width="1.7504%" height="15" fill="rgb(229,61,38)" fg:x="63857" fg:w="2437"/><text x="46.1160%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,437 samples, 1.75%)</title><rect x="45.8660%" y="181" width="1.7504%" height="15" fill="rgb(225,210,5)" fg:x="63857" fg:w="2437"/><text x="46.1160%" y="191.50"></text></g><g><title>alloc::alloc::alloc (2,437 samples, 1.75%)</title><rect x="45.8660%" y="165" width="1.7504%" height="15" fill="rgb(231,79,45)" fg:x="63857" fg:w="2437"/><text x="46.1160%" y="175.50"></text></g><g><title>core::ptr::read_volatile (104 samples, 0.07%)</title><rect x="47.5417%" y="149" width="0.0747%" height="15" fill="rgb(224,100,7)" fg:x="66190" fg:w="104"/><text x="47.7917%" y="159.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (2,483 samples, 1.78%)</title><rect x="45.8416%" y="245" width="1.7834%" height="15" fill="rgb(241,198,18)" fg:x="63823" fg:w="2483"/><text x="46.0916%" y="255.50">b..</text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (2,515 samples, 1.81%)</title><rect x="45.8273%" y="261" width="1.8064%" height="15" fill="rgb(252,97,53)" fg:x="63803" fg:w="2515"/><text x="46.0773%" y="271.50">b..</text></g><g><title>bytes::bytes_mut::BytesMut::split_to (2,551 samples, 1.83%)</title><rect x="45.8021%" y="277" width="1.8323%" height="15" fill="rgb(220,88,7)" fg:x="63768" fg:w="2551"/><text x="46.0521%" y="287.50">b..</text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (27,468 samples, 19.73%)</title><rect x="27.9066%" y="293" width="19.7292%" height="15" fill="rgb(213,176,14)" fg:x="38853" fg:w="27468"/><text x="28.1566%" y="303.50">fastwebsockets::ReadHalf::parse..</text></g><g><title>fastwebsockets::frame::Payload::to_mut (59 samples, 0.04%)</title><rect x="47.7156%" y="277" width="0.0424%" height="15" fill="rgb(246,73,7)" fg:x="66432" fg:w="59"/><text x="47.9656%" y="287.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.05%)</title><rect x="53.3647%" y="245" width="0.0532%" height="15" fill="rgb(245,64,36)" fg:x="74297" fg:w="74"/><text x="53.6147%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (32 samples, 0.02%)</title><rect x="53.4178%" y="245" width="0.0230%" height="15" fill="rgb(245,80,10)" fg:x="74371" fg:w="32"/><text x="53.6678%" y="255.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (36,735 samples, 26.39%)</title><rect x="27.0706%" y="325" width="26.3853%" height="15" fill="rgb(232,107,50)" fg:x="37689" fg:w="36735"/><text x="27.3206%" y="335.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_fra..</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (35,968 samples, 25.83%)</title><rect x="27.6215%" y="309" width="25.8344%" height="15" fill="rgb(253,3,0)" fg:x="38456" fg:w="35968"/><text x="27.8715%" y="319.50">fastwebsockets::ReadHalf::read_frame_inne..</text></g><g><title>fastwebsockets::frame::Frame::unmask (8,103 samples, 5.82%)</title><rect x="47.6358%" y="293" width="5.8201%" height="15" fill="rgb(212,99,53)" fg:x="66321" fg:w="8103"/><text x="47.8858%" y="303.50">fastweb..</text></g><g><title>fastwebsockets::mask::unmask (7,933 samples, 5.70%)</title><rect x="47.7579%" y="277" width="5.6980%" height="15" fill="rgb(249,111,54)" fg:x="66491" fg:w="7933"/><text x="48.0079%" y="287.50">fastweb..</text></g><g><title>fastwebsockets::mask::unmask_fallback (7,933 samples, 5.70%)</title><rect x="47.7579%" y="261" width="5.6980%" height="15" fill="rgb(249,55,30)" fg:x="66491" fg:w="7933"/><text x="48.0079%" y="271.50">fastweb..</text></g><g><title>fastwebsockets::mask::unmask_easy (21 samples, 0.02%)</title><rect x="53.4408%" y="245" width="0.0151%" height="15" fill="rgb(237,47,42)" fg:x="74403" fg:w="21"/><text x="53.6908%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (21 samples, 0.02%)</title><rect x="53.4408%" y="229" width="0.0151%" height="15" fill="rgb(211,20,18)" fg:x="74403" fg:w="21"/><text x="53.6908%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.02%)</title><rect x="53.4408%" y="213" width="0.0151%" height="15" fill="rgb(231,203,46)" fg:x="74403" fg:w="21"/><text x="53.6908%" y="223.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 0.02%)</title><rect x="53.4408%" y="197" width="0.0151%" height="15" fill="rgb(237,142,3)" fg:x="74403" fg:w="21"/><text x="53.6908%" y="207.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (37,612 samples, 27.02%)</title><rect x="26.5549%" y="357" width="27.0153%" height="15" fill="rgb(241,107,1)" fg:x="36971" fg:w="37612"/><text x="26.8049%" y="367.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (37,612 samples, 27.02%)</title><rect x="26.5549%" y="341" width="27.0153%" height="15" fill="rgb(229,83,13)" fg:x="36971" fg:w="37612"/><text x="26.8049%" y="351.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::..</text></g><g><title>fastwebsockets::frame::&lt;impl core::convert::From&lt;fastwebsockets::frame::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (159 samples, 0.11%)</title><rect x="53.4559%" y="325" width="0.1142%" height="15" fill="rgb(241,91,40)" fg:x="74424" fg:w="159"/><text x="53.7059%" y="335.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (404 samples, 0.29%)</title><rect x="53.6477%" y="325" width="0.2902%" height="15" fill="rgb(225,3,45)" fg:x="74691" fg:w="404"/><text x="53.8977%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (396 samples, 0.28%)</title><rect x="53.6534%" y="309" width="0.2844%" height="15" fill="rgb(244,223,14)" fg:x="74699" fg:w="396"/><text x="53.9034%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (396 samples, 0.28%)</title><rect x="53.6534%" y="293" width="0.2844%" height="15" fill="rgb(224,124,37)" fg:x="74699" fg:w="396"/><text x="53.9034%" y="303.50"></text></g><g><title>__rdl_dealloc (396 samples, 0.28%)</title><rect x="53.6534%" y="277" width="0.2844%" height="15" fill="rgb(251,171,30)" fg:x="74699" fg:w="396"/><text x="53.9034%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (396 samples, 0.28%)</title><rect x="53.6534%" y="261" width="0.2844%" height="15" fill="rgb(236,46,54)" fg:x="74699" fg:w="396"/><text x="53.9034%" y="271.50"></text></g><g><title>cfree (385 samples, 0.28%)</title><rect x="53.6613%" y="245" width="0.2765%" height="15" fill="rgb(245,213,5)" fg:x="74710" fg:w="385"/><text x="53.9113%" y="255.50"></text></g><g><title>[libc.so.6] (74 samples, 0.05%)</title><rect x="53.8847%" y="229" width="0.0532%" height="15" fill="rgb(230,144,27)" fg:x="75021" fg:w="74"/><text x="54.1347%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (511 samples, 0.37%)</title><rect x="53.5744%" y="357" width="0.3670%" height="15" fill="rgb(220,86,6)" fg:x="74589" fg:w="511"/><text x="53.8244%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (511 samples, 0.37%)</title><rect x="53.5744%" y="341" width="0.3670%" height="15" fill="rgb(240,20,13)" fg:x="74589" fg:w="511"/><text x="53.8244%" y="351.50"></text></g><g><title>__rdl_alloc (34 samples, 0.02%)</title><rect x="53.9443%" y="245" width="0.0244%" height="15" fill="rgb(217,89,34)" fg:x="75104" fg:w="34"/><text x="54.1943%" y="255.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (34 samples, 0.02%)</title><rect x="53.9443%" y="229" width="0.0244%" height="15" fill="rgb(229,13,5)" fg:x="75104" fg:w="34"/><text x="54.1943%" y="239.50"></text></g><g><title>malloc (34 samples, 0.02%)</title><rect x="53.9443%" y="213" width="0.0244%" height="15" fill="rgb(244,67,35)" fg:x="75104" fg:w="34"/><text x="54.1943%" y="223.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (38,575 samples, 27.71%)</title><rect x="26.2632%" y="389" width="27.7069%" height="15" fill="rgb(221,40,2)" fg:x="36565" fg:w="38575"/><text x="26.5132%" y="399.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::..</text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (38,569 samples, 27.70%)</title><rect x="26.2676%" y="373" width="27.7026%" height="15" fill="rgb(237,157,21)" fg:x="36571" fg:w="38569"/><text x="26.5176%" y="383.50">&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as ..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (40 samples, 0.03%)</title><rect x="53.9415%" y="357" width="0.0287%" height="15" fill="rgb(222,94,11)" fg:x="75100" fg:w="40"/><text x="54.1915%" y="367.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (40 samples, 0.03%)</title><rect x="53.9415%" y="341" width="0.0287%" height="15" fill="rgb(249,113,6)" fg:x="75100" fg:w="40"/><text x="54.1915%" y="351.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (40 samples, 0.03%)</title><rect x="53.9415%" y="325" width="0.0287%" height="15" fill="rgb(238,137,36)" fg:x="75100" fg:w="40"/><text x="54.1915%" y="335.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.03%)</title><rect x="53.9436%" y="309" width="0.0266%" height="15" fill="rgb(210,102,26)" fg:x="75103" fg:w="37"/><text x="54.1936%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.03%)</title><rect x="53.9443%" y="293" width="0.0259%" height="15" fill="rgb(218,30,30)" fg:x="75104" fg:w="36"/><text x="54.1943%" y="303.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.03%)</title><rect x="53.9443%" y="277" width="0.0259%" height="15" fill="rgb(214,67,26)" fg:x="75104" fg:w="36"/><text x="54.1943%" y="287.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.03%)</title><rect x="53.9443%" y="261" width="0.0259%" height="15" fill="rgb(251,9,53)" fg:x="75104" fg:w="36"/><text x="54.1943%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (105 samples, 0.08%)</title><rect x="53.9702%" y="389" width="0.0754%" height="15" fill="rgb(228,204,25)" fg:x="75140" fg:w="105"/><text x="54.2202%" y="399.50"></text></g><g><title>__rdl_alloc (50 samples, 0.04%)</title><rect x="54.0528%" y="277" width="0.0359%" height="15" fill="rgb(207,153,8)" fg:x="75255" fg:w="50"/><text x="54.3028%" y="287.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (50 samples, 0.04%)</title><rect x="54.0528%" y="261" width="0.0359%" height="15" fill="rgb(242,9,16)" fg:x="75255" fg:w="50"/><text x="54.3028%" y="271.50"></text></g><g><title>malloc (48 samples, 0.03%)</title><rect x="54.0542%" y="245" width="0.0345%" height="15" fill="rgb(217,211,10)" fg:x="75257" fg:w="48"/><text x="54.3042%" y="255.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (61 samples, 0.04%)</title><rect x="54.0499%" y="389" width="0.0438%" height="15" fill="rgb(219,228,52)" fg:x="75251" fg:w="61"/><text x="54.2999%" y="399.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (61 samples, 0.04%)</title><rect x="54.0499%" y="373" width="0.0438%" height="15" fill="rgb(231,92,29)" fg:x="75251" fg:w="61"/><text x="54.2999%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (61 samples, 0.04%)</title><rect x="54.0499%" y="357" width="0.0438%" height="15" fill="rgb(232,8,23)" fg:x="75251" fg:w="61"/><text x="54.2999%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (59 samples, 0.04%)</title><rect x="54.0514%" y="341" width="0.0424%" height="15" fill="rgb(216,211,34)" fg:x="75253" fg:w="59"/><text x="54.3014%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.04%)</title><rect x="54.0528%" y="325" width="0.0409%" height="15" fill="rgb(236,151,0)" fg:x="75255" fg:w="57"/><text x="54.3028%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.04%)</title><rect x="54.0528%" y="309" width="0.0409%" height="15" fill="rgb(209,168,3)" fg:x="75255" fg:w="57"/><text x="54.3028%" y="319.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.04%)</title><rect x="54.0528%" y="293" width="0.0409%" height="15" fill="rgb(208,129,28)" fg:x="75255" fg:w="57"/><text x="54.3028%" y="303.50"></text></g><g><title>[libc.so.6] (276 samples, 0.20%)</title><rect x="54.3746%" y="149" width="0.1982%" height="15" fill="rgb(229,78,22)" fg:x="75703" fg:w="276"/><text x="54.6246%" y="159.50"></text></g><g><title>[libc.so.6] (148 samples, 0.11%)</title><rect x="54.4665%" y="133" width="0.1063%" height="15" fill="rgb(228,187,13)" fg:x="75831" fg:w="148"/><text x="54.7165%" y="143.50"></text></g><g><title>[libc.so.6] (36 samples, 0.03%)</title><rect x="54.5470%" y="117" width="0.0259%" height="15" fill="rgb(240,119,24)" fg:x="75943" fg:w="36"/><text x="54.7970%" y="127.50"></text></g><g><title>[libc.so.6] (576 samples, 0.41%)</title><rect x="54.1627%" y="165" width="0.4137%" height="15" fill="rgb(209,194,42)" fg:x="75408" fg:w="576"/><text x="54.4127%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (628 samples, 0.45%)</title><rect x="54.1261%" y="245" width="0.4511%" height="15" fill="rgb(247,200,46)" fg:x="75357" fg:w="628"/><text x="54.3761%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (628 samples, 0.45%)</title><rect x="54.1261%" y="229" width="0.4511%" height="15" fill="rgb(218,76,16)" fg:x="75357" fg:w="628"/><text x="54.3761%" y="239.50"></text></g><g><title>__rdl_dealloc (628 samples, 0.45%)</title><rect x="54.1261%" y="213" width="0.4511%" height="15" fill="rgb(225,21,48)" fg:x="75357" fg:w="628"/><text x="54.3761%" y="223.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (628 samples, 0.45%)</title><rect x="54.1261%" y="197" width="0.4511%" height="15" fill="rgb(239,223,50)" fg:x="75357" fg:w="628"/><text x="54.3761%" y="207.50"></text></g><g><title>cfree (626 samples, 0.45%)</title><rect x="54.1275%" y="181" width="0.4496%" height="15" fill="rgb(244,45,21)" fg:x="75359" fg:w="626"/><text x="54.3775%" y="191.50"></text></g><g><title>core::mem::drop (634 samples, 0.46%)</title><rect x="54.1246%" y="341" width="0.4554%" height="15" fill="rgb(232,33,43)" fg:x="75355" fg:w="634"/><text x="54.3746%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (634 samples, 0.46%)</title><rect x="54.1246%" y="325" width="0.4554%" height="15" fill="rgb(209,8,3)" fg:x="75355" fg:w="634"/><text x="54.3746%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (632 samples, 0.45%)</title><rect x="54.1261%" y="309" width="0.4539%" height="15" fill="rgb(214,25,53)" fg:x="75357" fg:w="632"/><text x="54.3761%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (632 samples, 0.45%)</title><rect x="54.1261%" y="293" width="0.4539%" height="15" fill="rgb(254,186,54)" fg:x="75357" fg:w="632"/><text x="54.3761%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (632 samples, 0.45%)</title><rect x="54.1261%" y="277" width="0.4539%" height="15" fill="rgb(208,174,49)" fg:x="75357" fg:w="632"/><text x="54.3761%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (632 samples, 0.45%)</title><rect x="54.1261%" y="261" width="0.4539%" height="15" fill="rgb(233,191,51)" fg:x="75357" fg:w="632"/><text x="54.3761%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (109 samples, 0.08%)</title><rect x="54.5800%" y="341" width="0.0783%" height="15" fill="rgb(222,134,10)" fg:x="75989" fg:w="109"/><text x="54.8300%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (109 samples, 0.08%)</title><rect x="54.5800%" y="325" width="0.0783%" height="15" fill="rgb(230,226,20)" fg:x="75989" fg:w="109"/><text x="54.8300%" y="335.50"></text></g><g><title>bytes::bytes_mut::release_shared (748 samples, 0.54%)</title><rect x="54.1217%" y="357" width="0.5373%" height="15" fill="rgb(251,111,25)" fg:x="75351" fg:w="748"/><text x="54.3717%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (916 samples, 0.66%)</title><rect x="54.1103%" y="389" width="0.6579%" height="15" fill="rgb(224,40,46)" fg:x="75335" fg:w="916"/><text x="54.3603%" y="399.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (916 samples, 0.66%)</title><rect x="54.1103%" y="373" width="0.6579%" height="15" fill="rgb(236,108,47)" fg:x="75335" fg:w="916"/><text x="54.3603%" y="383.50"></text></g><g><title>cfree (152 samples, 0.11%)</title><rect x="54.6590%" y="357" width="0.1092%" height="15" fill="rgb(234,93,0)" fg:x="76099" fg:w="152"/><text x="54.9090%" y="367.50"></text></g><g><title>[libc.so.6] (49 samples, 0.04%)</title><rect x="54.7330%" y="341" width="0.0352%" height="15" fill="rgb(224,213,32)" fg:x="76202" fg:w="49"/><text x="54.9830%" y="351.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (267 samples, 0.19%)</title><rect x="54.8019%" y="357" width="0.1918%" height="15" fill="rgb(251,11,48)" fg:x="76298" fg:w="267"/><text x="55.0519%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (261 samples, 0.19%)</title><rect x="54.8062%" y="341" width="0.1875%" height="15" fill="rgb(236,173,5)" fg:x="76304" fg:w="261"/><text x="55.0562%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (261 samples, 0.19%)</title><rect x="54.8062%" y="325" width="0.1875%" height="15" fill="rgb(230,95,12)" fg:x="76304" fg:w="261"/><text x="55.0562%" y="335.50"></text></g><g><title>__rdl_dealloc (261 samples, 0.19%)</title><rect x="54.8062%" y="309" width="0.1875%" height="15" fill="rgb(232,209,1)" fg:x="76304" fg:w="261"/><text x="55.0562%" y="319.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (261 samples, 0.19%)</title><rect x="54.8062%" y="293" width="0.1875%" height="15" fill="rgb(232,6,1)" fg:x="76304" fg:w="261"/><text x="55.0562%" y="303.50"></text></g><g><title>cfree (260 samples, 0.19%)</title><rect x="54.8070%" y="277" width="0.1867%" height="15" fill="rgb(210,224,50)" fg:x="76305" fg:w="260"/><text x="55.0570%" y="287.50"></text></g><g><title>[libc.so.6] (74 samples, 0.05%)</title><rect x="54.9406%" y="261" width="0.0532%" height="15" fill="rgb(228,127,35)" fg:x="76491" fg:w="74"/><text x="55.1906%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (318 samples, 0.23%)</title><rect x="54.7682%" y="389" width="0.2284%" height="15" fill="rgb(245,102,45)" fg:x="76251" fg:w="318"/><text x="55.0182%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (318 samples, 0.23%)</title><rect x="54.7682%" y="373" width="0.2284%" height="15" fill="rgb(214,1,49)" fg:x="76251" fg:w="318"/><text x="55.0182%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;dashmap::mapref::one::Ref&lt;u32,wisp_mux::MuxMapValue&gt;&gt; (132 samples, 0.09%)</title><rect x="54.9966%" y="389" width="0.0948%" height="15" fill="rgb(226,163,40)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;dashmap::lock::RawRwLock,hashbrown::map::HashMap&lt;u32,dashmap::util::SharedValue&lt;wisp_mux::MuxMapValue&gt;,std::hash::random::RandomState&gt;&gt;&gt; (132 samples, 0.09%)</title><rect x="54.9966%" y="373" width="0.0948%" height="15" fill="rgb(239,212,28)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="383.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (132 samples, 0.09%)</title><rect x="54.9966%" y="357" width="0.0948%" height="15" fill="rgb(220,20,13)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="367.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (132 samples, 0.09%)</title><rect x="54.9966%" y="341" width="0.0948%" height="15" fill="rgb(210,164,35)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (132 samples, 0.09%)</title><rect x="54.9966%" y="325" width="0.0948%" height="15" fill="rgb(248,109,41)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (132 samples, 0.09%)</title><rect x="54.9966%" y="309" width="0.0948%" height="15" fill="rgb(238,23,50)" fg:x="76569" fg:w="132"/><text x="55.2466%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::packet::PacketType&gt; (21 samples, 0.02%)</title><rect x="55.0914%" y="389" width="0.0151%" height="15" fill="rgb(211,48,49)" fg:x="76701" fg:w="21"/><text x="55.3414%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (30 samples, 0.02%)</title><rect x="55.1065%" y="389" width="0.0215%" height="15" fill="rgb(223,36,21)" fg:x="76722" fg:w="30"/><text x="55.3565%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.02%)</title><rect x="55.1065%" y="373" width="0.0215%" height="15" fill="rgb(207,123,46)" fg:x="76722" fg:w="30"/><text x="55.3565%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (62 samples, 0.04%)</title><rect x="55.1848%" y="293" width="0.0445%" height="15" fill="rgb(240,218,32)" fg:x="76831" fg:w="62"/><text x="55.4348%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (62 samples, 0.04%)</title><rect x="55.1848%" y="277" width="0.0445%" height="15" fill="rgb(252,5,43)" fg:x="76831" fg:w="62"/><text x="55.4348%" y="287.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_yield_read_shard (225 samples, 0.16%)</title><rect x="55.1733%" y="357" width="0.1616%" height="15" fill="rgb(252,84,19)" fg:x="76815" fg:w="225"/><text x="55.4233%" y="367.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (215 samples, 0.15%)</title><rect x="55.1805%" y="341" width="0.1544%" height="15" fill="rgb(243,152,39)" fg:x="76825" fg:w="215"/><text x="55.4305%" y="351.50"></text></g><g><title>&lt;dashmap::lock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (215 samples, 0.15%)</title><rect x="55.1805%" y="325" width="0.1544%" height="15" fill="rgb(234,160,15)" fg:x="76825" fg:w="215"/><text x="55.4305%" y="335.50"></text></g><g><title>dashmap::lock::RawRwLock::try_lock_shared_fast (215 samples, 0.15%)</title><rect x="55.1805%" y="309" width="0.1544%" height="15" fill="rgb(237,34,20)" fg:x="76825" fg:w="215"/><text x="55.4305%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (147 samples, 0.11%)</title><rect x="55.2293%" y="293" width="0.1056%" height="15" fill="rgb(229,97,13)" fg:x="76893" fg:w="147"/><text x="55.4793%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (147 samples, 0.11%)</title><rect x="55.2293%" y="277" width="0.1056%" height="15" fill="rgb(234,71,50)" fg:x="76893" fg:w="147"/><text x="55.4793%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (36 samples, 0.03%)</title><rect x="55.3507%" y="293" width="0.0259%" height="15" fill="rgb(253,155,4)" fg:x="77062" fg:w="36"/><text x="55.6007%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (27 samples, 0.02%)</title><rect x="55.3572%" y="277" width="0.0194%" height="15" fill="rgb(222,185,37)" fg:x="77071" fg:w="27"/><text x="55.6072%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.02%)</title><rect x="55.3844%" y="277" width="0.0215%" height="15" fill="rgb(251,177,13)" fg:x="77109" fg:w="30"/><text x="55.6344%" y="287.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (97 samples, 0.07%)</title><rect x="55.3435%" y="341" width="0.0697%" height="15" fill="rgb(250,179,40)" fg:x="77052" fg:w="97"/><text x="55.5935%" y="351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (97 samples, 0.07%)</title><rect x="55.3435%" y="325" width="0.0697%" height="15" fill="rgb(242,44,2)" fg:x="77052" fg:w="97"/><text x="55.5935%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (97 samples, 0.07%)</title><rect x="55.3435%" y="309" width="0.0697%" height="15" fill="rgb(216,177,13)" fg:x="77052" fg:w="97"/><text x="55.5935%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (51 samples, 0.04%)</title><rect x="55.3765%" y="293" width="0.0366%" height="15" fill="rgb(216,106,43)" fg:x="77098" fg:w="51"/><text x="55.6265%" y="303.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (94 samples, 0.07%)</title><rect x="55.4132%" y="341" width="0.0675%" height="15" fill="rgb(216,183,2)" fg:x="77149" fg:w="94"/><text x="55.6632%" y="351.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (89 samples, 0.06%)</title><rect x="55.4168%" y="325" width="0.0639%" height="15" fill="rgb(249,75,3)" fg:x="77154" fg:w="89"/><text x="55.6668%" y="335.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (89 samples, 0.06%)</title><rect x="55.4168%" y="309" width="0.0639%" height="15" fill="rgb(219,67,39)" fg:x="77154" fg:w="89"/><text x="55.6668%" y="319.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (89 samples, 0.06%)</title><rect x="55.4168%" y="293" width="0.0639%" height="15" fill="rgb(253,228,2)" fg:x="77154" fg:w="89"/><text x="55.6668%" y="303.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (108 samples, 0.08%)</title><rect x="55.4821%" y="293" width="0.0776%" height="15" fill="rgb(235,138,27)" fg:x="77245" fg:w="108"/><text x="55.7321%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (108 samples, 0.08%)</title><rect x="55.4821%" y="277" width="0.0776%" height="15" fill="rgb(236,97,51)" fg:x="77245" fg:w="108"/><text x="55.7321%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (107 samples, 0.08%)</title><rect x="55.4829%" y="261" width="0.0769%" height="15" fill="rgb(240,80,30)" fg:x="77246" fg:w="107"/><text x="55.7329%" y="271.50"></text></g><g><title>core::hash::sip::u8to64_le (74 samples, 0.05%)</title><rect x="55.5066%" y="245" width="0.0532%" height="15" fill="rgb(230,178,19)" fg:x="77279" fg:w="74"/><text x="55.7566%" y="255.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (307 samples, 0.22%)</title><rect x="55.3435%" y="357" width="0.2205%" height="15" fill="rgb(210,190,27)" fg:x="77052" fg:w="307"/><text x="55.5935%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (116 samples, 0.08%)</title><rect x="55.4807%" y="341" width="0.0833%" height="15" fill="rgb(222,107,31)" fg:x="77243" fg:w="116"/><text x="55.7307%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (114 samples, 0.08%)</title><rect x="55.4821%" y="325" width="0.0819%" height="15" fill="rgb(216,127,34)" fg:x="77245" fg:w="114"/><text x="55.7321%" y="335.50"></text></g><g><title>core::hash::Hasher::write_u32 (114 samples, 0.08%)</title><rect x="55.4821%" y="309" width="0.0819%" height="15" fill="rgb(234,116,52)" fg:x="77245" fg:w="114"/><text x="55.7321%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (18 samples, 0.01%)</title><rect x="55.5841%" y="261" width="0.0129%" height="15" fill="rgb(222,124,15)" fg:x="77387" fg:w="18"/><text x="55.8341%" y="271.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (21 samples, 0.02%)</title><rect x="55.6014%" y="245" width="0.0151%" height="15" fill="rgb(231,179,28)" fg:x="77411" fg:w="21"/><text x="55.8514%" y="255.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (66 samples, 0.05%)</title><rect x="55.5762%" y="309" width="0.0474%" height="15" fill="rgb(226,93,45)" fg:x="77376" fg:w="66"/><text x="55.8262%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (66 samples, 0.05%)</title><rect x="55.5762%" y="293" width="0.0474%" height="15" fill="rgb(215,8,51)" fg:x="77376" fg:w="66"/><text x="55.8262%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (66 samples, 0.05%)</title><rect x="55.5762%" y="277" width="0.0474%" height="15" fill="rgb(223,106,5)" fg:x="77376" fg:w="66"/><text x="55.8262%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (37 samples, 0.03%)</title><rect x="55.5971%" y="261" width="0.0266%" height="15" fill="rgb(250,191,5)" fg:x="77405" fg:w="37"/><text x="55.8471%" y="271.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (30 samples, 0.02%)</title><rect x="55.6265%" y="277" width="0.0215%" height="15" fill="rgb(242,132,44)" fg:x="77446" fg:w="30"/><text x="55.8765%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (30 samples, 0.02%)</title><rect x="55.6265%" y="261" width="0.0215%" height="15" fill="rgb(251,152,29)" fg:x="77446" fg:w="30"/><text x="55.8765%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (27 samples, 0.02%)</title><rect x="55.6287%" y="245" width="0.0194%" height="15" fill="rgb(218,179,5)" fg:x="77449" fg:w="27"/><text x="55.8787%" y="255.50"></text></g><g><title>hashbrown::map::make_hash (108 samples, 0.08%)</title><rect x="55.5762%" y="325" width="0.0776%" height="15" fill="rgb(227,67,19)" fg:x="77376" fg:w="108"/><text x="55.8262%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (38 samples, 0.03%)</title><rect x="55.6265%" y="309" width="0.0273%" height="15" fill="rgb(233,119,31)" fg:x="77446" fg:w="38"/><text x="55.8765%" y="319.50"></text></g><g><title>core::hash::Hasher::write_u32 (38 samples, 0.03%)</title><rect x="55.6265%" y="293" width="0.0273%" height="15" fill="rgb(241,120,22)" fg:x="77446" fg:w="38"/><text x="55.8765%" y="303.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (141 samples, 0.10%)</title><rect x="55.6696%" y="261" width="0.1013%" height="15" fill="rgb(224,102,30)" fg:x="77506" fg:w="141"/><text x="55.9196%" y="271.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (141 samples, 0.10%)</title><rect x="55.6696%" y="245" width="0.1013%" height="15" fill="rgb(210,164,37)" fg:x="77506" fg:w="141"/><text x="55.9196%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (141 samples, 0.10%)</title><rect x="55.6696%" y="229" width="0.1013%" height="15" fill="rgb(226,191,16)" fg:x="77506" fg:w="141"/><text x="55.9196%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (141 samples, 0.10%)</title><rect x="55.6696%" y="213" width="0.1013%" height="15" fill="rgb(214,40,45)" fg:x="77506" fg:w="141"/><text x="55.9196%" y="223.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find::_{{closure}} (155 samples, 0.11%)</title><rect x="55.6696%" y="277" width="0.1113%" height="15" fill="rgb(244,29,26)" fg:x="77506" fg:w="155"/><text x="55.9196%" y="287.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (153 samples, 0.11%)</title><rect x="55.7895%" y="277" width="0.1099%" height="15" fill="rgb(216,16,5)" fg:x="77673" fg:w="153"/><text x="56.0395%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (153 samples, 0.11%)</title><rect x="55.7895%" y="261" width="0.1099%" height="15" fill="rgb(249,76,35)" fg:x="77673" fg:w="153"/><text x="56.0395%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (153 samples, 0.11%)</title><rect x="55.7895%" y="245" width="0.1099%" height="15" fill="rgb(207,11,44)" fg:x="77673" fg:w="153"/><text x="56.0395%" y="255.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::get (1,101 samples, 0.79%)</title><rect x="55.1280%" y="389" width="0.7908%" height="15" fill="rgb(228,190,49)" fg:x="76752" fg:w="1101"/><text x="55.3780%" y="399.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_get (1,101 samples, 0.79%)</title><rect x="55.1280%" y="373" width="0.7908%" height="15" fill="rgb(214,173,12)" fg:x="76752" fg:w="1101"/><text x="55.3780%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_key_value (494 samples, 0.35%)</title><rect x="55.5640%" y="357" width="0.3548%" height="15" fill="rgb(218,26,35)" fg:x="77359" fg:w="494"/><text x="55.8140%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (493 samples, 0.35%)</title><rect x="55.5647%" y="341" width="0.3541%" height="15" fill="rgb(220,200,19)" fg:x="77360" fg:w="493"/><text x="55.8147%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get (369 samples, 0.27%)</title><rect x="55.6538%" y="325" width="0.2650%" height="15" fill="rgb(239,95,49)" fg:x="77484" fg:w="369"/><text x="55.9038%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (369 samples, 0.27%)</title><rect x="55.6538%" y="309" width="0.2650%" height="15" fill="rgb(235,85,53)" fg:x="77484" fg:w="369"/><text x="55.9038%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::find_inner (366 samples, 0.26%)</title><rect x="55.6560%" y="293" width="0.2629%" height="15" fill="rgb(233,133,31)" fg:x="77487" fg:w="366"/><text x="55.9060%" y="303.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (27 samples, 0.02%)</title><rect x="55.8994%" y="277" width="0.0194%" height="15" fill="rgb(218,25,20)" fg:x="77826" fg:w="27"/><text x="56.1494%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.02%)</title><rect x="55.8994%" y="261" width="0.0194%" height="15" fill="rgb(252,210,38)" fg:x="77826" fg:w="27"/><text x="56.1494%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (29 samples, 0.02%)</title><rect x="55.9468%" y="309" width="0.0208%" height="15" fill="rgb(242,134,21)" fg:x="77892" fg:w="29"/><text x="56.1968%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (29 samples, 0.02%)</title><rect x="55.9468%" y="293" width="0.0208%" height="15" fill="rgb(213,28,48)" fg:x="77892" fg:w="29"/><text x="56.1968%" y="303.50"></text></g><g><title>tokio::runtime::context::with_scheduler (29 samples, 0.02%)</title><rect x="55.9468%" y="277" width="0.0208%" height="15" fill="rgb(250,196,2)" fg:x="77892" fg:w="29"/><text x="56.1968%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (23 samples, 0.02%)</title><rect x="55.9512%" y="261" width="0.0165%" height="15" fill="rgb(227,5,17)" fg:x="77898" fg:w="23"/><text x="56.2012%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (18 samples, 0.01%)</title><rect x="55.9547%" y="245" width="0.0129%" height="15" fill="rgb(221,226,24)" fg:x="77903" fg:w="18"/><text x="56.2047%" y="255.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (52 samples, 0.04%)</title><rect x="55.9461%" y="325" width="0.0373%" height="15" fill="rgb(211,5,48)" fg:x="77891" fg:w="52"/><text x="56.1961%" y="335.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (17 samples, 0.01%)</title><rect x="55.9713%" y="309" width="0.0122%" height="15" fill="rgb(219,150,6)" fg:x="77926" fg:w="17"/><text x="56.2213%" y="319.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (17 samples, 0.01%)</title><rect x="55.9713%" y="293" width="0.0122%" height="15" fill="rgb(251,46,16)" fg:x="77926" fg:w="17"/><text x="56.2213%" y="303.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (14 samples, 0.01%)</title><rect x="55.9734%" y="277" width="0.0101%" height="15" fill="rgb(220,204,40)" fg:x="77929" fg:w="14"/><text x="56.2234%" y="287.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (14 samples, 0.01%)</title><rect x="55.9734%" y="261" width="0.0101%" height="15" fill="rgb(211,85,2)" fg:x="77929" fg:w="14"/><text x="56.2234%" y="271.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (54 samples, 0.04%)</title><rect x="55.9461%" y="341" width="0.0388%" height="15" fill="rgb(229,17,7)" fg:x="77891" fg:w="54"/><text x="56.1961%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::is_empty (16 samples, 0.01%)</title><rect x="55.9849%" y="341" width="0.0115%" height="15" fill="rgb(239,72,28)" fg:x="77945" fg:w="16"/><text x="56.2349%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (15 samples, 0.01%)</title><rect x="55.9964%" y="341" width="0.0108%" height="15" fill="rgb(230,47,54)" fg:x="77961" fg:w="15"/><text x="56.2464%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (15 samples, 0.01%)</title><rect x="55.9964%" y="325" width="0.0108%" height="15" fill="rgb(214,50,8)" fg:x="77961" fg:w="15"/><text x="56.2464%" y="335.50"></text></g><g><title>core::ptr::read (15 samples, 0.01%)</title><rect x="55.9964%" y="309" width="0.0108%" height="15" fill="rgb(216,198,43)" fg:x="77961" fg:w="15"/><text x="56.2464%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.01%)</title><rect x="56.0115%" y="309" width="0.0129%" height="15" fill="rgb(234,20,35)" fg:x="77982" fg:w="18"/><text x="56.2615%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (72 samples, 0.05%)</title><rect x="56.0115%" y="325" width="0.0517%" height="15" fill="rgb(254,45,19)" fg:x="77982" fg:w="72"/><text x="56.2615%" y="335.50"></text></g><g><title>core::ptr::write (54 samples, 0.04%)</title><rect x="56.0244%" y="309" width="0.0388%" height="15" fill="rgb(219,14,44)" fg:x="78000" fg:w="54"/><text x="56.2744%" y="319.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (96 samples, 0.07%)</title><rect x="56.0072%" y="341" width="0.0690%" height="15" fill="rgb(217,220,26)" fg:x="77976" fg:w="96"/><text x="56.2572%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (20 samples, 0.01%)</title><rect x="56.0833%" y="341" width="0.0144%" height="15" fill="rgb(213,158,28)" fg:x="78082" fg:w="20"/><text x="56.3333%" y="351.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (29 samples, 0.02%)</title><rect x="56.1099%" y="309" width="0.0208%" height="15" fill="rgb(252,51,52)" fg:x="78119" fg:w="29"/><text x="56.3599%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.05%)</title><rect x="56.0977%" y="341" width="0.0467%" height="15" fill="rgb(246,89,16)" fg:x="78102" fg:w="65"/><text x="56.3477%" y="351.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (62 samples, 0.04%)</title><rect x="56.0998%" y="325" width="0.0445%" height="15" fill="rgb(216,158,49)" fg:x="78105" fg:w="62"/><text x="56.3498%" y="335.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::fire_send (19 samples, 0.01%)</title><rect x="56.1307%" y="309" width="0.0136%" height="15" fill="rgb(236,107,19)" fg:x="78148" fg:w="19"/><text x="56.3807%" y="319.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::lock (18 samples, 0.01%)</title><rect x="56.1314%" y="293" width="0.0129%" height="15" fill="rgb(228,185,30)" fg:x="78149" fg:w="18"/><text x="56.3814%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.01%)</title><rect x="56.1314%" y="277" width="0.0129%" height="15" fill="rgb(246,134,8)" fg:x="78149" fg:w="18"/><text x="56.3814%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (227 samples, 0.16%)</title><rect x="56.1480%" y="341" width="0.1630%" height="15" fill="rgb(214,143,50)" fg:x="78172" fg:w="227"/><text x="56.3980%" y="351.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (227 samples, 0.16%)</title><rect x="56.1480%" y="325" width="0.1630%" height="15" fill="rgb(228,75,8)" fg:x="78172" fg:w="227"/><text x="56.3980%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (212 samples, 0.15%)</title><rect x="56.1587%" y="309" width="0.1523%" height="15" fill="rgb(207,175,4)" fg:x="78187" fg:w="212"/><text x="56.4087%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (210 samples, 0.15%)</title><rect x="56.1602%" y="293" width="0.1508%" height="15" fill="rgb(205,108,24)" fg:x="78189" fg:w="210"/><text x="56.4102%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_swap (210 samples, 0.15%)</title><rect x="56.1602%" y="277" width="0.1508%" height="15" fill="rgb(244,120,49)" fg:x="78189" fg:w="210"/><text x="56.4102%" y="287.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (32 samples, 0.02%)</title><rect x="56.3110%" y="341" width="0.0230%" height="15" fill="rgb(223,47,38)" fg:x="78399" fg:w="32"/><text x="56.5610%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (32 samples, 0.02%)</title><rect x="56.3110%" y="325" width="0.0230%" height="15" fill="rgb(229,179,11)" fg:x="78399" fg:w="32"/><text x="56.5610%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.02%)</title><rect x="56.3110%" y="309" width="0.0230%" height="15" fill="rgb(231,122,1)" fg:x="78399" fg:w="32"/><text x="56.5610%" y="319.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (742 samples, 0.53%)</title><rect x="55.9196%" y="389" width="0.5330%" height="15" fill="rgb(245,119,9)" fg:x="77854" fg:w="742"/><text x="56.1696%" y="399.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (731 samples, 0.53%)</title><rect x="55.9275%" y="373" width="0.5250%" height="15" fill="rgb(241,163,25)" fg:x="77865" fg:w="731"/><text x="56.1775%" y="383.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (731 samples, 0.53%)</title><rect x="55.9275%" y="357" width="0.5250%" height="15" fill="rgb(217,214,3)" fg:x="77865" fg:w="731"/><text x="56.1775%" y="367.50"></text></g><g><title>flume::wait_lock (165 samples, 0.12%)</title><rect x="56.3340%" y="341" width="0.1185%" height="15" fill="rgb(240,86,28)" fg:x="78431" fg:w="165"/><text x="56.5840%" y="351.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (163 samples, 0.12%)</title><rect x="56.3354%" y="325" width="0.1171%" height="15" fill="rgb(215,47,9)" fg:x="78433" fg:w="163"/><text x="56.5854%" y="335.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (152 samples, 0.11%)</title><rect x="56.3433%" y="309" width="0.1092%" height="15" fill="rgb(252,25,45)" fg:x="78444" fg:w="152"/><text x="56.5933%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (152 samples, 0.11%)</title><rect x="56.3433%" y="293" width="0.1092%" height="15" fill="rgb(251,164,9)" fg:x="78444" fg:w="152"/><text x="56.5933%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (152 samples, 0.11%)</title><rect x="56.3433%" y="277" width="0.1092%" height="15" fill="rgb(233,194,0)" fg:x="78444" fg:w="152"/><text x="56.5933%" y="287.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (26 samples, 0.02%)</title><rect x="56.6744%" y="357" width="0.0187%" height="15" fill="rgb(249,111,24)" fg:x="78905" fg:w="26"/><text x="56.9244%" y="367.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (26 samples, 0.02%)</title><rect x="56.6744%" y="341" width="0.0187%" height="15" fill="rgb(250,223,3)" fg:x="78905" fg:w="26"/><text x="56.9244%" y="351.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (22 samples, 0.02%)</title><rect x="56.6931%" y="357" width="0.0158%" height="15" fill="rgb(236,178,37)" fg:x="78931" fg:w="22"/><text x="56.9431%" y="367.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (18 samples, 0.01%)</title><rect x="56.6960%" y="341" width="0.0129%" height="15" fill="rgb(241,158,50)" fg:x="78935" fg:w="18"/><text x="56.9460%" y="351.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (72 samples, 0.05%)</title><rect x="56.6673%" y="373" width="0.0517%" height="15" fill="rgb(213,121,41)" fg:x="78895" fg:w="72"/><text x="56.9173%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (39 samples, 0.03%)</title><rect x="56.7434%" y="325" width="0.0280%" height="15" fill="rgb(240,92,3)" fg:x="79001" fg:w="39"/><text x="56.9934%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.01%)</title><rect x="56.7592%" y="309" width="0.0122%" height="15" fill="rgb(205,123,3)" fg:x="79023" fg:w="17"/><text x="57.0092%" y="319.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (75 samples, 0.05%)</title><rect x="56.7190%" y="373" width="0.0539%" height="15" fill="rgb(205,97,47)" fg:x="78967" fg:w="75"/><text x="56.9690%" y="383.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (53 samples, 0.04%)</title><rect x="56.7348%" y="357" width="0.0381%" height="15" fill="rgb(247,152,14)" fg:x="78989" fg:w="53"/><text x="56.9848%" y="367.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (53 samples, 0.04%)</title><rect x="56.7348%" y="341" width="0.0381%" height="15" fill="rgb(248,195,53)" fg:x="78989" fg:w="53"/><text x="56.9848%" y="351.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (448 samples, 0.32%)</title><rect x="56.4525%" y="389" width="0.3218%" height="15" fill="rgb(226,201,16)" fg:x="78596" fg:w="448"/><text x="56.7025%" y="399.50"></text></g><g><title>wisp_mux::MuxInner::server_loop::_{{closure}} (43,551 samples, 31.28%)</title><rect x="25.5004%" y="405" width="31.2810%" height="15" fill="rgb(205,98,0)" fg:x="35503" fg:w="43551"/><text x="25.7504%" y="415.50">wisp_mux::MuxInner::server_loop::_{{closure}}</text></g><g><title>core::option::Option&lt;T&gt;::map (65 samples, 0.05%)</title><rect x="56.8203%" y="357" width="0.0467%" height="15" fill="rgb(214,191,48)" fg:x="79108" fg:w="65"/><text x="57.0703%" y="367.50"></text></g><g><title>core::ops::function::FnOnce::call_once (65 samples, 0.05%)</title><rect x="56.8203%" y="341" width="0.0467%" height="15" fill="rgb(237,112,39)" fg:x="79108" fg:w="65"/><text x="57.0703%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.05%)</title><rect x="56.8203%" y="325" width="0.0467%" height="15" fill="rgb(247,203,27)" fg:x="79108" fg:w="65"/><text x="57.0703%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (64 samples, 0.05%)</title><rect x="56.8210%" y="309" width="0.0460%" height="15" fill="rgb(235,124,28)" fg:x="79109" fg:w="64"/><text x="57.0710%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (64 samples, 0.05%)</title><rect x="56.8210%" y="293" width="0.0460%" height="15" fill="rgb(208,207,46)" fg:x="79109" fg:w="64"/><text x="57.0710%" y="303.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (19 samples, 0.01%)</title><rect x="56.8763%" y="325" width="0.0136%" height="15" fill="rgb(234,176,4)" fg:x="79186" fg:w="19"/><text x="57.1263%" y="335.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (76 samples, 0.05%)</title><rect x="56.8691%" y="357" width="0.0546%" height="15" fill="rgb(230,133,28)" fg:x="79176" fg:w="76"/><text x="57.1191%" y="367.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (76 samples, 0.05%)</title><rect x="56.8691%" y="341" width="0.0546%" height="15" fill="rgb(211,137,40)" fg:x="79176" fg:w="76"/><text x="57.1191%" y="351.50"></text></g><g><title>flume::wait_lock (46 samples, 0.03%)</title><rect x="56.8906%" y="325" width="0.0330%" height="15" fill="rgb(254,35,13)" fg:x="79206" fg:w="46"/><text x="57.1406%" y="335.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (46 samples, 0.03%)</title><rect x="56.8906%" y="309" width="0.0330%" height="15" fill="rgb(225,49,51)" fg:x="79206" fg:w="46"/><text x="57.1406%" y="319.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (43 samples, 0.03%)</title><rect x="56.8928%" y="293" width="0.0309%" height="15" fill="rgb(251,10,15)" fg:x="79209" fg:w="43"/><text x="57.1428%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (43 samples, 0.03%)</title><rect x="56.8928%" y="277" width="0.0309%" height="15" fill="rgb(228,207,15)" fg:x="79209" fg:w="43"/><text x="57.1428%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.03%)</title><rect x="56.8928%" y="261" width="0.0309%" height="15" fill="rgb(241,99,19)" fg:x="79209" fg:w="43"/><text x="57.1428%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (17 samples, 0.01%)</title><rect x="56.9237%" y="341" width="0.0122%" height="15" fill="rgb(207,104,49)" fg:x="79252" fg:w="17"/><text x="57.1737%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="56.9251%" y="325" width="0.0108%" height="15" fill="rgb(234,99,18)" fg:x="79254" fg:w="15"/><text x="57.1751%" y="335.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (43,868 samples, 31.51%)</title><rect x="25.4394%" y="485" width="31.5087%" height="15" fill="rgb(213,191,49)" fg:x="35418" fg:w="43868"/><text x="25.6894%" y="495.50">core::ops::function::impls::&lt;impl core::ops::functi..</text></g><g><title>wisp_mux::MuxInner::as_future::_{{closure}}::_{{closure}}::_{{closure}} (43,868 samples, 31.51%)</title><rect x="25.4394%" y="469" width="31.5087%" height="15" fill="rgb(210,226,19)" fg:x="35418" fg:w="43868"/><text x="25.6894%" y="479.50">wisp_mux::MuxInner::as_future::_{{closure}}::_{{clo..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (43,783 samples, 31.45%)</title><rect x="25.5004%" y="453" width="31.4477%" height="15" fill="rgb(229,97,18)" fg:x="35503" fg:w="43783"/><text x="25.7504%" y="463.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (43,783 samples, 31.45%)</title><rect x="25.5004%" y="437" width="31.4477%" height="15" fill="rgb(211,167,15)" fg:x="35503" fg:w="43783"/><text x="25.7504%" y="447.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (43,783 samples, 31.45%)</title><rect x="25.5004%" y="421" width="31.4477%" height="15" fill="rgb(210,169,34)" fg:x="35503" fg:w="43783"/><text x="25.7504%" y="431.50">&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as c..</text></g><g><title>wisp_mux::MuxInner::stream_loop::_{{closure}} (232 samples, 0.17%)</title><rect x="56.7815%" y="405" width="0.1666%" height="15" fill="rgb(241,121,31)" fg:x="79054" fg:w="232"/><text x="57.0315%" y="415.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (195 samples, 0.14%)</title><rect x="56.8080%" y="389" width="0.1401%" height="15" fill="rgb(232,40,11)" fg:x="79091" fg:w="195"/><text x="57.0580%" y="399.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (195 samples, 0.14%)</title><rect x="56.8080%" y="373" width="0.1401%" height="15" fill="rgb(205,86,26)" fg:x="79091" fg:w="195"/><text x="57.0580%" y="383.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (34 samples, 0.02%)</title><rect x="56.9237%" y="357" width="0.0244%" height="15" fill="rgb(231,126,28)" fg:x="79252" fg:w="34"/><text x="57.1737%" y="367.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (16 samples, 0.01%)</title><rect x="56.9366%" y="341" width="0.0115%" height="15" fill="rgb(219,221,18)" fg:x="79270" fg:w="16"/><text x="57.1866%" y="351.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (16 samples, 0.01%)</title><rect x="56.9366%" y="325" width="0.0115%" height="15" fill="rgb(211,40,0)" fg:x="79270" fg:w="16"/><text x="57.1866%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (16 samples, 0.01%)</title><rect x="56.9366%" y="309" width="0.0115%" height="15" fill="rgb(239,85,43)" fg:x="79270" fg:w="16"/><text x="57.1866%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.01%)</title><rect x="56.9366%" y="293" width="0.0115%" height="15" fill="rgb(231,55,21)" fg:x="79270" fg:w="16"/><text x="57.1866%" y="303.50"></text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (43,976 samples, 31.59%)</title><rect x="25.3712%" y="581" width="31.5863%" height="15" fill="rgb(225,184,43)" fg:x="35323" fg:w="43976"/><text x="25.6212%" y="591.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (43,976 samples, 31.59%)</title><rect x="25.3712%" y="565" width="31.5863%" height="15" fill="rgb(251,158,41)" fg:x="35323" fg:w="43976"/><text x="25.6212%" y="575.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as c..</text></g><g><title>wisp_mux::MuxInner::server_into_future::_{{closure}} (43,976 samples, 31.59%)</title><rect x="25.3712%" y="549" width="31.5863%" height="15" fill="rgb(234,159,37)" fg:x="35323" fg:w="43976"/><text x="25.6212%" y="559.50">wisp_mux::MuxInner::server_into_future::_{{closure}}</text></g><g><title>wisp_mux::MuxInner::as_future::_{{closure}} (43,941 samples, 31.56%)</title><rect x="25.3963%" y="533" width="31.5611%" height="15" fill="rgb(216,204,22)" fg:x="35358" fg:w="43941"/><text x="25.6463%" y="543.50">wisp_mux::MuxInner::as_future::_{{closure}}</text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (43,893 samples, 31.53%)</title><rect x="25.4308%" y="517" width="31.5267%" height="15" fill="rgb(214,17,3)" fg:x="35406" fg:w="43893"/><text x="25.6808%" y="527.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::..</text></g><g><title>wisp_mux::MuxInner::as_future::_{{closure}}::_{{closure}} (43,893 samples, 31.53%)</title><rect x="25.4308%" y="501" width="31.5267%" height="15" fill="rgb(212,111,17)" fg:x="35406" fg:w="43893"/><text x="25.6808%" y="511.50">wisp_mux::MuxInner::as_future::_{{closure}}::_{{clo..</text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (123 samples, 0.09%)</title><rect x="58.4091%" y="373" width="0.0883%" height="15" fill="rgb(221,157,24)" fg:x="81320" fg:w="123"/><text x="58.6591%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (33 samples, 0.02%)</title><rect x="58.4737%" y="357" width="0.0237%" height="15" fill="rgb(252,16,13)" fg:x="81410" fg:w="33"/><text x="58.7237%" y="367.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (187 samples, 0.13%)</title><rect x="58.5003%" y="373" width="0.1343%" height="15" fill="rgb(221,62,2)" fg:x="81447" fg:w="187"/><text x="58.7503%" y="383.50"></text></g><g><title>futures_util::unfold_state::_::&lt;impl futures_util::unfold_state::UnfoldState&lt;T,R&gt;&gt;::project_replace (25 samples, 0.02%)</title><rect x="58.6166%" y="357" width="0.0180%" height="15" fill="rgb(247,87,22)" fg:x="81609" fg:w="25"/><text x="58.8666%" y="367.50"></text></g><g><title>core::ptr::read (24 samples, 0.02%)</title><rect x="58.6173%" y="341" width="0.0172%" height="15" fill="rgb(215,73,9)" fg:x="81610" fg:w="24"/><text x="58.8673%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (22 samples, 0.02%)</title><rect x="58.7438%" y="341" width="0.0158%" height="15" fill="rgb(207,175,33)" fg:x="81786" fg:w="22"/><text x="58.9938%" y="351.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (22 samples, 0.02%)</title><rect x="58.7438%" y="325" width="0.0158%" height="15" fill="rgb(243,129,54)" fg:x="81786" fg:w="22"/><text x="58.9938%" y="335.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (22 samples, 0.02%)</title><rect x="58.7438%" y="309" width="0.0158%" height="15" fill="rgb(227,119,45)" fg:x="81786" fg:w="22"/><text x="58.9938%" y="319.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (115 samples, 0.08%)</title><rect x="58.8486%" y="261" width="0.0826%" height="15" fill="rgb(205,109,36)" fg:x="81932" fg:w="115"/><text x="59.0986%" y="271.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (98 samples, 0.07%)</title><rect x="58.8608%" y="245" width="0.0704%" height="15" fill="rgb(205,6,39)" fg:x="81949" fg:w="98"/><text x="59.1108%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (98 samples, 0.07%)</title><rect x="58.8608%" y="229" width="0.0704%" height="15" fill="rgb(221,32,16)" fg:x="81949" fg:w="98"/><text x="59.1108%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (98 samples, 0.07%)</title><rect x="58.8608%" y="213" width="0.0704%" height="15" fill="rgb(228,144,50)" fg:x="81949" fg:w="98"/><text x="59.1108%" y="223.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (116 samples, 0.08%)</title><rect x="58.8486%" y="277" width="0.0833%" height="15" fill="rgb(229,201,53)" fg:x="81932" fg:w="116"/><text x="59.0986%" y="287.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (48 samples, 0.03%)</title><rect x="58.9319%" y="277" width="0.0345%" height="15" fill="rgb(249,153,27)" fg:x="82048" fg:w="48"/><text x="59.1819%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.01%)</title><rect x="59.0066%" y="213" width="0.0122%" height="15" fill="rgb(227,106,25)" fg:x="82152" fg:w="17"/><text x="59.2566%" y="223.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (130 samples, 0.09%)</title><rect x="59.0584%" y="181" width="0.0934%" height="15" fill="rgb(230,65,29)" fg:x="82224" fg:w="130"/><text x="59.3084%" y="191.50"></text></g><g><title>core::ptr::read (125 samples, 0.09%)</title><rect x="59.0620%" y="165" width="0.0898%" height="15" fill="rgb(221,57,46)" fg:x="82229" fg:w="125"/><text x="59.3120%" y="175.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (146 samples, 0.10%)</title><rect x="59.0512%" y="197" width="0.1049%" height="15" fill="rgb(229,161,17)" fg:x="82214" fg:w="146"/><text x="59.3012%" y="207.50"></text></g><g><title>core::mem::drop (92 samples, 0.07%)</title><rect x="59.1611%" y="197" width="0.0661%" height="15" fill="rgb(222,213,11)" fg:x="82367" fg:w="92"/><text x="59.4111%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (92 samples, 0.07%)</title><rect x="59.1611%" y="181" width="0.0661%" height="15" fill="rgb(235,35,13)" fg:x="82367" fg:w="92"/><text x="59.4111%" y="191.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (92 samples, 0.07%)</title><rect x="59.1611%" y="165" width="0.0661%" height="15" fill="rgb(233,158,34)" fg:x="82367" fg:w="92"/><text x="59.4111%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (82 samples, 0.06%)</title><rect x="59.1683%" y="149" width="0.0589%" height="15" fill="rgb(215,151,48)" fg:x="82377" fg:w="82"/><text x="59.4183%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (80 samples, 0.06%)</title><rect x="59.1697%" y="133" width="0.0575%" height="15" fill="rgb(229,84,14)" fg:x="82379" fg:w="80"/><text x="59.4197%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_swap (80 samples, 0.06%)</title><rect x="59.1697%" y="117" width="0.0575%" height="15" fill="rgb(229,68,14)" fg:x="82379" fg:w="80"/><text x="59.4197%" y="127.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (26 samples, 0.02%)</title><rect x="59.2272%" y="197" width="0.0187%" height="15" fill="rgb(243,106,26)" fg:x="82459" fg:w="26"/><text x="59.4772%" y="207.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (20 samples, 0.01%)</title><rect x="59.2458%" y="181" width="0.0144%" height="15" fill="rgb(206,45,38)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (20 samples, 0.01%)</title><rect x="59.2458%" y="165" width="0.0144%" height="15" fill="rgb(226,6,15)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="175.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (20 samples, 0.01%)</title><rect x="59.2458%" y="149" width="0.0144%" height="15" fill="rgb(232,22,54)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="159.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.01%)</title><rect x="59.2458%" y="133" width="0.0144%" height="15" fill="rgb(229,222,32)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.01%)</title><rect x="59.2458%" y="117" width="0.0144%" height="15" fill="rgb(228,62,29)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="127.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.01%)</title><rect x="59.2458%" y="101" width="0.0144%" height="15" fill="rgb(251,103,34)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="111.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.01%)</title><rect x="59.2458%" y="85" width="0.0144%" height="15" fill="rgb(233,12,30)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="95.50"></text></g><g><title>__rdl_alloc (20 samples, 0.01%)</title><rect x="59.2458%" y="69" width="0.0144%" height="15" fill="rgb(238,52,0)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="79.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (20 samples, 0.01%)</title><rect x="59.2458%" y="53" width="0.0144%" height="15" fill="rgb(223,98,5)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="63.50"></text></g><g><title>malloc (20 samples, 0.01%)</title><rect x="59.2458%" y="37" width="0.0144%" height="15" fill="rgb(228,75,37)" fg:x="82485" fg:w="20"/><text x="59.4958%" y="47.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (25 samples, 0.02%)</title><rect x="59.2458%" y="197" width="0.0180%" height="15" fill="rgb(205,115,49)" fg:x="82485" fg:w="25"/><text x="59.4958%" y="207.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (441 samples, 0.32%)</title><rect x="59.0318%" y="213" width="0.3168%" height="15" fill="rgb(250,154,43)" fg:x="82187" fg:w="441"/><text x="59.2818%" y="223.50"></text></g><g><title>flume::wait_lock (118 samples, 0.08%)</title><rect x="59.2638%" y="197" width="0.0848%" height="15" fill="rgb(226,43,29)" fg:x="82510" fg:w="118"/><text x="59.5138%" y="207.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (118 samples, 0.08%)</title><rect x="59.2638%" y="181" width="0.0848%" height="15" fill="rgb(249,228,39)" fg:x="82510" fg:w="118"/><text x="59.5138%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (111 samples, 0.08%)</title><rect x="59.2688%" y="165" width="0.0797%" height="15" fill="rgb(216,79,43)" fg:x="82517" fg:w="111"/><text x="59.5188%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (108 samples, 0.08%)</title><rect x="59.2710%" y="149" width="0.0776%" height="15" fill="rgb(228,95,12)" fg:x="82520" fg:w="108"/><text x="59.5210%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (108 samples, 0.08%)</title><rect x="59.2710%" y="133" width="0.0776%" height="15" fill="rgb(249,221,15)" fg:x="82520" fg:w="108"/><text x="59.5210%" y="143.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (14 samples, 0.01%)</title><rect x="59.3521%" y="181" width="0.0101%" height="15" fill="rgb(233,34,13)" fg:x="82633" fg:w="14"/><text x="59.6021%" y="191.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (50 samples, 0.04%)</title><rect x="59.3485%" y="213" width="0.0359%" height="15" fill="rgb(214,103,39)" fg:x="82628" fg:w="50"/><text x="59.5985%" y="223.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (50 samples, 0.04%)</title><rect x="59.3485%" y="197" width="0.0359%" height="15" fill="rgb(251,126,39)" fg:x="82628" fg:w="50"/><text x="59.5985%" y="207.50"></text></g><g><title>flume::wait_lock (16 samples, 0.01%)</title><rect x="59.3730%" y="181" width="0.0115%" height="15" fill="rgb(214,216,36)" fg:x="82662" fg:w="16"/><text x="59.6230%" y="191.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="59.3730%" y="165" width="0.0115%" height="15" fill="rgb(220,221,8)" fg:x="82662" fg:w="16"/><text x="59.6230%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (14 samples, 0.01%)</title><rect x="59.3744%" y="149" width="0.0101%" height="15" fill="rgb(240,216,3)" fg:x="82664" fg:w="14"/><text x="59.6244%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.01%)</title><rect x="59.3744%" y="133" width="0.0101%" height="15" fill="rgb(232,218,17)" fg:x="82664" fg:w="14"/><text x="59.6244%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="59.3744%" y="117" width="0.0101%" height="15" fill="rgb(229,163,45)" fg:x="82664" fg:w="14"/><text x="59.6244%" y="127.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (555 samples, 0.40%)</title><rect x="58.9908%" y="245" width="0.3986%" height="15" fill="rgb(231,110,42)" fg:x="82130" fg:w="555"/><text x="59.2408%" y="255.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (555 samples, 0.40%)</title><rect x="58.9908%" y="229" width="0.3986%" height="15" fill="rgb(208,170,48)" fg:x="82130" fg:w="555"/><text x="59.2408%" y="239.50"></text></g><g><title>&lt;event_listener::sys::ListLock&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.01%)</title><rect x="59.4218%" y="165" width="0.0136%" height="15" fill="rgb(239,116,25)" fg:x="82730" fg:w="19"/><text x="59.6718%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (56 samples, 0.04%)</title><rect x="59.4218%" y="181" width="0.0402%" height="15" fill="rgb(219,200,50)" fg:x="82730" fg:w="56"/><text x="59.6718%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="59.4354%" y="165" width="0.0266%" height="15" fill="rgb(245,200,0)" fg:x="82749" fg:w="37"/><text x="59.6854%" y="175.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.03%)</title><rect x="59.4354%" y="149" width="0.0266%" height="15" fill="rgb(245,119,33)" fg:x="82749" fg:w="37"/><text x="59.6854%" y="159.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (32 samples, 0.02%)</title><rect x="59.4390%" y="133" width="0.0230%" height="15" fill="rgb(231,125,12)" fg:x="82754" fg:w="32"/><text x="59.6890%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (30 samples, 0.02%)</title><rect x="59.4405%" y="117" width="0.0215%" height="15" fill="rgb(216,96,41)" fg:x="82756" fg:w="30"/><text x="59.6905%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_swap (30 samples, 0.02%)</title><rect x="59.4405%" y="101" width="0.0215%" height="15" fill="rgb(248,43,45)" fg:x="82756" fg:w="30"/><text x="59.6905%" y="111.50"></text></g><g><title>event_listener::TaskRef::into_task (194 samples, 0.14%)</title><rect x="59.4620%" y="181" width="0.1393%" height="15" fill="rgb(217,222,7)" fg:x="82786" fg:w="194"/><text x="59.7120%" y="191.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (194 samples, 0.14%)</title><rect x="59.4620%" y="165" width="0.1393%" height="15" fill="rgb(233,28,6)" fg:x="82786" fg:w="194"/><text x="59.7120%" y="175.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (183 samples, 0.13%)</title><rect x="59.4699%" y="149" width="0.1314%" height="15" fill="rgb(231,218,15)" fg:x="82797" fg:w="183"/><text x="59.7199%" y="159.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (118 samples, 0.08%)</title><rect x="59.5166%" y="133" width="0.0848%" height="15" fill="rgb(226,171,48)" fg:x="82862" fg:w="118"/><text x="59.7666%" y="143.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (117 samples, 0.08%)</title><rect x="59.5173%" y="117" width="0.0840%" height="15" fill="rgb(235,201,9)" fg:x="82863" fg:w="117"/><text x="59.7673%" y="127.50"></text></g><g><title>core::sync::atomic::atomic_add (117 samples, 0.08%)</title><rect x="59.5173%" y="101" width="0.0840%" height="15" fill="rgb(217,80,15)" fg:x="82863" fg:w="117"/><text x="59.7673%" y="111.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (345 samples, 0.25%)</title><rect x="59.3902%" y="229" width="0.2478%" height="15" fill="rgb(219,152,8)" fg:x="82686" fg:w="345"/><text x="59.6402%" y="239.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (337 samples, 0.24%)</title><rect x="59.3959%" y="213" width="0.2421%" height="15" fill="rgb(243,107,38)" fg:x="82694" fg:w="337"/><text x="59.6459%" y="223.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (321 samples, 0.23%)</title><rect x="59.4074%" y="197" width="0.2306%" height="15" fill="rgb(231,17,5)" fg:x="82710" fg:w="321"/><text x="59.6574%" y="207.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (50 samples, 0.04%)</title><rect x="59.6021%" y="181" width="0.0359%" height="15" fill="rgb(209,25,54)" fg:x="82981" fg:w="50"/><text x="59.8521%" y="191.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (50 samples, 0.04%)</title><rect x="59.6021%" y="165" width="0.0359%" height="15" fill="rgb(219,0,2)" fg:x="82981" fg:w="50"/><text x="59.8521%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (43 samples, 0.03%)</title><rect x="59.6071%" y="149" width="0.0309%" height="15" fill="rgb(246,9,5)" fg:x="82988" fg:w="43"/><text x="59.8571%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (42 samples, 0.03%)</title><rect x="59.6078%" y="133" width="0.0302%" height="15" fill="rgb(226,159,4)" fg:x="82989" fg:w="42"/><text x="59.8578%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (42 samples, 0.03%)</title><rect x="59.6078%" y="117" width="0.0302%" height="15" fill="rgb(219,175,34)" fg:x="82989" fg:w="42"/><text x="59.8578%" y="127.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,172 samples, 0.84%)</title><rect x="58.7969%" y="309" width="0.8418%" height="15" fill="rgb(236,10,46)" fg:x="81860" fg:w="1172"/><text x="59.0469%" y="319.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (1,172 samples, 0.84%)</title><rect x="58.7969%" y="293" width="0.8418%" height="15" fill="rgb(240,211,16)" fg:x="81860" fg:w="1172"/><text x="59.0469%" y="303.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (936 samples, 0.67%)</title><rect x="58.9664%" y="277" width="0.6723%" height="15" fill="rgb(205,3,43)" fg:x="82096" fg:w="936"/><text x="59.2164%" y="287.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (902 samples, 0.65%)</title><rect x="58.9908%" y="261" width="0.6479%" height="15" fill="rgb(245,7,22)" fg:x="82130" fg:w="902"/><text x="59.2408%" y="271.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (347 samples, 0.25%)</title><rect x="59.3895%" y="245" width="0.2492%" height="15" fill="rgb(239,132,32)" fg:x="82685" fg:w="347"/><text x="59.6395%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (65 samples, 0.05%)</title><rect x="59.6387%" y="293" width="0.0467%" height="15" fill="rgb(228,202,34)" fg:x="83032" fg:w="65"/><text x="59.8887%" y="303.50"></text></g><g><title>core::ptr::swap (64 samples, 0.05%)</title><rect x="59.6394%" y="277" width="0.0460%" height="15" fill="rgb(254,200,22)" fg:x="83033" fg:w="64"/><text x="59.8894%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.04%)</title><rect x="59.6409%" y="261" width="0.0445%" height="15" fill="rgb(219,10,39)" fg:x="83035" fg:w="62"/><text x="59.8909%" y="271.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,298 samples, 0.93%)</title><rect x="58.7610%" y="341" width="0.9323%" height="15" fill="rgb(226,210,39)" fg:x="81810" fg:w="1298"/><text x="59.0110%" y="351.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (1,298 samples, 0.93%)</title><rect x="58.7610%" y="325" width="0.9323%" height="15" fill="rgb(208,219,16)" fg:x="81810" fg:w="1298"/><text x="59.0110%" y="335.50"></text></g><g><title>futures_util::async_await::random::shuffle (76 samples, 0.05%)</title><rect x="59.6387%" y="309" width="0.0546%" height="15" fill="rgb(216,158,51)" fg:x="83032" fg:w="76"/><text x="59.8887%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17 samples, 0.01%)</title><rect x="59.7062%" y="261" width="0.0122%" height="15" fill="rgb(233,14,44)" fg:x="83126" fg:w="17"/><text x="59.9562%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;bytes::bytes::Bytes,dyn flume::signal::Signal&gt;&gt;&gt; (31 samples, 0.02%)</title><rect x="59.7062%" y="293" width="0.0223%" height="15" fill="rgb(237,97,39)" fg:x="83126" fg:w="31"/><text x="59.9562%" y="303.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.02%)</title><rect x="59.7062%" y="277" width="0.0223%" height="15" fill="rgb(218,198,43)" fg:x="83126" fg:w="31"/><text x="59.9562%" y="287.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.04%)</title><rect x="59.6962%" y="325" width="0.0424%" height="15" fill="rgb(231,104,20)" fg:x="83112" fg:w="59"/><text x="59.9462%" y="335.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (59 samples, 0.04%)</title><rect x="59.6962%" y="309" width="0.0424%" height="15" fill="rgb(254,36,13)" fg:x="83112" fg:w="59"/><text x="59.9462%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (76 samples, 0.05%)</title><rect x="59.6962%" y="341" width="0.0546%" height="15" fill="rgb(248,14,50)" fg:x="83112" fg:w="76"/><text x="59.9462%" y="351.50"></text></g><g><title>cfree (178 samples, 0.13%)</title><rect x="59.7515%" y="309" width="0.1279%" height="15" fill="rgb(217,107,29)" fg:x="83189" fg:w="178"/><text x="60.0015%" y="319.50"></text></g><g><title>[libc.so.6] (43 samples, 0.03%)</title><rect x="59.8484%" y="293" width="0.0309%" height="15" fill="rgb(251,169,33)" fg:x="83324" fg:w="43"/><text x="60.0984%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (64 samples, 0.05%)</title><rect x="59.8815%" y="245" width="0.0460%" height="15" fill="rgb(217,108,32)" fg:x="83370" fg:w="64"/><text x="60.1315%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.05%)</title><rect x="59.8815%" y="229" width="0.0460%" height="15" fill="rgb(219,66,42)" fg:x="83370" fg:w="64"/><text x="60.1315%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (61 samples, 0.04%)</title><rect x="59.8836%" y="213" width="0.0438%" height="15" fill="rgb(206,180,7)" fg:x="83373" fg:w="61"/><text x="60.1336%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_sub (61 samples, 0.04%)</title><rect x="59.8836%" y="197" width="0.0438%" height="15" fill="rgb(208,226,31)" fg:x="83373" fg:w="61"/><text x="60.1336%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (48 samples, 0.03%)</title><rect x="59.9375%" y="213" width="0.0345%" height="15" fill="rgb(218,26,49)" fg:x="83448" fg:w="48"/><text x="60.1875%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (43 samples, 0.03%)</title><rect x="59.9411%" y="197" width="0.0309%" height="15" fill="rgb(233,197,48)" fg:x="83453" fg:w="43"/><text x="60.1911%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (40 samples, 0.03%)</title><rect x="59.9433%" y="181" width="0.0287%" height="15" fill="rgb(252,181,51)" fg:x="83456" fg:w="40"/><text x="60.1933%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (35 samples, 0.03%)</title><rect x="59.9468%" y="165" width="0.0251%" height="15" fill="rgb(253,90,19)" fg:x="83461" fg:w="35"/><text x="60.1968%" y="175.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="59.9468%" y="149" width="0.0251%" height="15" fill="rgb(215,171,30)" fg:x="83461" fg:w="35"/><text x="60.1968%" y="159.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (32 samples, 0.02%)</title><rect x="59.9490%" y="133" width="0.0230%" height="15" fill="rgb(214,222,9)" fg:x="83464" fg:w="32"/><text x="60.1990%" y="143.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (28 samples, 0.02%)</title><rect x="59.9519%" y="117" width="0.0201%" height="15" fill="rgb(223,3,22)" fg:x="83468" fg:w="28"/><text x="60.2019%" y="127.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (28 samples, 0.02%)</title><rect x="59.9519%" y="101" width="0.0201%" height="15" fill="rgb(225,196,46)" fg:x="83468" fg:w="28"/><text x="60.2019%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="59.9526%" y="85" width="0.0194%" height="15" fill="rgb(209,110,37)" fg:x="83469" fg:w="27"/><text x="60.2026%" y="95.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="59.9526%" y="69" width="0.0194%" height="15" fill="rgb(249,89,12)" fg:x="83469" fg:w="27"/><text x="60.2026%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (89 samples, 0.06%)</title><rect x="59.9756%" y="197" width="0.0639%" height="15" fill="rgb(226,27,33)" fg:x="83501" fg:w="89"/><text x="60.2256%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (84 samples, 0.06%)</title><rect x="59.9792%" y="181" width="0.0603%" height="15" fill="rgb(213,82,22)" fg:x="83506" fg:w="84"/><text x="60.2292%" y="191.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.06%)</title><rect x="59.9792%" y="165" width="0.0603%" height="15" fill="rgb(248,140,0)" fg:x="83506" fg:w="84"/><text x="60.2292%" y="175.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (81 samples, 0.06%)</title><rect x="59.9813%" y="149" width="0.0582%" height="15" fill="rgb(228,106,3)" fg:x="83509" fg:w="81"/><text x="60.2313%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (81 samples, 0.06%)</title><rect x="59.9813%" y="133" width="0.0582%" height="15" fill="rgb(209,23,37)" fg:x="83509" fg:w="81"/><text x="60.2313%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_swap (81 samples, 0.06%)</title><rect x="59.9813%" y="117" width="0.0582%" height="15" fill="rgb(241,93,50)" fg:x="83509" fg:w="81"/><text x="60.2313%" y="127.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (72 samples, 0.05%)</title><rect x="60.0395%" y="197" width="0.0517%" height="15" fill="rgb(253,46,43)" fg:x="83590" fg:w="72"/><text x="60.2895%" y="207.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (72 samples, 0.05%)</title><rect x="60.0395%" y="181" width="0.0517%" height="15" fill="rgb(226,206,43)" fg:x="83590" fg:w="72"/><text x="60.2895%" y="191.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (65 samples, 0.05%)</title><rect x="60.0445%" y="165" width="0.0467%" height="15" fill="rgb(217,54,7)" fg:x="83597" fg:w="65"/><text x="60.2945%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (64 samples, 0.05%)</title><rect x="60.0453%" y="149" width="0.0460%" height="15" fill="rgb(223,5,52)" fg:x="83598" fg:w="64"/><text x="60.2953%" y="159.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.05%)</title><rect x="60.0453%" y="133" width="0.0460%" height="15" fill="rgb(206,52,46)" fg:x="83598" fg:w="64"/><text x="60.2953%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (530 samples, 0.38%)</title><rect x="59.7508%" y="341" width="0.3807%" height="15" fill="rgb(253,136,11)" fg:x="83188" fg:w="530"/><text x="60.0008%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (530 samples, 0.38%)</title><rect x="59.7508%" y="325" width="0.3807%" height="15" fill="rgb(208,106,33)" fg:x="83188" fg:w="530"/><text x="60.0008%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (351 samples, 0.25%)</title><rect x="59.8793%" y="309" width="0.2521%" height="15" fill="rgb(206,54,4)" fg:x="83367" fg:w="351"/><text x="60.1293%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (350 samples, 0.25%)</title><rect x="59.8801%" y="293" width="0.2514%" height="15" fill="rgb(213,3,15)" fg:x="83368" fg:w="350"/><text x="60.1301%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (350 samples, 0.25%)</title><rect x="59.8801%" y="277" width="0.2514%" height="15" fill="rgb(252,211,39)" fg:x="83368" fg:w="350"/><text x="60.1301%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (348 samples, 0.25%)</title><rect x="59.8815%" y="261" width="0.2500%" height="15" fill="rgb(223,6,36)" fg:x="83370" fg:w="348"/><text x="60.1315%" y="271.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (283 samples, 0.20%)</title><rect x="59.9282%" y="245" width="0.2033%" height="15" fill="rgb(252,169,45)" fg:x="83435" fg:w="283"/><text x="60.1782%" y="255.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (283 samples, 0.20%)</title><rect x="59.9282%" y="229" width="0.2033%" height="15" fill="rgb(212,48,26)" fg:x="83435" fg:w="283"/><text x="60.1782%" y="239.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (222 samples, 0.16%)</title><rect x="59.9720%" y="213" width="0.1595%" height="15" fill="rgb(251,102,48)" fg:x="83496" fg:w="222"/><text x="60.2220%" y="223.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (56 samples, 0.04%)</title><rect x="60.0912%" y="197" width="0.0402%" height="15" fill="rgb(243,208,16)" fg:x="83662" fg:w="56"/><text x="60.3412%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (76 samples, 0.05%)</title><rect x="60.1314%" y="341" width="0.0546%" height="15" fill="rgb(219,96,24)" fg:x="83718" fg:w="76"/><text x="60.3814%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (73 samples, 0.05%)</title><rect x="60.1336%" y="325" width="0.0524%" height="15" fill="rgb(219,33,29)" fg:x="83721" fg:w="73"/><text x="60.3836%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (69 samples, 0.05%)</title><rect x="60.1860%" y="341" width="0.0496%" height="15" fill="rgb(223,176,5)" fg:x="83794" fg:w="69"/><text x="60.4360%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_add (69 samples, 0.05%)</title><rect x="60.1860%" y="325" width="0.0496%" height="15" fill="rgb(228,140,14)" fg:x="83794" fg:w="69"/><text x="60.4360%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (279 samples, 0.20%)</title><rect x="60.2377%" y="325" width="0.2004%" height="15" fill="rgb(217,179,31)" fg:x="83866" fg:w="279"/><text x="60.4877%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (277 samples, 0.20%)</title><rect x="60.2392%" y="309" width="0.1990%" height="15" fill="rgb(230,9,30)" fg:x="83868" fg:w="277"/><text x="60.4892%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_add (277 samples, 0.20%)</title><rect x="60.2392%" y="293" width="0.1990%" height="15" fill="rgb(230,136,20)" fg:x="83868" fg:w="277"/><text x="60.4892%" y="303.50"></text></g><g><title>__rdl_alloc (91 samples, 0.07%)</title><rect x="60.4504%" y="229" width="0.0654%" height="15" fill="rgb(215,210,22)" fg:x="84162" fg:w="91"/><text x="60.7004%" y="239.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (91 samples, 0.07%)</title><rect x="60.4504%" y="213" width="0.0654%" height="15" fill="rgb(218,43,5)" fg:x="84162" fg:w="91"/><text x="60.7004%" y="223.50"></text></g><g><title>malloc (89 samples, 0.06%)</title><rect x="60.4518%" y="197" width="0.0639%" height="15" fill="rgb(216,11,5)" fg:x="84164" fg:w="89"/><text x="60.7018%" y="207.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (122 samples, 0.09%)</title><rect x="60.4381%" y="325" width="0.0876%" height="15" fill="rgb(209,82,29)" fg:x="84145" fg:w="122"/><text x="60.6881%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (122 samples, 0.09%)</title><rect x="60.4381%" y="309" width="0.0876%" height="15" fill="rgb(244,115,12)" fg:x="84145" fg:w="122"/><text x="60.6881%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (105 samples, 0.08%)</title><rect x="60.4504%" y="293" width="0.0754%" height="15" fill="rgb(222,82,18)" fg:x="84162" fg:w="105"/><text x="60.7004%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (105 samples, 0.08%)</title><rect x="60.4504%" y="277" width="0.0754%" height="15" fill="rgb(249,227,8)" fg:x="84162" fg:w="105"/><text x="60.7004%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (105 samples, 0.08%)</title><rect x="60.4504%" y="261" width="0.0754%" height="15" fill="rgb(253,141,45)" fg:x="84162" fg:w="105"/><text x="60.7004%" y="271.50"></text></g><g><title>alloc::alloc::alloc (105 samples, 0.08%)</title><rect x="60.4504%" y="245" width="0.0754%" height="15" fill="rgb(234,184,4)" fg:x="84162" fg:w="105"/><text x="60.7004%" y="255.50"></text></g><g><title>core::ptr::read_volatile (14 samples, 0.01%)</title><rect x="60.5157%" y="229" width="0.0101%" height="15" fill="rgb(218,194,23)" fg:x="84253" fg:w="14"/><text x="60.7657%" y="239.50"></text></g><g><title>event_listener::Event&lt;T&gt;::inner (25 samples, 0.02%)</title><rect x="60.5258%" y="325" width="0.0180%" height="15" fill="rgb(235,66,41)" fg:x="84267" fg:w="25"/><text x="60.7758%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (25 samples, 0.02%)</title><rect x="60.5258%" y="309" width="0.0180%" height="15" fill="rgb(245,217,1)" fg:x="84267" fg:w="25"/><text x="60.7758%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.02%)</title><rect x="60.5258%" y="293" width="0.0180%" height="15" fill="rgb(229,91,1)" fg:x="84267" fg:w="25"/><text x="60.7758%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (83 samples, 0.06%)</title><rect x="60.5581%" y="293" width="0.0596%" height="15" fill="rgb(207,101,30)" fg:x="84312" fg:w="83"/><text x="60.8081%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (79 samples, 0.06%)</title><rect x="60.5610%" y="277" width="0.0567%" height="15" fill="rgb(223,82,49)" fg:x="84316" fg:w="79"/><text x="60.8110%" y="287.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (79 samples, 0.06%)</title><rect x="60.5610%" y="261" width="0.0567%" height="15" fill="rgb(218,167,17)" fg:x="84316" fg:w="79"/><text x="60.8110%" y="271.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (76 samples, 0.05%)</title><rect x="60.5631%" y="245" width="0.0546%" height="15" fill="rgb(208,103,14)" fg:x="84319" fg:w="76"/><text x="60.8131%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (75 samples, 0.05%)</title><rect x="60.5638%" y="229" width="0.0539%" height="15" fill="rgb(238,20,8)" fg:x="84320" fg:w="75"/><text x="60.8138%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_swap (75 samples, 0.05%)</title><rect x="60.5638%" y="213" width="0.0539%" height="15" fill="rgb(218,80,54)" fg:x="84320" fg:w="75"/><text x="60.8138%" y="223.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (661 samples, 0.47%)</title><rect x="60.2363%" y="341" width="0.4748%" height="15" fill="rgb(240,144,17)" fg:x="83864" fg:w="661"/><text x="60.4863%" y="351.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (233 samples, 0.17%)</title><rect x="60.5437%" y="325" width="0.1674%" height="15" fill="rgb(245,27,50)" fg:x="84292" fg:w="233"/><text x="60.7937%" y="335.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (233 samples, 0.17%)</title><rect x="60.5437%" y="309" width="0.1674%" height="15" fill="rgb(251,51,7)" fg:x="84292" fg:w="233"/><text x="60.7937%" y="319.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (130 samples, 0.09%)</title><rect x="60.6177%" y="293" width="0.0934%" height="15" fill="rgb(245,217,29)" fg:x="84395" fg:w="130"/><text x="60.8677%" y="303.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (130 samples, 0.09%)</title><rect x="60.6177%" y="277" width="0.0934%" height="15" fill="rgb(221,176,29)" fg:x="84395" fg:w="130"/><text x="60.8677%" y="287.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (124 samples, 0.09%)</title><rect x="60.6220%" y="261" width="0.0891%" height="15" fill="rgb(212,180,24)" fg:x="84401" fg:w="124"/><text x="60.8720%" y="271.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (124 samples, 0.09%)</title><rect x="60.6220%" y="245" width="0.0891%" height="15" fill="rgb(254,24,2)" fg:x="84401" fg:w="124"/><text x="60.8720%" y="255.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (124 samples, 0.09%)</title><rect x="60.6220%" y="229" width="0.0891%" height="15" fill="rgb(230,100,2)" fg:x="84401" fg:w="124"/><text x="60.8720%" y="239.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (16 samples, 0.01%)</title><rect x="60.7283%" y="261" width="0.0115%" height="15" fill="rgb(219,142,25)" fg:x="84549" fg:w="16"/><text x="60.9783%" y="271.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (16 samples, 0.01%)</title><rect x="60.7283%" y="245" width="0.0115%" height="15" fill="rgb(240,73,43)" fg:x="84549" fg:w="16"/><text x="60.9783%" y="255.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (16 samples, 0.01%)</title><rect x="60.7283%" y="229" width="0.0115%" height="15" fill="rgb(214,114,15)" fg:x="84549" fg:w="16"/><text x="60.9783%" y="239.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (16 samples, 0.01%)</title><rect x="60.7283%" y="213" width="0.0115%" height="15" fill="rgb(207,130,4)" fg:x="84549" fg:w="16"/><text x="60.9783%" y="223.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (16 samples, 0.01%)</title><rect x="60.7283%" y="197" width="0.0115%" height="15" fill="rgb(221,25,40)" fg:x="84549" fg:w="16"/><text x="60.9783%" y="207.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (53 samples, 0.04%)</title><rect x="60.7168%" y="325" width="0.0381%" height="15" fill="rgb(241,184,7)" fg:x="84533" fg:w="53"/><text x="60.9668%" y="335.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (53 samples, 0.04%)</title><rect x="60.7168%" y="309" width="0.0381%" height="15" fill="rgb(235,159,4)" fg:x="84533" fg:w="53"/><text x="60.9668%" y="319.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (45 samples, 0.03%)</title><rect x="60.7226%" y="293" width="0.0323%" height="15" fill="rgb(214,87,48)" fg:x="84541" fg:w="45"/><text x="60.9726%" y="303.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (45 samples, 0.03%)</title><rect x="60.7226%" y="277" width="0.0323%" height="15" fill="rgb(246,198,24)" fg:x="84541" fg:w="45"/><text x="60.9726%" y="287.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (16 samples, 0.01%)</title><rect x="60.7700%" y="309" width="0.0115%" height="15" fill="rgb(209,66,40)" fg:x="84607" fg:w="16"/><text x="61.0200%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (16 samples, 0.01%)</title><rect x="60.7700%" y="293" width="0.0115%" height="15" fill="rgb(233,147,39)" fg:x="84607" fg:w="16"/><text x="61.0200%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_or (16 samples, 0.01%)</title><rect x="60.7700%" y="277" width="0.0115%" height="15" fill="rgb(231,145,52)" fg:x="84607" fg:w="16"/><text x="61.0200%" y="287.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.04%)</title><rect x="60.7549%" y="325" width="0.0381%" height="15" fill="rgb(206,20,26)" fg:x="84586" fg:w="53"/><text x="61.0049%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (21 samples, 0.02%)</title><rect x="60.7958%" y="325" width="0.0151%" height="15" fill="rgb(238,220,4)" fg:x="84643" fg:w="21"/><text x="61.0458%" y="335.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="60.7958%" y="309" width="0.0151%" height="15" fill="rgb(252,195,42)" fg:x="84643" fg:w="21"/><text x="61.0458%" y="319.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (21 samples, 0.02%)</title><rect x="60.7958%" y="293" width="0.0151%" height="15" fill="rgb(209,10,6)" fg:x="84643" fg:w="21"/><text x="61.0458%" y="303.50"></text></g><g><title>__rdl_alloc (25 samples, 0.02%)</title><rect x="60.8109%" y="213" width="0.0180%" height="15" fill="rgb(229,3,52)" fg:x="84664" fg:w="25"/><text x="61.0609%" y="223.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.02%)</title><rect x="60.8109%" y="197" width="0.0180%" height="15" fill="rgb(253,49,37)" fg:x="84664" fg:w="25"/><text x="61.0609%" y="207.50"></text></g><g><title>malloc (25 samples, 0.02%)</title><rect x="60.8109%" y="181" width="0.0180%" height="15" fill="rgb(240,103,49)" fg:x="84664" fg:w="25"/><text x="61.0609%" y="191.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (3,474 samples, 2.50%)</title><rect x="58.3351%" y="405" width="2.4952%" height="15" fill="rgb(250,182,30)" fg:x="81217" fg:w="3474"/><text x="58.5851%" y="415.50">&lt;c..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (3,473 samples, 2.49%)</title><rect x="58.3358%" y="389" width="2.4945%" height="15" fill="rgb(248,8,30)" fg:x="81218" fg:w="3473"/><text x="58.5858%" y="399.50">&lt;f..</text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (3,057 samples, 2.20%)</title><rect x="58.6346%" y="373" width="2.1957%" height="15" fill="rgb(237,120,30)" fg:x="81634" fg:w="3057"/><text x="58.8846%" y="383.50">w..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (3,002 samples, 2.16%)</title><rect x="58.6741%" y="357" width="2.1562%" height="15" fill="rgb(221,146,34)" fg:x="81689" fg:w="3002"/><text x="58.9241%" y="367.50">w..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_frame::_{{closure}} (162 samples, 0.12%)</title><rect x="60.7140%" y="341" width="0.1164%" height="15" fill="rgb(242,55,13)" fg:x="84529" fg:w="162"/><text x="60.9640%" y="351.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (27 samples, 0.02%)</title><rect x="60.8109%" y="325" width="0.0194%" height="15" fill="rgb(242,112,31)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (27 samples, 0.02%)</title><rect x="60.8109%" y="309" width="0.0194%" height="15" fill="rgb(249,192,27)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (27 samples, 0.02%)</title><rect x="60.8109%" y="293" width="0.0194%" height="15" fill="rgb(208,204,44)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.02%)</title><rect x="60.8109%" y="277" width="0.0194%" height="15" fill="rgb(208,93,54)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="60.8109%" y="261" width="0.0194%" height="15" fill="rgb(242,1,31)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.02%)</title><rect x="60.8109%" y="245" width="0.0194%" height="15" fill="rgb(241,83,25)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="255.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="60.8109%" y="229" width="0.0194%" height="15" fill="rgb(205,169,50)" fg:x="84664" fg:w="27"/><text x="61.0609%" y="239.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (3,486 samples, 2.50%)</title><rect x="58.3351%" y="437" width="2.5039%" height="15" fill="rgb(239,186,37)" fg:x="81217" fg:w="3486"/><text x="58.5851%" y="447.50">&lt;S..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (3,486 samples, 2.50%)</title><rect x="58.3351%" y="421" width="2.5039%" height="15" fill="rgb(205,221,10)" fg:x="81217" fg:w="3486"/><text x="58.5851%" y="431.50">&lt;w..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (3,614 samples, 2.60%)</title><rect x="58.2474%" y="485" width="2.5958%" height="15" fill="rgb(218,196,15)" fg:x="81095" fg:w="3614"/><text x="58.4974%" y="495.50">&lt;t..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (3,614 samples, 2.60%)</title><rect x="58.2474%" y="469" width="2.5958%" height="15" fill="rgb(218,196,35)" fg:x="81095" fg:w="3614"/><text x="58.4974%" y="479.50">&lt;w..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (3,614 samples, 2.60%)</title><rect x="58.2474%" y="453" width="2.5958%" height="15" fill="rgb(233,63,24)" fg:x="81095" fg:w="3614"/><text x="58.4974%" y="463.50">&lt;f..</text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (3,642 samples, 2.62%)</title><rect x="58.2309%" y="501" width="2.6159%" height="15" fill="rgb(225,8,4)" fg:x="81072" fg:w="3642"/><text x="58.4809%" y="511.50">&lt;t..</text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (232 samples, 0.17%)</title><rect x="60.8648%" y="453" width="0.1666%" height="15" fill="rgb(234,105,35)" fg:x="84739" fg:w="232"/><text x="61.1148%" y="463.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (232 samples, 0.17%)</title><rect x="60.8648%" y="437" width="0.1666%" height="15" fill="rgb(236,21,32)" fg:x="84739" fg:w="232"/><text x="61.1148%" y="447.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (232 samples, 0.17%)</title><rect x="60.8648%" y="421" width="0.1666%" height="15" fill="rgb(228,109,6)" fg:x="84739" fg:w="232"/><text x="61.1148%" y="431.50"></text></g><g><title>[libc.so.6] (345 samples, 0.25%)</title><rect x="61.6498%" y="309" width="0.2478%" height="15" fill="rgb(229,215,31)" fg:x="85832" fg:w="345"/><text x="61.8998%" y="319.50"></text></g><g><title>__send (648 samples, 0.47%)</title><rect x="61.4846%" y="325" width="0.4654%" height="15" fill="rgb(221,52,54)" fg:x="85602" fg:w="648"/><text x="61.7346%" y="335.50"></text></g><g><title>[unknown] (73 samples, 0.05%)</title><rect x="61.8976%" y="309" width="0.0524%" height="15" fill="rgb(252,129,43)" fg:x="86177" fg:w="73"/><text x="62.1476%" y="319.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (14 samples, 0.01%)</title><rect x="61.9522%" y="309" width="0.0101%" height="15" fill="rgb(248,183,27)" fg:x="86253" fg:w="14"/><text x="62.2022%" y="319.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (673 samples, 0.48%)</title><rect x="61.4796%" y="421" width="0.4834%" height="15" fill="rgb(250,0,22)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="431.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (673 samples, 0.48%)</title><rect x="61.4796%" y="405" width="0.4834%" height="15" fill="rgb(213,166,10)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="415.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (673 samples, 0.48%)</title><rect x="61.4796%" y="389" width="0.4834%" height="15" fill="rgb(207,163,36)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="399.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (673 samples, 0.48%)</title><rect x="61.4796%" y="373" width="0.4834%" height="15" fill="rgb(208,122,22)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="383.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (673 samples, 0.48%)</title><rect x="61.4796%" y="357" width="0.4834%" height="15" fill="rgb(207,104,49)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="367.50"></text></g><g><title>std::sys_common::net::TcpStream::write (673 samples, 0.48%)</title><rect x="61.4796%" y="341" width="0.4834%" height="15" fill="rgb(248,211,50)" fg:x="85595" fg:w="673"/><text x="61.7296%" y="351.50"></text></g><g><title>std::sys::pal::unix::cvt (18 samples, 0.01%)</title><rect x="61.9501%" y="325" width="0.0129%" height="15" fill="rgb(217,13,45)" fg:x="86250" fg:w="18"/><text x="62.2001%" y="335.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (22 samples, 0.02%)</title><rect x="62.0040%" y="389" width="0.0158%" height="15" fill="rgb(211,216,49)" fg:x="86325" fg:w="22"/><text x="62.2540%" y="399.50"></text></g><g><title>tokio::runtime::context::budget (22 samples, 0.02%)</title><rect x="62.0040%" y="373" width="0.0158%" height="15" fill="rgb(221,58,53)" fg:x="86325" fg:w="22"/><text x="62.2540%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="62.0040%" y="357" width="0.0158%" height="15" fill="rgb(220,112,41)" fg:x="86325" fg:w="22"/><text x="62.2540%" y="367.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (15 samples, 0.01%)</title><rect x="62.0090%" y="341" width="0.0108%" height="15" fill="rgb(236,38,28)" fg:x="86332" fg:w="15"/><text x="62.2590%" y="351.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (15 samples, 0.01%)</title><rect x="62.0090%" y="325" width="0.0108%" height="15" fill="rgb(227,195,22)" fg:x="86332" fg:w="15"/><text x="62.2590%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (67 samples, 0.05%)</title><rect x="62.0607%" y="373" width="0.0481%" height="15" fill="rgb(214,55,33)" fg:x="86404" fg:w="67"/><text x="62.3107%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (67 samples, 0.05%)</title><rect x="62.0607%" y="357" width="0.0481%" height="15" fill="rgb(248,80,13)" fg:x="86404" fg:w="67"/><text x="62.3107%" y="367.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (67 samples, 0.05%)</title><rect x="62.0607%" y="341" width="0.0481%" height="15" fill="rgb(238,52,6)" fg:x="86404" fg:w="67"/><text x="62.3107%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (67 samples, 0.05%)</title><rect x="62.0607%" y="325" width="0.0481%" height="15" fill="rgb(224,198,47)" fg:x="86404" fg:w="67"/><text x="62.3107%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (66 samples, 0.05%)</title><rect x="62.0614%" y="309" width="0.0474%" height="15" fill="rgb(233,171,20)" fg:x="86405" fg:w="66"/><text x="62.3114%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.05%)</title><rect x="62.0614%" y="293" width="0.0474%" height="15" fill="rgb(241,30,25)" fg:x="86405" fg:w="66"/><text x="62.3114%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (331 samples, 0.24%)</title><rect x="62.1088%" y="373" width="0.2377%" height="15" fill="rgb(207,171,38)" fg:x="86471" fg:w="331"/><text x="62.3588%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (331 samples, 0.24%)</title><rect x="62.1088%" y="357" width="0.2377%" height="15" fill="rgb(234,70,1)" fg:x="86471" fg:w="331"/><text x="62.3588%" y="367.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (72 samples, 0.05%)</title><rect x="62.3502%" y="373" width="0.0517%" height="15" fill="rgb(232,178,18)" fg:x="86807" fg:w="72"/><text x="62.6002%" y="383.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (72 samples, 0.05%)</title><rect x="62.3502%" y="357" width="0.0517%" height="15" fill="rgb(241,78,40)" fg:x="86807" fg:w="72"/><text x="62.6002%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (72 samples, 0.05%)</title><rect x="62.3502%" y="341" width="0.0517%" height="15" fill="rgb(222,35,25)" fg:x="86807" fg:w="72"/><text x="62.6002%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (72 samples, 0.05%)</title><rect x="62.3502%" y="325" width="0.0517%" height="15" fill="rgb(207,92,16)" fg:x="86807" fg:w="72"/><text x="62.6002%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (72 samples, 0.05%)</title><rect x="62.3502%" y="309" width="0.0517%" height="15" fill="rgb(216,59,51)" fg:x="86807" fg:w="72"/><text x="62.6002%" y="319.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (2,175 samples, 1.56%)</title><rect x="60.8468%" y="501" width="1.5622%" height="15" fill="rgb(213,80,28)" fg:x="84714" fg:w="2175"/><text x="61.0968%" y="511.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,174 samples, 1.56%)</title><rect x="60.8475%" y="485" width="1.5615%" height="15" fill="rgb(220,93,7)" fg:x="84715" fg:w="2174"/><text x="61.0975%" y="495.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,157 samples, 1.55%)</title><rect x="60.8598%" y="469" width="1.5493%" height="15" fill="rgb(225,24,44)" fg:x="84732" fg:w="2157"/><text x="61.1098%" y="479.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,918 samples, 1.38%)</title><rect x="61.0314%" y="453" width="1.3776%" height="15" fill="rgb(243,74,40)" fg:x="84971" fg:w="1918"/><text x="61.2814%" y="463.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (1,319 samples, 0.95%)</title><rect x="61.4617%" y="437" width="0.9474%" height="15" fill="rgb(228,39,7)" fg:x="85570" fg:w="1319"/><text x="61.7117%" y="447.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (604 samples, 0.43%)</title><rect x="61.9752%" y="421" width="0.4338%" height="15" fill="rgb(227,79,8)" fg:x="86285" fg:w="604"/><text x="62.2252%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (593 samples, 0.43%)</title><rect x="61.9831%" y="405" width="0.4259%" height="15" fill="rgb(236,58,11)" fg:x="86296" fg:w="593"/><text x="62.2331%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (542 samples, 0.39%)</title><rect x="62.0198%" y="389" width="0.3893%" height="15" fill="rgb(249,63,35)" fg:x="86347" fg:w="542"/><text x="62.2698%" y="399.50"></text></g><g><title>[libc.so.6] (2,781 samples, 2.00%)</title><rect x="63.6193%" y="117" width="1.9975%" height="15" fill="rgb(252,114,16)" fg:x="88574" fg:w="2781"/><text x="63.8693%" y="127.50">[..</text></g><g><title>[libc.so.6] (258 samples, 0.19%)</title><rect x="65.4315%" y="101" width="0.1853%" height="15" fill="rgb(254,151,24)" fg:x="91097" fg:w="258"/><text x="65.6815%" y="111.50"></text></g><g><title>[libc.so.6] (3,190 samples, 2.29%)</title><rect x="63.3291%" y="133" width="2.2913%" height="15" fill="rgb(253,54,39)" fg:x="88170" fg:w="3190"/><text x="63.5791%" y="143.50">[..</text></g><g><title>[libc.so.6] (3,788 samples, 2.72%)</title><rect x="62.9736%" y="149" width="2.7208%" height="15" fill="rgb(243,25,45)" fg:x="87675" fg:w="3788"/><text x="63.2236%" y="159.50">[l..</text></g><g><title>__lll_lock_wait_private (103 samples, 0.07%)</title><rect x="65.6204%" y="133" width="0.0740%" height="15" fill="rgb(234,134,9)" fg:x="91360" fg:w="103"/><text x="65.8704%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,460 samples, 3.20%)</title><rect x="62.4952%" y="229" width="3.2034%" height="15" fill="rgb(227,166,31)" fg:x="87009" fg:w="4460"/><text x="62.7452%" y="239.50">&lt;al..</text></g><g><title>alloc::alloc::dealloc (4,460 samples, 3.20%)</title><rect x="62.4952%" y="213" width="3.2034%" height="15" fill="rgb(245,143,41)" fg:x="87009" fg:w="4460"/><text x="62.7452%" y="223.50">all..</text></g><g><title>__rdl_dealloc (4,460 samples, 3.20%)</title><rect x="62.4952%" y="197" width="3.2034%" height="15" fill="rgb(238,181,32)" fg:x="87009" fg:w="4460"/><text x="62.7452%" y="207.50">__r..</text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4,460 samples, 3.20%)</title><rect x="62.4952%" y="181" width="3.2034%" height="15" fill="rgb(224,113,18)" fg:x="87009" fg:w="4460"/><text x="62.7452%" y="191.50">std..</text></g><g><title>cfree (4,458 samples, 3.20%)</title><rect x="62.4967%" y="165" width="3.2020%" height="15" fill="rgb(240,229,28)" fg:x="87011" fg:w="4458"/><text x="62.7467%" y="175.50">cfr..</text></g><g><title>core::mem::drop (4,504 samples, 3.24%)</title><rect x="62.4881%" y="325" width="3.2351%" height="15" fill="rgb(250,185,3)" fg:x="86999" fg:w="4504"/><text x="62.7381%" y="335.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (4,504 samples, 3.24%)</title><rect x="62.4881%" y="309" width="3.2351%" height="15" fill="rgb(212,59,25)" fg:x="86999" fg:w="4504"/><text x="62.7381%" y="319.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (4,494 samples, 3.23%)</title><rect x="62.4952%" y="293" width="3.2279%" height="15" fill="rgb(221,87,20)" fg:x="87009" fg:w="4494"/><text x="62.7452%" y="303.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,494 samples, 3.23%)</title><rect x="62.4952%" y="277" width="3.2279%" height="15" fill="rgb(213,74,28)" fg:x="87009" fg:w="4494"/><text x="62.7452%" y="287.50">cor..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,494 samples, 3.23%)</title><rect x="62.4952%" y="261" width="3.2279%" height="15" fill="rgb(224,132,34)" fg:x="87009" fg:w="4494"/><text x="62.7452%" y="271.50">cor..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,494 samples, 3.23%)</title><rect x="62.4952%" y="245" width="3.2279%" height="15" fill="rgb(222,101,24)" fg:x="87009" fg:w="4494"/><text x="62.7452%" y="255.50">&lt;al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (34 samples, 0.02%)</title><rect x="65.6987%" y="229" width="0.0244%" height="15" fill="rgb(254,142,4)" fg:x="91469" fg:w="34"/><text x="65.9487%" y="239.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (567 samples, 0.41%)</title><rect x="65.7231%" y="325" width="0.4073%" height="15" fill="rgb(230,229,49)" fg:x="91503" fg:w="567"/><text x="65.9731%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_sub (567 samples, 0.41%)</title><rect x="65.7231%" y="309" width="0.4073%" height="15" fill="rgb(238,70,47)" fg:x="91503" fg:w="567"/><text x="65.9731%" y="319.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (5,098 samples, 3.66%)</title><rect x="62.4816%" y="389" width="3.6617%" height="15" fill="rgb(231,160,17)" fg:x="86990" fg:w="5098"/><text x="62.7316%" y="399.50">byte..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5,098 samples, 3.66%)</title><rect x="62.4816%" y="373" width="3.6617%" height="15" fill="rgb(218,68,53)" fg:x="86990" fg:w="5098"/><text x="62.7316%" y="383.50">&lt;cor..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (5,098 samples, 3.66%)</title><rect x="62.4816%" y="357" width="3.6617%" height="15" fill="rgb(236,111,10)" fg:x="86990" fg:w="5098"/><text x="62.7316%" y="367.50">byte..</text></g><g><title>bytes::bytes_mut::release_shared (5,097 samples, 3.66%)</title><rect x="62.4823%" y="341" width="3.6610%" height="15" fill="rgb(224,34,41)" fg:x="86991" fg:w="5097"/><text x="62.7323%" y="351.50">byte..</text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.01%)</title><rect x="66.1304%" y="325" width="0.0129%" height="15" fill="rgb(241,118,19)" fg:x="92070" fg:w="18"/><text x="66.3804%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.01%)</title><rect x="66.1304%" y="309" width="0.0129%" height="15" fill="rgb(238,129,25)" fg:x="92070" fg:w="18"/><text x="66.3804%" y="319.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (11,693 samples, 8.40%)</title><rect x="57.9494%" y="517" width="8.3986%" height="15" fill="rgb(238,22,31)" fg:x="80680" fg:w="11693"/><text x="58.1994%" y="527.50">epoxy_server..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (5,484 samples, 3.94%)</title><rect x="62.4091%" y="501" width="3.9389%" height="15" fill="rgb(222,174,48)" fg:x="86889" fg:w="5484"/><text x="62.6591%" y="511.50">toki..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (5,484 samples, 3.94%)</title><rect x="62.4091%" y="485" width="3.9389%" height="15" fill="rgb(206,152,40)" fg:x="86889" fg:w="5484"/><text x="62.6591%" y="495.50">&lt;tok..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (5,481 samples, 3.94%)</title><rect x="62.4112%" y="469" width="3.9368%" height="15" fill="rgb(218,99,54)" fg:x="86892" fg:w="5481"/><text x="62.6612%" y="479.50">&lt;wis..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (5,481 samples, 3.94%)</title><rect x="62.4112%" y="453" width="3.9368%" height="15" fill="rgb(220,174,26)" fg:x="86892" fg:w="5481"/><text x="62.6612%" y="463.50">&lt;fut..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (5,390 samples, 3.87%)</title><rect x="62.4766%" y="437" width="3.8714%" height="15" fill="rgb(245,116,9)" fg:x="86983" fg:w="5390"/><text x="62.7266%" y="447.50">core..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5,390 samples, 3.87%)</title><rect x="62.4766%" y="421" width="3.8714%" height="15" fill="rgb(209,72,35)" fg:x="86983" fg:w="5390"/><text x="62.7266%" y="431.50">core..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5,390 samples, 3.87%)</title><rect x="62.4766%" y="405" width="3.8714%" height="15" fill="rgb(226,126,21)" fg:x="86983" fg:w="5390"/><text x="62.7266%" y="415.50">&lt;byt..</text></g><g><title>cfree (285 samples, 0.20%)</title><rect x="66.1433%" y="389" width="0.2047%" height="15" fill="rgb(227,192,1)" fg:x="92088" fg:w="285"/><text x="66.3933%" y="399.50"></text></g><g><title>[libc.so.6] (222 samples, 0.16%)</title><rect x="66.1885%" y="373" width="0.1595%" height="15" fill="rgb(237,180,29)" fg:x="92151" fg:w="222"/><text x="66.4385%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.02%)</title><rect x="66.9923%" y="469" width="0.0165%" height="15" fill="rgb(230,197,35)" fg:x="93270" fg:w="23"/><text x="67.2423%" y="479.50"></text></g><g><title>[libc.so.6] (785 samples, 0.56%)</title><rect x="68.6227%" y="277" width="0.5638%" height="15" fill="rgb(246,193,31)" fg:x="95540" fg:w="785"/><text x="68.8727%" y="287.50"></text></g><g><title>recv (2,617 samples, 1.88%)</title><rect x="67.4864%" y="293" width="1.8797%" height="15" fill="rgb(241,36,4)" fg:x="93958" fg:w="2617"/><text x="67.7364%" y="303.50">r..</text></g><g><title>[unknown] (250 samples, 0.18%)</title><rect x="69.1866%" y="277" width="0.1796%" height="15" fill="rgb(241,130,17)" fg:x="96325" fg:w="250"/><text x="69.4366%" y="287.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (2,825 samples, 2.03%)</title><rect x="67.4850%" y="421" width="2.0291%" height="15" fill="rgb(206,137,32)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="431.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (2,825 samples, 2.03%)</title><rect x="67.4850%" y="405" width="2.0291%" height="15" fill="rgb(237,228,51)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="415.50">m..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (2,825 samples, 2.03%)</title><rect x="67.4850%" y="389" width="2.0291%" height="15" fill="rgb(243,6,42)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="399.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (2,825 samples, 2.03%)</title><rect x="67.4850%" y="373" width="2.0291%" height="15" fill="rgb(251,74,28)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="383.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (2,825 samples, 2.03%)</title><rect x="67.4850%" y="357" width="2.0291%" height="15" fill="rgb(218,20,49)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="367.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::read (2,825 samples, 2.03%)</title><rect x="67.4850%" y="341" width="2.0291%" height="15" fill="rgb(238,28,14)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="351.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::read (2,825 samples, 2.03%)</title><rect x="67.4850%" y="325" width="2.0291%" height="15" fill="rgb(229,40,46)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="335.50">s..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (2,825 samples, 2.03%)</title><rect x="67.4850%" y="309" width="2.0291%" height="15" fill="rgb(244,195,20)" fg:x="93956" fg:w="2825"/><text x="67.7350%" y="319.50">s..</text></g><g><title>std::sys::pal::unix::cvt (206 samples, 0.15%)</title><rect x="69.3661%" y="293" width="0.1480%" height="15" fill="rgb(253,56,35)" fg:x="96575" fg:w="206"/><text x="69.6161%" y="303.50"></text></g><g><title>std::io::error::Error::last_os_error (188 samples, 0.14%)</title><rect x="69.3791%" y="277" width="0.1350%" height="15" fill="rgb(210,149,44)" fg:x="96593" fg:w="188"/><text x="69.6291%" y="287.50"></text></g><g><title>std::sys::pal::unix::os::errno (177 samples, 0.13%)</title><rect x="69.3870%" y="261" width="0.1271%" height="15" fill="rgb(240,135,12)" fg:x="96604" fg:w="177"/><text x="69.6370%" y="271.50"></text></g><g><title>__errno_location (177 samples, 0.13%)</title><rect x="69.3870%" y="245" width="0.1271%" height="15" fill="rgb(251,24,50)" fg:x="96604" fg:w="177"/><text x="69.6370%" y="255.50"></text></g><g><title>std::io::error::repr_bitpacked::Repr::data (202 samples, 0.15%)</title><rect x="69.5400%" y="405" width="0.1451%" height="15" fill="rgb(243,200,47)" fg:x="96817" fg:w="202"/><text x="69.7900%" y="415.50"></text></g><g><title>std::io::error::repr_bitpacked::decode_repr (202 samples, 0.15%)</title><rect x="69.5400%" y="389" width="0.1451%" height="15" fill="rgb(224,166,26)" fg:x="96817" fg:w="202"/><text x="69.7900%" y="399.50"></text></g><g><title>std::io::error::Error::kind (248 samples, 0.18%)</title><rect x="69.5277%" y="421" width="0.1781%" height="15" fill="rgb(233,0,47)" fg:x="96800" fg:w="248"/><text x="69.7777%" y="431.50"></text></g><g><title>std::sys::pal::unix::decode_error_kind (29 samples, 0.02%)</title><rect x="69.6850%" y="405" width="0.0208%" height="15" fill="rgb(253,80,5)" fg:x="97019" fg:w="29"/><text x="69.9350%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (16 samples, 0.01%)</title><rect x="69.7059%" y="405" width="0.0115%" height="15" fill="rgb(214,133,25)" fg:x="97048" fg:w="16"/><text x="69.9559%" y="415.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (31 samples, 0.02%)</title><rect x="69.7059%" y="421" width="0.0223%" height="15" fill="rgb(209,27,14)" fg:x="97048" fg:w="31"/><text x="69.9559%" y="431.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::set_filled (15 samples, 0.01%)</title><rect x="69.7174%" y="405" width="0.0108%" height="15" fill="rgb(219,102,51)" fg:x="97064" fg:w="15"/><text x="69.9674%" y="415.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (36 samples, 0.03%)</title><rect x="69.7281%" y="421" width="0.0259%" height="15" fill="rgb(237,18,16)" fg:x="97079" fg:w="36"/><text x="69.9781%" y="431.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (37 samples, 0.03%)</title><rect x="69.7540%" y="421" width="0.0266%" height="15" fill="rgb(241,85,17)" fg:x="97115" fg:w="37"/><text x="70.0040%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (28 samples, 0.02%)</title><rect x="69.7605%" y="405" width="0.0201%" height="15" fill="rgb(236,90,42)" fg:x="97124" fg:w="28"/><text x="70.0105%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (28 samples, 0.02%)</title><rect x="69.7605%" y="389" width="0.0201%" height="15" fill="rgb(249,57,21)" fg:x="97124" fg:w="28"/><text x="70.0105%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (46 samples, 0.03%)</title><rect x="69.7820%" y="373" width="0.0330%" height="15" fill="rgb(243,12,36)" fg:x="97154" fg:w="46"/><text x="70.0320%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (46 samples, 0.03%)</title><rect x="69.7820%" y="357" width="0.0330%" height="15" fill="rgb(253,128,47)" fg:x="97154" fg:w="46"/><text x="70.0320%" y="367.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (58 samples, 0.04%)</title><rect x="69.7806%" y="421" width="0.0417%" height="15" fill="rgb(207,33,20)" fg:x="97152" fg:w="58"/><text x="70.0306%" y="431.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (58 samples, 0.04%)</title><rect x="69.7806%" y="405" width="0.0417%" height="15" fill="rgb(233,215,35)" fg:x="97152" fg:w="58"/><text x="70.0306%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (56 samples, 0.04%)</title><rect x="69.7820%" y="389" width="0.0402%" height="15" fill="rgb(249,188,52)" fg:x="97154" fg:w="56"/><text x="70.0320%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 0.02%)</title><rect x="69.8797%" y="341" width="0.0172%" height="15" fill="rgb(225,12,32)" fg:x="97290" fg:w="24"/><text x="70.1297%" y="351.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (24 samples, 0.02%)</title><rect x="69.8797%" y="325" width="0.0172%" height="15" fill="rgb(247,98,14)" fg:x="97290" fg:w="24"/><text x="70.1297%" y="335.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (24 samples, 0.02%)</title><rect x="69.8797%" y="309" width="0.0172%" height="15" fill="rgb(247,219,48)" fg:x="97290" fg:w="24"/><text x="70.1297%" y="319.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="69.8862%" y="293" width="0.0108%" height="15" fill="rgb(253,60,48)" fg:x="97299" fg:w="15"/><text x="70.1362%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (20 samples, 0.01%)</title><rect x="69.8984%" y="309" width="0.0144%" height="15" fill="rgb(245,15,52)" fg:x="97316" fg:w="20"/><text x="70.1484%" y="319.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (54 samples, 0.04%)</title><rect x="69.8797%" y="389" width="0.0388%" height="15" fill="rgb(220,133,28)" fg:x="97290" fg:w="54"/><text x="70.1297%" y="399.50"></text></g><g><title>tokio::runtime::context::budget (54 samples, 0.04%)</title><rect x="69.8797%" y="373" width="0.0388%" height="15" fill="rgb(217,180,4)" fg:x="97290" fg:w="54"/><text x="70.1297%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.04%)</title><rect x="69.8797%" y="357" width="0.0388%" height="15" fill="rgb(251,24,1)" fg:x="97290" fg:w="54"/><text x="70.1297%" y="367.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (30 samples, 0.02%)</title><rect x="69.8969%" y="341" width="0.0215%" height="15" fill="rgb(212,185,49)" fg:x="97314" fg:w="30"/><text x="70.1469%" y="351.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (30 samples, 0.02%)</title><rect x="69.8969%" y="325" width="0.0215%" height="15" fill="rgb(215,175,22)" fg:x="97314" fg:w="30"/><text x="70.1469%" y="335.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (232 samples, 0.17%)</title><rect x="69.9436%" y="373" width="0.1666%" height="15" fill="rgb(250,205,14)" fg:x="97379" fg:w="232"/><text x="70.1936%" y="383.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (231 samples, 0.17%)</title><rect x="69.9443%" y="357" width="0.1659%" height="15" fill="rgb(225,211,22)" fg:x="97380" fg:w="231"/><text x="70.1943%" y="367.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (135 samples, 0.10%)</title><rect x="70.0133%" y="341" width="0.0970%" height="15" fill="rgb(251,179,42)" fg:x="97476" fg:w="135"/><text x="70.2633%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (133 samples, 0.10%)</title><rect x="70.0147%" y="325" width="0.0955%" height="15" fill="rgb(208,216,51)" fg:x="97478" fg:w="133"/><text x="70.2647%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (133 samples, 0.10%)</title><rect x="70.0147%" y="309" width="0.0955%" height="15" fill="rgb(235,36,11)" fg:x="97478" fg:w="133"/><text x="70.2647%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (35 samples, 0.03%)</title><rect x="70.1138%" y="373" width="0.0251%" height="15" fill="rgb(213,189,28)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (35 samples, 0.03%)</title><rect x="70.1138%" y="357" width="0.0251%" height="15" fill="rgb(227,203,42)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="367.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="70.1138%" y="341" width="0.0251%" height="15" fill="rgb(244,72,36)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="351.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (35 samples, 0.03%)</title><rect x="70.1138%" y="325" width="0.0251%" height="15" fill="rgb(213,53,17)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (35 samples, 0.03%)</title><rect x="70.1138%" y="309" width="0.0251%" height="15" fill="rgb(207,167,3)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="70.1138%" y="293" width="0.0251%" height="15" fill="rgb(216,98,30)" fg:x="97616" fg:w="35"/><text x="70.3638%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (409 samples, 0.29%)</title><rect x="70.1390%" y="373" width="0.2938%" height="15" fill="rgb(236,123,15)" fg:x="97651" fg:w="409"/><text x="70.3890%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (409 samples, 0.29%)</title><rect x="70.1390%" y="357" width="0.2938%" height="15" fill="rgb(248,81,50)" fg:x="97651" fg:w="409"/><text x="70.3890%" y="367.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (31 samples, 0.02%)</title><rect x="70.4335%" y="373" width="0.0223%" height="15" fill="rgb(214,120,4)" fg:x="98061" fg:w="31"/><text x="70.6835%" y="383.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (31 samples, 0.02%)</title><rect x="70.4335%" y="357" width="0.0223%" height="15" fill="rgb(208,179,34)" fg:x="98061" fg:w="31"/><text x="70.6835%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31 samples, 0.02%)</title><rect x="70.4335%" y="341" width="0.0223%" height="15" fill="rgb(227,140,7)" fg:x="98061" fg:w="31"/><text x="70.6835%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (30 samples, 0.02%)</title><rect x="70.4342%" y="325" width="0.0215%" height="15" fill="rgb(214,22,6)" fg:x="98062" fg:w="30"/><text x="70.6842%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.02%)</title><rect x="70.4342%" y="309" width="0.0215%" height="15" fill="rgb(207,137,27)" fg:x="98062" fg:w="30"/><text x="70.6842%" y="319.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (20 samples, 0.01%)</title><rect x="70.4557%" y="373" width="0.0144%" height="15" fill="rgb(210,8,46)" fg:x="98092" fg:w="20"/><text x="70.7057%" y="383.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (4,823 samples, 3.46%)</title><rect x="67.0088%" y="469" width="3.4642%" height="15" fill="rgb(240,16,54)" fg:x="93293" fg:w="4823"/><text x="67.2588%" y="479.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (4,801 samples, 3.45%)</title><rect x="67.0246%" y="453" width="3.4484%" height="15" fill="rgb(211,209,29)" fg:x="93315" fg:w="4801"/><text x="67.2746%" y="463.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (4,229 samples, 3.04%)</title><rect x="67.4354%" y="437" width="3.0375%" height="15" fill="rgb(226,228,24)" fg:x="93887" fg:w="4229"/><text x="67.6854%" y="447.50">tok..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (906 samples, 0.65%)</title><rect x="69.8222%" y="421" width="0.6507%" height="15" fill="rgb(222,84,9)" fg:x="97210" fg:w="906"/><text x="70.0722%" y="431.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (884 samples, 0.63%)</title><rect x="69.8380%" y="405" width="0.6349%" height="15" fill="rgb(234,203,30)" fg:x="97232" fg:w="884"/><text x="70.0880%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (772 samples, 0.55%)</title><rect x="69.9185%" y="389" width="0.5545%" height="15" fill="rgb(238,109,14)" fg:x="97344" fg:w="772"/><text x="70.1685%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (15 samples, 0.01%)</title><rect x="70.4730%" y="469" width="0.0108%" height="15" fill="rgb(233,206,34)" fg:x="98116" fg:w="15"/><text x="70.7230%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (15 samples, 0.01%)</title><rect x="70.4730%" y="453" width="0.0108%" height="15" fill="rgb(220,167,47)" fg:x="98116" fg:w="15"/><text x="70.7230%" y="463.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (21 samples, 0.02%)</title><rect x="70.4837%" y="469" width="0.0151%" height="15" fill="rgb(238,105,10)" fg:x="98131" fg:w="21"/><text x="70.7337%" y="479.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (5,325 samples, 3.82%)</title><rect x="66.6920%" y="485" width="3.8247%" height="15" fill="rgb(213,227,17)" fg:x="92852" fg:w="5325"/><text x="66.9420%" y="495.50">&lt;tok..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (25 samples, 0.02%)</title><rect x="70.4988%" y="469" width="0.0180%" height="15" fill="rgb(217,132,38)" fg:x="98152" fg:w="25"/><text x="70.7488%" y="479.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (5,365 samples, 3.85%)</title><rect x="66.6899%" y="501" width="3.8535%" height="15" fill="rgb(242,146,4)" fg:x="92849" fg:w="5365"/><text x="66.9399%" y="511.50">&lt;tok..</text></g><g><title>core::option::Option&lt;T&gt;::take (36 samples, 0.03%)</title><rect x="70.5175%" y="485" width="0.0259%" height="15" fill="rgb(212,61,9)" fg:x="98178" fg:w="36"/><text x="70.7675%" y="495.50"></text></g><g><title>core::mem::replace (36 samples, 0.03%)</title><rect x="70.5175%" y="469" width="0.0259%" height="15" fill="rgb(247,126,22)" fg:x="98178" fg:w="36"/><text x="70.7675%" y="479.50"></text></g><g><title>core::ptr::write (32 samples, 0.02%)</title><rect x="70.5204%" y="453" width="0.0230%" height="15" fill="rgb(220,196,2)" fg:x="98182" fg:w="32"/><text x="70.7704%" y="463.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (122 samples, 0.09%)</title><rect x="70.5434%" y="501" width="0.0876%" height="15" fill="rgb(208,46,4)" fg:x="98214" fg:w="122"/><text x="70.7934%" y="511.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (122 samples, 0.09%)</title><rect x="70.5434%" y="485" width="0.0876%" height="15" fill="rgb(252,104,46)" fg:x="98214" fg:w="122"/><text x="70.7934%" y="495.50"></text></g><g><title>core::cmp::min (31 samples, 0.02%)</title><rect x="70.6087%" y="469" width="0.0223%" height="15" fill="rgb(237,152,48)" fg:x="98305" fg:w="31"/><text x="70.8587%" y="479.50"></text></g><g><title>core::cmp::Ord::min (31 samples, 0.02%)</title><rect x="70.6087%" y="453" width="0.0223%" height="15" fill="rgb(221,59,37)" fg:x="98305" fg:w="31"/><text x="70.8587%" y="463.50"></text></g><g><title>core::cmp::min_by (31 samples, 0.02%)</title><rect x="70.6087%" y="437" width="0.0223%" height="15" fill="rgb(209,202,51)" fg:x="98305" fg:w="31"/><text x="70.8587%" y="447.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (137 samples, 0.10%)</title><rect x="70.8580%" y="485" width="0.0984%" height="15" fill="rgb(228,81,30)" fg:x="98652" fg:w="137"/><text x="71.1080%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload::{{closure}}&gt; (30 samples, 0.02%)</title><rect x="70.9564%" y="485" width="0.0215%" height="15" fill="rgb(227,42,39)" fg:x="98789" fg:w="30"/><text x="71.2064%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (30 samples, 0.02%)</title><rect x="71.2860%" y="469" width="0.0215%" height="15" fill="rgb(221,26,2)" fg:x="99248" fg:w="30"/><text x="71.5360%" y="479.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (43 samples, 0.03%)</title><rect x="71.4750%" y="405" width="0.0309%" height="15" fill="rgb(254,61,31)" fg:x="99511" fg:w="43"/><text x="71.7250%" y="415.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (78 samples, 0.06%)</title><rect x="71.5116%" y="389" width="0.0560%" height="15" fill="rgb(222,173,38)" fg:x="99562" fg:w="78"/><text x="71.7616%" y="399.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (14 samples, 0.01%)</title><rect x="71.5676%" y="389" width="0.0101%" height="15" fill="rgb(218,50,12)" fg:x="99640" fg:w="14"/><text x="71.8176%" y="399.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (723 samples, 0.52%)</title><rect x="71.5058%" y="405" width="0.5193%" height="15" fill="rgb(223,88,40)" fg:x="99554" fg:w="723"/><text x="71.7558%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (622 samples, 0.45%)</title><rect x="71.5784%" y="389" width="0.4468%" height="15" fill="rgb(237,54,19)" fg:x="99655" fg:w="622"/><text x="71.8284%" y="399.50"></text></g><g><title>[libc.so.6] (616 samples, 0.44%)</title><rect x="71.5827%" y="373" width="0.4424%" height="15" fill="rgb(251,129,25)" fg:x="99661" fg:w="616"/><text x="71.8327%" y="383.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (88 samples, 0.06%)</title><rect x="72.0323%" y="357" width="0.0632%" height="15" fill="rgb(238,97,19)" fg:x="100287" fg:w="88"/><text x="72.2823%" y="367.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (946 samples, 0.68%)</title><rect x="71.4491%" y="421" width="0.6795%" height="15" fill="rgb(240,169,18)" fg:x="99475" fg:w="946"/><text x="71.6991%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::Payload&gt; (144 samples, 0.10%)</title><rect x="72.0251%" y="405" width="0.1034%" height="15" fill="rgb(230,187,49)" fg:x="100277" fg:w="144"/><text x="72.2751%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (142 samples, 0.10%)</title><rect x="72.0266%" y="389" width="0.1020%" height="15" fill="rgb(209,44,26)" fg:x="100279" fg:w="142"/><text x="72.2766%" y="399.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (142 samples, 0.10%)</title><rect x="72.0266%" y="373" width="0.1020%" height="15" fill="rgb(244,0,6)" fg:x="100279" fg:w="142"/><text x="72.2766%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (46 samples, 0.03%)</title><rect x="72.0955%" y="357" width="0.0330%" height="15" fill="rgb(248,18,21)" fg:x="100375" fg:w="46"/><text x="72.3455%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (46 samples, 0.03%)</title><rect x="72.0955%" y="341" width="0.0330%" height="15" fill="rgb(245,180,19)" fg:x="100375" fg:w="46"/><text x="72.3455%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (46 samples, 0.03%)</title><rect x="72.0955%" y="325" width="0.0330%" height="15" fill="rgb(252,118,36)" fg:x="100375" fg:w="46"/><text x="72.3455%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (46 samples, 0.03%)</title><rect x="72.0955%" y="309" width="0.0330%" height="15" fill="rgb(210,224,19)" fg:x="100375" fg:w="46"/><text x="72.3455%" y="319.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (22 samples, 0.02%)</title><rect x="72.1365%" y="373" width="0.0158%" height="15" fill="rgb(218,30,24)" fg:x="100432" fg:w="22"/><text x="72.3865%" y="383.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (55 samples, 0.04%)</title><rect x="72.1286%" y="421" width="0.0395%" height="15" fill="rgb(219,75,50)" fg:x="100421" fg:w="55"/><text x="72.3786%" y="431.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (55 samples, 0.04%)</title><rect x="72.1286%" y="405" width="0.0395%" height="15" fill="rgb(234,72,50)" fg:x="100421" fg:w="55"/><text x="72.3786%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (55 samples, 0.04%)</title><rect x="72.1286%" y="389" width="0.0395%" height="15" fill="rgb(219,100,48)" fg:x="100421" fg:w="55"/><text x="72.3786%" y="399.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (21 samples, 0.02%)</title><rect x="72.1681%" y="421" width="0.0151%" height="15" fill="rgb(253,5,41)" fg:x="100476" fg:w="21"/><text x="72.4181%" y="431.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (21 samples, 0.02%)</title><rect x="72.1681%" y="405" width="0.0151%" height="15" fill="rgb(247,181,11)" fg:x="100476" fg:w="21"/><text x="72.4181%" y="415.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (21 samples, 0.02%)</title><rect x="72.1681%" y="389" width="0.0151%" height="15" fill="rgb(222,223,25)" fg:x="100476" fg:w="21"/><text x="72.4181%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="72.1717%" y="373" width="0.0115%" height="15" fill="rgb(214,198,28)" fg:x="100481" fg:w="16"/><text x="72.4217%" y="383.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (1,030 samples, 0.74%)</title><rect x="71.4441%" y="437" width="0.7398%" height="15" fill="rgb(230,46,43)" fg:x="99468" fg:w="1030"/><text x="71.6941%" y="447.50"></text></g><g><title>__rdl_alloc (1,591 samples, 1.14%)</title><rect x="72.1932%" y="309" width="1.1428%" height="15" fill="rgb(233,65,53)" fg:x="100511" fg:w="1591"/><text x="72.4432%" y="319.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,591 samples, 1.14%)</title><rect x="72.1932%" y="293" width="1.1428%" height="15" fill="rgb(221,121,27)" fg:x="100511" fg:w="1591"/><text x="72.4432%" y="303.50"></text></g><g><title>malloc (1,589 samples, 1.14%)</title><rect x="72.1946%" y="277" width="1.1413%" height="15" fill="rgb(247,70,47)" fg:x="100513" fg:w="1589"/><text x="72.4446%" y="287.50"></text></g><g><title>[libc.so.6] (265 samples, 0.19%)</title><rect x="73.1456%" y="261" width="0.1903%" height="15" fill="rgb(228,85,35)" fg:x="101837" fg:w="265"/><text x="73.3956%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,677 samples, 1.20%)</title><rect x="72.1839%" y="421" width="1.2045%" height="15" fill="rgb(209,50,18)" fg:x="100498" fg:w="1677"/><text x="72.4339%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,677 samples, 1.20%)</title><rect x="72.1839%" y="405" width="1.2045%" height="15" fill="rgb(250,19,35)" fg:x="100498" fg:w="1677"/><text x="72.4339%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,677 samples, 1.20%)</title><rect x="72.1839%" y="389" width="1.2045%" height="15" fill="rgb(253,107,29)" fg:x="100498" fg:w="1677"/><text x="72.4339%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (1,677 samples, 1.20%)</title><rect x="72.1839%" y="373" width="1.2045%" height="15" fill="rgb(252,179,29)" fg:x="100498" fg:w="1677"/><text x="72.4339%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,664 samples, 1.20%)</title><rect x="72.1932%" y="357" width="1.1952%" height="15" fill="rgb(238,194,6)" fg:x="100511" fg:w="1664"/><text x="72.4432%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,664 samples, 1.20%)</title><rect x="72.1932%" y="341" width="1.1952%" height="15" fill="rgb(238,164,29)" fg:x="100511" fg:w="1664"/><text x="72.4432%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1,664 samples, 1.20%)</title><rect x="72.1932%" y="325" width="1.1952%" height="15" fill="rgb(224,25,9)" fg:x="100511" fg:w="1664"/><text x="72.4432%" y="335.50"></text></g><g><title>core::ptr::read_volatile (73 samples, 0.05%)</title><rect x="73.3360%" y="309" width="0.0524%" height="15" fill="rgb(244,153,23)" fg:x="102102" fg:w="73"/><text x="73.5860%" y="319.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (1,728 samples, 1.24%)</title><rect x="72.1839%" y="437" width="1.2412%" height="15" fill="rgb(212,203,14)" fg:x="100498" fg:w="1728"/><text x="72.4339%" y="447.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (51 samples, 0.04%)</title><rect x="73.3884%" y="421" width="0.0366%" height="15" fill="rgb(220,164,20)" fg:x="102175" fg:w="51"/><text x="73.6384%" y="431.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (25 samples, 0.02%)</title><rect x="73.4071%" y="405" width="0.0180%" height="15" fill="rgb(222,203,48)" fg:x="102201" fg:w="25"/><text x="73.6571%" y="415.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (3,191 samples, 2.29%)</title><rect x="71.3098%" y="453" width="2.2920%" height="15" fill="rgb(215,159,22)" fg:x="99281" fg:w="3191"/><text x="71.5598%" y="463.50">w..</text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (246 samples, 0.18%)</title><rect x="73.4250%" y="437" width="0.1767%" height="15" fill="rgb(216,183,47)" fg:x="102226" fg:w="246"/><text x="73.6750%" y="447.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (19 samples, 0.01%)</title><rect x="73.5881%" y="421" width="0.0136%" height="15" fill="rgb(229,195,25)" fg:x="102453" fg:w="19"/><text x="73.8381%" y="431.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (3,215 samples, 2.31%)</title><rect x="71.3076%" y="469" width="2.3092%" height="15" fill="rgb(224,132,51)" fg:x="99278" fg:w="3215"/><text x="71.5576%" y="479.50">w..</text></g><g><title>wisp_mux::ws::Frame::binary (21 samples, 0.02%)</title><rect x="73.6017%" y="453" width="0.0151%" height="15" fill="rgb(240,63,7)" fg:x="102472" fg:w="21"/><text x="73.8517%" y="463.50"></text></g><g><title>wisp_mux::packet::Packet::new_data (16 samples, 0.01%)</title><rect x="73.6168%" y="469" width="0.0115%" height="15" fill="rgb(249,182,41)" fg:x="102493" fg:w="16"/><text x="73.8668%" y="479.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (111 samples, 0.08%)</title><rect x="74.2668%" y="453" width="0.0797%" height="15" fill="rgb(243,47,26)" fg:x="103398" fg:w="111"/><text x="74.5168%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (27 samples, 0.02%)</title><rect x="74.3466%" y="453" width="0.0194%" height="15" fill="rgb(233,48,2)" fg:x="103509" fg:w="27"/><text x="74.5966%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1,111 samples, 0.80%)</title><rect x="74.3660%" y="453" width="0.7980%" height="15" fill="rgb(244,165,34)" fg:x="103536" fg:w="1111"/><text x="74.6160%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (1,101 samples, 0.79%)</title><rect x="74.3731%" y="437" width="0.7908%" height="15" fill="rgb(207,89,7)" fg:x="103546" fg:w="1101"/><text x="74.6231%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (34 samples, 0.02%)</title><rect x="76.6184%" y="405" width="0.0244%" height="15" fill="rgb(244,117,36)" fg:x="106672" fg:w="34"/><text x="76.8684%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf&gt;&gt;::write_frame::{{closure}}&gt; (59 samples, 0.04%)</title><rect x="76.6428%" y="405" width="0.0424%" height="15" fill="rgb(226,144,34)" fg:x="106706" fg:w="59"/><text x="76.8928%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (48 samples, 0.03%)</title><rect x="77.0408%" y="389" width="0.0345%" height="15" fill="rgb(213,23,19)" fg:x="107260" fg:w="48"/><text x="77.2908%" y="399.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (211 samples, 0.15%)</title><rect x="77.5996%" y="373" width="0.1516%" height="15" fill="rgb(217,75,12)" fg:x="108038" fg:w="211"/><text x="77.8496%" y="383.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (272 samples, 0.20%)</title><rect x="77.7511%" y="373" width="0.1954%" height="15" fill="rgb(224,159,17)" fg:x="108249" fg:w="272"/><text x="78.0011%" y="383.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (37 samples, 0.03%)</title><rect x="77.9465%" y="373" width="0.0266%" height="15" fill="rgb(217,118,1)" fg:x="108521" fg:w="37"/><text x="78.1965%" y="383.50"></text></g><g><title>[libc.so.6] (698 samples, 0.50%)</title><rect x="78.9212%" y="165" width="0.5013%" height="15" fill="rgb(232,180,48)" fg:x="109878" fg:w="698"/><text x="79.1712%" y="175.50"></text></g><g><title>__send (1,611 samples, 1.16%)</title><rect x="78.4335%" y="181" width="1.1571%" height="15" fill="rgb(230,27,33)" fg:x="109199" fg:w="1611"/><text x="78.6835%" y="191.50"></text></g><g><title>[unknown] (234 samples, 0.17%)</title><rect x="79.4225%" y="165" width="0.1681%" height="15" fill="rgb(205,31,21)" fg:x="110576" fg:w="234"/><text x="79.6725%" y="175.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (1,759 samples, 1.26%)</title><rect x="78.4249%" y="277" width="1.2634%" height="15" fill="rgb(253,59,4)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="287.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (1,759 samples, 1.26%)</title><rect x="78.4249%" y="261" width="1.2634%" height="15" fill="rgb(224,201,9)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="271.50"></text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (1,759 samples, 1.26%)</title><rect x="78.4249%" y="245" width="1.2634%" height="15" fill="rgb(229,206,30)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="255.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (1,759 samples, 1.26%)</title><rect x="78.4249%" y="229" width="1.2634%" height="15" fill="rgb(212,67,47)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="239.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (1,759 samples, 1.26%)</title><rect x="78.4249%" y="213" width="1.2634%" height="15" fill="rgb(211,96,50)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="223.50"></text></g><g><title>std::sys_common::net::TcpStream::write (1,759 samples, 1.26%)</title><rect x="78.4249%" y="197" width="1.2634%" height="15" fill="rgb(252,114,18)" fg:x="109187" fg:w="1759"/><text x="78.6749%" y="207.50"></text></g><g><title>std::sys::pal::unix::cvt (136 samples, 0.10%)</title><rect x="79.5906%" y="181" width="0.0977%" height="15" fill="rgb(223,58,37)" fg:x="110810" fg:w="136"/><text x="79.8406%" y="191.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (132 samples, 0.09%)</title><rect x="79.5935%" y="165" width="0.0948%" height="15" fill="rgb(237,70,4)" fg:x="110814" fg:w="132"/><text x="79.8435%" y="175.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (38 samples, 0.03%)</title><rect x="79.7285%" y="245" width="0.0273%" height="15" fill="rgb(244,85,46)" fg:x="111002" fg:w="38"/><text x="79.9785%" y="255.50"></text></g><g><title>tokio::runtime::context::budget (38 samples, 0.03%)</title><rect x="79.7285%" y="229" width="0.0273%" height="15" fill="rgb(223,39,52)" fg:x="111002" fg:w="38"/><text x="79.9785%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (38 samples, 0.03%)</title><rect x="79.7285%" y="213" width="0.0273%" height="15" fill="rgb(218,200,14)" fg:x="111002" fg:w="38"/><text x="79.9785%" y="223.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (25 samples, 0.02%)</title><rect x="79.7378%" y="197" width="0.0180%" height="15" fill="rgb(208,171,16)" fg:x="111015" fg:w="25"/><text x="79.9878%" y="207.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (25 samples, 0.02%)</title><rect x="79.7378%" y="181" width="0.0180%" height="15" fill="rgb(234,200,18)" fg:x="111015" fg:w="25"/><text x="79.9878%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (378 samples, 0.27%)</title><rect x="79.7673%" y="229" width="0.2715%" height="15" fill="rgb(228,45,11)" fg:x="111056" fg:w="378"/><text x="80.0173%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_load (378 samples, 0.27%)</title><rect x="79.7673%" y="213" width="0.2715%" height="15" fill="rgb(237,182,11)" fg:x="111056" fg:w="378"/><text x="80.0173%" y="223.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,708 samples, 1.95%)</title><rect x="78.1031%" y="357" width="1.9451%" height="15" fill="rgb(241,175,49)" fg:x="108739" fg:w="2708"/><text x="78.3531%" y="367.50">&lt;..</text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,696 samples, 1.94%)</title><rect x="78.1117%" y="341" width="1.9364%" height="15" fill="rgb(247,38,35)" fg:x="108751" fg:w="2696"/><text x="78.3617%" y="351.50">&lt;..</text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (2,649 samples, 1.90%)</title><rect x="78.1454%" y="325" width="1.9027%" height="15" fill="rgb(228,39,49)" fg:x="108798" fg:w="2649"/><text x="78.3954%" y="335.50">&lt;..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (2,639 samples, 1.90%)</title><rect x="78.1526%" y="309" width="1.8955%" height="15" fill="rgb(226,101,26)" fg:x="108808" fg:w="2639"/><text x="78.4026%" y="319.50">t..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2,306 samples, 1.66%)</title><rect x="78.3918%" y="293" width="1.6563%" height="15" fill="rgb(206,141,19)" fg:x="109141" fg:w="2306"/><text x="78.6418%" y="303.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (490 samples, 0.35%)</title><rect x="79.6962%" y="277" width="0.3519%" height="15" fill="rgb(211,200,13)" fg:x="110957" fg:w="490"/><text x="79.9462%" y="287.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (475 samples, 0.34%)</title><rect x="79.7069%" y="261" width="0.3412%" height="15" fill="rgb(241,121,6)" fg:x="110972" fg:w="475"/><text x="79.9569%" y="271.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (407 samples, 0.29%)</title><rect x="79.7558%" y="245" width="0.2923%" height="15" fill="rgb(234,221,29)" fg:x="111040" fg:w="407"/><text x="80.0058%" y="255.50"></text></g><g><title>core::ptr::read (94 samples, 0.07%)</title><rect x="80.0567%" y="325" width="0.0675%" height="15" fill="rgb(229,136,5)" fg:x="111459" fg:w="94"/><text x="80.3067%" y="335.50"></text></g><g><title>core::mem::take (104 samples, 0.07%)</title><rect x="80.0567%" y="357" width="0.0747%" height="15" fill="rgb(238,36,11)" fg:x="111459" fg:w="104"/><text x="80.3067%" y="367.50"></text></g><g><title>core::mem::replace (104 samples, 0.07%)</title><rect x="80.0567%" y="341" width="0.0747%" height="15" fill="rgb(251,55,41)" fg:x="111459" fg:w="104"/><text x="80.3067%" y="351.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (3,011 samples, 2.16%)</title><rect x="77.9731%" y="373" width="2.1627%" height="15" fill="rgb(242,34,40)" fg:x="108558" fg:w="3011"/><text x="78.2231%" y="383.50">&lt;..</text></g><g><title>cfree (1,671 samples, 1.20%)</title><rect x="80.3096%" y="341" width="1.2002%" height="15" fill="rgb(215,42,17)" fg:x="111811" fg:w="1671"/><text x="80.5596%" y="351.50"></text></g><g><title>[libc.so.6] (358 samples, 0.26%)</title><rect x="81.2526%" y="325" width="0.2571%" height="15" fill="rgb(207,44,46)" fg:x="113124" fg:w="358"/><text x="81.5026%" y="335.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (51 samples, 0.04%)</title><rect x="81.5421%" y="309" width="0.0366%" height="15" fill="rgb(211,206,28)" fg:x="113527" fg:w="51"/><text x="81.7921%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (2,031 samples, 1.46%)</title><rect x="80.1358%" y="373" width="1.4588%" height="15" fill="rgb(237,167,16)" fg:x="111569" fg:w="2031"/><text x="80.3858%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (2,031 samples, 1.46%)</title><rect x="80.1358%" y="357" width="1.4588%" height="15" fill="rgb(233,66,6)" fg:x="111569" fg:w="2031"/><text x="80.3858%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (118 samples, 0.08%)</title><rect x="81.5098%" y="341" width="0.0848%" height="15" fill="rgb(246,123,29)" fg:x="113482" fg:w="118"/><text x="81.7598%" y="351.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (118 samples, 0.08%)</title><rect x="81.5098%" y="325" width="0.0848%" height="15" fill="rgb(209,62,40)" fg:x="113482" fg:w="118"/><text x="81.7598%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="81.5830%" y="309" width="0.0115%" height="15" fill="rgb(218,4,25)" fg:x="113584" fg:w="16"/><text x="81.8330%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.01%)</title><rect x="81.5830%" y="293" width="0.0115%" height="15" fill="rgb(253,91,49)" fg:x="113584" fg:w="16"/><text x="81.8330%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="81.5830%" y="277" width="0.0115%" height="15" fill="rgb(228,155,29)" fg:x="113584" fg:w="16"/><text x="81.8330%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (16 samples, 0.01%)</title><rect x="81.5830%" y="261" width="0.0115%" height="15" fill="rgb(243,57,37)" fg:x="113584" fg:w="16"/><text x="81.8330%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (14 samples, 0.01%)</title><rect x="81.6118%" y="357" width="0.0101%" height="15" fill="rgb(244,167,17)" fg:x="113624" fg:w="14"/><text x="81.8618%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (14 samples, 0.01%)</title><rect x="81.6118%" y="341" width="0.0101%" height="15" fill="rgb(207,181,38)" fg:x="113624" fg:w="14"/><text x="81.8618%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (14 samples, 0.01%)</title><rect x="81.6118%" y="325" width="0.0101%" height="15" fill="rgb(211,8,23)" fg:x="113624" fg:w="14"/><text x="81.8618%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.01%)</title><rect x="81.6218%" y="357" width="0.0108%" height="15" fill="rgb(235,11,44)" fg:x="113638" fg:w="15"/><text x="81.8718%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (15 samples, 0.01%)</title><rect x="81.6218%" y="341" width="0.0108%" height="15" fill="rgb(248,18,52)" fg:x="113638" fg:w="15"/><text x="81.8718%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (15 samples, 0.01%)</title><rect x="81.6218%" y="325" width="0.0108%" height="15" fill="rgb(208,4,7)" fg:x="113638" fg:w="15"/><text x="81.8718%" y="335.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (17 samples, 0.01%)</title><rect x="81.6326%" y="357" width="0.0122%" height="15" fill="rgb(240,17,39)" fg:x="113653" fg:w="17"/><text x="81.8826%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (450 samples, 0.32%)</title><rect x="81.6448%" y="357" width="0.3232%" height="15" fill="rgb(207,170,3)" fg:x="113670" fg:w="450"/><text x="81.8948%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (450 samples, 0.32%)</title><rect x="81.6448%" y="341" width="0.3232%" height="15" fill="rgb(236,100,52)" fg:x="113670" fg:w="450"/><text x="81.8948%" y="351.50"></text></g><g><title>[libc.so.6] (439 samples, 0.32%)</title><rect x="81.6527%" y="325" width="0.3153%" height="15" fill="rgb(246,78,51)" fg:x="113681" fg:w="439"/><text x="81.9027%" y="335.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (220 samples, 0.16%)</title><rect x="81.9680%" y="357" width="0.1580%" height="15" fill="rgb(211,17,15)" fg:x="114120" fg:w="220"/><text x="82.2180%" y="367.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="82.1153%" y="341" width="0.0108%" height="15" fill="rgb(209,59,46)" fg:x="114325" fg:w="15"/><text x="82.3653%" y="351.50"></text></g><g><title>fastwebsockets::frame::Frame::write (782 samples, 0.56%)</title><rect x="81.5945%" y="373" width="0.5617%" height="15" fill="rgb(210,92,25)" fg:x="113600" fg:w="782"/><text x="81.8445%" y="383.50"></text></g><g><title>fastwebsockets::frame::Frame::write::reserve_enough (42 samples, 0.03%)</title><rect x="82.1261%" y="357" width="0.0302%" height="15" fill="rgb(238,174,52)" fg:x="114340" fg:w="42"/><text x="82.3761%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (35 samples, 0.03%)</title><rect x="82.1311%" y="341" width="0.0251%" height="15" fill="rgb(230,73,7)" fg:x="114347" fg:w="35"/><text x="82.3811%" y="351.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (36 samples, 0.03%)</title><rect x="82.4629%" y="357" width="0.0259%" height="15" fill="rgb(243,124,40)" fg:x="114809" fg:w="36"/><text x="82.7129%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.02%)</title><rect x="82.5125%" y="293" width="0.0230%" height="15" fill="rgb(244,170,11)" fg:x="114878" fg:w="32"/><text x="82.7625%" y="303.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (17 samples, 0.01%)</title><rect x="82.5233%" y="277" width="0.0122%" height="15" fill="rgb(207,114,54)" fg:x="114893" fg:w="17"/><text x="82.7733%" y="287.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (86 samples, 0.06%)</title><rect x="82.4888%" y="309" width="0.0618%" height="15" fill="rgb(205,42,20)" fg:x="114845" fg:w="86"/><text x="82.7388%" y="319.50"></text></g><g><title>tokio::io::async_write::AsyncWrite::poll_write_vectored::_{{closure}} (21 samples, 0.02%)</title><rect x="82.5355%" y="293" width="0.0151%" height="15" fill="rgb(230,30,28)" fg:x="114910" fg:w="21"/><text x="82.7855%" y="303.50"></text></g><g><title>[libc.so.6] (1,303 samples, 0.94%)</title><rect x="83.8492%" y="133" width="0.9359%" height="15" fill="rgb(205,73,54)" fg:x="116739" fg:w="1303"/><text x="84.0992%" y="143.50"></text></g><g><title>__send (3,186 samples, 2.29%)</title><rect x="82.8551%" y="149" width="2.2884%" height="15" fill="rgb(254,227,23)" fg:x="115355" fg:w="3186"/><text x="83.1051%" y="159.50">_..</text></g><g><title>[unknown] (499 samples, 0.36%)</title><rect x="84.7851%" y="133" width="0.3584%" height="15" fill="rgb(228,202,34)" fg:x="118042" fg:w="499"/><text x="85.0351%" y="143.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,276 samples, 2.35%)</title><rect x="82.8422%" y="245" width="2.3530%" height="15" fill="rgb(222,225,37)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="255.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (3,276 samples, 2.35%)</title><rect x="82.8422%" y="229" width="2.3530%" height="15" fill="rgb(221,14,54)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="239.50">m..</text></g><g><title>mio::sys::unix::stateless_io_source::IoSourceState::do_io (3,276 samples, 2.35%)</title><rect x="82.8422%" y="213" width="2.3530%" height="15" fill="rgb(254,102,2)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="223.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (3,276 samples, 2.35%)</title><rect x="82.8422%" y="197" width="2.3530%" height="15" fill="rgb(232,104,17)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="207.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (3,276 samples, 2.35%)</title><rect x="82.8422%" y="181" width="2.3530%" height="15" fill="rgb(250,220,14)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="191.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (3,276 samples, 2.35%)</title><rect x="82.8422%" y="165" width="2.3530%" height="15" fill="rgb(241,158,9)" fg:x="115337" fg:w="3276"/><text x="83.0922%" y="175.50">s..</text></g><g><title>std::sys::pal::unix::cvt (72 samples, 0.05%)</title><rect x="85.1435%" y="149" width="0.0517%" height="15" fill="rgb(246,9,43)" fg:x="118541" fg:w="72"/><text x="85.3935%" y="159.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (68 samples, 0.05%)</title><rect x="85.1463%" y="133" width="0.0488%" height="15" fill="rgb(206,73,33)" fg:x="118545" fg:w="68"/><text x="85.3963%" y="143.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (14 samples, 0.01%)</title><rect x="85.1952%" y="245" width="0.0101%" height="15" fill="rgb(222,79,8)" fg:x="118613" fg:w="14"/><text x="85.4452%" y="255.50"></text></g><g><title>core::ops::function::FnOnce::call_once (31 samples, 0.02%)</title><rect x="85.2792%" y="165" width="0.0223%" height="15" fill="rgb(234,8,54)" fg:x="118730" fg:w="31"/><text x="85.5292%" y="175.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (31 samples, 0.02%)</title><rect x="85.2792%" y="149" width="0.0223%" height="15" fill="rgb(209,134,38)" fg:x="118730" fg:w="31"/><text x="85.5292%" y="159.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (31 samples, 0.02%)</title><rect x="85.2792%" y="133" width="0.0223%" height="15" fill="rgb(230,127,29)" fg:x="118730" fg:w="31"/><text x="85.5292%" y="143.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (17 samples, 0.01%)</title><rect x="85.2893%" y="117" width="0.0122%" height="15" fill="rgb(242,44,41)" fg:x="118744" fg:w="17"/><text x="85.5393%" y="127.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (24 samples, 0.02%)</title><rect x="85.3036%" y="133" width="0.0172%" height="15" fill="rgb(222,56,43)" fg:x="118764" fg:w="24"/><text x="85.5536%" y="143.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (73 samples, 0.05%)</title><rect x="85.2792%" y="213" width="0.0524%" height="15" fill="rgb(238,39,47)" fg:x="118730" fg:w="73"/><text x="85.5292%" y="223.50"></text></g><g><title>tokio::runtime::context::budget (73 samples, 0.05%)</title><rect x="85.2792%" y="197" width="0.0524%" height="15" fill="rgb(226,79,43)" fg:x="118730" fg:w="73"/><text x="85.5292%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (73 samples, 0.05%)</title><rect x="85.2792%" y="181" width="0.0524%" height="15" fill="rgb(242,105,53)" fg:x="118730" fg:w="73"/><text x="85.5292%" y="191.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (42 samples, 0.03%)</title><rect x="85.3015%" y="165" width="0.0302%" height="15" fill="rgb(251,132,46)" fg:x="118761" fg:w="42"/><text x="85.5515%" y="175.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (42 samples, 0.03%)</title><rect x="85.3015%" y="149" width="0.0302%" height="15" fill="rgb(231,77,14)" fg:x="118761" fg:w="42"/><text x="85.5515%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (297 samples, 0.21%)</title><rect x="85.3525%" y="197" width="0.2133%" height="15" fill="rgb(240,135,9)" fg:x="118832" fg:w="297"/><text x="85.6025%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (297 samples, 0.21%)</title><rect x="85.3525%" y="181" width="0.2133%" height="15" fill="rgb(248,109,14)" fg:x="118832" fg:w="297"/><text x="85.6025%" y="191.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (20 samples, 0.01%)</title><rect x="85.5658%" y="197" width="0.0144%" height="15" fill="rgb(227,146,52)" fg:x="119129" fg:w="20"/><text x="85.8158%" y="207.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (4,230 samples, 3.04%)</title><rect x="82.5505%" y="309" width="3.0382%" height="15" fill="rgb(232,54,3)" fg:x="114931" fg:w="4230"/><text x="82.8005%" y="319.50">&lt;to..</text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (4,149 samples, 2.98%)</title><rect x="82.6087%" y="293" width="2.9801%" height="15" fill="rgb(229,201,43)" fg:x="115012" fg:w="4149"/><text x="82.8587%" y="303.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (4,082 samples, 2.93%)</title><rect x="82.6569%" y="277" width="2.9319%" height="15" fill="rgb(252,161,33)" fg:x="115079" fg:w="4082"/><text x="82.9069%" y="287.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3,932 samples, 2.82%)</title><rect x="82.7646%" y="261" width="2.8242%" height="15" fill="rgb(226,146,40)" fg:x="115229" fg:w="3932"/><text x="83.0146%" y="271.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (523 samples, 0.38%)</title><rect x="85.2131%" y="245" width="0.3757%" height="15" fill="rgb(219,47,25)" fg:x="118638" fg:w="523"/><text x="85.4631%" y="255.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (496 samples, 0.36%)</title><rect x="85.2325%" y="229" width="0.3563%" height="15" fill="rgb(250,135,13)" fg:x="118665" fg:w="496"/><text x="85.4825%" y="239.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (358 samples, 0.26%)</title><rect x="85.3317%" y="213" width="0.2571%" height="15" fill="rgb(219,229,18)" fg:x="118803" fg:w="358"/><text x="85.5817%" y="223.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (4,324 samples, 3.11%)</title><rect x="82.4888%" y="357" width="3.1058%" height="15" fill="rgb(217,152,27)" fg:x="114845" fg:w="4324"/><text x="82.7388%" y="367.50">&lt;to..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (4,324 samples, 3.11%)</title><rect x="82.4888%" y="341" width="3.1058%" height="15" fill="rgb(225,71,47)" fg:x="114845" fg:w="4324"/><text x="82.7388%" y="351.50">&lt;&amp;m..</text></g><g><title>tokio::io::async_write::AsyncWrite::poll_write_vectored (4,324 samples, 3.11%)</title><rect x="82.4888%" y="325" width="3.1058%" height="15" fill="rgb(220,139,14)" fg:x="114845" fg:w="4324"/><text x="82.7388%" y="335.50">tok..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_sub (21 samples, 0.02%)</title><rect x="85.6017%" y="309" width="0.0151%" height="15" fill="rgb(247,54,32)" fg:x="119179" fg:w="21"/><text x="85.8517%" y="319.50"></text></g><g><title>core::array::_&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (39 samples, 0.03%)</title><rect x="85.5945%" y="357" width="0.0280%" height="15" fill="rgb(252,131,39)" fg:x="119169" fg:w="39"/><text x="85.8445%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (39 samples, 0.03%)</title><rect x="85.5945%" y="341" width="0.0280%" height="15" fill="rgb(210,108,39)" fg:x="119169" fg:w="39"/><text x="85.8445%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (39 samples, 0.03%)</title><rect x="85.5945%" y="325" width="0.0280%" height="15" fill="rgb(205,23,29)" fg:x="119169" fg:w="39"/><text x="85.8445%" y="335.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (12,504 samples, 8.98%)</title><rect x="76.6852%" y="405" width="8.9811%" height="15" fill="rgb(246,139,46)" fg:x="106765" fg:w="12504"/><text x="76.9352%" y="415.50">fastwebsocket..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (11,961 samples, 8.59%)</title><rect x="77.0752%" y="389" width="8.5911%" height="15" fill="rgb(250,81,26)" fg:x="107308" fg:w="11961"/><text x="77.3252%" y="399.50">fastwebsocke..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (4,887 samples, 3.51%)</title><rect x="82.1562%" y="373" width="3.5101%" height="15" fill="rgb(214,104,7)" fg:x="114382" fg:w="4887"/><text x="82.4062%" y="383.50">fas..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (61 samples, 0.04%)</title><rect x="85.6226%" y="357" width="0.0438%" height="15" fill="rgb(233,189,8)" fg:x="119208" fg:w="61"/><text x="85.8726%" y="367.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (13,786 samples, 9.90%)</title><rect x="75.8089%" y="437" width="9.9020%" height="15" fill="rgb(228,141,17)" fg:x="105545" fg:w="13786"/><text x="76.0589%" y="447.50">&lt;core::pin::Pi..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (13,786 samples, 9.90%)</title><rect x="75.8089%" y="421" width="9.9020%" height="15" fill="rgb(247,157,1)" fg:x="105545" fg:w="13786"/><text x="76.0589%" y="431.50">wisp_mux::fast..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (62 samples, 0.04%)</title><rect x="85.6664%" y="405" width="0.0445%" height="15" fill="rgb(249,225,5)" fg:x="119269" fg:w="62"/><text x="85.9164%" y="415.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (50 samples, 0.04%)</title><rect x="85.6750%" y="389" width="0.0359%" height="15" fill="rgb(242,55,13)" fg:x="119281" fg:w="50"/><text x="85.9250%" y="399.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (99 samples, 0.07%)</title><rect x="85.8143%" y="421" width="0.0711%" height="15" fill="rgb(230,49,50)" fg:x="119475" fg:w="99"/><text x="86.0643%" y="431.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (98 samples, 0.07%)</title><rect x="85.8150%" y="405" width="0.0704%" height="15" fill="rgb(241,111,38)" fg:x="119476" fg:w="98"/><text x="86.0650%" y="415.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (54 samples, 0.04%)</title><rect x="85.8467%" y="389" width="0.0388%" height="15" fill="rgb(252,155,4)" fg:x="119520" fg:w="54"/><text x="86.0967%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (54 samples, 0.04%)</title><rect x="85.8467%" y="373" width="0.0388%" height="15" fill="rgb(212,69,32)" fg:x="119520" fg:w="54"/><text x="86.0967%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (54 samples, 0.04%)</title><rect x="85.8467%" y="357" width="0.0388%" height="15" fill="rgb(243,107,47)" fg:x="119520" fg:w="54"/><text x="86.0967%" y="367.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (67 samples, 0.05%)</title><rect x="85.8854%" y="421" width="0.0481%" height="15" fill="rgb(247,130,12)" fg:x="119574" fg:w="67"/><text x="86.1354%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (131 samples, 0.09%)</title><rect x="85.9400%" y="421" width="0.0941%" height="15" fill="rgb(233,74,16)" fg:x="119650" fg:w="131"/><text x="86.1900%" y="431.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (131 samples, 0.09%)</title><rect x="85.9400%" y="405" width="0.0941%" height="15" fill="rgb(208,58,18)" fg:x="119650" fg:w="131"/><text x="86.1900%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (122 samples, 0.09%)</title><rect x="85.9465%" y="389" width="0.0876%" height="15" fill="rgb(242,225,1)" fg:x="119659" fg:w="122"/><text x="86.1965%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (122 samples, 0.09%)</title><rect x="85.9465%" y="373" width="0.0876%" height="15" fill="rgb(249,39,40)" fg:x="119659" fg:w="122"/><text x="86.1965%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_swap (122 samples, 0.09%)</title><rect x="85.9465%" y="357" width="0.0876%" height="15" fill="rgb(207,72,44)" fg:x="119659" fg:w="122"/><text x="86.1965%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (23 samples, 0.02%)</title><rect x="86.0341%" y="421" width="0.0165%" height="15" fill="rgb(215,193,12)" fg:x="119781" fg:w="23"/><text x="86.2841%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_or (23 samples, 0.02%)</title><rect x="86.0341%" y="405" width="0.0165%" height="15" fill="rgb(248,41,39)" fg:x="119781" fg:w="23"/><text x="86.2841%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (39 samples, 0.03%)</title><rect x="86.0672%" y="405" width="0.0280%" height="15" fill="rgb(253,85,4)" fg:x="119827" fg:w="39"/><text x="86.3172%" y="415.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.03%)</title><rect x="86.0672%" y="389" width="0.0280%" height="15" fill="rgb(243,70,31)" fg:x="119827" fg:w="39"/><text x="86.3172%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (37 samples, 0.03%)</title><rect x="86.0686%" y="373" width="0.0266%" height="15" fill="rgb(253,195,26)" fg:x="119829" fg:w="37"/><text x="86.3186%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (37 samples, 0.03%)</title><rect x="86.0686%" y="357" width="0.0266%" height="15" fill="rgb(243,42,11)" fg:x="119829" fg:w="37"/><text x="86.3186%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_swap (37 samples, 0.03%)</title><rect x="86.0686%" y="341" width="0.0266%" height="15" fill="rgb(239,66,17)" fg:x="119829" fg:w="37"/><text x="86.3186%" y="351.50"></text></g><g><title>core::ptr::read (42 samples, 0.03%)</title><rect x="86.1016%" y="357" width="0.0302%" height="15" fill="rgb(217,132,21)" fg:x="119875" fg:w="42"/><text x="86.3516%" y="367.50"></text></g><g><title>core::mem::replace (43 samples, 0.03%)</title><rect x="86.1016%" y="373" width="0.0309%" height="15" fill="rgb(252,202,21)" fg:x="119875" fg:w="43"/><text x="86.3516%" y="383.50"></text></g><g><title>slab::Slab&lt;T&gt;::remove (51 samples, 0.04%)</title><rect x="86.0988%" y="405" width="0.0366%" height="15" fill="rgb(233,98,36)" fg:x="119871" fg:w="51"/><text x="86.3488%" y="415.50"></text></g><g><title>slab::Slab&lt;T&gt;::try_remove (51 samples, 0.04%)</title><rect x="86.0988%" y="389" width="0.0366%" height="15" fill="rgb(216,153,54)" fg:x="119871" fg:w="51"/><text x="86.3488%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (34 samples, 0.02%)</title><rect x="86.1411%" y="373" width="0.0244%" height="15" fill="rgb(250,99,7)" fg:x="119930" fg:w="34"/><text x="86.3911%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.02%)</title><rect x="86.1411%" y="357" width="0.0244%" height="15" fill="rgb(207,56,50)" fg:x="119930" fg:w="34"/><text x="86.3911%" y="367.50"></text></g><g><title>core::hint::spin_loop (34 samples, 0.02%)</title><rect x="86.1663%" y="341" width="0.0244%" height="15" fill="rgb(244,61,34)" fg:x="119965" fg:w="34"/><text x="86.4163%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (34 samples, 0.02%)</title><rect x="86.1663%" y="325" width="0.0244%" height="15" fill="rgb(241,50,38)" fg:x="119965" fg:w="34"/><text x="86.4163%" y="335.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (209 samples, 0.15%)</title><rect x="86.0542%" y="421" width="0.1501%" height="15" fill="rgb(212,166,30)" fg:x="119809" fg:w="209"/><text x="86.3042%" y="431.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (96 samples, 0.07%)</title><rect x="86.1354%" y="405" width="0.0690%" height="15" fill="rgb(249,127,32)" fg:x="119922" fg:w="96"/><text x="86.3854%" y="415.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (91 samples, 0.07%)</title><rect x="86.1390%" y="389" width="0.0654%" height="15" fill="rgb(209,103,0)" fg:x="119927" fg:w="91"/><text x="86.3890%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock_contended (54 samples, 0.04%)</title><rect x="86.1656%" y="373" width="0.0388%" height="15" fill="rgb(238,209,51)" fg:x="119964" fg:w="54"/><text x="86.4156%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::spin (54 samples, 0.04%)</title><rect x="86.1656%" y="357" width="0.0388%" height="15" fill="rgb(237,56,23)" fg:x="119964" fg:w="54"/><text x="86.4156%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (19 samples, 0.01%)</title><rect x="86.1907%" y="341" width="0.0136%" height="15" fill="rgb(215,153,46)" fg:x="119999" fg:w="19"/><text x="86.4407%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.01%)</title><rect x="86.1907%" y="325" width="0.0136%" height="15" fill="rgb(224,49,31)" fg:x="119999" fg:w="19"/><text x="86.4407%" y="335.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (733 samples, 0.53%)</title><rect x="86.2043%" y="421" width="0.5265%" height="15" fill="rgb(250,18,42)" fg:x="120018" fg:w="733"/><text x="86.4543%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (733 samples, 0.53%)</title><rect x="86.2043%" y="405" width="0.5265%" height="15" fill="rgb(215,176,39)" fg:x="120018" fg:w="733"/><text x="86.4543%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_or (733 samples, 0.53%)</title><rect x="86.2043%" y="389" width="0.5265%" height="15" fill="rgb(223,77,29)" fg:x="120018" fg:w="733"/><text x="86.4543%" y="399.50"></text></g><g><title>futures_util::lock::mutex::Waiter::register (34 samples, 0.02%)</title><rect x="86.7308%" y="421" width="0.0244%" height="15" fill="rgb(234,94,52)" fg:x="120751" fg:w="34"/><text x="86.9808%" y="431.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="86.7366%" y="405" width="0.0187%" height="15" fill="rgb(220,154,50)" fg:x="120759" fg:w="26"/><text x="86.9866%" y="415.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (26 samples, 0.02%)</title><rect x="86.7366%" y="389" width="0.0187%" height="15" fill="rgb(212,11,10)" fg:x="120759" fg:w="26"/><text x="86.9866%" y="399.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (202 samples, 0.15%)</title><rect x="86.7553%" y="421" width="0.1451%" height="15" fill="rgb(205,166,19)" fg:x="120785" fg:w="202"/><text x="87.0053%" y="431.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (202 samples, 0.15%)</title><rect x="86.7553%" y="405" width="0.1451%" height="15" fill="rgb(244,198,16)" fg:x="120785" fg:w="202"/><text x="87.0053%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (122 samples, 0.09%)</title><rect x="86.9097%" y="389" width="0.0876%" height="15" fill="rgb(219,69,12)" fg:x="121000" fg:w="122"/><text x="87.1597%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (122 samples, 0.09%)</title><rect x="86.9097%" y="373" width="0.0876%" height="15" fill="rgb(245,30,7)" fg:x="121000" fg:w="122"/><text x="87.1597%" y="383.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (146 samples, 0.10%)</title><rect x="86.9003%" y="421" width="0.1049%" height="15" fill="rgb(218,221,48)" fg:x="120987" fg:w="146"/><text x="87.1503%" y="431.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (133 samples, 0.10%)</title><rect x="86.9097%" y="405" width="0.0955%" height="15" fill="rgb(216,66,15)" fg:x="121000" fg:w="133"/><text x="87.1597%" y="415.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,803 samples, 1.30%)</title><rect x="85.7109%" y="437" width="1.2950%" height="15" fill="rgb(226,122,50)" fg:x="119331" fg:w="1803"/><text x="85.9609%" y="447.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,242 samples, 0.89%)</title><rect x="87.2078%" y="405" width="0.8921%" height="15" fill="rgb(239,156,16)" fg:x="121415" fg:w="1242"/><text x="87.4578%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,230 samples, 0.88%)</title><rect x="87.2164%" y="389" width="0.8835%" height="15" fill="rgb(224,27,38)" fg:x="121427" fg:w="1230"/><text x="87.4664%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1,230 samples, 0.88%)</title><rect x="87.2164%" y="373" width="0.8835%" height="15" fill="rgb(224,39,27)" fg:x="121427" fg:w="1230"/><text x="87.4664%" y="383.50"></text></g><g><title>__rdl_dealloc (1,230 samples, 0.88%)</title><rect x="87.2164%" y="357" width="0.8835%" height="15" fill="rgb(215,92,29)" fg:x="121427" fg:w="1230"/><text x="87.4664%" y="367.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,230 samples, 0.88%)</title><rect x="87.2164%" y="341" width="0.8835%" height="15" fill="rgb(207,159,16)" fg:x="121427" fg:w="1230"/><text x="87.4664%" y="351.50"></text></g><g><title>cfree (1,223 samples, 0.88%)</title><rect x="87.2214%" y="325" width="0.8784%" height="15" fill="rgb(238,163,47)" fg:x="121434" fg:w="1223"/><text x="87.4714%" y="335.50"></text></g><g><title>[libc.so.6] (230 samples, 0.17%)</title><rect x="87.9346%" y="309" width="0.1652%" height="15" fill="rgb(219,91,49)" fg:x="122427" fg:w="230"/><text x="88.1846%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (1,579 samples, 1.13%)</title><rect x="87.0059%" y="437" width="1.1341%" height="15" fill="rgb(227,167,31)" fg:x="121134" fg:w="1579"/><text x="87.2559%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (1,579 samples, 1.13%)</title><rect x="87.0059%" y="421" width="1.1341%" height="15" fill="rgb(234,80,54)" fg:x="121134" fg:w="1579"/><text x="87.2559%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (56 samples, 0.04%)</title><rect x="88.0998%" y="405" width="0.0402%" height="15" fill="rgb(212,114,2)" fg:x="122657" fg:w="56"/><text x="88.3498%" y="415.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (528 samples, 0.38%)</title><rect x="88.1630%" y="389" width="0.3792%" height="15" fill="rgb(234,50,24)" fg:x="122745" fg:w="528"/><text x="88.4130%" y="399.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.04%)</title><rect x="88.5057%" y="373" width="0.0366%" height="15" fill="rgb(221,68,8)" fg:x="123222" fg:w="51"/><text x="88.7557%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.04%)</title><rect x="88.5057%" y="357" width="0.0366%" height="15" fill="rgb(254,180,31)" fg:x="123222" fg:w="51"/><text x="88.7557%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.04%)</title><rect x="88.5057%" y="341" width="0.0366%" height="15" fill="rgb(247,130,50)" fg:x="123222" fg:w="51"/><text x="88.7557%" y="351.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (31 samples, 0.02%)</title><rect x="88.5200%" y="325" width="0.0223%" height="15" fill="rgb(211,109,4)" fg:x="123242" fg:w="31"/><text x="88.7700%" y="335.50"></text></g><g><title>std::sync::poison::Flag::done (31 samples, 0.02%)</title><rect x="88.5444%" y="357" width="0.0223%" height="15" fill="rgb(238,50,21)" fg:x="123276" fg:w="31"/><text x="88.7944%" y="367.50"></text></g><g><title>std::thread::panicking (19 samples, 0.01%)</title><rect x="88.5531%" y="341" width="0.0136%" height="15" fill="rgb(225,57,45)" fg:x="123288" fg:w="19"/><text x="88.8031%" y="351.50"></text></g><g><title>std::panicking::panicking (19 samples, 0.01%)</title><rect x="88.5531%" y="325" width="0.0136%" height="15" fill="rgb(209,196,50)" fg:x="123288" fg:w="19"/><text x="88.8031%" y="335.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (19 samples, 0.01%)</title><rect x="88.5531%" y="309" width="0.0136%" height="15" fill="rgb(242,140,13)" fg:x="123288" fg:w="19"/><text x="88.8031%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (163 samples, 0.12%)</title><rect x="88.5423%" y="389" width="0.1171%" height="15" fill="rgb(217,111,7)" fg:x="123273" fg:w="163"/><text x="88.7923%" y="399.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (163 samples, 0.12%)</title><rect x="88.5423%" y="373" width="0.1171%" height="15" fill="rgb(253,193,51)" fg:x="123273" fg:w="163"/><text x="88.7923%" y="383.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (129 samples, 0.09%)</title><rect x="88.5667%" y="357" width="0.0927%" height="15" fill="rgb(252,70,29)" fg:x="123307" fg:w="129"/><text x="88.8167%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (126 samples, 0.09%)</title><rect x="88.5689%" y="341" width="0.0905%" height="15" fill="rgb(232,127,12)" fg:x="123310" fg:w="126"/><text x="88.8189%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_swap (126 samples, 0.09%)</title><rect x="88.5689%" y="325" width="0.0905%" height="15" fill="rgb(211,180,21)" fg:x="123310" fg:w="126"/><text x="88.8189%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (653 samples, 0.47%)</title><rect x="88.6594%" y="389" width="0.4690%" height="15" fill="rgb(229,72,13)" fg:x="123436" fg:w="653"/><text x="88.9094%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_and (653 samples, 0.47%)</title><rect x="88.6594%" y="373" width="0.4690%" height="15" fill="rgb(240,211,49)" fg:x="123436" fg:w="653"/><text x="88.9094%" y="383.50"></text></g><g><title>core::ptr::read (36 samples, 0.03%)</title><rect x="89.1327%" y="357" width="0.0259%" height="15" fill="rgb(219,149,40)" fg:x="124095" fg:w="36"/><text x="89.3827%" y="367.50"></text></g><g><title>core::mem::replace (45 samples, 0.03%)</title><rect x="89.1327%" y="373" width="0.0323%" height="15" fill="rgb(210,127,46)" fg:x="124095" fg:w="45"/><text x="89.3827%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (112 samples, 0.08%)</title><rect x="89.1665%" y="325" width="0.0804%" height="15" fill="rgb(220,106,7)" fg:x="124142" fg:w="112"/><text x="89.4165%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (111 samples, 0.08%)</title><rect x="89.1672%" y="309" width="0.0797%" height="15" fill="rgb(249,31,22)" fg:x="124143" fg:w="111"/><text x="89.4172%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (109 samples, 0.08%)</title><rect x="89.1686%" y="293" width="0.0783%" height="15" fill="rgb(253,1,49)" fg:x="124145" fg:w="109"/><text x="89.4186%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_sub (109 samples, 0.08%)</title><rect x="89.1686%" y="277" width="0.0783%" height="15" fill="rgb(227,144,33)" fg:x="124145" fg:w="109"/><text x="89.4186%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (85 samples, 0.06%)</title><rect x="89.2512%" y="261" width="0.0611%" height="15" fill="rgb(249,163,44)" fg:x="124260" fg:w="85"/><text x="89.5012%" y="271.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (74 samples, 0.05%)</title><rect x="89.2591%" y="245" width="0.0532%" height="15" fill="rgb(234,15,39)" fg:x="124271" fg:w="74"/><text x="89.5091%" y="255.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (63 samples, 0.05%)</title><rect x="89.2670%" y="229" width="0.0453%" height="15" fill="rgb(207,66,16)" fg:x="124282" fg:w="63"/><text x="89.5170%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (62 samples, 0.04%)</title><rect x="89.2677%" y="213" width="0.0445%" height="15" fill="rgb(233,112,24)" fg:x="124283" fg:w="62"/><text x="89.5177%" y="223.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (60 samples, 0.04%)</title><rect x="89.3209%" y="245" width="0.0431%" height="15" fill="rgb(230,90,22)" fg:x="124357" fg:w="60"/><text x="89.5709%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (60 samples, 0.04%)</title><rect x="89.3209%" y="229" width="0.0431%" height="15" fill="rgb(229,61,13)" fg:x="124357" fg:w="60"/><text x="89.5709%" y="239.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (60 samples, 0.04%)</title><rect x="89.3209%" y="213" width="0.0431%" height="15" fill="rgb(225,57,24)" fg:x="124357" fg:w="60"/><text x="89.5709%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (70 samples, 0.05%)</title><rect x="89.4631%" y="229" width="0.0503%" height="15" fill="rgb(208,169,48)" fg:x="124555" fg:w="70"/><text x="89.7131%" y="239.50"></text></g><g><title>core::mem::replace (70 samples, 0.05%)</title><rect x="89.4631%" y="213" width="0.0503%" height="15" fill="rgb(244,218,51)" fg:x="124555" fg:w="70"/><text x="89.7131%" y="223.50"></text></g><g><title>core::ptr::read (70 samples, 0.05%)</title><rect x="89.4631%" y="197" width="0.0503%" height="15" fill="rgb(214,148,10)" fg:x="124555" fg:w="70"/><text x="89.7131%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (60 samples, 0.04%)</title><rect x="89.5191%" y="197" width="0.0431%" height="15" fill="rgb(225,174,27)" fg:x="124633" fg:w="60"/><text x="89.7691%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_load (60 samples, 0.04%)</title><rect x="89.5191%" y="181" width="0.0431%" height="15" fill="rgb(230,96,26)" fg:x="124633" fg:w="60"/><text x="89.7691%" y="191.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (86 samples, 0.06%)</title><rect x="89.5622%" y="197" width="0.0618%" height="15" fill="rgb(232,10,30)" fg:x="124693" fg:w="86"/><text x="89.8122%" y="207.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (82 samples, 0.06%)</title><rect x="89.5651%" y="181" width="0.0589%" height="15" fill="rgb(222,8,50)" fg:x="124697" fg:w="82"/><text x="89.8151%" y="191.50"></text></g><g><title>clock_gettime (80 samples, 0.06%)</title><rect x="89.5665%" y="165" width="0.0575%" height="15" fill="rgb(213,81,27)" fg:x="124699" fg:w="80"/><text x="89.8165%" y="175.50"></text></g><g><title>__vdso_clock_gettime (38 samples, 0.03%)</title><rect x="89.5967%" y="149" width="0.0273%" height="15" fill="rgb(245,50,10)" fg:x="124741" fg:w="38"/><text x="89.8467%" y="159.50"></text></g><g><title>parking_lot_core::parking_lot::hash (14 samples, 0.01%)</title><rect x="89.6319%" y="181" width="0.0101%" height="15" fill="rgb(216,100,18)" fg:x="124790" fg:w="14"/><text x="89.8819%" y="191.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (82 samples, 0.06%)</title><rect x="89.6240%" y="197" width="0.0589%" height="15" fill="rgb(236,147,54)" fg:x="124779" fg:w="82"/><text x="89.8740%" y="207.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (57 samples, 0.04%)</title><rect x="89.6419%" y="181" width="0.0409%" height="15" fill="rgb(205,143,26)" fg:x="124804" fg:w="57"/><text x="89.8919%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (57 samples, 0.04%)</title><rect x="89.6419%" y="165" width="0.0409%" height="15" fill="rgb(236,26,9)" fg:x="124804" fg:w="57"/><text x="89.8919%" y="175.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.04%)</title><rect x="89.6419%" y="149" width="0.0409%" height="15" fill="rgb(221,165,53)" fg:x="124804" fg:w="57"/><text x="89.8919%" y="159.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (245 samples, 0.18%)</title><rect x="89.5134%" y="229" width="0.1760%" height="15" fill="rgb(214,110,17)" fg:x="124625" fg:w="245"/><text x="89.7634%" y="239.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (244 samples, 0.18%)</title><rect x="89.5141%" y="213" width="0.1753%" height="15" fill="rgb(237,197,12)" fg:x="124626" fg:w="244"/><text x="89.7641%" y="223.50"></text></g><g><title>syscall (32 samples, 0.02%)</title><rect x="89.6894%" y="229" width="0.0230%" height="15" fill="rgb(205,84,17)" fg:x="124870" fg:w="32"/><text x="89.9394%" y="239.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (77 samples, 0.06%)</title><rect x="89.7123%" y="229" width="0.0553%" height="15" fill="rgb(237,18,45)" fg:x="124902" fg:w="77"/><text x="89.9623%" y="239.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (70 samples, 0.05%)</title><rect x="89.7174%" y="213" width="0.0503%" height="15" fill="rgb(221,87,14)" fg:x="124909" fg:w="70"/><text x="89.9674%" y="223.50"></text></g><g><title>mio::waker::Waker::wake (70 samples, 0.05%)</title><rect x="89.7174%" y="197" width="0.0503%" height="15" fill="rgb(238,186,15)" fg:x="124909" fg:w="70"/><text x="89.9674%" y="207.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (70 samples, 0.05%)</title><rect x="89.7174%" y="181" width="0.0503%" height="15" fill="rgb(208,115,11)" fg:x="124909" fg:w="70"/><text x="89.9674%" y="191.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (70 samples, 0.05%)</title><rect x="89.7174%" y="165" width="0.0503%" height="15" fill="rgb(254,175,0)" fg:x="124909" fg:w="70"/><text x="89.9674%" y="175.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (69 samples, 0.05%)</title><rect x="89.7181%" y="149" width="0.0496%" height="15" fill="rgb(227,24,42)" fg:x="124910" fg:w="69"/><text x="89.9681%" y="159.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (68 samples, 0.05%)</title><rect x="89.7188%" y="133" width="0.0488%" height="15" fill="rgb(223,211,37)" fg:x="124911" fg:w="68"/><text x="89.9688%" y="143.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (68 samples, 0.05%)</title><rect x="89.7188%" y="117" width="0.0488%" height="15" fill="rgb(235,49,27)" fg:x="124911" fg:w="68"/><text x="89.9688%" y="127.50"></text></g><g><title>write (68 samples, 0.05%)</title><rect x="89.7188%" y="101" width="0.0488%" height="15" fill="rgb(254,97,51)" fg:x="124911" fg:w="68"/><text x="89.9688%" y="111.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (111 samples, 0.08%)</title><rect x="89.7863%" y="197" width="0.0797%" height="15" fill="rgb(249,51,40)" fg:x="125005" fg:w="111"/><text x="90.0363%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_swap (111 samples, 0.08%)</title><rect x="89.7863%" y="181" width="0.0797%" height="15" fill="rgb(210,128,45)" fg:x="125005" fg:w="111"/><text x="90.0363%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (143 samples, 0.10%)</title><rect x="89.7676%" y="229" width="0.1027%" height="15" fill="rgb(224,137,50)" fg:x="124979" fg:w="143"/><text x="90.0176%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (143 samples, 0.10%)</title><rect x="89.7676%" y="213" width="0.1027%" height="15" fill="rgb(242,15,9)" fg:x="124979" fg:w="143"/><text x="90.0176%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (31 samples, 0.02%)</title><rect x="89.8797%" y="213" width="0.0223%" height="15" fill="rgb(233,187,41)" fg:x="125135" fg:w="31"/><text x="90.1297%" y="223.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.02%)</title><rect x="89.8797%" y="197" width="0.0223%" height="15" fill="rgb(227,2,29)" fg:x="125135" fg:w="31"/><text x="90.1297%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (62 samples, 0.04%)</title><rect x="89.8704%" y="229" width="0.0445%" height="15" fill="rgb(222,70,3)" fg:x="125122" fg:w="62"/><text x="90.1204%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (97 samples, 0.07%)</title><rect x="89.9314%" y="197" width="0.0697%" height="15" fill="rgb(213,11,42)" fg:x="125207" fg:w="97"/><text x="90.1814%" y="207.50"></text></g><g><title>core::ptr::read (93 samples, 0.07%)</title><rect x="89.9343%" y="181" width="0.0668%" height="15" fill="rgb(225,150,9)" fg:x="125211" fg:w="93"/><text x="90.1843%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (15 samples, 0.01%)</title><rect x="90.0011%" y="197" width="0.0108%" height="15" fill="rgb(230,162,45)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (15 samples, 0.01%)</title><rect x="90.0011%" y="181" width="0.0108%" height="15" fill="rgb(222,14,52)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="191.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="90.0011%" y="165" width="0.0108%" height="15" fill="rgb(254,198,14)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="175.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.01%)</title><rect x="90.0011%" y="149" width="0.0108%" height="15" fill="rgb(220,217,30)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="159.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.01%)</title><rect x="90.0011%" y="133" width="0.0108%" height="15" fill="rgb(215,146,41)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="143.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="90.0011%" y="117" width="0.0108%" height="15" fill="rgb(217,27,36)" fg:x="125304" fg:w="15"/><text x="90.2511%" y="127.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (15 samples, 0.01%)</title><rect x="90.0119%" y="197" width="0.0108%" height="15" fill="rgb(219,218,39)" fg:x="125319" fg:w="15"/><text x="90.2619%" y="207.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15 samples, 0.01%)</title><rect x="90.0119%" y="181" width="0.0108%" height="15" fill="rgb(219,4,42)" fg:x="125319" fg:w="15"/><text x="90.2619%" y="191.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.01%)</title><rect x="90.0119%" y="165" width="0.0108%" height="15" fill="rgb(249,119,36)" fg:x="125319" fg:w="15"/><text x="90.2619%" y="175.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (268 samples, 0.19%)</title><rect x="90.0248%" y="181" width="0.1925%" height="15" fill="rgb(209,23,33)" fg:x="125337" fg:w="268"/><text x="90.2748%" y="191.50"></text></g><g><title>core::sync::atomic::atomic_add (268 samples, 0.19%)</title><rect x="90.0248%" y="165" width="0.1925%" height="15" fill="rgb(211,10,0)" fg:x="125337" fg:w="268"/><text x="90.2748%" y="175.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (272 samples, 0.20%)</title><rect x="90.0226%" y="197" width="0.1954%" height="15" fill="rgb(208,99,37)" fg:x="125334" fg:w="272"/><text x="90.2726%" y="207.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (1,356 samples, 0.97%)</title><rect x="89.2483%" y="309" width="0.9740%" height="15" fill="rgb(213,132,31)" fg:x="124256" fg:w="1356"/><text x="89.4983%" y="319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (1,352 samples, 0.97%)</title><rect x="89.2512%" y="293" width="0.9711%" height="15" fill="rgb(243,129,40)" fg:x="124260" fg:w="1352"/><text x="89.5012%" y="303.50"></text></g><g><title>tokio::runtime::context::with_scheduler (1,352 samples, 0.97%)</title><rect x="89.2512%" y="277" width="0.9711%" height="15" fill="rgb(210,66,33)" fg:x="124260" fg:w="1352"/><text x="89.5012%" y="287.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (1,266 samples, 0.91%)</title><rect x="89.3130%" y="261" width="0.9093%" height="15" fill="rgb(209,189,4)" fg:x="124346" fg:w="1266"/><text x="89.5630%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (1,185 samples, 0.85%)</title><rect x="89.3712%" y="245" width="0.8511%" height="15" fill="rgb(214,107,37)" fg:x="124427" fg:w="1185"/><text x="89.6212%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (428 samples, 0.31%)</title><rect x="89.9149%" y="229" width="0.3074%" height="15" fill="rgb(245,88,54)" fg:x="125184" fg:w="428"/><text x="90.1649%" y="239.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (406 samples, 0.29%)</title><rect x="89.9307%" y="213" width="0.2916%" height="15" fill="rgb(205,146,20)" fg:x="125206" fg:w="406"/><text x="90.1807%" y="223.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (1,482 samples, 1.06%)</title><rect x="89.2469%" y="325" width="1.0645%" height="15" fill="rgb(220,161,25)" fg:x="124254" fg:w="1482"/><text x="89.4969%" y="335.50"></text></g><g><title>tokio::runtime::task::raw::schedule (124 samples, 0.09%)</title><rect x="90.2223%" y="309" width="0.0891%" height="15" fill="rgb(215,152,15)" fg:x="125612" fg:w="124"/><text x="90.4723%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Header::get_scheduler (16 samples, 0.01%)</title><rect x="90.2999%" y="293" width="0.0115%" height="15" fill="rgb(233,192,44)" fg:x="125720" fg:w="16"/><text x="90.5499%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (21 samples, 0.02%)</title><rect x="90.3114%" y="293" width="0.0151%" height="15" fill="rgb(240,170,46)" fg:x="125736" fg:w="21"/><text x="90.5614%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.02%)</title><rect x="90.3114%" y="277" width="0.0151%" height="15" fill="rgb(207,104,33)" fg:x="125736" fg:w="21"/><text x="90.5614%" y="287.50"></text></g><g><title>tokio::runtime::task::state::State::load (457 samples, 0.33%)</title><rect x="90.3264%" y="293" width="0.3282%" height="15" fill="rgb(219,21,39)" fg:x="125757" fg:w="457"/><text x="90.5764%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (457 samples, 0.33%)</title><rect x="90.3264%" y="277" width="0.3282%" height="15" fill="rgb(214,133,29)" fg:x="125757" fg:w="457"/><text x="90.5764%" y="287.50"></text></g><g><title>core::sync::atomic::atomic_load (457 samples, 0.33%)</title><rect x="90.3264%" y="261" width="0.3282%" height="15" fill="rgb(226,93,6)" fg:x="125757" fg:w="457"/><text x="90.5764%" y="271.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (2,134 samples, 1.53%)</title><rect x="89.1284%" y="389" width="1.5328%" height="15" fill="rgb(252,222,34)" fg:x="124089" fg:w="2134"/><text x="89.3784%" y="399.50"></text></g><g><title>core::task::wake::Waker::wake (2,083 samples, 1.50%)</title><rect x="89.1650%" y="373" width="1.4961%" height="15" fill="rgb(252,92,48)" fg:x="124140" fg:w="2083"/><text x="89.4150%" y="383.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2,083 samples, 1.50%)</title><rect x="89.1650%" y="357" width="1.4961%" height="15" fill="rgb(245,223,24)" fg:x="124140" fg:w="2083"/><text x="89.4150%" y="367.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (2,083 samples, 1.50%)</title><rect x="89.1650%" y="341" width="1.4961%" height="15" fill="rgb(205,176,3)" fg:x="124140" fg:w="2083"/><text x="89.4150%" y="351.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (487 samples, 0.35%)</title><rect x="90.3114%" y="325" width="0.3498%" height="15" fill="rgb(235,151,15)" fg:x="125736" fg:w="487"/><text x="90.5614%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (487 samples, 0.35%)</title><rect x="90.3114%" y="309" width="0.3498%" height="15" fill="rgb(237,209,11)" fg:x="125736" fg:w="487"/><text x="90.5614%" y="319.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (57 samples, 0.04%)</title><rect x="90.6655%" y="373" width="0.0409%" height="15" fill="rgb(243,227,24)" fg:x="126229" fg:w="57"/><text x="90.9155%" y="383.50"></text></g><g><title>std::sync::poison::Flag::guard (57 samples, 0.04%)</title><rect x="90.6655%" y="357" width="0.0409%" height="15" fill="rgb(239,193,16)" fg:x="126229" fg:w="57"/><text x="90.9155%" y="367.50"></text></g><g><title>std::thread::panicking (50 samples, 0.04%)</title><rect x="90.6705%" y="341" width="0.0359%" height="15" fill="rgb(231,27,9)" fg:x="126236" fg:w="50"/><text x="90.9205%" y="351.50"></text></g><g><title>std::panicking::panicking (50 samples, 0.04%)</title><rect x="90.6705%" y="325" width="0.0359%" height="15" fill="rgb(219,169,10)" fg:x="126236" fg:w="50"/><text x="90.9205%" y="335.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (50 samples, 0.04%)</title><rect x="90.6705%" y="309" width="0.0359%" height="15" fill="rgb(244,229,43)" fg:x="126236" fg:w="50"/><text x="90.9205%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (38 samples, 0.03%)</title><rect x="90.6791%" y="293" width="0.0273%" height="15" fill="rgb(254,38,20)" fg:x="126248" fg:w="38"/><text x="90.9291%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_load (38 samples, 0.03%)</title><rect x="90.6791%" y="277" width="0.0273%" height="15" fill="rgb(250,47,30)" fg:x="126248" fg:w="38"/><text x="90.9291%" y="287.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (249 samples, 0.18%)</title><rect x="90.7071%" y="357" width="0.1788%" height="15" fill="rgb(224,124,36)" fg:x="126287" fg:w="249"/><text x="90.9571%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (249 samples, 0.18%)</title><rect x="90.7071%" y="341" width="0.1788%" height="15" fill="rgb(246,68,51)" fg:x="126287" fg:w="249"/><text x="90.9571%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (3,836 samples, 2.76%)</title><rect x="88.1401%" y="437" width="2.7553%" height="15" fill="rgb(253,43,49)" fg:x="122713" fg:w="3836"/><text x="88.3901%" y="447.50">co..</text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3,833 samples, 2.75%)</title><rect x="88.1422%" y="421" width="2.7531%" height="15" fill="rgb(219,54,36)" fg:x="122716" fg:w="3833"/><text x="88.3922%" y="431.50">&lt;f..</text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (3,833 samples, 2.75%)</title><rect x="88.1422%" y="405" width="2.7531%" height="15" fill="rgb(227,133,34)" fg:x="122716" fg:w="3833"/><text x="88.3922%" y="415.50">fu..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (320 samples, 0.23%)</title><rect x="90.6655%" y="389" width="0.2298%" height="15" fill="rgb(247,227,15)" fg:x="126229" fg:w="320"/><text x="90.9155%" y="399.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (263 samples, 0.19%)</title><rect x="90.7064%" y="373" width="0.1889%" height="15" fill="rgb(229,96,14)" fg:x="126286" fg:w="263"/><text x="90.9564%" y="383.50"></text></g><g><title>__rdl_alloc (533 samples, 0.38%)</title><rect x="90.9377%" y="325" width="0.3828%" height="15" fill="rgb(220,79,17)" fg:x="126608" fg:w="533"/><text x="91.1877%" y="335.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (533 samples, 0.38%)</title><rect x="90.9377%" y="309" width="0.3828%" height="15" fill="rgb(205,131,53)" fg:x="126608" fg:w="533"/><text x="91.1877%" y="319.50"></text></g><g><title>malloc (531 samples, 0.38%)</title><rect x="90.9391%" y="293" width="0.3814%" height="15" fill="rgb(209,50,29)" fg:x="126610" fg:w="531"/><text x="91.1891%" y="303.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (34,777 samples, 24.98%)</title><rect x="66.3480%" y="517" width="24.9790%" height="15" fill="rgb(245,86,46)" fg:x="92373" fg:w="34777"/><text x="66.5980%" y="527.50">epoxy_server::handle::wisp::copy_write_f..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (28,814 samples, 20.70%)</title><rect x="70.6310%" y="501" width="20.6960%" height="15" fill="rgb(235,66,46)" fg:x="98336" fg:w="28814"/><text x="70.8810%" y="511.50">wisp_mux::stream::MuxStreamWrite:..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (28,331 samples, 20.35%)</title><rect x="70.9779%" y="485" width="20.3491%" height="15" fill="rgb(232,148,31)" fg:x="98819" fg:w="28331"/><text x="71.2279%" y="495.50">wisp_mux::stream::MuxStreamWrite..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (24,641 samples, 17.70%)</title><rect x="73.6283%" y="469" width="17.6987%" height="15" fill="rgb(217,149,8)" fg:x="102509" fg:w="24641"/><text x="73.8783%" y="479.50">wisp_mux::stream::MuxStream..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (22,503 samples, 16.16%)</title><rect x="75.1639%" y="453" width="16.1630%" height="15" fill="rgb(209,183,11)" fg:x="104647" fg:w="22503"/><text x="75.4139%" y="463.50">wisp_mux::ws::LockedWebSo..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (595 samples, 0.43%)</title><rect x="90.8996%" y="437" width="0.4274%" height="15" fill="rgb(208,55,20)" fg:x="126555" fg:w="595"/><text x="91.1496%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (587 samples, 0.42%)</title><rect x="90.9054%" y="421" width="0.4216%" height="15" fill="rgb(218,39,14)" fg:x="126563" fg:w="587"/><text x="91.1554%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (587 samples, 0.42%)</title><rect x="90.9054%" y="405" width="0.4216%" height="15" fill="rgb(216,169,33)" fg:x="126563" fg:w="587"/><text x="91.1554%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (551 samples, 0.40%)</title><rect x="90.9312%" y="389" width="0.3958%" height="15" fill="rgb(233,80,24)" fg:x="126599" fg:w="551"/><text x="91.1812%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (542 samples, 0.39%)</title><rect x="90.9377%" y="373" width="0.3893%" height="15" fill="rgb(213,179,31)" fg:x="126608" fg:w="542"/><text x="91.1877%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (542 samples, 0.39%)</title><rect x="90.9377%" y="357" width="0.3893%" height="15" fill="rgb(209,19,5)" fg:x="126608" fg:w="542"/><text x="91.1877%" y="367.50"></text></g><g><title>alloc::alloc::alloc (542 samples, 0.39%)</title><rect x="90.9377%" y="341" width="0.3893%" height="15" fill="rgb(219,18,35)" fg:x="126608" fg:w="542"/><text x="91.1877%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (17 samples, 0.01%)</title><rect x="91.3270%" y="453" width="0.0122%" height="15" fill="rgb(209,169,16)" fg:x="127150" fg:w="17"/><text x="91.5770%" y="463.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (17 samples, 0.01%)</title><rect x="91.3270%" y="437" width="0.0122%" height="15" fill="rgb(245,90,51)" fg:x="127150" fg:w="17"/><text x="91.5770%" y="447.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (17 samples, 0.01%)</title><rect x="91.3270%" y="421" width="0.0122%" height="15" fill="rgb(220,99,45)" fg:x="127150" fg:w="17"/><text x="91.5770%" y="431.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (35 samples, 0.03%)</title><rect x="91.3414%" y="437" width="0.0251%" height="15" fill="rgb(249,89,25)" fg:x="127170" fg:w="35"/><text x="91.5914%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (35 samples, 0.03%)</title><rect x="91.3414%" y="421" width="0.0251%" height="15" fill="rgb(239,193,0)" fg:x="127170" fg:w="35"/><text x="91.5914%" y="431.50"></text></g><g><title>core::mem::replace (35 samples, 0.03%)</title><rect x="91.3414%" y="405" width="0.0251%" height="15" fill="rgb(231,126,1)" fg:x="127170" fg:w="35"/><text x="91.5914%" y="415.50"></text></g><g><title>core::ptr::write (35 samples, 0.03%)</title><rect x="91.3414%" y="389" width="0.0251%" height="15" fill="rgb(243,166,3)" fg:x="127170" fg:w="35"/><text x="91.5914%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (15 samples, 0.01%)</title><rect x="91.3665%" y="437" width="0.0108%" height="15" fill="rgb(223,22,34)" fg:x="127205" fg:w="15"/><text x="91.6165%" y="447.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (47,016 samples, 33.77%)</title><rect x="57.6139%" y="565" width="33.7698%" height="15" fill="rgb(251,52,51)" fg:x="80213" fg:w="47016"/><text x="57.8639%" y="575.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}..</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (46,675 samples, 33.52%)</title><rect x="57.8589%" y="549" width="33.5249%" height="15" fill="rgb(221,165,28)" fg:x="80554" fg:w="46675"/><text x="58.1089%" y="559.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::fu..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (46,675 samples, 33.52%)</title><rect x="57.8589%" y="533" width="33.5249%" height="15" fill="rgb(218,121,47)" fg:x="80554" fg:w="46675"/><text x="58.1089%" y="543.50">epoxy_server::handle::wisp::handle_stream::_{{closure}..</text></g><g><title>tokio::macros::support::thread_rng_n (79 samples, 0.06%)</title><rect x="91.3270%" y="517" width="0.0567%" height="15" fill="rgb(209,120,9)" fg:x="127150" fg:w="79"/><text x="91.5770%" y="527.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (79 samples, 0.06%)</title><rect x="91.3270%" y="501" width="0.0567%" height="15" fill="rgb(236,68,12)" fg:x="127150" fg:w="79"/><text x="91.5770%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (79 samples, 0.06%)</title><rect x="91.3270%" y="485" width="0.0567%" height="15" fill="rgb(225,194,26)" fg:x="127150" fg:w="79"/><text x="91.5770%" y="495.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (79 samples, 0.06%)</title><rect x="91.3270%" y="469" width="0.0567%" height="15" fill="rgb(231,84,39)" fg:x="127150" fg:w="79"/><text x="91.5770%" y="479.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (62 samples, 0.04%)</title><rect x="91.3392%" y="453" width="0.0445%" height="15" fill="rgb(210,11,45)" fg:x="127167" fg:w="62"/><text x="91.5892%" y="463.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (91,908 samples, 66.01%)</title><rect x="25.3712%" y="597" width="66.0140%" height="15" fill="rgb(224,54,52)" fg:x="35323" fg:w="91908"/><text x="25.6212%" y="607.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}}</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (47,932 samples, 34.43%)</title><rect x="56.9574%" y="581" width="34.4277%" height="15" fill="rgb(238,102,14)" fg:x="79299" fg:w="47932"/><text x="57.2074%" y="591.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;tokio::runtime::coop::with_budget::ResetGuard,std::thread::local::AccessError&gt;&gt; (22 samples, 0.02%)</title><rect x="91.3852%" y="597" width="0.0158%" height="15" fill="rgb(243,160,52)" fg:x="127231" fg:w="22"/><text x="91.6352%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::coop::with_budget::ResetGuard&gt; (18 samples, 0.01%)</title><rect x="91.3880%" y="581" width="0.0129%" height="15" fill="rgb(216,114,19)" fg:x="127235" fg:w="18"/><text x="91.6380%" y="591.50"></text></g><g><title>&lt;tokio::runtime::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="91.3880%" y="565" width="0.0129%" height="15" fill="rgb(244,166,37)" fg:x="127235" fg:w="18"/><text x="91.6380%" y="575.50"></text></g><g><title>tokio::runtime::context::budget (18 samples, 0.01%)</title><rect x="91.3880%" y="549" width="0.0129%" height="15" fill="rgb(246,29,44)" fg:x="127235" fg:w="18"/><text x="91.6380%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.01%)</title><rect x="91.3880%" y="533" width="0.0129%" height="15" fill="rgb(215,56,53)" fg:x="127235" fg:w="18"/><text x="91.6380%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once (36 samples, 0.03%)</title><rect x="91.4010%" y="565" width="0.0259%" height="15" fill="rgb(217,60,2)" fg:x="127253" fg:w="36"/><text x="91.6510%" y="575.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (36 samples, 0.03%)</title><rect x="91.4010%" y="549" width="0.0259%" height="15" fill="rgb(207,26,24)" fg:x="127253" fg:w="36"/><text x="91.6510%" y="559.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (36 samples, 0.03%)</title><rect x="91.4010%" y="533" width="0.0259%" height="15" fill="rgb(252,210,15)" fg:x="127253" fg:w="36"/><text x="91.6510%" y="543.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (34 samples, 0.02%)</title><rect x="91.4024%" y="517" width="0.0244%" height="15" fill="rgb(253,209,26)" fg:x="127255" fg:w="34"/><text x="91.6524%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (29 samples, 0.02%)</title><rect x="91.4268%" y="533" width="0.0208%" height="15" fill="rgb(238,170,14)" fg:x="127289" fg:w="29"/><text x="91.6768%" y="543.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (92,028 samples, 66.10%)</title><rect x="25.3525%" y="645" width="66.1002%" height="15" fill="rgb(216,178,15)" fg:x="35297" fg:w="92028"/><text x="25.6025%" y="655.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::coop::with_unconstrained (92,002 samples, 66.08%)</title><rect x="25.3712%" y="629" width="66.0815%" height="15" fill="rgb(250,197,2)" fg:x="35323" fg:w="92002"/><text x="25.6212%" y="639.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (92,002 samples, 66.08%)</title><rect x="25.3712%" y="613" width="66.0815%" height="15" fill="rgb(212,70,42)" fg:x="35323" fg:w="92002"/><text x="25.6212%" y="623.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::context::budget (72 samples, 0.05%)</title><rect x="91.4010%" y="597" width="0.0517%" height="15" fill="rgb(227,213,9)" fg:x="127253" fg:w="72"/><text x="91.6510%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (72 samples, 0.05%)</title><rect x="91.4010%" y="581" width="0.0517%" height="15" fill="rgb(245,99,25)" fg:x="127253" fg:w="72"/><text x="91.6510%" y="591.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (36 samples, 0.03%)</title><rect x="91.4268%" y="565" width="0.0259%" height="15" fill="rgb(250,82,29)" fg:x="127289" fg:w="36"/><text x="91.6768%" y="575.50"></text></g><g><title>tokio::runtime::coop::with_budget::_{{closure}} (36 samples, 0.03%)</title><rect x="91.4268%" y="549" width="0.0259%" height="15" fill="rgb(241,226,54)" fg:x="127289" fg:w="36"/><text x="91.6768%" y="559.50"></text></g><g><title>core::ops::function::FnOnce::call_once (88 samples, 0.06%)</title><rect x="91.4714%" y="581" width="0.0632%" height="15" fill="rgb(221,99,41)" fg:x="127351" fg:w="88"/><text x="91.7214%" y="591.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (88 samples, 0.06%)</title><rect x="91.4714%" y="565" width="0.0632%" height="15" fill="rgb(213,90,21)" fg:x="127351" fg:w="88"/><text x="91.7214%" y="575.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (88 samples, 0.06%)</title><rect x="91.4714%" y="549" width="0.0632%" height="15" fill="rgb(205,208,24)" fg:x="127351" fg:w="88"/><text x="91.7214%" y="559.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (86 samples, 0.06%)</title><rect x="91.4728%" y="533" width="0.0618%" height="15" fill="rgb(246,31,12)" fg:x="127353" fg:w="86"/><text x="91.7228%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (116 samples, 0.08%)</title><rect x="91.4527%" y="645" width="0.0833%" height="15" fill="rgb(213,154,6)" fg:x="127325" fg:w="116"/><text x="91.7027%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (116 samples, 0.08%)</title><rect x="91.4527%" y="629" width="0.0833%" height="15" fill="rgb(222,163,29)" fg:x="127325" fg:w="116"/><text x="91.7027%" y="639.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (116 samples, 0.08%)</title><rect x="91.4527%" y="613" width="0.0833%" height="15" fill="rgb(227,201,8)" fg:x="127325" fg:w="116"/><text x="91.7027%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (116 samples, 0.08%)</title><rect x="91.4527%" y="597" width="0.0833%" height="15" fill="rgb(233,9,32)" fg:x="127325" fg:w="116"/><text x="91.7027%" y="607.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (92,177 samples, 66.21%)</title><rect x="25.3496%" y="725" width="66.2072%" height="15" fill="rgb(217,54,24)" fg:x="35293" fg:w="92177"/><text x="25.5996%" y="735.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (92,177 samples, 66.21%)</title><rect x="25.3496%" y="709" width="66.2072%" height="15" fill="rgb(235,192,0)" fg:x="35293" fg:w="92177"/><text x="25.5996%" y="719.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (92,177 samples, 66.21%)</title><rect x="25.3496%" y="693" width="66.2072%" height="15" fill="rgb(235,45,9)" fg:x="35293" fg:w="92177"/><text x="25.5996%" y="703.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (92,175 samples, 66.21%)</title><rect x="25.3511%" y="677" width="66.2058%" height="15" fill="rgb(246,42,40)" fg:x="35295" fg:w="92175"/><text x="25.6011%" y="687.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (92,174 samples, 66.21%)</title><rect x="25.3518%" y="661" width="66.2051%" height="15" fill="rgb(248,111,24)" fg:x="35296" fg:w="92174"/><text x="25.6018%" y="671.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::core::TaskIdGuard::enter (28 samples, 0.02%)</title><rect x="91.5367%" y="645" width="0.0201%" height="15" fill="rgb(249,65,22)" fg:x="127442" fg:w="28"/><text x="91.7867%" y="655.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (28 samples, 0.02%)</title><rect x="91.5367%" y="629" width="0.0201%" height="15" fill="rgb(238,111,51)" fg:x="127442" fg:w="28"/><text x="91.7867%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.02%)</title><rect x="91.5367%" y="613" width="0.0201%" height="15" fill="rgb(250,118,22)" fg:x="127442" fg:w="28"/><text x="91.7867%" y="623.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (19 samples, 0.01%)</title><rect x="91.5432%" y="597" width="0.0136%" height="15" fill="rgb(234,84,26)" fg:x="127451" fg:w="19"/><text x="91.7932%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (19 samples, 0.01%)</title><rect x="91.5432%" y="581" width="0.0136%" height="15" fill="rgb(243,172,12)" fg:x="127451" fg:w="19"/><text x="91.7932%" y="591.50"></text></g><g><title>core::mem::replace (19 samples, 0.01%)</title><rect x="91.5432%" y="565" width="0.0136%" height="15" fill="rgb(236,150,49)" fg:x="127451" fg:w="19"/><text x="91.7932%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (92,181 samples, 66.21%)</title><rect x="25.3496%" y="789" width="66.2101%" height="15" fill="rgb(225,197,26)" fg:x="35293" fg:w="92181"/><text x="25.5996%" y="799.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (92,181 samples, 66.21%)</title><rect x="25.3496%" y="773" width="66.2101%" height="15" fill="rgb(214,17,42)" fg:x="35293" fg:w="92181"/><text x="25.5996%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (92,181 samples, 66.21%)</title><rect x="25.3496%" y="757" width="66.2101%" height="15" fill="rgb(224,165,40)" fg:x="35293" fg:w="92181"/><text x="25.5996%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (92,181 samples, 66.21%)</title><rect x="25.3496%" y="741" width="66.2101%" height="15" fill="rgb(246,100,4)" fg:x="35293" fg:w="92181"/><text x="25.5996%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (92 samples, 0.07%)</title><rect x="91.5669%" y="757" width="0.0661%" height="15" fill="rgb(222,103,0)" fg:x="127484" fg:w="92"/><text x="91.8169%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (92 samples, 0.07%)</title><rect x="91.5669%" y="741" width="0.0661%" height="15" fill="rgb(227,189,26)" fg:x="127484" fg:w="92"/><text x="91.8169%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (167 samples, 0.12%)</title><rect x="91.5597%" y="789" width="0.1199%" height="15" fill="rgb(214,202,17)" fg:x="127474" fg:w="167"/><text x="91.8097%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (167 samples, 0.12%)</title><rect x="91.5597%" y="773" width="0.1199%" height="15" fill="rgb(229,111,3)" fg:x="127474" fg:w="167"/><text x="91.8097%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (63 samples, 0.05%)</title><rect x="91.6344%" y="757" width="0.0453%" height="15" fill="rgb(229,172,15)" fg:x="127578" fg:w="63"/><text x="91.8844%" y="767.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_running (16 samples, 0.01%)</title><rect x="91.6682%" y="741" width="0.0115%" height="15" fill="rgb(230,224,35)" fg:x="127625" fg:w="16"/><text x="91.9182%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (141 samples, 0.10%)</title><rect x="91.6804%" y="757" width="0.1013%" height="15" fill="rgb(251,141,6)" fg:x="127642" fg:w="141"/><text x="91.9304%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (141 samples, 0.10%)</title><rect x="91.6804%" y="741" width="0.1013%" height="15" fill="rgb(225,208,6)" fg:x="127642" fg:w="141"/><text x="91.9304%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (159 samples, 0.11%)</title><rect x="91.6797%" y="789" width="0.1142%" height="15" fill="rgb(246,181,16)" fg:x="127641" fg:w="159"/><text x="91.9297%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (159 samples, 0.11%)</title><rect x="91.6797%" y="773" width="0.1142%" height="15" fill="rgb(227,129,36)" fg:x="127641" fg:w="159"/><text x="91.9297%" y="783.50"></text></g><g><title>tokio::runtime::coop::budget (93,651 samples, 67.27%)</title><rect x="24.5394%" y="917" width="67.2659%" height="15" fill="rgb(248,117,24)" fg:x="34165" fg:w="93651"/><text x="24.7894%" y="927.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (93,651 samples, 67.27%)</title><rect x="24.5394%" y="901" width="67.2659%" height="15" fill="rgb(214,185,35)" fg:x="34165" fg:w="93651"/><text x="24.7894%" y="911.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (93,600 samples, 67.23%)</title><rect x="24.5760%" y="885" width="67.2293%" height="15" fill="rgb(236,150,34)" fg:x="34216" fg:w="93600"/><text x="24.8260%" y="895.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (93,088 samples, 66.86%)</title><rect x="24.9438%" y="869" width="66.8616%" height="15" fill="rgb(243,228,27)" fg:x="34728" fg:w="93088"/><text x="25.1938%" y="879.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (93,088 samples, 66.86%)</title><rect x="24.9438%" y="853" width="66.8616%" height="15" fill="rgb(245,77,44)" fg:x="34728" fg:w="93088"/><text x="25.1938%" y="863.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (92,793 samples, 66.65%)</title><rect x="25.1557%" y="837" width="66.6497%" height="15" fill="rgb(235,214,42)" fg:x="35023" fg:w="92793"/><text x="25.4057%" y="847.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (92,776 samples, 66.64%)</title><rect x="25.1679%" y="821" width="66.6375%" height="15" fill="rgb(221,74,3)" fg:x="35040" fg:w="92776"/><text x="25.4179%" y="831.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (92,661 samples, 66.55%)</title><rect x="25.2505%" y="805" width="66.5549%" height="15" fill="rgb(206,121,29)" fg:x="35155" fg:w="92661"/><text x="25.5005%" y="815.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::waker::waker_ref (16 samples, 0.01%)</title><rect x="91.7939%" y="789" width="0.0115%" height="15" fill="rgb(249,131,53)" fg:x="127800" fg:w="16"/><text x="92.0439%" y="799.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_poll (24 samples, 0.02%)</title><rect x="91.8054%" y="917" width="0.0172%" height="15" fill="rgb(236,170,29)" fg:x="127816" fg:w="24"/><text x="92.0554%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (298 samples, 0.21%)</title><rect x="91.8520%" y="853" width="0.2140%" height="15" fill="rgb(247,96,15)" fg:x="127881" fg:w="298"/><text x="92.1020%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (298 samples, 0.21%)</title><rect x="91.8520%" y="837" width="0.2140%" height="15" fill="rgb(211,210,7)" fg:x="127881" fg:w="298"/><text x="92.1020%" y="847.50"></text></g><g><title>clock_gettime (45 samples, 0.03%)</title><rect x="92.0848%" y="821" width="0.0323%" height="15" fill="rgb(240,88,50)" fg:x="128205" fg:w="45"/><text x="92.3348%" y="831.50"></text></g><g><title>__vdso_clock_gettime (42 samples, 0.03%)</title><rect x="92.0869%" y="805" width="0.0302%" height="15" fill="rgb(209,229,26)" fg:x="128208" fg:w="42"/><text x="92.3369%" y="815.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (48 samples, 0.03%)</title><rect x="92.0833%" y="837" width="0.0345%" height="15" fill="rgb(210,68,23)" fg:x="128203" fg:w="48"/><text x="92.3333%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (73 samples, 0.05%)</title><rect x="92.0661%" y="853" width="0.0524%" height="15" fill="rgb(229,180,13)" fg:x="128179" fg:w="73"/><text x="92.3161%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (18 samples, 0.01%)</title><rect x="92.1336%" y="837" width="0.0129%" height="15" fill="rgb(236,53,44)" fg:x="128273" fg:w="18"/><text x="92.3836%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (17 samples, 0.01%)</title><rect x="92.1343%" y="821" width="0.0122%" height="15" fill="rgb(244,214,29)" fg:x="128274" fg:w="17"/><text x="92.3843%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.01%)</title><rect x="92.1343%" y="805" width="0.0122%" height="15" fill="rgb(220,75,29)" fg:x="128274" fg:w="17"/><text x="92.3843%" y="815.50"></text></g><g><title>parking_lot_core::parking_lot::hash (65 samples, 0.05%)</title><rect x="92.1465%" y="837" width="0.0467%" height="15" fill="rgb(214,183,37)" fg:x="128291" fg:w="65"/><text x="92.3965%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (353 samples, 0.25%)</title><rect x="92.1185%" y="853" width="0.2535%" height="15" fill="rgb(239,117,29)" fg:x="128252" fg:w="353"/><text x="92.3685%" y="863.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (249 samples, 0.18%)</title><rect x="92.1932%" y="837" width="0.1788%" height="15" fill="rgb(237,171,35)" fg:x="128356" fg:w="249"/><text x="92.4432%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (248 samples, 0.18%)</title><rect x="92.1939%" y="821" width="0.1781%" height="15" fill="rgb(229,178,53)" fg:x="128357" fg:w="248"/><text x="92.4439%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (248 samples, 0.18%)</title><rect x="92.1939%" y="805" width="0.1781%" height="15" fill="rgb(210,102,19)" fg:x="128357" fg:w="248"/><text x="92.4439%" y="815.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (788 samples, 0.57%)</title><rect x="91.8276%" y="885" width="0.5660%" height="15" fill="rgb(235,127,22)" fg:x="127847" fg:w="788"/><text x="92.0776%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (786 samples, 0.56%)</title><rect x="91.8291%" y="869" width="0.5646%" height="15" fill="rgb(244,31,31)" fg:x="127849" fg:w="786"/><text x="92.0791%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (30 samples, 0.02%)</title><rect x="92.3721%" y="853" width="0.0215%" height="15" fill="rgb(231,43,21)" fg:x="128605" fg:w="30"/><text x="92.6221%" y="863.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (28 samples, 0.02%)</title><rect x="92.3735%" y="837" width="0.0201%" height="15" fill="rgb(217,131,35)" fg:x="128607" fg:w="28"/><text x="92.6235%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.02%)</title><rect x="92.3735%" y="821" width="0.0201%" height="15" fill="rgb(221,149,4)" fg:x="128607" fg:w="28"/><text x="92.6235%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.02%)</title><rect x="92.3735%" y="805" width="0.0201%" height="15" fill="rgb(232,170,28)" fg:x="128607" fg:w="28"/><text x="92.6235%" y="815.50"></text></g><g><title>syscall (83 samples, 0.06%)</title><rect x="92.3936%" y="885" width="0.0596%" height="15" fill="rgb(238,56,10)" fg:x="128635" fg:w="83"/><text x="92.6436%" y="895.50"></text></g><g><title>[unknown] (25 samples, 0.02%)</title><rect x="92.4353%" y="869" width="0.0180%" height="15" fill="rgb(235,196,14)" fg:x="128693" fg:w="25"/><text x="92.6853%" y="879.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="92.4755%" y="741" width="0.0115%" height="15" fill="rgb(216,45,48)" fg:x="128749" fg:w="16"/><text x="92.7255%" y="751.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (43 samples, 0.03%)</title><rect x="92.4590%" y="805" width="0.0309%" height="15" fill="rgb(238,213,17)" fg:x="128726" fg:w="43"/><text x="92.7090%" y="815.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (43 samples, 0.03%)</title><rect x="92.4590%" y="789" width="0.0309%" height="15" fill="rgb(212,13,2)" fg:x="128726" fg:w="43"/><text x="92.7090%" y="799.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (43 samples, 0.03%)</title><rect x="92.4590%" y="773" width="0.0309%" height="15" fill="rgb(240,114,20)" fg:x="128726" fg:w="43"/><text x="92.7090%" y="783.50"></text></g><g><title>write (43 samples, 0.03%)</title><rect x="92.4590%" y="757" width="0.0309%" height="15" fill="rgb(228,41,40)" fg:x="128726" fg:w="43"/><text x="92.7090%" y="767.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (52 samples, 0.04%)</title><rect x="92.4532%" y="885" width="0.0373%" height="15" fill="rgb(244,132,35)" fg:x="128718" fg:w="52"/><text x="92.7032%" y="895.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (44 samples, 0.03%)</title><rect x="92.4590%" y="869" width="0.0316%" height="15" fill="rgb(253,189,4)" fg:x="128726" fg:w="44"/><text x="92.7090%" y="879.50"></text></g><g><title>mio::waker::Waker::wake (44 samples, 0.03%)</title><rect x="92.4590%" y="853" width="0.0316%" height="15" fill="rgb(224,37,19)" fg:x="128726" fg:w="44"/><text x="92.7090%" y="863.50"></text></g><g><title>mio::sys::unix::waker::fdbased::Waker::wake (44 samples, 0.03%)</title><rect x="92.4590%" y="837" width="0.0316%" height="15" fill="rgb(235,223,18)" fg:x="128726" fg:w="44"/><text x="92.7090%" y="847.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (44 samples, 0.03%)</title><rect x="92.4590%" y="821" width="0.0316%" height="15" fill="rgb(235,163,25)" fg:x="128726" fg:w="44"/><text x="92.7090%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_from_searching (44 samples, 0.03%)</title><rect x="92.4906%" y="885" width="0.0316%" height="15" fill="rgb(217,145,28)" fg:x="128770" fg:w="44"/><text x="92.7406%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_searching (44 samples, 0.03%)</title><rect x="92.4906%" y="869" width="0.0316%" height="15" fill="rgb(223,223,32)" fg:x="128770" fg:w="44"/><text x="92.7406%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.03%)</title><rect x="92.4906%" y="853" width="0.0316%" height="15" fill="rgb(227,189,39)" fg:x="128770" fg:w="44"/><text x="92.7406%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.03%)</title><rect x="92.4906%" y="837" width="0.0316%" height="15" fill="rgb(248,10,22)" fg:x="128770" fg:w="44"/><text x="92.7406%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (179 samples, 0.13%)</title><rect x="92.5689%" y="853" width="0.1286%" height="15" fill="rgb(248,46,39)" fg:x="128879" fg:w="179"/><text x="92.8189%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (179 samples, 0.13%)</title><rect x="92.5689%" y="837" width="0.1286%" height="15" fill="rgb(248,113,48)" fg:x="128879" fg:w="179"/><text x="92.8189%" y="847.50"></text></g><g><title>core::mem::drop (15 samples, 0.01%)</title><rect x="92.6989%" y="837" width="0.0108%" height="15" fill="rgb(245,16,25)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;()&gt;&gt; (15 samples, 0.01%)</title><rect x="92.6989%" y="821" width="0.0108%" height="15" fill="rgb(249,152,16)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (15 samples, 0.01%)</title><rect x="92.6989%" y="805" width="0.0108%" height="15" fill="rgb(250,16,1)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="815.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="92.6989%" y="789" width="0.0108%" height="15" fill="rgb(249,138,3)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.01%)</title><rect x="92.6989%" y="773" width="0.0108%" height="15" fill="rgb(227,71,41)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.01%)</title><rect x="92.6989%" y="757" width="0.0108%" height="15" fill="rgb(209,184,23)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="92.6989%" y="741" width="0.0108%" height="15" fill="rgb(223,215,31)" fg:x="129060" fg:w="15"/><text x="92.9489%" y="751.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (277 samples, 0.20%)</title><rect x="92.5222%" y="885" width="0.1990%" height="15" fill="rgb(210,146,28)" fg:x="128814" fg:w="277"/><text x="92.7722%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (277 samples, 0.20%)</title><rect x="92.5222%" y="869" width="0.1990%" height="15" fill="rgb(209,183,41)" fg:x="128814" fg:w="277"/><text x="92.7722%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark_condvar (31 samples, 0.02%)</title><rect x="92.6989%" y="853" width="0.0223%" height="15" fill="rgb(209,224,45)" fg:x="129060" fg:w="31"/><text x="92.9489%" y="863.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="92.7111%" y="837" width="0.0101%" height="15" fill="rgb(224,209,51)" fg:x="129077" fg:w="14"/><text x="92.9611%" y="847.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.01%)</title><rect x="92.7111%" y="821" width="0.0101%" height="15" fill="rgb(223,17,39)" fg:x="129077" fg:w="14"/><text x="92.9611%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.01%)</title><rect x="92.7111%" y="805" width="0.0101%" height="15" fill="rgb(234,204,37)" fg:x="129077" fg:w="14"/><text x="92.9611%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (45 samples, 0.03%)</title><rect x="92.7355%" y="853" width="0.0323%" height="15" fill="rgb(236,120,5)" fg:x="129111" fg:w="45"/><text x="92.9855%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (45 samples, 0.03%)</title><rect x="92.7355%" y="837" width="0.0323%" height="15" fill="rgb(248,97,27)" fg:x="129111" fg:w="45"/><text x="92.9855%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.03%)</title><rect x="92.7355%" y="821" width="0.0323%" height="15" fill="rgb(240,66,17)" fg:x="129111" fg:w="45"/><text x="92.9855%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (45 samples, 0.03%)</title><rect x="92.7355%" y="805" width="0.0323%" height="15" fill="rgb(210,79,3)" fg:x="129111" fg:w="45"/><text x="92.9855%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (44 samples, 0.03%)</title><rect x="92.7362%" y="789" width="0.0316%" height="15" fill="rgb(214,176,27)" fg:x="129112" fg:w="44"/><text x="92.9862%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.03%)</title><rect x="92.7362%" y="773" width="0.0316%" height="15" fill="rgb(235,185,3)" fg:x="129112" fg:w="44"/><text x="92.9862%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (26 samples, 0.02%)</title><rect x="92.7678%" y="805" width="0.0187%" height="15" fill="rgb(227,24,12)" fg:x="129156" fg:w="26"/><text x="93.0178%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.02%)</title><rect x="92.7678%" y="789" width="0.0187%" height="15" fill="rgb(252,169,48)" fg:x="129156" fg:w="26"/><text x="93.0178%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (31 samples, 0.02%)</title><rect x="92.7678%" y="853" width="0.0223%" height="15" fill="rgb(212,65,1)" fg:x="129156" fg:w="31"/><text x="93.0178%" y="863.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (31 samples, 0.02%)</title><rect x="92.7678%" y="837" width="0.0223%" height="15" fill="rgb(242,39,24)" fg:x="129156" fg:w="31"/><text x="93.0178%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31 samples, 0.02%)</title><rect x="92.7678%" y="821" width="0.0223%" height="15" fill="rgb(249,32,23)" fg:x="129156" fg:w="31"/><text x="93.0178%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (27 samples, 0.02%)</title><rect x="92.7901%" y="853" width="0.0194%" height="15" fill="rgb(251,195,23)" fg:x="129187" fg:w="27"/><text x="93.0401%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="92.7930%" y="837" width="0.0165%" height="15" fill="rgb(236,174,8)" fg:x="129191" fg:w="23"/><text x="93.0430%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="92.7930%" y="821" width="0.0165%" height="15" fill="rgb(220,197,8)" fg:x="129191" fg:w="23"/><text x="93.0430%" y="831.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (95,086 samples, 68.30%)</title><rect x="24.5258%" y="933" width="68.2966%" height="15" fill="rgb(240,108,37)" fg:x="34146" fg:w="95086"/><text x="24.7758%" y="943.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (1,392 samples, 1.00%)</title><rect x="91.8226%" y="917" width="0.9998%" height="15" fill="rgb(232,176,24)" fg:x="127840" fg:w="1392"/><text x="92.0726%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (1,385 samples, 0.99%)</title><rect x="91.8276%" y="901" width="0.9948%" height="15" fill="rgb(243,35,29)" fg:x="127847" fg:w="1385"/><text x="92.0776%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (141 samples, 0.10%)</title><rect x="92.7211%" y="885" width="0.1013%" height="15" fill="rgb(210,37,18)" fg:x="129091" fg:w="141"/><text x="92.9711%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (133 samples, 0.10%)</title><rect x="92.7269%" y="869" width="0.0955%" height="15" fill="rgb(224,184,40)" fg:x="129099" fg:w="133"/><text x="92.9769%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::unpark_one (18 samples, 0.01%)</title><rect x="92.8095%" y="853" width="0.0129%" height="15" fill="rgb(236,39,29)" fg:x="129214" fg:w="18"/><text x="93.0595%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.01%)</title><rect x="92.8095%" y="837" width="0.0129%" height="15" fill="rgb(232,48,39)" fg:x="129214" fg:w="18"/><text x="93.0595%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.01%)</title><rect x="92.8095%" y="821" width="0.0129%" height="15" fill="rgb(236,34,42)" fg:x="129214" fg:w="18"/><text x="93.0595%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (45 samples, 0.03%)</title><rect x="92.9129%" y="869" width="0.0323%" height="15" fill="rgb(243,106,37)" fg:x="129358" fg:w="45"/><text x="93.1629%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (40 samples, 0.03%)</title><rect x="92.9165%" y="853" width="0.0287%" height="15" fill="rgb(218,96,6)" fg:x="129363" fg:w="40"/><text x="93.1665%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (40 samples, 0.03%)</title><rect x="92.9165%" y="837" width="0.0287%" height="15" fill="rgb(235,130,12)" fg:x="129363" fg:w="40"/><text x="93.1665%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (57 samples, 0.04%)</title><rect x="92.9115%" y="917" width="0.0409%" height="15" fill="rgb(231,95,0)" fg:x="129356" fg:w="57"/><text x="93.1615%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (57 samples, 0.04%)</title><rect x="92.9115%" y="901" width="0.0409%" height="15" fill="rgb(228,12,23)" fg:x="129356" fg:w="57"/><text x="93.1615%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (57 samples, 0.04%)</title><rect x="92.9115%" y="885" width="0.0409%" height="15" fill="rgb(216,12,1)" fg:x="129356" fg:w="57"/><text x="93.1615%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (68 samples, 0.05%)</title><rect x="92.9524%" y="917" width="0.0488%" height="15" fill="rgb(219,59,3)" fg:x="129413" fg:w="68"/><text x="93.2024%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (68 samples, 0.05%)</title><rect x="92.9524%" y="901" width="0.0488%" height="15" fill="rgb(215,208,46)" fg:x="129413" fg:w="68"/><text x="93.2024%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (68 samples, 0.05%)</title><rect x="92.9524%" y="885" width="0.0488%" height="15" fill="rgb(254,224,29)" fg:x="129413" fg:w="68"/><text x="93.2024%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.05%)</title><rect x="92.9524%" y="869" width="0.0488%" height="15" fill="rgb(232,14,29)" fg:x="129413" fg:w="68"/><text x="93.2024%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (84 samples, 0.06%)</title><rect x="93.0013%" y="917" width="0.0603%" height="15" fill="rgb(208,45,52)" fg:x="129481" fg:w="84"/><text x="93.2513%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (79 samples, 0.06%)</title><rect x="93.0048%" y="901" width="0.0567%" height="15" fill="rgb(234,191,28)" fg:x="129486" fg:w="79"/><text x="93.2548%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (79 samples, 0.06%)</title><rect x="93.0048%" y="885" width="0.0567%" height="15" fill="rgb(244,67,43)" fg:x="129486" fg:w="79"/><text x="93.2548%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (79 samples, 0.06%)</title><rect x="93.0048%" y="869" width="0.0567%" height="15" fill="rgb(236,189,24)" fg:x="129486" fg:w="79"/><text x="93.2548%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (79 samples, 0.06%)</title><rect x="93.0048%" y="853" width="0.0567%" height="15" fill="rgb(239,214,33)" fg:x="129486" fg:w="79"/><text x="93.2548%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (46 samples, 0.03%)</title><rect x="93.0932%" y="853" width="0.0330%" height="15" fill="rgb(226,176,41)" fg:x="129609" fg:w="46"/><text x="93.3432%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.03%)</title><rect x="93.0932%" y="837" width="0.0330%" height="15" fill="rgb(248,47,8)" fg:x="129609" fg:w="46"/><text x="93.3432%" y="847.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (15 samples, 0.01%)</title><rect x="93.1262%" y="853" width="0.0108%" height="15" fill="rgb(218,81,44)" fg:x="129655" fg:w="15"/><text x="93.3762%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (15 samples, 0.01%)</title><rect x="93.1262%" y="837" width="0.0108%" height="15" fill="rgb(213,98,6)" fg:x="129655" fg:w="15"/><text x="93.3762%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="93.1262%" y="821" width="0.0108%" height="15" fill="rgb(222,85,22)" fg:x="129655" fg:w="15"/><text x="93.3762%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (109 samples, 0.08%)</title><rect x="93.0645%" y="901" width="0.0783%" height="15" fill="rgb(239,46,39)" fg:x="129569" fg:w="109"/><text x="93.3145%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (90 samples, 0.06%)</title><rect x="93.0781%" y="885" width="0.0646%" height="15" fill="rgb(237,12,29)" fg:x="129588" fg:w="90"/><text x="93.3281%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (90 samples, 0.06%)</title><rect x="93.0781%" y="869" width="0.0646%" height="15" fill="rgb(214,77,8)" fg:x="129588" fg:w="90"/><text x="93.3281%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (132 samples, 0.09%)</title><rect x="93.0616%" y="917" width="0.0948%" height="15" fill="rgb(217,168,37)" fg:x="129565" fg:w="132"/><text x="93.3116%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (19 samples, 0.01%)</title><rect x="93.1428%" y="901" width="0.0136%" height="15" fill="rgb(221,217,23)" fg:x="129678" fg:w="19"/><text x="93.3928%" y="911.50"></text></g><g><title>core::mem::replace (19 samples, 0.01%)</title><rect x="93.1428%" y="885" width="0.0136%" height="15" fill="rgb(243,229,36)" fg:x="129678" fg:w="19"/><text x="93.3928%" y="895.50"></text></g><g><title>core::ptr::read (19 samples, 0.01%)</title><rect x="93.1428%" y="869" width="0.0136%" height="15" fill="rgb(251,163,40)" fg:x="129678" fg:w="19"/><text x="93.3928%" y="879.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (195 samples, 0.14%)</title><rect x="93.1578%" y="901" width="0.1401%" height="15" fill="rgb(237,222,12)" fg:x="129699" fg:w="195"/><text x="93.4078%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (203 samples, 0.15%)</title><rect x="93.1564%" y="917" width="0.1458%" height="15" fill="rgb(248,132,6)" fg:x="129697" fg:w="203"/><text x="93.4064%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (670 samples, 0.48%)</title><rect x="92.8224%" y="933" width="0.4812%" height="15" fill="rgb(227,167,50)" fg:x="129232" fg:w="670"/><text x="93.0724%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 0.03%)</title><rect x="93.5026%" y="917" width="0.0338%" height="15" fill="rgb(242,84,37)" fg:x="130179" fg:w="47"/><text x="93.7526%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (47 samples, 0.03%)</title><rect x="93.5026%" y="901" width="0.0338%" height="15" fill="rgb(212,4,50)" fg:x="130179" fg:w="47"/><text x="93.7526%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (47 samples, 0.03%)</title><rect x="93.5026%" y="885" width="0.0338%" height="15" fill="rgb(230,228,32)" fg:x="130179" fg:w="47"/><text x="93.7526%" y="895.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (20 samples, 0.01%)</title><rect x="93.5364%" y="917" width="0.0144%" height="15" fill="rgb(248,217,23)" fg:x="130226" fg:w="20"/><text x="93.7864%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.01%)</title><rect x="93.5364%" y="901" width="0.0144%" height="15" fill="rgb(238,197,32)" fg:x="130226" fg:w="20"/><text x="93.7864%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.01%)</title><rect x="93.5751%" y="901" width="0.0144%" height="15" fill="rgb(236,106,1)" fg:x="130280" fg:w="20"/><text x="93.8251%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (20 samples, 0.01%)</title><rect x="93.5751%" y="885" width="0.0144%" height="15" fill="rgb(219,228,13)" fg:x="130280" fg:w="20"/><text x="93.8251%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (20 samples, 0.01%)</title><rect x="93.5751%" y="869" width="0.0144%" height="15" fill="rgb(238,30,35)" fg:x="130280" fg:w="20"/><text x="93.8251%" y="879.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (14 samples, 0.01%)</title><rect x="93.5895%" y="901" width="0.0101%" height="15" fill="rgb(236,70,23)" fg:x="130300" fg:w="14"/><text x="93.8395%" y="911.50"></text></g><g><title>tokio::loom::std::atomic_u32::AtomicU32::unsync_load (15 samples, 0.01%)</title><rect x="93.6060%" y="901" width="0.0108%" height="15" fill="rgb(249,104,48)" fg:x="130323" fg:w="15"/><text x="93.8560%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (15 samples, 0.01%)</title><rect x="93.6060%" y="885" width="0.0108%" height="15" fill="rgb(254,117,50)" fg:x="130323" fg:w="15"/><text x="93.8560%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="93.6060%" y="869" width="0.0108%" height="15" fill="rgb(223,152,4)" fg:x="130323" fg:w="15"/><text x="93.8560%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (121 samples, 0.09%)</title><rect x="93.6915%" y="885" width="0.0869%" height="15" fill="rgb(245,6,2)" fg:x="130442" fg:w="121"/><text x="93.9415%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (121 samples, 0.09%)</title><rect x="93.6915%" y="869" width="0.0869%" height="15" fill="rgb(249,150,24)" fg:x="130442" fg:w="121"/><text x="93.9415%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (121 samples, 0.09%)</title><rect x="93.6915%" y="853" width="0.0869%" height="15" fill="rgb(228,185,42)" fg:x="130442" fg:w="121"/><text x="93.9415%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (451 samples, 0.32%)</title><rect x="93.8000%" y="885" width="0.3239%" height="15" fill="rgb(226,39,33)" fg:x="130593" fg:w="451"/><text x="94.0500%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (451 samples, 0.32%)</title><rect x="93.8000%" y="869" width="0.3239%" height="15" fill="rgb(221,166,19)" fg:x="130593" fg:w="451"/><text x="94.0500%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (149 samples, 0.11%)</title><rect x="94.1239%" y="885" width="0.1070%" height="15" fill="rgb(209,109,2)" fg:x="131044" fg:w="149"/><text x="94.3739%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (149 samples, 0.11%)</title><rect x="94.1239%" y="869" width="0.1070%" height="15" fill="rgb(252,216,26)" fg:x="131044" fg:w="149"/><text x="94.3739%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (843 samples, 0.61%)</title><rect x="94.2309%" y="885" width="0.6055%" height="15" fill="rgb(227,173,36)" fg:x="131193" fg:w="843"/><text x="94.4809%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (843 samples, 0.61%)</title><rect x="94.2309%" y="869" width="0.6055%" height="15" fill="rgb(209,90,7)" fg:x="131193" fg:w="843"/><text x="94.4809%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (163 samples, 0.12%)</title><rect x="94.8364%" y="885" width="0.1171%" height="15" fill="rgb(250,194,11)" fg:x="132036" fg:w="163"/><text x="95.0864%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (163 samples, 0.12%)</title><rect x="94.8364%" y="869" width="0.1171%" height="15" fill="rgb(220,72,50)" fg:x="132036" fg:w="163"/><text x="95.0864%" y="879.50"></text></g><g><title>core::ptr::read (163 samples, 0.12%)</title><rect x="94.8364%" y="853" width="0.1171%" height="15" fill="rgb(222,106,48)" fg:x="132036" fg:w="163"/><text x="95.0864%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::pack (25 samples, 0.02%)</title><rect x="94.9542%" y="885" width="0.0180%" height="15" fill="rgb(216,220,45)" fg:x="132200" fg:w="25"/><text x="95.2042%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (1,918 samples, 1.38%)</title><rect x="93.6211%" y="901" width="1.3776%" height="15" fill="rgb(234,112,18)" fg:x="130344" fg:w="1918"/><text x="93.8711%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::unpack (37 samples, 0.03%)</title><rect x="94.9722%" y="885" width="0.0266%" height="15" fill="rgb(206,179,9)" fg:x="132225" fg:w="37"/><text x="95.2222%" y="895.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (2,028 samples, 1.46%)</title><rect x="93.5507%" y="917" width="1.4566%" height="15" fill="rgb(215,115,40)" fg:x="130246" fg:w="2028"/><text x="93.8007%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::next_remote_task (52 samples, 0.04%)</title><rect x="95.0074%" y="917" width="0.0373%" height="15" fill="rgb(222,69,34)" fg:x="132274" fg:w="52"/><text x="95.2574%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_empty (48 samples, 0.03%)</title><rect x="95.0102%" y="901" width="0.0345%" height="15" fill="rgb(209,161,10)" fg:x="132278" fg:w="48"/><text x="95.2602%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::len (48 samples, 0.03%)</title><rect x="95.0102%" y="885" width="0.0345%" height="15" fill="rgb(217,6,38)" fg:x="132278" fg:w="48"/><text x="95.2602%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48 samples, 0.03%)</title><rect x="95.0102%" y="869" width="0.0345%" height="15" fill="rgb(229,229,48)" fg:x="132278" fg:w="48"/><text x="95.2602%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.03%)</title><rect x="95.0102%" y="853" width="0.0345%" height="15" fill="rgb(225,21,28)" fg:x="132278" fg:w="48"/><text x="95.2602%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (76 samples, 0.05%)</title><rect x="95.0555%" y="885" width="0.0546%" height="15" fill="rgb(206,33,13)" fg:x="132341" fg:w="76"/><text x="95.3055%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (76 samples, 0.05%)</title><rect x="95.0555%" y="869" width="0.0546%" height="15" fill="rgb(242,178,17)" fg:x="132341" fg:w="76"/><text x="95.3055%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (76 samples, 0.05%)</title><rect x="95.0555%" y="853" width="0.0546%" height="15" fill="rgb(220,162,5)" fg:x="132341" fg:w="76"/><text x="95.3055%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (117 samples, 0.08%)</title><rect x="95.0447%" y="917" width="0.0840%" height="15" fill="rgb(210,33,43)" fg:x="132326" fg:w="117"/><text x="95.2947%" y="927.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (107 samples, 0.08%)</title><rect x="95.0519%" y="901" width="0.0769%" height="15" fill="rgb(216,116,54)" fg:x="132336" fg:w="107"/><text x="95.3019%" y="911.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::load (26 samples, 0.02%)</title><rect x="95.1101%" y="885" width="0.0187%" height="15" fill="rgb(249,92,24)" fg:x="132417" fg:w="26"/><text x="95.3601%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (26 samples, 0.02%)</title><rect x="95.1101%" y="869" width="0.0187%" height="15" fill="rgb(231,189,14)" fg:x="132417" fg:w="26"/><text x="95.3601%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="95.1101%" y="853" width="0.0187%" height="15" fill="rgb(230,8,41)" fg:x="132417" fg:w="26"/><text x="95.3601%" y="863.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (2,567 samples, 1.84%)</title><rect x="93.3036%" y="933" width="1.8438%" height="15" fill="rgb(249,7,27)" fg:x="129902" fg:w="2567"/><text x="93.5536%" y="943.50">t..</text></g><g><title>tokio::util::rand::FastRand::fastrand_n (26 samples, 0.02%)</title><rect x="95.1287%" y="917" width="0.0187%" height="15" fill="rgb(232,86,5)" fg:x="132443" fg:w="26"/><text x="95.3787%" y="927.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (26 samples, 0.02%)</title><rect x="95.1287%" y="901" width="0.0187%" height="15" fill="rgb(224,175,18)" fg:x="132443" fg:w="26"/><text x="95.3787%" y="911.50"></text></g><g><title>[libc.so.6] (126,101 samples, 90.57%)</title><rect x="4.6069%" y="1605" width="90.5735%" height="15" fill="rgb(220,129,12)" fg:x="6414" fg:w="126101"/><text x="4.8569%" y="1615.50">[libc.so.6]</text></g><g><title>[libc.so.6] (126,100 samples, 90.57%)</title><rect x="4.6076%" y="1589" width="90.5728%" height="15" fill="rgb(210,19,36)" fg:x="6415" fg:w="126100"/><text x="4.8576%" y="1599.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1573" width="90.5721%" height="15" fill="rgb(219,96,14)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1583.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1557" width="90.5721%" height="15" fill="rgb(249,106,1)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1567.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1541" width="90.5721%" height="15" fill="rgb(249,155,20)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1551.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1525" width="90.5721%" height="15" fill="rgb(244,168,9)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1535.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1509" width="90.5721%" height="15" fill="rgb(216,23,50)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1519.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1493" width="90.5721%" height="15" fill="rgb(224,219,20)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1503.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1477" width="90.5721%" height="15" fill="rgb(222,156,15)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1487.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1461" width="90.5721%" height="15" fill="rgb(231,97,17)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1471.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1445" width="90.5721%" height="15" fill="rgb(218,70,48)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1455.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1429" width="90.5721%" height="15" fill="rgb(212,196,52)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1439.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1413" width="90.5721%" height="15" fill="rgb(243,203,18)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1423.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (126,099 samples, 90.57%)</title><rect x="4.6084%" y="1397" width="90.5721%" height="15" fill="rgb(252,125,41)" fg:x="6416" fg:w="126099"/><text x="4.8584%" y="1407.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (126,098 samples, 90.57%)</title><rect x="4.6091%" y="1381" width="90.5714%" height="15" fill="rgb(223,180,33)" fg:x="6417" fg:w="126098"/><text x="4.8591%" y="1391.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1365" width="90.5549%" height="15" fill="rgb(254,159,46)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1375.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1349" width="90.5549%" height="15" fill="rgb(254,38,10)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1359.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1333" width="90.5549%" height="15" fill="rgb(208,217,32)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1343.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1317" width="90.5549%" height="15" fill="rgb(221,120,13)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1327.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1301" width="90.5549%" height="15" fill="rgb(246,54,52)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1311.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1285" width="90.5549%" height="15" fill="rgb(242,34,25)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1295.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1269" width="90.5549%" height="15" fill="rgb(247,209,9)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1279.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1253" width="90.5549%" height="15" fill="rgb(228,71,26)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1237" width="90.5549%" height="15" fill="rgb(222,145,49)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1221" width="90.5549%" height="15" fill="rgb(218,121,17)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1231.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1205" width="90.5549%" height="15" fill="rgb(244,50,7)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1215.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1189" width="90.5549%" height="15" fill="rgb(246,229,37)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1199.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1173" width="90.5549%" height="15" fill="rgb(225,18,5)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1183.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1157" width="90.5549%" height="15" fill="rgb(213,204,8)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1167.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1141" width="90.5549%" height="15" fill="rgb(238,103,6)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1151.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1125" width="90.5549%" height="15" fill="rgb(222,25,35)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1135.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1109" width="90.5549%" height="15" fill="rgb(213,203,35)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1119.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1093" width="90.5549%" height="15" fill="rgb(221,79,53)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1103.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1077" width="90.5549%" height="15" fill="rgb(243,200,35)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1087.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1061" width="90.5549%" height="15" fill="rgb(248,60,25)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1071.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1045" width="90.5549%" height="15" fill="rgb(227,53,46)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1055.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1029" width="90.5549%" height="15" fill="rgb(216,120,32)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1039.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (126,075 samples, 90.55%)</title><rect x="4.6256%" y="1013" width="90.5549%" height="15" fill="rgb(220,134,1)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1023.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="997" width="90.5549%" height="15" fill="rgb(237,168,5)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="1007.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (126,075 samples, 90.55%)</title><rect x="4.6256%" y="981" width="90.5549%" height="15" fill="rgb(231,100,33)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="991.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (126,075 samples, 90.55%)</title><rect x="4.6256%" y="965" width="90.5549%" height="15" fill="rgb(236,177,47)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="975.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (126,075 samples, 90.55%)</title><rect x="4.6256%" y="949" width="90.5549%" height="15" fill="rgb(235,7,49)" fg:x="6440" fg:w="126075"/><text x="4.8756%" y="959.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (46 samples, 0.03%)</title><rect x="95.1474%" y="933" width="0.0330%" height="15" fill="rgb(232,119,22)" fg:x="132469" fg:w="46"/><text x="95.3974%" y="943.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="97.2979%" y="1589" width="0.0101%" height="15" fill="rgb(254,73,53)" fg:x="135463" fg:w="14"/><text x="97.5479%" y="1599.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (93 samples, 0.07%)</title><rect x="97.3080%" y="1589" width="0.0668%" height="15" fill="rgb(251,35,20)" fg:x="135477" fg:w="93"/><text x="97.5580%" y="1599.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (93 samples, 0.07%)</title><rect x="97.3080%" y="1573" width="0.0668%" height="15" fill="rgb(241,119,20)" fg:x="135477" fg:w="93"/><text x="97.5580%" y="1583.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (93 samples, 0.07%)</title><rect x="97.3080%" y="1557" width="0.0668%" height="15" fill="rgb(207,102,14)" fg:x="135477" fg:w="93"/><text x="97.5580%" y="1567.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (93 samples, 0.07%)</title><rect x="97.3080%" y="1541" width="0.0668%" height="15" fill="rgb(248,201,50)" fg:x="135477" fg:w="93"/><text x="97.5580%" y="1551.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (93 samples, 0.07%)</title><rect x="97.3080%" y="1525" width="0.0668%" height="15" fill="rgb(222,185,44)" fg:x="135477" fg:w="93"/><text x="97.5580%" y="1535.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (34 samples, 0.02%)</title><rect x="97.3755%" y="1589" width="0.0244%" height="15" fill="rgb(218,107,18)" fg:x="135571" fg:w="34"/><text x="97.6255%" y="1599.50"></text></g><g><title>[libc.so.6] (41 samples, 0.03%)</title><rect x="97.3999%" y="1589" width="0.0294%" height="15" fill="rgb(237,177,39)" fg:x="135605" fg:w="41"/><text x="97.6499%" y="1599.50"></text></g><g><title>__send (18 samples, 0.01%)</title><rect x="97.4437%" y="1589" width="0.0129%" height="15" fill="rgb(246,69,6)" fg:x="135666" fg:w="18"/><text x="97.6937%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (15 samples, 0.01%)</title><rect x="97.4566%" y="1589" width="0.0108%" height="15" fill="rgb(234,208,37)" fg:x="135684" fg:w="15"/><text x="97.7066%" y="1599.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (16 samples, 0.01%)</title><rect x="97.4724%" y="1589" width="0.0115%" height="15" fill="rgb(225,4,6)" fg:x="135706" fg:w="16"/><text x="97.7224%" y="1599.50"></text></g><g><title>cfree (35 samples, 0.03%)</title><rect x="97.4846%" y="1589" width="0.0251%" height="15" fill="rgb(233,45,0)" fg:x="135723" fg:w="35"/><text x="97.7346%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (69 samples, 0.05%)</title><rect x="97.5177%" y="1589" width="0.0496%" height="15" fill="rgb(226,136,5)" fg:x="135769" fg:w="69"/><text x="97.7677%" y="1599.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.04%)</title><rect x="97.5313%" y="1573" width="0.0359%" height="15" fill="rgb(211,91,47)" fg:x="135788" fg:w="50"/><text x="97.7813%" y="1583.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (50 samples, 0.04%)</title><rect x="97.5313%" y="1557" width="0.0359%" height="15" fill="rgb(242,88,51)" fg:x="135788" fg:w="50"/><text x="97.7813%" y="1567.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (50 samples, 0.04%)</title><rect x="97.5313%" y="1541" width="0.0359%" height="15" fill="rgb(230,91,28)" fg:x="135788" fg:w="50"/><text x="97.7813%" y="1551.50"></text></g><g><title>core::task::wake::Waker::wake (50 samples, 0.04%)</title><rect x="97.5313%" y="1525" width="0.0359%" height="15" fill="rgb(254,186,29)" fg:x="135788" fg:w="50"/><text x="97.7813%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio_util::either::Either&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (30 samples, 0.02%)</title><rect x="97.5672%" y="1589" width="0.0215%" height="15" fill="rgb(238,6,4)" fg:x="135838" fg:w="30"/><text x="97.8172%" y="1599.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (49 samples, 0.04%)</title><rect x="97.5888%" y="1589" width="0.0352%" height="15" fill="rgb(221,151,16)" fg:x="135868" fg:w="49"/><text x="97.8388%" y="1599.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::hash_usize (54 samples, 0.04%)</title><rect x="97.6240%" y="1589" width="0.0388%" height="15" fill="rgb(251,143,52)" fg:x="135917" fg:w="54"/><text x="97.8740%" y="1599.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (143 samples, 0.10%)</title><rect x="97.6664%" y="1589" width="0.1027%" height="15" fill="rgb(206,90,15)" fg:x="135976" fg:w="143"/><text x="97.9164%" y="1599.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (18 samples, 0.01%)</title><rect x="97.7562%" y="1573" width="0.0129%" height="15" fill="rgb(218,35,8)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1583.50"></text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (18 samples, 0.01%)</title><rect x="97.7562%" y="1557" width="0.0129%" height="15" fill="rgb(239,215,6)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1567.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (18 samples, 0.01%)</title><rect x="97.7562%" y="1541" width="0.0129%" height="15" fill="rgb(245,116,39)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1551.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (18 samples, 0.01%)</title><rect x="97.7562%" y="1525" width="0.0129%" height="15" fill="rgb(242,65,28)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1535.50"></text></g><g><title>tokio::io::async_write::AsyncWrite::poll_write_vectored (18 samples, 0.01%)</title><rect x="97.7562%" y="1509" width="0.0129%" height="15" fill="rgb(252,132,53)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1519.50"></text></g><g><title>&lt;tokio_util::either::Either&lt;L,R&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (18 samples, 0.01%)</title><rect x="97.7562%" y="1493" width="0.0129%" height="15" fill="rgb(224,159,50)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1503.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (18 samples, 0.01%)</title><rect x="97.7562%" y="1477" width="0.0129%" height="15" fill="rgb(224,93,4)" fg:x="136101" fg:w="18"/><text x="98.0062%" y="1487.50"></text></g><g><title>fastwebsockets::frame::&lt;impl core::convert::From&lt;fastwebsockets::frame::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (51 samples, 0.04%)</title><rect x="97.7691%" y="1589" width="0.0366%" height="15" fill="rgb(208,81,34)" fg:x="136119" fg:w="51"/><text x="98.0191%" y="1599.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (117 samples, 0.08%)</title><rect x="97.8143%" y="1589" width="0.0840%" height="15" fill="rgb(233,92,54)" fg:x="136182" fg:w="117"/><text x="98.0643%" y="1599.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (19 samples, 0.01%)</title><rect x="97.9020%" y="1589" width="0.0136%" height="15" fill="rgb(237,21,14)" fg:x="136304" fg:w="19"/><text x="98.1520%" y="1599.50"></text></g><g><title>malloc (47 samples, 0.03%)</title><rect x="97.9156%" y="1589" width="0.0338%" height="15" fill="rgb(249,128,51)" fg:x="136323" fg:w="47"/><text x="98.1656%" y="1599.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (34 samples, 0.02%)</title><rect x="97.9494%" y="1589" width="0.0244%" height="15" fill="rgb(223,129,24)" fg:x="136370" fg:w="34"/><text x="98.1994%" y="1599.50"></text></g><g><title>recv (70 samples, 0.05%)</title><rect x="97.9752%" y="1589" width="0.0503%" height="15" fill="rgb(231,168,25)" fg:x="136406" fg:w="70"/><text x="98.2252%" y="1599.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (17 samples, 0.01%)</title><rect x="98.0277%" y="1589" width="0.0122%" height="15" fill="rgb(224,39,20)" fg:x="136479" fg:w="17"/><text x="98.2777%" y="1599.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (52 samples, 0.04%)</title><rect x="98.0686%" y="1589" width="0.0373%" height="15" fill="rgb(225,152,53)" fg:x="136536" fg:w="52"/><text x="98.3186%" y="1599.50"></text></g><g><title>mio::poll::Poll::poll (21 samples, 0.02%)</title><rect x="98.0909%" y="1573" width="0.0151%" height="15" fill="rgb(252,17,24)" fg:x="136567" fg:w="21"/><text x="98.3409%" y="1583.50"></text></g><g><title>mio::sys::unix::selector::epoll::Selector::select (21 samples, 0.02%)</title><rect x="98.0909%" y="1557" width="0.0151%" height="15" fill="rgb(250,114,30)" fg:x="136567" fg:w="21"/><text x="98.3409%" y="1567.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (160 samples, 0.11%)</title><rect x="98.1059%" y="1589" width="0.1149%" height="15" fill="rgb(229,5,4)" fg:x="136588" fg:w="160"/><text x="98.3559%" y="1599.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (30 samples, 0.02%)</title><rect x="98.1993%" y="1573" width="0.0215%" height="15" fill="rgb(225,176,49)" fg:x="136718" fg:w="30"/><text x="98.4493%" y="1583.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (30 samples, 0.02%)</title><rect x="98.1993%" y="1557" width="0.0215%" height="15" fill="rgb(224,221,49)" fg:x="136718" fg:w="30"/><text x="98.4493%" y="1567.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (56 samples, 0.04%)</title><rect x="98.2209%" y="1589" width="0.0402%" height="15" fill="rgb(253,169,27)" fg:x="136748" fg:w="56"/><text x="98.4709%" y="1599.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (33 samples, 0.02%)</title><rect x="98.2374%" y="1573" width="0.0237%" height="15" fill="rgb(211,206,16)" fg:x="136771" fg:w="33"/><text x="98.4874%" y="1583.50"></text></g><g><title>core::task::wake::Waker::wake (33 samples, 0.02%)</title><rect x="98.2374%" y="1557" width="0.0237%" height="15" fill="rgb(244,87,35)" fg:x="136771" fg:w="33"/><text x="98.4874%" y="1567.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (45 samples, 0.03%)</title><rect x="98.2618%" y="1589" width="0.0323%" height="15" fill="rgb(246,28,10)" fg:x="136805" fg:w="45"/><text x="98.5118%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (16 samples, 0.01%)</title><rect x="98.2941%" y="1589" width="0.0115%" height="15" fill="rgb(229,12,44)" fg:x="136850" fg:w="16"/><text x="98.5441%" y="1599.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (14 samples, 0.01%)</title><rect x="98.3099%" y="1589" width="0.0101%" height="15" fill="rgb(210,145,37)" fg:x="136872" fg:w="14"/><text x="98.5599%" y="1599.50"></text></g><g><title>tokio::runtime::signal::Driver::process (22 samples, 0.02%)</title><rect x="98.3200%" y="1589" width="0.0158%" height="15" fill="rgb(227,112,52)" fg:x="136886" fg:w="22"/><text x="98.5700%" y="1599.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (22 samples, 0.02%)</title><rect x="98.3200%" y="1573" width="0.0158%" height="15" fill="rgb(238,155,34)" fg:x="136886" fg:w="22"/><text x="98.5700%" y="1583.50"></text></g><g><title>tokio::runtime::task::raw::poll (59 samples, 0.04%)</title><rect x="98.3365%" y="1589" width="0.0424%" height="15" fill="rgb(239,226,36)" fg:x="136909" fg:w="59"/><text x="98.5865%" y="1599.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (57 samples, 0.04%)</title><rect x="98.3789%" y="1589" width="0.0409%" height="15" fill="rgb(230,16,23)" fg:x="136968" fg:w="57"/><text x="98.6289%" y="1599.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (23 samples, 0.02%)</title><rect x="98.4450%" y="1573" width="0.0165%" height="15" fill="rgb(236,171,36)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1583.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (23 samples, 0.02%)</title><rect x="98.4450%" y="1557" width="0.0165%" height="15" fill="rgb(221,22,14)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1567.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (23 samples, 0.02%)</title><rect x="98.4450%" y="1541" width="0.0165%" height="15" fill="rgb(242,43,11)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1551.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="98.4450%" y="1525" width="0.0165%" height="15" fill="rgb(232,69,23)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1535.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (23 samples, 0.02%)</title><rect x="98.4450%" y="1509" width="0.0165%" height="15" fill="rgb(216,180,54)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (23 samples, 0.02%)</title><rect x="98.4450%" y="1493" width="0.0165%" height="15" fill="rgb(216,5,24)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1503.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (23 samples, 0.02%)</title><rect x="98.4450%" y="1477" width="0.0165%" height="15" fill="rgb(225,89,9)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1487.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (23 samples, 0.02%)</title><rect x="98.4450%" y="1461" width="0.0165%" height="15" fill="rgb(243,75,33)" fg:x="137060" fg:w="23"/><text x="98.6950%" y="1471.50"></text></g><g><title>tokio::runtime::driver::Handle::time (17 samples, 0.01%)</title><rect x="98.4651%" y="1573" width="0.0122%" height="15" fill="rgb(247,141,45)" fg:x="137088" fg:w="17"/><text x="98.7151%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.01%)</title><rect x="98.4651%" y="1557" width="0.0122%" height="15" fill="rgb(232,177,36)" fg:x="137088" fg:w="17"/><text x="98.7151%" y="1567.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (81 samples, 0.06%)</title><rect x="98.4256%" y="1589" width="0.0582%" height="15" fill="rgb(219,125,36)" fg:x="137033" fg:w="81"/><text x="98.6756%" y="1599.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (125 samples, 0.09%)</title><rect x="98.4837%" y="1589" width="0.0898%" height="15" fill="rgb(227,94,9)" fg:x="137114" fg:w="125"/><text x="98.7337%" y="1599.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (15 samples, 0.01%)</title><rect x="98.5628%" y="1573" width="0.0108%" height="15" fill="rgb(240,34,52)" fg:x="137224" fg:w="15"/><text x="98.8128%" y="1583.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (15 samples, 0.01%)</title><rect x="98.5628%" y="1557" width="0.0108%" height="15" fill="rgb(216,45,12)" fg:x="137224" fg:w="15"/><text x="98.8128%" y="1567.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (369 samples, 0.27%)</title><rect x="98.5735%" y="1589" width="0.2650%" height="15" fill="rgb(246,21,19)" fg:x="137239" fg:w="369"/><text x="98.8235%" y="1599.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (237 samples, 0.17%)</title><rect x="98.6683%" y="1573" width="0.1702%" height="15" fill="rgb(213,98,42)" fg:x="137371" fg:w="237"/><text x="98.9183%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (237 samples, 0.17%)</title><rect x="98.6683%" y="1557" width="0.1702%" height="15" fill="rgb(250,136,47)" fg:x="137371" fg:w="237"/><text x="98.9183%" y="1567.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (348 samples, 0.25%)</title><rect x="98.8386%" y="1589" width="0.2500%" height="15" fill="rgb(251,124,27)" fg:x="137608" fg:w="348"/><text x="99.0886%" y="1599.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (26 samples, 0.02%)</title><rect x="99.0699%" y="1573" width="0.0187%" height="15" fill="rgb(229,180,14)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1583.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.02%)</title><rect x="99.0699%" y="1557" width="0.0187%" height="15" fill="rgb(245,216,25)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1567.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.02%)</title><rect x="99.0699%" y="1541" width="0.0187%" height="15" fill="rgb(251,43,5)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1551.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.02%)</title><rect x="99.0699%" y="1525" width="0.0187%" height="15" fill="rgb(250,128,24)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1535.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.02%)</title><rect x="99.0699%" y="1509" width="0.0187%" height="15" fill="rgb(217,117,27)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1519.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.02%)</title><rect x="99.0699%" y="1493" width="0.0187%" height="15" fill="rgb(245,147,4)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1503.50"></text></g><g><title>__rdl_alloc (26 samples, 0.02%)</title><rect x="99.0699%" y="1477" width="0.0187%" height="15" fill="rgb(242,201,35)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1487.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (26 samples, 0.02%)</title><rect x="99.0699%" y="1461" width="0.0187%" height="15" fill="rgb(218,181,1)" fg:x="137930" fg:w="26"/><text x="99.3199%" y="1471.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (32 samples, 0.02%)</title><rect x="99.0885%" y="1589" width="0.0230%" height="15" fill="rgb(222,6,29)" fg:x="137956" fg:w="32"/><text x="99.3385%" y="1599.50"></text></g><g><title>[unknown] (5,489 samples, 3.94%)</title><rect x="95.1805%" y="1605" width="3.9425%" height="15" fill="rgb(208,186,3)" fg:x="132515" fg:w="5489"/><text x="95.4305%" y="1615.50">[unk..</text></g><g><title>__send (17 samples, 0.01%)</title><rect x="99.1230%" y="1605" width="0.0122%" height="15" fill="rgb(216,36,26)" fg:x="138004" fg:w="17"/><text x="99.3730%" y="1615.50"></text></g><g><title>cfree (15 samples, 0.01%)</title><rect x="99.1374%" y="1605" width="0.0108%" height="15" fill="rgb(248,201,23)" fg:x="138024" fg:w="15"/><text x="99.3874%" y="1615.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (15 samples, 0.01%)</title><rect x="99.1661%" y="1605" width="0.0108%" height="15" fill="rgb(251,170,31)" fg:x="138064" fg:w="15"/><text x="99.4161%" y="1615.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (64 samples, 0.05%)</title><rect x="99.1769%" y="1605" width="0.0460%" height="15" fill="rgb(207,110,25)" fg:x="138079" fg:w="64"/><text x="99.4269%" y="1615.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (27 samples, 0.02%)</title><rect x="99.2236%" y="1605" width="0.0194%" height="15" fill="rgb(250,54,15)" fg:x="138144" fg:w="27"/><text x="99.4736%" y="1615.50"></text></g><g><title>mio::sys::unix::waker::eventfd::WakerInternal::wake (22 samples, 0.02%)</title><rect x="99.2544%" y="1605" width="0.0158%" height="15" fill="rgb(227,68,33)" fg:x="138187" fg:w="22"/><text x="99.5044%" y="1615.50"></text></g><g><title>syscall (242 samples, 0.17%)</title><rect x="99.3062%" y="1605" width="0.1738%" height="15" fill="rgb(238,34,41)" fg:x="138259" fg:w="242"/><text x="99.5562%" y="1615.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (26 samples, 0.02%)</title><rect x="99.4872%" y="1605" width="0.0187%" height="15" fill="rgb(220,11,15)" fg:x="138511" fg:w="26"/><text x="99.7372%" y="1615.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (15 samples, 0.01%)</title><rect x="99.5180%" y="1605" width="0.0108%" height="15" fill="rgb(246,111,35)" fg:x="138554" fg:w="15"/><text x="99.7680%" y="1615.50"></text></g><g><title>tokio::runtime::task::raw::poll (298 samples, 0.21%)</title><rect x="99.5310%" y="1605" width="0.2140%" height="15" fill="rgb(209,88,53)" fg:x="138572" fg:w="298"/><text x="99.7810%" y="1615.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (16 samples, 0.01%)</title><rect x="99.7335%" y="1589" width="0.0115%" height="15" fill="rgb(231,185,47)" fg:x="138854" fg:w="16"/><text x="99.9835%" y="1599.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (16 samples, 0.01%)</title><rect x="99.7335%" y="1573" width="0.0115%" height="15" fill="rgb(233,154,1)" fg:x="138854" fg:w="16"/><text x="99.9835%" y="1583.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="99.8068%" y="1525" width="0.0101%" height="15" fill="rgb(225,15,46)" fg:x="138956" fg:w="14"/><text x="100.0568%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (27 samples, 0.02%)</title><rect x="99.8212%" y="1525" width="0.0194%" height="15" fill="rgb(211,135,41)" fg:x="138976" fg:w="27"/><text x="100.0712%" y="1535.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="99.8212%" y="1509" width="0.0194%" height="15" fill="rgb(208,54,0)" fg:x="138976" fg:w="27"/><text x="100.0712%" y="1519.50"></text></g><g><title>bytes::bytes_mut::release_shared (18 samples, 0.01%)</title><rect x="99.8276%" y="1493" width="0.0129%" height="15" fill="rgb(244,136,14)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1503.50"></text></g><g><title>core::mem::drop (18 samples, 0.01%)</title><rect x="99.8276%" y="1477" width="0.0129%" height="15" fill="rgb(241,56,14)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (18 samples, 0.01%)</title><rect x="99.8276%" y="1461" width="0.0129%" height="15" fill="rgb(205,80,24)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (18 samples, 0.01%)</title><rect x="99.8276%" y="1445" width="0.0129%" height="15" fill="rgb(220,57,4)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (18 samples, 0.01%)</title><rect x="99.8276%" y="1429" width="0.0129%" height="15" fill="rgb(226,193,50)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (18 samples, 0.01%)</title><rect x="99.8276%" y="1413" width="0.0129%" height="15" fill="rgb(231,168,22)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1423.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.01%)</title><rect x="99.8276%" y="1397" width="0.0129%" height="15" fill="rgb(254,215,14)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1407.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.01%)</title><rect x="99.8276%" y="1381" width="0.0129%" height="15" fill="rgb(211,115,16)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1391.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.01%)</title><rect x="99.8276%" y="1365" width="0.0129%" height="15" fill="rgb(236,210,16)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1375.50"></text></g><g><title>__rdl_dealloc (18 samples, 0.01%)</title><rect x="99.8276%" y="1349" width="0.0129%" height="15" fill="rgb(221,94,12)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1359.50"></text></g><g><title>std::sys::pal::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (18 samples, 0.01%)</title><rect x="99.8276%" y="1333" width="0.0129%" height="15" fill="rgb(235,218,49)" fg:x="138985" fg:w="18"/><text x="100.0776%" y="1343.50"></text></g><g><title>wisp_mux::MuxInner::server_loop::_{{closure}} (48 samples, 0.03%)</title><rect x="99.8068%" y="1541" width="0.0345%" height="15" fill="rgb(217,114,14)" fg:x="138956" fg:w="48"/><text x="100.0568%" y="1551.50"></text></g><g><title>wisp_mux::MuxInner::as_future::_{{closure}}::_{{closure}}::_{{closure}} (111 samples, 0.08%)</title><rect x="99.7623%" y="1605" width="0.0797%" height="15" fill="rgb(216,145,22)" fg:x="138894" fg:w="111"/><text x="100.0123%" y="1615.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (49 samples, 0.04%)</title><rect x="99.8068%" y="1589" width="0.0352%" height="15" fill="rgb(217,112,39)" fg:x="138956" fg:w="49"/><text x="100.0568%" y="1599.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="99.8068%" y="1573" width="0.0352%" height="15" fill="rgb(225,85,32)" fg:x="138956" fg:w="49"/><text x="100.0568%" y="1583.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="99.8068%" y="1557" width="0.0352%" height="15" fill="rgb(245,209,47)" fg:x="138956" fg:w="49"/><text x="100.0568%" y="1567.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (20 samples, 0.01%)</title><rect x="99.8420%" y="1605" width="0.0144%" height="15" fill="rgb(218,220,15)" fg:x="139005" fg:w="20"/><text x="100.0920%" y="1615.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (174 samples, 0.12%)</title><rect x="99.8592%" y="1605" width="0.1250%" height="15" fill="rgb(222,202,31)" fg:x="139029" fg:w="174"/><text x="100.1092%" y="1615.50"></text></g><g><title>all (139,225 samples, 100%)</title><rect x="0.0000%" y="1637" width="100.0000%" height="15" fill="rgb(243,203,4)" fg:x="0" fg:w="139225"/><text x="0.2500%" y="1647.50"></text></g><g><title>tokio-runtime-w (139,191 samples, 99.98%)</title><rect x="0.0244%" y="1621" width="99.9756%" height="15" fill="rgb(237,92,17)" fg:x="34" fg:w="139191"/><text x="0.2744%" y="1631.50">tokio-runtime-w</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (22 samples, 0.02%)</title><rect x="99.9842%" y="1605" width="0.0158%" height="15" fill="rgb(231,119,7)" fg:x="139203" fg:w="22"/><text x="100.2342%" y="1615.50"></text></g></svg></svg>