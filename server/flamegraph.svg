<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2053.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2053.00"> </text><svg id="frames" x="10" width="1180" total_samples="34140"><g><title>[ld-linux-x86-64.so.2] (5 samples, 0.01%)</title><rect x="0.0059%" y="1989" width="0.0146%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="5"/><text x="0.2559%" y="1999.50"></text></g><g><title>[libc.so.6] (42 samples, 0.12%)</title><rect x="0.0205%" y="1989" width="0.1230%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="42"/><text x="0.2705%" y="1999.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="0.1230%" y="1973" width="0.0205%" height="15" fill="rgb(221,193,54)" fg:x="42" fg:w="7"/><text x="0.3730%" y="1983.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="0.1523%" y="1749" width="0.0117%" height="15" fill="rgb(248,212,6)" fg:x="52" fg:w="4"/><text x="0.4023%" y="1759.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.01%)</title><rect x="0.1523%" y="1733" width="0.0117%" height="15" fill="rgb(208,68,35)" fg:x="52" fg:w="4"/><text x="0.4023%" y="1743.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="0.1523%" y="1717" width="0.0117%" height="15" fill="rgb(232,128,0)" fg:x="52" fg:w="4"/><text x="0.4023%" y="1727.50"></text></g><g><title>tokio::runtime::builder::Builder::build (5 samples, 0.01%)</title><rect x="0.1523%" y="1877" width="0.0146%" height="15" fill="rgb(207,160,47)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1887.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (5 samples, 0.01%)</title><rect x="0.1523%" y="1861" width="0.0146%" height="15" fill="rgb(228,23,34)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1871.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch (5 samples, 0.01%)</title><rect x="0.1523%" y="1845" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1855.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1523%" y="1829" width="0.0146%" height="15" fill="rgb(220,122,19)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1839.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1523%" y="1813" width="0.0146%" height="15" fill="rgb(250,228,42)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1823.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking (5 samples, 0.01%)</title><rect x="0.1523%" y="1797" width="0.0146%" height="15" fill="rgb(240,193,28)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1807.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_blocking_inner (5 samples, 0.01%)</title><rect x="0.1523%" y="1781" width="0.0146%" height="15" fill="rgb(216,20,37)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1791.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (5 samples, 0.01%)</title><rect x="0.1523%" y="1765" width="0.0146%" height="15" fill="rgb(206,188,39)" fg:x="52" fg:w="5"/><text x="0.4023%" y="1775.50"></text></g><g><title>epoxy-server (63 samples, 0.18%)</title><rect x="0.0000%" y="2005" width="0.1845%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="63"/><text x="0.2500%" y="2015.50"></text></g><g><title>_start (11 samples, 0.03%)</title><rect x="0.1523%" y="1989" width="0.0322%" height="15" fill="rgb(231,73,38)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1999.50"></text></g><g><title>__libc_start_main (11 samples, 0.03%)</title><rect x="0.1523%" y="1973" width="0.0322%" height="15" fill="rgb(225,20,46)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1983.50"></text></g><g><title>[libc.so.6] (11 samples, 0.03%)</title><rect x="0.1523%" y="1957" width="0.0322%" height="15" fill="rgb(210,31,41)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1967.50"></text></g><g><title>main (11 samples, 0.03%)</title><rect x="0.1523%" y="1941" width="0.0322%" height="15" fill="rgb(221,200,47)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1951.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (11 samples, 0.03%)</title><rect x="0.1523%" y="1925" width="0.0322%" height="15" fill="rgb(226,26,5)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1935.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="0.1523%" y="1909" width="0.0322%" height="15" fill="rgb(249,33,26)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1919.50"></text></g><g><title>epoxy_server::main (11 samples, 0.03%)</title><rect x="0.1523%" y="1893" width="0.0322%" height="15" fill="rgb(235,183,28)" fg:x="52" fg:w="11"/><text x="0.4023%" y="1903.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on (6 samples, 0.02%)</title><rect x="0.1670%" y="1877" width="0.0176%" height="15" fill="rgb(221,5,38)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1887.50"></text></g><g><title>tokio::runtime::runtime::Runtime::block_on_inner (6 samples, 0.02%)</title><rect x="0.1670%" y="1861" width="0.0176%" height="15" fill="rgb(247,18,42)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1871.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on (6 samples, 0.02%)</title><rect x="0.1670%" y="1845" width="0.0176%" height="15" fill="rgb(241,131,45)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1855.50"></text></g><g><title>tokio::runtime::context::runtime::enter_runtime (6 samples, 0.02%)</title><rect x="0.1670%" y="1829" width="0.0176%" height="15" fill="rgb(249,31,29)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1839.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::MultiThread::block_on::_{{closure}} (6 samples, 0.02%)</title><rect x="0.1670%" y="1813" width="0.0176%" height="15" fill="rgb(225,111,53)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1823.50"></text></g><g><title>tokio::runtime::context::blocking::BlockingRegionGuard::block_on (6 samples, 0.02%)</title><rect x="0.1670%" y="1797" width="0.0176%" height="15" fill="rgb(238,160,17)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1807.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::block_on (6 samples, 0.02%)</title><rect x="0.1670%" y="1781" width="0.0176%" height="15" fill="rgb(214,148,48)" fg:x="57" fg:w="6"/><text x="0.4170%" y="1791.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park (4 samples, 0.01%)</title><rect x="0.1728%" y="1765" width="0.0117%" height="15" fill="rgb(232,36,49)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1775.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current (4 samples, 0.01%)</title><rect x="0.1728%" y="1749" width="0.0117%" height="15" fill="rgb(209,103,24)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1759.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="0.1728%" y="1733" width="0.0117%" height="15" fill="rgb(229,88,8)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1743.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::with_current::_{{closure}} (4 samples, 0.01%)</title><rect x="0.1728%" y="1717" width="0.0117%" height="15" fill="rgb(213,181,19)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1727.50"></text></g><g><title>tokio::runtime::park::CachedParkThread::park::_{{closure}} (4 samples, 0.01%)</title><rect x="0.1728%" y="1701" width="0.0117%" height="15" fill="rgb(254,191,54)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1711.50"></text></g><g><title>tokio::runtime::park::Inner::park (4 samples, 0.01%)</title><rect x="0.1728%" y="1685" width="0.0117%" height="15" fill="rgb(241,83,37)" fg:x="59" fg:w="4"/><text x="0.4228%" y="1695.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (22 samples, 0.06%)</title><rect x="0.1845%" y="1989" width="0.0644%" height="15" fill="rgb(233,36,39)" fg:x="63" fg:w="22"/><text x="0.4345%" y="1999.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (11 samples, 0.03%)</title><rect x="0.2490%" y="1989" width="0.0322%" height="15" fill="rgb(226,3,54)" fg:x="85" fg:w="11"/><text x="0.4990%" y="1999.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="0.2812%" y="1989" width="0.0176%" height="15" fill="rgb(245,192,40)" fg:x="96" fg:w="6"/><text x="0.5312%" y="1999.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (11 samples, 0.03%)</title><rect x="0.2988%" y="1989" width="0.0322%" height="15" fill="rgb(238,167,29)" fg:x="102" fg:w="11"/><text x="0.5488%" y="1999.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (32 samples, 0.09%)</title><rect x="0.3310%" y="1973" width="0.0937%" height="15" fill="rgb(232,182,51)" fg:x="113" fg:w="32"/><text x="0.5810%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="0.3984%" y="1957" width="0.0264%" height="15" fill="rgb(231,60,39)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (9 samples, 0.03%)</title><rect x="0.3984%" y="1941" width="0.0264%" height="15" fill="rgb(208,69,12)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="0.3984%" y="1925" width="0.0264%" height="15" fill="rgb(235,93,37)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="0.3984%" y="1909" width="0.0264%" height="15" fill="rgb(213,116,39)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="0.3984%" y="1893" width="0.0264%" height="15" fill="rgb(222,207,29)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1903.50"></text></g><g><title>__rust_dealloc (9 samples, 0.03%)</title><rect x="0.3984%" y="1877" width="0.0264%" height="15" fill="rgb(206,96,30)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (9 samples, 0.03%)</title><rect x="0.3984%" y="1861" width="0.0264%" height="15" fill="rgb(218,138,4)" fg:x="136" fg:w="9"/><text x="0.6484%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (225 samples, 0.66%)</title><rect x="0.4335%" y="1973" width="0.6591%" height="15" fill="rgb(250,191,14)" fg:x="148" fg:w="225"/><text x="0.6835%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="1.4821%" y="1957" width="0.0117%" height="15" fill="rgb(239,60,40)" fg:x="506" fg:w="4"/><text x="1.7321%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (143 samples, 0.42%)</title><rect x="1.0926%" y="1973" width="0.4189%" height="15" fill="rgb(206,27,48)" fg:x="373" fg:w="143"/><text x="1.3426%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="1.4938%" y="1957" width="0.0176%" height="15" fill="rgb(225,35,8)" fg:x="510" fg:w="6"/><text x="1.7438%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.02%)</title><rect x="1.4938%" y="1941" width="0.0176%" height="15" fill="rgb(250,213,24)" fg:x="510" fg:w="6"/><text x="1.7438%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1.4968%" y="1925" width="0.0146%" height="15" fill="rgb(247,123,22)" fg:x="511" fg:w="5"/><text x="1.7468%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="1.4968%" y="1909" width="0.0146%" height="15" fill="rgb(231,138,38)" fg:x="511" fg:w="5"/><text x="1.7468%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="1.4968%" y="1893" width="0.0146%" height="15" fill="rgb(231,145,46)" fg:x="511" fg:w="5"/><text x="1.7468%" y="1903.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="1.4968%" y="1877" width="0.0146%" height="15" fill="rgb(251,118,11)" fg:x="511" fg:w="5"/><text x="1.7468%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="1.4968%" y="1861" width="0.0146%" height="15" fill="rgb(217,147,25)" fg:x="511" fg:w="5"/><text x="1.7468%" y="1871.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (26 samples, 0.08%)</title><rect x="1.5114%" y="1973" width="0.0762%" height="15" fill="rgb(247,81,37)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (26 samples, 0.08%)</title><rect x="1.5114%" y="1957" width="0.0762%" height="15" fill="rgb(209,12,38)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.08%)</title><rect x="1.5114%" y="1941" width="0.0762%" height="15" fill="rgb(227,1,9)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1951.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.08%)</title><rect x="1.5114%" y="1925" width="0.0762%" height="15" fill="rgb(248,47,43)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.08%)</title><rect x="1.5114%" y="1909" width="0.0762%" height="15" fill="rgb(221,10,30)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.08%)</title><rect x="1.5114%" y="1893" width="0.0762%" height="15" fill="rgb(210,229,1)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.08%)</title><rect x="1.5114%" y="1877" width="0.0762%" height="15" fill="rgb(222,148,37)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1887.50"></text></g><g><title>__rust_alloc (26 samples, 0.08%)</title><rect x="1.5114%" y="1861" width="0.0762%" height="15" fill="rgb(234,67,33)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (26 samples, 0.08%)</title><rect x="1.5114%" y="1845" width="0.0762%" height="15" fill="rgb(247,98,35)" fg:x="516" fg:w="26"/><text x="1.7614%" y="1855.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.03%)</title><rect x="1.5876%" y="1973" width="0.0293%" height="15" fill="rgb(247,138,52)" fg:x="542" fg:w="10"/><text x="1.8376%" y="1983.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (5 samples, 0.01%)</title><rect x="1.6169%" y="1973" width="0.0146%" height="15" fill="rgb(213,79,30)" fg:x="552" fg:w="5"/><text x="1.8669%" y="1983.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.13%)</title><rect x="1.6315%" y="1973" width="0.1260%" height="15" fill="rgb(246,177,23)" fg:x="557" fg:w="43"/><text x="1.8815%" y="1983.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.03%)</title><rect x="1.8395%" y="1925" width="0.0293%" height="15" fill="rgb(230,62,27)" fg:x="628" fg:w="10"/><text x="2.0895%" y="1935.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (10 samples, 0.03%)</title><rect x="1.8395%" y="1909" width="0.0293%" height="15" fill="rgb(216,154,8)" fg:x="628" fg:w="10"/><text x="2.0895%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (10 samples, 0.03%)</title><rect x="1.8395%" y="1893" width="0.0293%" height="15" fill="rgb(244,35,45)" fg:x="628" fg:w="10"/><text x="2.0895%" y="1903.50"></text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (40 samples, 0.12%)</title><rect x="1.7575%" y="1973" width="0.1172%" height="15" fill="rgb(251,115,12)" fg:x="600" fg:w="40"/><text x="2.0075%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (12 samples, 0.04%)</title><rect x="1.8395%" y="1957" width="0.0351%" height="15" fill="rgb(240,54,50)" fg:x="628" fg:w="12"/><text x="2.0895%" y="1967.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (12 samples, 0.04%)</title><rect x="1.8395%" y="1941" width="0.0351%" height="15" fill="rgb(233,84,52)" fg:x="628" fg:w="12"/><text x="2.0895%" y="1951.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="1.8746%" y="1973" width="0.0234%" height="15" fill="rgb(207,117,47)" fg:x="640" fg:w="8"/><text x="2.1246%" y="1983.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::has_remaining_mut (8 samples, 0.02%)</title><rect x="1.8746%" y="1957" width="0.0234%" height="15" fill="rgb(249,43,39)" fg:x="640" fg:w="8"/><text x="2.1246%" y="1967.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::remaining_mut (8 samples, 0.02%)</title><rect x="1.8746%" y="1941" width="0.0234%" height="15" fill="rgb(209,38,44)" fg:x="640" fg:w="8"/><text x="2.1246%" y="1951.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (26 samples, 0.08%)</title><rect x="1.8981%" y="1973" width="0.0762%" height="15" fill="rgb(236,212,23)" fg:x="648" fg:w="26"/><text x="2.1481%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (5 samples, 0.01%)</title><rect x="1.9742%" y="1973" width="0.0146%" height="15" fill="rgb(242,79,21)" fg:x="674" fg:w="5"/><text x="2.2242%" y="1983.50"></text></g><g><title>[libc.so.6] (36 samples, 0.11%)</title><rect x="1.9977%" y="1973" width="0.1054%" height="15" fill="rgb(211,96,35)" fg:x="682" fg:w="36"/><text x="2.2477%" y="1983.50"></text></g><g><title>_ZN4core3ptr1271drop_in_place$LT$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$..read_frame$LT$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$C$wisp_mux..WispError$C$wisp_mux..fastwebsockets..$LT$impl$u20$wisp_mux..ws..WebSocketRead$u20$for$u20$fastwebsockets..WebSocketRead$LT$tokio..io..util..chain..Chain$LT$std..io..cursor..Cursor$LT$bytes..bytes..Bytes$GT$$C$epoxy_server..listener..Trio$LT$tokio..net..tcp..split_owned..OwnedReadHalf$C$tokio..net..unix..split_owned..OwnedReadHalf$C$tokio..fs..file..File$GT$$GT$$GT$$GT$..wisp_read_frame..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$..$u7b$$u7b$closure$u7d$$u7d$$GT$17h14b3d8a31cb48903E (11 samples, 0.03%)</title><rect x="2.1031%" y="1973" width="0.0322%" height="15" fill="rgb(253,215,40)" fg:x="718" fg:w="11"/><text x="2.3531%" y="1983.50"></text></g><g><title>__floattidf (12 samples, 0.04%)</title><rect x="2.1353%" y="1973" width="0.0351%" height="15" fill="rgb(211,81,21)" fg:x="729" fg:w="12"/><text x="2.3853%" y="1983.50"></text></g><g><title>__send (5 samples, 0.01%)</title><rect x="2.1705%" y="1973" width="0.0146%" height="15" fill="rgb(208,190,38)" fg:x="741" fg:w="5"/><text x="2.4205%" y="1983.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.02%)</title><rect x="2.1851%" y="1973" width="0.0205%" height="15" fill="rgb(235,213,38)" fg:x="746" fg:w="7"/><text x="2.4351%" y="1983.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (4 samples, 0.01%)</title><rect x="2.2056%" y="1973" width="0.0117%" height="15" fill="rgb(237,122,38)" fg:x="753" fg:w="4"/><text x="2.4556%" y="1983.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (10 samples, 0.03%)</title><rect x="2.2203%" y="1973" width="0.0293%" height="15" fill="rgb(244,218,35)" fg:x="758" fg:w="10"/><text x="2.4703%" y="1983.50"></text></g><g><title>_rjem_je_arena_malloc_hard (7 samples, 0.02%)</title><rect x="2.2583%" y="1973" width="0.0205%" height="15" fill="rgb(240,68,47)" fg:x="771" fg:w="7"/><text x="2.5083%" y="1983.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (7 samples, 0.02%)</title><rect x="2.2789%" y="1973" width="0.0205%" height="15" fill="rgb(210,16,53)" fg:x="778" fg:w="7"/><text x="2.5289%" y="1983.50"></text></g><g><title>_rjem_je_ecache_alloc (8 samples, 0.02%)</title><rect x="2.3140%" y="1973" width="0.0234%" height="15" fill="rgb(235,124,12)" fg:x="790" fg:w="8"/><text x="2.5640%" y="1983.50"></text></g><g><title>_rjem_je_edata_cache_put (4 samples, 0.01%)</title><rect x="2.3638%" y="1973" width="0.0117%" height="15" fill="rgb(224,169,11)" fg:x="807" fg:w="4"/><text x="2.6138%" y="1983.50"></text></g><g><title>_rjem_je_edata_heap_remove (4 samples, 0.01%)</title><rect x="2.3960%" y="1973" width="0.0117%" height="15" fill="rgb(250,166,2)" fg:x="818" fg:w="4"/><text x="2.6460%" y="1983.50"></text></g><g><title>_rjem_je_emap_remap (4 samples, 0.01%)</title><rect x="2.4253%" y="1973" width="0.0117%" height="15" fill="rgb(242,216,29)" fg:x="828" fg:w="4"/><text x="2.6753%" y="1983.50"></text></g><g><title>_rjem_je_emap_split_prepare (5 samples, 0.01%)</title><rect x="2.4370%" y="1973" width="0.0146%" height="15" fill="rgb(230,116,27)" fg:x="832" fg:w="5"/><text x="2.6870%" y="1983.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (8 samples, 0.02%)</title><rect x="2.4517%" y="1973" width="0.0234%" height="15" fill="rgb(228,99,48)" fg:x="837" fg:w="8"/><text x="2.7017%" y="1983.50"></text></g><g><title>_rjem_je_emap_update_edata_state (5 samples, 0.01%)</title><rect x="2.4751%" y="1973" width="0.0146%" height="15" fill="rgb(253,11,6)" fg:x="845" fg:w="5"/><text x="2.7251%" y="1983.50"></text></g><g><title>_rjem_je_eset_insert (9 samples, 0.03%)</title><rect x="2.4927%" y="1973" width="0.0264%" height="15" fill="rgb(247,143,39)" fg:x="851" fg:w="9"/><text x="2.7427%" y="1983.50"></text></g><g><title>_rjem_je_eset_remove (11 samples, 0.03%)</title><rect x="2.5190%" y="1973" width="0.0322%" height="15" fill="rgb(236,97,10)" fg:x="860" fg:w="11"/><text x="2.7690%" y="1983.50"></text></g><g><title>_rjem_je_extent_record (4 samples, 0.01%)</title><rect x="2.5600%" y="1973" width="0.0117%" height="15" fill="rgb(233,208,19)" fg:x="874" fg:w="4"/><text x="2.8100%" y="1983.50"></text></g><g><title>_rjem_je_large_palloc (18 samples, 0.05%)</title><rect x="2.5776%" y="1973" width="0.0527%" height="15" fill="rgb(216,164,2)" fg:x="880" fg:w="18"/><text x="2.8276%" y="1983.50"></text></g><g><title>_rjem_je_malloc_default (11 samples, 0.03%)</title><rect x="2.6303%" y="1973" width="0.0322%" height="15" fill="rgb(220,129,5)" fg:x="898" fg:w="11"/><text x="2.8803%" y="1983.50"></text></g><g><title>_rjem_je_pa_alloc (7 samples, 0.02%)</title><rect x="2.6714%" y="1973" width="0.0205%" height="15" fill="rgb(242,17,10)" fg:x="912" fg:w="7"/><text x="2.9214%" y="1983.50"></text></g><g><title>_rjem_je_pa_dalloc (8 samples, 0.02%)</title><rect x="2.6919%" y="1973" width="0.0234%" height="15" fill="rgb(242,107,0)" fg:x="919" fg:w="8"/><text x="2.9419%" y="1983.50"></text></g><g><title>_rjem_je_peak_alloc_new_event_wait (5 samples, 0.01%)</title><rect x="2.7211%" y="1973" width="0.0146%" height="15" fill="rgb(251,28,31)" fg:x="929" fg:w="5"/><text x="2.9711%" y="1983.50"></text></g><g><title>_rjem_je_peak_dalloc_new_event_wait (4 samples, 0.01%)</title><rect x="2.7387%" y="1973" width="0.0117%" height="15" fill="rgb(233,223,10)" fg:x="935" fg:w="4"/><text x="2.9887%" y="1983.50"></text></g><g><title>_rjem_je_sdallocx_default (9 samples, 0.03%)</title><rect x="2.7504%" y="1973" width="0.0264%" height="15" fill="rgb(215,21,27)" fg:x="939" fg:w="9"/><text x="3.0004%" y="1983.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="2.7768%" y="1973" width="0.0146%" height="15" fill="rgb(232,23,21)" fg:x="948" fg:w="5"/><text x="3.0268%" y="1983.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (4 samples, 0.01%)</title><rect x="2.7914%" y="1973" width="0.0117%" height="15" fill="rgb(244,5,23)" fg:x="953" fg:w="4"/><text x="3.0414%" y="1983.50"></text></g><g><title>_rjem_je_te_event_trigger (6 samples, 0.02%)</title><rect x="2.8061%" y="1973" width="0.0176%" height="15" fill="rgb(226,81,46)" fg:x="958" fg:w="6"/><text x="3.0561%" y="1983.50"></text></g><g><title>_rjem_malloc (5 samples, 0.01%)</title><rect x="2.8237%" y="1973" width="0.0146%" height="15" fill="rgb(247,70,30)" fg:x="964" fg:w="5"/><text x="3.0737%" y="1983.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (22 samples, 0.06%)</title><rect x="2.8471%" y="1973" width="0.0644%" height="15" fill="rgb(212,68,19)" fg:x="972" fg:w="22"/><text x="3.0971%" y="1983.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (14 samples, 0.04%)</title><rect x="2.8705%" y="1957" width="0.0410%" height="15" fill="rgb(240,187,13)" fg:x="980" fg:w="14"/><text x="3.1205%" y="1967.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (14 samples, 0.04%)</title><rect x="2.8705%" y="1941" width="0.0410%" height="15" fill="rgb(223,113,26)" fg:x="980" fg:w="14"/><text x="3.1205%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (8 samples, 0.02%)</title><rect x="2.9115%" y="1973" width="0.0234%" height="15" fill="rgb(206,192,2)" fg:x="994" fg:w="8"/><text x="3.1615%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (13 samples, 0.04%)</title><rect x="2.9350%" y="1973" width="0.0381%" height="15" fill="rgb(241,108,4)" fg:x="1002" fg:w="13"/><text x="3.1850%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (6 samples, 0.02%)</title><rect x="2.9731%" y="1957" width="0.0176%" height="15" fill="rgb(247,173,49)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1967.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (6 samples, 0.02%)</title><rect x="2.9731%" y="1941" width="0.0176%" height="15" fill="rgb(224,114,35)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1951.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="2.9731%" y="1925" width="0.0176%" height="15" fill="rgb(245,159,27)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1935.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="2.9731%" y="1909" width="0.0176%" height="15" fill="rgb(245,172,44)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1919.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="2.9731%" y="1893" width="0.0176%" height="15" fill="rgb(236,23,11)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1903.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="2.9731%" y="1877" width="0.0176%" height="15" fill="rgb(205,117,38)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1887.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="2.9731%" y="1861" width="0.0176%" height="15" fill="rgb(237,72,25)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1871.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="2.9731%" y="1845" width="0.0176%" height="15" fill="rgb(244,70,9)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1855.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="2.9731%" y="1829" width="0.0176%" height="15" fill="rgb(217,125,39)" fg:x="1015" fg:w="6"/><text x="3.2231%" y="1839.50"></text></g><g><title>bytes::bytes_mut::BytesMut::split_to (25 samples, 0.07%)</title><rect x="2.9731%" y="1973" width="0.0732%" height="15" fill="rgb(235,36,10)" fg:x="1015" fg:w="25"/><text x="3.2231%" y="1983.50"></text></g><g><title>core::fmt::Arguments::new_v1 (19 samples, 0.06%)</title><rect x="2.9906%" y="1957" width="0.0557%" height="15" fill="rgb(251,123,47)" fg:x="1021" fg:w="19"/><text x="3.2406%" y="1967.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop (53 samples, 0.16%)</title><rect x="3.0463%" y="1973" width="0.1552%" height="15" fill="rgb(221,13,13)" fg:x="1040" fg:w="53"/><text x="3.2963%" y="1983.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (53 samples, 0.16%)</title><rect x="3.0463%" y="1957" width="0.1552%" height="15" fill="rgb(238,131,9)" fg:x="1040" fg:w="53"/><text x="3.2963%" y="1967.50"></text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (53 samples, 0.16%)</title><rect x="3.0463%" y="1941" width="0.1552%" height="15" fill="rgb(211,50,8)" fg:x="1040" fg:w="53"/><text x="3.2963%" y="1951.50"></text></g><g><title>bytes::bytes_mut::release_shared (5 samples, 0.01%)</title><rect x="3.1869%" y="1925" width="0.0146%" height="15" fill="rgb(245,182,24)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1935.50"></text></g><g><title>core::mem::drop (5 samples, 0.01%)</title><rect x="3.1869%" y="1909" width="0.0146%" height="15" fill="rgb(242,14,37)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1919.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (5 samples, 0.01%)</title><rect x="3.1869%" y="1893" width="0.0146%" height="15" fill="rgb(246,228,12)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1903.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (5 samples, 0.01%)</title><rect x="3.1869%" y="1877" width="0.0146%" height="15" fill="rgb(213,55,15)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1887.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="3.1869%" y="1861" width="0.0146%" height="15" fill="rgb(209,9,3)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="3.1869%" y="1845" width="0.0146%" height="15" fill="rgb(230,59,30)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1855.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="3.1869%" y="1829" width="0.0146%" height="15" fill="rgb(209,121,21)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1839.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5 samples, 0.01%)</title><rect x="3.1869%" y="1813" width="0.0146%" height="15" fill="rgb(220,109,13)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1823.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="3.1869%" y="1797" width="0.0146%" height="15" fill="rgb(232,18,1)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1807.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="3.1869%" y="1781" width="0.0146%" height="15" fill="rgb(215,41,42)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1791.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="3.1869%" y="1765" width="0.0146%" height="15" fill="rgb(224,123,36)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1775.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="3.1869%" y="1749" width="0.0146%" height="15" fill="rgb(240,125,3)" fg:x="1088" fg:w="5"/><text x="3.4369%" y="1759.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_frame::{{closure}}&gt; (5 samples, 0.01%)</title><rect x="3.2074%" y="1973" width="0.0146%" height="15" fill="rgb(205,98,50)" fg:x="1095" fg:w="5"/><text x="3.4574%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (21 samples, 0.06%)</title><rect x="3.2250%" y="1973" width="0.0615%" height="15" fill="rgb(205,185,37)" fg:x="1101" fg:w="21"/><text x="3.4750%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (23 samples, 0.07%)</title><rect x="3.2894%" y="1973" width="0.0674%" height="15" fill="rgb(238,207,15)" fg:x="1123" fg:w="23"/><text x="3.5394%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (9 samples, 0.03%)</title><rect x="3.3568%" y="1973" width="0.0264%" height="15" fill="rgb(213,199,42)" fg:x="1146" fg:w="9"/><text x="3.6068%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="3.3831%" y="1973" width="0.0264%" height="15" fill="rgb(235,201,11)" fg:x="1155" fg:w="9"/><text x="3.6331%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="3.4095%" y="1973" width="0.0117%" height="15" fill="rgb(207,46,11)" fg:x="1164" fg:w="4"/><text x="3.6595%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;tokio::io::util::chain::Chain&lt;std::io::cursor::Cursor&lt;bytes::bytes::Bytes&gt;,epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedReadHalf,tokio::net::unix::split_owned::OwnedReadHalf,tokio::fs::file::File&gt;&gt;&gt;&gt;::wisp_read_split::{{closure}}&gt; (71 samples, 0.21%)</title><rect x="3.4212%" y="1973" width="0.2080%" height="15" fill="rgb(241,35,35)" fg:x="1168" fg:w="71"/><text x="3.6712%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_frame::{{closure}}&gt; (5 samples, 0.01%)</title><rect x="3.6292%" y="1973" width="0.0146%" height="15" fill="rgb(243,32,47)" fg:x="1239" fg:w="5"/><text x="3.8792%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (259 samples, 0.76%)</title><rect x="3.6438%" y="1973" width="0.7586%" height="15" fill="rgb(247,202,23)" fg:x="1244" fg:w="259"/><text x="3.8938%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (9 samples, 0.03%)</title><rect x="4.4112%" y="1973" width="0.0264%" height="15" fill="rgb(219,102,11)" fg:x="1506" fg:w="9"/><text x="4.6612%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (19 samples, 0.06%)</title><rect x="4.4376%" y="1973" width="0.0557%" height="15" fill="rgb(243,110,44)" fg:x="1515" fg:w="19"/><text x="4.6876%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (11 samples, 0.03%)</title><rect x="4.4933%" y="1973" width="0.0322%" height="15" fill="rgb(222,74,54)" fg:x="1534" fg:w="11"/><text x="4.7433%" y="1983.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (8 samples, 0.02%)</title><rect x="4.5255%" y="1973" width="0.0234%" height="15" fill="rgb(216,99,12)" fg:x="1545" fg:w="8"/><text x="4.7755%" y="1983.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (5 samples, 0.01%)</title><rect x="4.5518%" y="1973" width="0.0146%" height="15" fill="rgb(226,22,26)" fg:x="1554" fg:w="5"/><text x="4.8018%" y="1983.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (8 samples, 0.02%)</title><rect x="4.5665%" y="1973" width="0.0234%" height="15" fill="rgb(217,163,10)" fg:x="1559" fg:w="8"/><text x="4.8165%" y="1983.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (10 samples, 0.03%)</title><rect x="4.6075%" y="1973" width="0.0293%" height="15" fill="rgb(213,25,53)" fg:x="1573" fg:w="10"/><text x="4.8575%" y="1983.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (4 samples, 0.01%)</title><rect x="4.6251%" y="1957" width="0.0117%" height="15" fill="rgb(252,105,26)" fg:x="1579" fg:w="4"/><text x="4.8751%" y="1967.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (76 samples, 0.22%)</title><rect x="4.6368%" y="1973" width="0.2226%" height="15" fill="rgb(220,39,43)" fg:x="1583" fg:w="76"/><text x="4.8868%" y="1983.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (34 samples, 0.10%)</title><rect x="4.7598%" y="1957" width="0.0996%" height="15" fill="rgb(229,68,48)" fg:x="1625" fg:w="34"/><text x="5.0098%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (30 samples, 0.09%)</title><rect x="4.7715%" y="1941" width="0.0879%" height="15" fill="rgb(252,8,32)" fg:x="1629" fg:w="30"/><text x="5.0215%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (30 samples, 0.09%)</title><rect x="4.7715%" y="1925" width="0.0879%" height="15" fill="rgb(223,20,43)" fg:x="1629" fg:w="30"/><text x="5.0215%" y="1935.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (30 samples, 0.09%)</title><rect x="4.7715%" y="1909" width="0.0879%" height="15" fill="rgb(229,81,49)" fg:x="1629" fg:w="30"/><text x="5.0215%" y="1919.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (30 samples, 0.09%)</title><rect x="4.7715%" y="1893" width="0.0879%" height="15" fill="rgb(236,28,36)" fg:x="1629" fg:w="30"/><text x="5.0215%" y="1903.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (13 samples, 0.04%)</title><rect x="4.8799%" y="1957" width="0.0381%" height="15" fill="rgb(249,185,26)" fg:x="1666" fg:w="13"/><text x="5.1299%" y="1967.50"></text></g><g><title>fastwebsockets::frame::Frame::write (22 samples, 0.06%)</title><rect x="4.8594%" y="1973" width="0.0644%" height="15" fill="rgb(249,174,33)" fg:x="1659" fg:w="22"/><text x="5.1094%" y="1983.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (5 samples, 0.01%)</title><rect x="4.9238%" y="1973" width="0.0146%" height="15" fill="rgb(233,201,37)" fg:x="1681" fg:w="5"/><text x="5.1738%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (20 samples, 0.06%)</title><rect x="4.9473%" y="1973" width="0.0586%" height="15" fill="rgb(221,78,26)" fg:x="1689" fg:w="20"/><text x="5.1973%" y="1983.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (4 samples, 0.01%)</title><rect x="5.0059%" y="1973" width="0.0117%" height="15" fill="rgb(250,127,30)" fg:x="1709" fg:w="4"/><text x="5.2559%" y="1983.50"></text></g><g><title>pac_alloc_impl (69 samples, 0.20%)</title><rect x="5.0205%" y="1973" width="0.2021%" height="15" fill="rgb(230,49,44)" fg:x="1714" fg:w="69"/><text x="5.2705%" y="1983.50"></text></g><g><title>pac_dalloc_impl (36 samples, 0.11%)</title><rect x="5.2226%" y="1973" width="0.1054%" height="15" fill="rgb(229,67,23)" fg:x="1783" fg:w="36"/><text x="5.4726%" y="1983.50"></text></g><g><title>pthread_mutex_trylock (20 samples, 0.06%)</title><rect x="5.3398%" y="1973" width="0.0586%" height="15" fill="rgb(249,83,47)" fg:x="1823" fg:w="20"/><text x="5.5898%" y="1983.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="5.4042%" y="1973" width="0.0146%" height="15" fill="rgb(215,43,3)" fg:x="1845" fg:w="5"/><text x="5.6542%" y="1983.50"></text></g><g><title>syscall (26 samples, 0.08%)</title><rect x="5.4189%" y="1973" width="0.0762%" height="15" fill="rgb(238,154,13)" fg:x="1850" fg:w="26"/><text x="5.6689%" y="1983.50"></text></g><g><title>tcache_gc_small (4 samples, 0.01%)</title><rect x="5.4950%" y="1973" width="0.0117%" height="15" fill="rgb(219,56,2)" fg:x="1876" fg:w="4"/><text x="5.7450%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (27 samples, 0.08%)</title><rect x="5.5067%" y="1973" width="0.0791%" height="15" fill="rgb(233,0,4)" fg:x="1880" fg:w="27"/><text x="5.7567%" y="1983.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="5.6737%" y="1941" width="0.0293%" height="15" fill="rgb(235,30,7)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1951.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (10 samples, 0.03%)</title><rect x="5.6737%" y="1925" width="0.0293%" height="15" fill="rgb(250,79,13)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1935.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (10 samples, 0.03%)</title><rect x="5.6737%" y="1909" width="0.0293%" height="15" fill="rgb(211,146,34)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (10 samples, 0.03%)</title><rect x="5.6737%" y="1893" width="0.0293%" height="15" fill="rgb(228,22,38)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1903.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="5.6737%" y="1877" width="0.0293%" height="15" fill="rgb(235,168,5)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1887.50"></text></g><g><title>std::sys_common::net::TcpStream::write (10 samples, 0.03%)</title><rect x="5.6737%" y="1861" width="0.0293%" height="15" fill="rgb(221,155,16)" fg:x="1937" fg:w="10"/><text x="5.9237%" y="1871.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (41 samples, 0.12%)</title><rect x="5.5858%" y="1973" width="0.1201%" height="15" fill="rgb(215,215,53)" fg:x="1907" fg:w="41"/><text x="5.8358%" y="1983.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (11 samples, 0.03%)</title><rect x="5.6737%" y="1957" width="0.0322%" height="15" fill="rgb(223,4,10)" fg:x="1937" fg:w="11"/><text x="5.9237%" y="1967.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (37 samples, 0.11%)</title><rect x="5.7059%" y="1973" width="0.1084%" height="15" fill="rgb(234,103,6)" fg:x="1948" fg:w="37"/><text x="5.9559%" y="1983.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (11 samples, 0.03%)</title><rect x="5.7821%" y="1957" width="0.0322%" height="15" fill="rgb(227,97,0)" fg:x="1974" fg:w="11"/><text x="6.0321%" y="1967.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (11 samples, 0.03%)</title><rect x="5.7821%" y="1941" width="0.0322%" height="15" fill="rgb(234,150,53)" fg:x="1974" fg:w="11"/><text x="6.0321%" y="1951.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (11 samples, 0.03%)</title><rect x="5.7821%" y="1925" width="0.0322%" height="15" fill="rgb(228,201,54)" fg:x="1974" fg:w="11"/><text x="6.0321%" y="1935.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (9 samples, 0.03%)</title><rect x="5.7879%" y="1909" width="0.0264%" height="15" fill="rgb(222,22,37)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1919.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (9 samples, 0.03%)</title><rect x="5.7879%" y="1893" width="0.0264%" height="15" fill="rgb(237,53,32)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1903.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (9 samples, 0.03%)</title><rect x="5.7879%" y="1877" width="0.0264%" height="15" fill="rgb(233,25,53)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1887.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (9 samples, 0.03%)</title><rect x="5.7879%" y="1861" width="0.0264%" height="15" fill="rgb(210,40,34)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1871.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (9 samples, 0.03%)</title><rect x="5.7879%" y="1845" width="0.0264%" height="15" fill="rgb(241,220,44)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1855.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (9 samples, 0.03%)</title><rect x="5.7879%" y="1829" width="0.0264%" height="15" fill="rgb(235,28,35)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1839.50"></text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (9 samples, 0.03%)</title><rect x="5.7879%" y="1813" width="0.0264%" height="15" fill="rgb(210,56,17)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1823.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (9 samples, 0.03%)</title><rect x="5.7879%" y="1797" width="0.0264%" height="15" fill="rgb(224,130,29)" fg:x="1976" fg:w="9"/><text x="6.0379%" y="1807.50"></text></g><g><title>tokio::runtime::driver::Driver::park (5 samples, 0.01%)</title><rect x="5.8202%" y="1973" width="0.0146%" height="15" fill="rgb(235,212,8)" fg:x="1987" fg:w="5"/><text x="6.0702%" y="1983.50"></text></g><g><title>tokio::runtime::driver::Driver::park_timeout (4 samples, 0.01%)</title><rect x="5.8348%" y="1973" width="0.0117%" height="15" fill="rgb(223,33,50)" fg:x="1992" fg:w="4"/><text x="6.0848%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (40 samples, 0.12%)</title><rect x="5.8641%" y="1973" width="0.1172%" height="15" fill="rgb(219,149,13)" fg:x="2002" fg:w="40"/><text x="6.1141%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (4 samples, 0.01%)</title><rect x="5.9842%" y="1973" width="0.0117%" height="15" fill="rgb(250,156,29)" fg:x="2043" fg:w="4"/><text x="6.2342%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (6 samples, 0.02%)</title><rect x="6.0105%" y="1973" width="0.0176%" height="15" fill="rgb(216,193,19)" fg:x="2052" fg:w="6"/><text x="6.2605%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.03%)</title><rect x="6.0428%" y="1957" width="0.0322%" height="15" fill="rgb(216,135,14)" fg:x="2063" fg:w="11"/><text x="6.2928%" y="1967.50"></text></g><g><title>core::mem::replace (11 samples, 0.03%)</title><rect x="6.0428%" y="1941" width="0.0322%" height="15" fill="rgb(241,47,5)" fg:x="2063" fg:w="11"/><text x="6.2928%" y="1951.50"></text></g><g><title>core::ptr::read (11 samples, 0.03%)</title><rect x="6.0428%" y="1925" width="0.0322%" height="15" fill="rgb(233,42,35)" fg:x="2063" fg:w="11"/><text x="6.2928%" y="1935.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (17 samples, 0.05%)</title><rect x="6.0281%" y="1973" width="0.0498%" height="15" fill="rgb(231,13,6)" fg:x="2058" fg:w="17"/><text x="6.2781%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (15 samples, 0.04%)</title><rect x="6.0779%" y="1973" width="0.0439%" height="15" fill="rgb(207,181,40)" fg:x="2075" fg:w="15"/><text x="6.3279%" y="1983.50"></text></g><g><title>tokio::runtime::coop::budget (13 samples, 0.04%)</title><rect x="6.0838%" y="1957" width="0.0381%" height="15" fill="rgb(254,173,49)" fg:x="2077" fg:w="13"/><text x="6.3338%" y="1967.50"></text></g><g><title>tokio::runtime::coop::with_budget (13 samples, 0.04%)</title><rect x="6.0838%" y="1941" width="0.0381%" height="15" fill="rgb(221,1,38)" fg:x="2077" fg:w="13"/><text x="6.3338%" y="1951.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (13 samples, 0.04%)</title><rect x="6.0838%" y="1925" width="0.0381%" height="15" fill="rgb(206,124,46)" fg:x="2077" fg:w="13"/><text x="6.3338%" y="1935.50"></text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (13 samples, 0.04%)</title><rect x="6.0838%" y="1909" width="0.0381%" height="15" fill="rgb(249,21,11)" fg:x="2077" fg:w="13"/><text x="6.3338%" y="1919.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (13 samples, 0.04%)</title><rect x="6.0838%" y="1893" width="0.0381%" height="15" fill="rgb(222,201,40)" fg:x="2077" fg:w="13"/><text x="6.3338%" y="1903.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (21 samples, 0.06%)</title><rect x="6.1453%" y="1973" width="0.0615%" height="15" fill="rgb(235,61,29)" fg:x="2098" fg:w="21"/><text x="6.3953%" y="1983.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (20 samples, 0.06%)</title><rect x="6.1482%" y="1957" width="0.0586%" height="15" fill="rgb(219,207,3)" fg:x="2099" fg:w="20"/><text x="6.3982%" y="1967.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (17 samples, 0.05%)</title><rect x="6.1570%" y="1941" width="0.0498%" height="15" fill="rgb(222,56,46)" fg:x="2102" fg:w="17"/><text x="6.4070%" y="1951.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (17 samples, 0.05%)</title><rect x="6.1570%" y="1925" width="0.0498%" height="15" fill="rgb(239,76,54)" fg:x="2102" fg:w="17"/><text x="6.4070%" y="1935.50"></text></g><g><title>tokio::runtime::task::state::State::load (17 samples, 0.05%)</title><rect x="6.1570%" y="1909" width="0.0498%" height="15" fill="rgb(231,124,27)" fg:x="2102" fg:w="17"/><text x="6.4070%" y="1919.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.05%)</title><rect x="6.1570%" y="1893" width="0.0498%" height="15" fill="rgb(249,195,6)" fg:x="2102" fg:w="17"/><text x="6.4070%" y="1903.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.05%)</title><rect x="6.1570%" y="1877" width="0.0498%" height="15" fill="rgb(237,174,47)" fg:x="2102" fg:w="17"/><text x="6.4070%" y="1887.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (59 samples, 0.17%)</title><rect x="6.2127%" y="1973" width="0.1728%" height="15" fill="rgb(206,201,31)" fg:x="2121" fg:w="59"/><text x="6.4627%" y="1983.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (5 samples, 0.01%)</title><rect x="6.3708%" y="1957" width="0.0146%" height="15" fill="rgb(231,57,52)" fg:x="2175" fg:w="5"/><text x="6.6208%" y="1967.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (5 samples, 0.01%)</title><rect x="6.3708%" y="1941" width="0.0146%" height="15" fill="rgb(248,177,22)" fg:x="2175" fg:w="5"/><text x="6.6208%" y="1951.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (26 samples, 0.08%)</title><rect x="6.3855%" y="1973" width="0.0762%" height="15" fill="rgb(215,211,37)" fg:x="2180" fg:w="26"/><text x="6.6355%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (12 samples, 0.04%)</title><rect x="6.4616%" y="1973" width="0.0351%" height="15" fill="rgb(241,128,51)" fg:x="2206" fg:w="12"/><text x="6.7116%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (4 samples, 0.01%)</title><rect x="6.4968%" y="1973" width="0.0117%" height="15" fill="rgb(227,165,31)" fg:x="2218" fg:w="4"/><text x="6.7468%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (95 samples, 0.28%)</title><rect x="6.5085%" y="1973" width="0.2783%" height="15" fill="rgb(228,167,24)" fg:x="2222" fg:w="95"/><text x="6.7585%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (8 samples, 0.02%)</title><rect x="6.7633%" y="1957" width="0.0234%" height="15" fill="rgb(228,143,12)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="6.7633%" y="1941" width="0.0234%" height="15" fill="rgb(249,149,8)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1951.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="6.7633%" y="1925" width="0.0234%" height="15" fill="rgb(243,35,44)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="6.7633%" y="1909" width="0.0234%" height="15" fill="rgb(246,89,9)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="6.7633%" y="1893" width="0.0234%" height="15" fill="rgb(233,213,13)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="6.7633%" y="1877" width="0.0234%" height="15" fill="rgb(233,141,41)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1887.50"></text></g><g><title>__rust_alloc (8 samples, 0.02%)</title><rect x="6.7633%" y="1861" width="0.0234%" height="15" fill="rgb(239,167,4)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (8 samples, 0.02%)</title><rect x="6.7633%" y="1845" width="0.0234%" height="15" fill="rgb(209,217,16)" fg:x="2309" fg:w="8"/><text x="7.0133%" y="1855.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (8 samples, 0.02%)</title><rect x="6.7868%" y="1973" width="0.0234%" height="15" fill="rgb(219,88,35)" fg:x="2317" fg:w="8"/><text x="7.0368%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (13 samples, 0.04%)</title><rect x="6.8102%" y="1973" width="0.0381%" height="15" fill="rgb(220,193,23)" fg:x="2325" fg:w="13"/><text x="7.0602%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (8 samples, 0.02%)</title><rect x="6.8483%" y="1973" width="0.0234%" height="15" fill="rgb(230,90,52)" fg:x="2338" fg:w="8"/><text x="7.0983%" y="1983.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (29 samples, 0.08%)</title><rect x="6.8717%" y="1973" width="0.0849%" height="15" fill="rgb(252,106,19)" fg:x="2346" fg:w="29"/><text x="7.1217%" y="1983.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (25 samples, 0.07%)</title><rect x="6.8834%" y="1957" width="0.0732%" height="15" fill="rgb(206,74,20)" fg:x="2350" fg:w="25"/><text x="7.1334%" y="1967.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (6 samples, 0.02%)</title><rect x="7.0387%" y="1957" width="0.0176%" height="15" fill="rgb(230,138,44)" fg:x="2403" fg:w="6"/><text x="7.2887%" y="1967.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (6 samples, 0.02%)</title><rect x="7.0387%" y="1941" width="0.0176%" height="15" fill="rgb(235,182,43)" fg:x="2403" fg:w="6"/><text x="7.2887%" y="1951.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6 samples, 0.02%)</title><rect x="7.0387%" y="1925" width="0.0176%" height="15" fill="rgb(242,16,51)" fg:x="2403" fg:w="6"/><text x="7.2887%" y="1935.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="7.0387%" y="1909" width="0.0176%" height="15" fill="rgb(248,9,4)" fg:x="2403" fg:w="6"/><text x="7.2887%" y="1919.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (42 samples, 0.12%)</title><rect x="6.9625%" y="1973" width="0.1230%" height="15" fill="rgb(210,31,22)" fg:x="2377" fg:w="42"/><text x="7.2125%" y="1983.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (10 samples, 0.03%)</title><rect x="7.0562%" y="1957" width="0.0293%" height="15" fill="rgb(239,54,39)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (10 samples, 0.03%)</title><rect x="7.0562%" y="1941" width="0.0293%" height="15" fill="rgb(230,99,41)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="7.0562%" y="1925" width="0.0293%" height="15" fill="rgb(253,106,12)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="7.0562%" y="1909" width="0.0293%" height="15" fill="rgb(213,46,41)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (10 samples, 0.03%)</title><rect x="7.0562%" y="1893" width="0.0293%" height="15" fill="rgb(215,133,35)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (10 samples, 0.03%)</title><rect x="7.0562%" y="1877" width="0.0293%" height="15" fill="rgb(213,28,5)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.03%)</title><rect x="7.0562%" y="1861" width="0.0293%" height="15" fill="rgb(215,77,49)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.03%)</title><rect x="7.0562%" y="1845" width="0.0293%" height="15" fill="rgb(248,100,22)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.03%)</title><rect x="7.0562%" y="1829" width="0.0293%" height="15" fill="rgb(208,67,9)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1839.50"></text></g><g><title>__rust_alloc (10 samples, 0.03%)</title><rect x="7.0562%" y="1813" width="0.0293%" height="15" fill="rgb(219,133,21)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (10 samples, 0.03%)</title><rect x="7.0562%" y="1797" width="0.0293%" height="15" fill="rgb(246,46,29)" fg:x="2409" fg:w="10"/><text x="7.3062%" y="1807.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (81 samples, 0.24%)</title><rect x="7.0855%" y="1973" width="0.2373%" height="15" fill="rgb(246,185,52)" fg:x="2419" fg:w="81"/><text x="7.3355%" y="1983.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (4 samples, 0.01%)</title><rect x="7.4780%" y="1925" width="0.0117%" height="15" fill="rgb(252,136,11)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1935.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.01%)</title><rect x="7.4780%" y="1909" width="0.0117%" height="15" fill="rgb(219,138,53)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1919.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="7.4780%" y="1893" width="0.0117%" height="15" fill="rgb(211,51,23)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1903.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="7.4780%" y="1877" width="0.0117%" height="15" fill="rgb(247,221,28)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1887.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="7.4780%" y="1861" width="0.0117%" height="15" fill="rgb(251,222,45)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1871.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="7.4780%" y="1845" width="0.0117%" height="15" fill="rgb(217,162,53)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1855.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="7.4780%" y="1829" width="0.0117%" height="15" fill="rgb(229,93,14)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1839.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="7.4780%" y="1813" width="0.0117%" height="15" fill="rgb(209,67,49)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1823.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="7.4780%" y="1797" width="0.0117%" height="15" fill="rgb(213,87,29)" fg:x="2553" fg:w="4"/><text x="7.7280%" y="1807.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="7.4897%" y="1925" width="0.0117%" height="15" fill="rgb(205,151,52)" fg:x="2557" fg:w="4"/><text x="7.7397%" y="1935.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (62 samples, 0.18%)</title><rect x="7.3228%" y="1973" width="0.1816%" height="15" fill="rgb(253,215,39)" fg:x="2500" fg:w="62"/><text x="7.5728%" y="1983.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (16 samples, 0.05%)</title><rect x="7.4575%" y="1957" width="0.0469%" height="15" fill="rgb(221,220,41)" fg:x="2546" fg:w="16"/><text x="7.7075%" y="1967.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (15 samples, 0.04%)</title><rect x="7.4605%" y="1941" width="0.0439%" height="15" fill="rgb(218,133,21)" fg:x="2547" fg:w="15"/><text x="7.7105%" y="1951.50"></text></g><g><title>[anon] (2,450 samples, 7.18%)</title><rect x="0.3310%" y="1989" width="7.1763%" height="15" fill="rgb(221,193,43)" fg:x="113" fg:w="2450"/><text x="0.5810%" y="1999.50">[anon]</text></g><g><title>_rjem_je_sdallocx_default (4 samples, 0.01%)</title><rect x="7.5073%" y="1973" width="0.0117%" height="15" fill="rgb(240,128,52)" fg:x="2563" fg:w="4"/><text x="7.7573%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="7.5220%" y="1973" width="0.0410%" height="15" fill="rgb(253,114,12)" fg:x="2568" fg:w="14"/><text x="7.7720%" y="1983.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="7.5513%" y="1957" width="0.0117%" height="15" fill="rgb(215,223,47)" fg:x="2578" fg:w="4"/><text x="7.8013%" y="1967.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (4 samples, 0.01%)</title><rect x="7.5513%" y="1941" width="0.0117%" height="15" fill="rgb(248,225,23)" fg:x="2578" fg:w="4"/><text x="7.8013%" y="1951.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (4 samples, 0.01%)</title><rect x="7.5513%" y="1925" width="0.0117%" height="15" fill="rgb(250,108,0)" fg:x="2578" fg:w="4"/><text x="7.8013%" y="1935.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.01%)</title><rect x="7.5513%" y="1909" width="0.0117%" height="15" fill="rgb(228,208,7)" fg:x="2578" fg:w="4"/><text x="7.8013%" y="1919.50"></text></g><g><title>syscall (8 samples, 0.02%)</title><rect x="7.5630%" y="1973" width="0.0234%" height="15" fill="rgb(244,45,10)" fg:x="2582" fg:w="8"/><text x="7.8130%" y="1983.50"></text></g><g><title>[epoxy-server] (29 samples, 0.08%)</title><rect x="7.5073%" y="1989" width="0.0849%" height="15" fill="rgb(207,125,25)" fg:x="2563" fg:w="29"/><text x="7.7573%" y="1999.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (27 samples, 0.08%)</title><rect x="7.6040%" y="1653" width="0.0791%" height="15" fill="rgb(210,195,18)" fg:x="2596" fg:w="27"/><text x="7.8540%" y="1663.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (12 samples, 0.04%)</title><rect x="7.6479%" y="1637" width="0.0351%" height="15" fill="rgb(249,80,12)" fg:x="2611" fg:w="12"/><text x="7.8979%" y="1647.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (8 samples, 0.02%)</title><rect x="7.6596%" y="1621" width="0.0234%" height="15" fill="rgb(221,65,9)" fg:x="2615" fg:w="8"/><text x="7.9096%" y="1631.50"></text></g><g><title>syscall (8 samples, 0.02%)</title><rect x="7.6596%" y="1605" width="0.0234%" height="15" fill="rgb(235,49,36)" fg:x="2615" fg:w="8"/><text x="7.9096%" y="1615.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (6 samples, 0.02%)</title><rect x="7.6831%" y="1573" width="0.0176%" height="15" fill="rgb(225,32,20)" fg:x="2623" fg:w="6"/><text x="7.9331%" y="1583.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="7.6831%" y="1557" width="0.0176%" height="15" fill="rgb(215,141,46)" fg:x="2623" fg:w="6"/><text x="7.9331%" y="1567.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (6 samples, 0.02%)</title><rect x="7.6831%" y="1541" width="0.0176%" height="15" fill="rgb(250,160,47)" fg:x="2623" fg:w="6"/><text x="7.9331%" y="1551.50"></text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (6 samples, 0.02%)</title><rect x="7.6831%" y="1525" width="0.0176%" height="15" fill="rgb(216,222,40)" fg:x="2623" fg:w="6"/><text x="7.9331%" y="1535.50"></text></g><g><title>parking_lot_core::parking_lot::grow_hashtable (6 samples, 0.02%)</title><rect x="7.6831%" y="1509" width="0.0176%" height="15" fill="rgb(234,217,39)" fg:x="2623" fg:w="6"/><text x="7.9331%" y="1519.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4 samples, 0.01%)</title><rect x="7.6889%" y="1493" width="0.0117%" height="15" fill="rgb(207,178,40)" fg:x="2625" fg:w="4"/><text x="7.9389%" y="1503.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (4 samples, 0.01%)</title><rect x="7.6889%" y="1477" width="0.0117%" height="15" fill="rgb(221,136,13)" fg:x="2625" fg:w="4"/><text x="7.9389%" y="1487.50"></text></g><g><title>parking_lot_core::word_lock::with_thread_data (4 samples, 0.01%)</title><rect x="7.6889%" y="1461" width="0.0117%" height="15" fill="rgb(249,199,10)" fg:x="2625" fg:w="4"/><text x="7.9389%" y="1471.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::_{{closure}} (4 samples, 0.01%)</title><rect x="7.6889%" y="1445" width="0.0117%" height="15" fill="rgb(249,222,13)" fg:x="2625" fg:w="4"/><text x="7.9389%" y="1455.50"></text></g><g><title>parking_lot_core::parking_lot::park (34 samples, 0.10%)</title><rect x="7.6040%" y="1685" width="0.0996%" height="15" fill="rgb(244,185,38)" fg:x="2596" fg:w="34"/><text x="7.8540%" y="1695.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (34 samples, 0.10%)</title><rect x="7.6040%" y="1669" width="0.0996%" height="15" fill="rgb(236,202,9)" fg:x="2596" fg:w="34"/><text x="7.8540%" y="1679.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.02%)</title><rect x="7.6831%" y="1653" width="0.0205%" height="15" fill="rgb(250,229,37)" fg:x="2623" fg:w="7"/><text x="7.9331%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="7.6831%" y="1637" width="0.0205%" height="15" fill="rgb(206,174,23)" fg:x="2623" fg:w="7"/><text x="7.9331%" y="1647.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::_{{constant}}::_{{closure}} (7 samples, 0.02%)</title><rect x="7.6831%" y="1621" width="0.0205%" height="15" fill="rgb(211,33,43)" fg:x="2623" fg:w="7"/><text x="7.9331%" y="1631.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (7 samples, 0.02%)</title><rect x="7.6831%" y="1605" width="0.0205%" height="15" fill="rgb(245,58,50)" fg:x="2623" fg:w="7"/><text x="7.9331%" y="1615.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::initialize (7 samples, 0.02%)</title><rect x="7.6831%" y="1589" width="0.0205%" height="15" fill="rgb(244,68,36)" fg:x="2623" fg:w="7"/><text x="7.9331%" y="1599.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (37 samples, 0.11%)</title><rect x="7.5981%" y="1749" width="0.1084%" height="15" fill="rgb(232,229,15)" fg:x="2594" fg:w="37"/><text x="7.8481%" y="1759.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (37 samples, 0.11%)</title><rect x="7.5981%" y="1733" width="0.1084%" height="15" fill="rgb(254,30,23)" fg:x="2594" fg:w="37"/><text x="7.8481%" y="1743.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (37 samples, 0.11%)</title><rect x="7.5981%" y="1717" width="0.1084%" height="15" fill="rgb(235,160,14)" fg:x="2594" fg:w="37"/><text x="7.8481%" y="1727.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (36 samples, 0.11%)</title><rect x="7.6011%" y="1701" width="0.1054%" height="15" fill="rgb(212,155,44)" fg:x="2595" fg:w="36"/><text x="7.8511%" y="1711.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (11 samples, 0.03%)</title><rect x="7.7241%" y="1317" width="0.0322%" height="15" fill="rgb(226,2,50)" fg:x="2637" fg:w="11"/><text x="7.9741%" y="1327.50"></text></g><g><title>&lt;std::time::Instant as core::ops::arith::Sub&gt;::sub (5 samples, 0.01%)</title><rect x="7.8061%" y="1301" width="0.0146%" height="15" fill="rgb(234,177,6)" fg:x="2665" fg:w="5"/><text x="8.0561%" y="1311.50"></text></g><g><title>std::time::Instant::duration_since (5 samples, 0.01%)</title><rect x="7.8061%" y="1285" width="0.0146%" height="15" fill="rgb(217,24,9)" fg:x="2665" fg:w="5"/><text x="8.0561%" y="1295.50"></text></g><g><title>std::time::Instant::checked_duration_since (5 samples, 0.01%)</title><rect x="7.8061%" y="1269" width="0.0146%" height="15" fill="rgb(220,13,46)" fg:x="2665" fg:w="5"/><text x="8.0561%" y="1279.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (5 samples, 0.01%)</title><rect x="7.8061%" y="1253" width="0.0146%" height="15" fill="rgb(239,221,27)" fg:x="2665" fg:w="5"/><text x="8.0561%" y="1263.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (4 samples, 0.01%)</title><rect x="7.8090%" y="1237" width="0.0117%" height="15" fill="rgb(222,198,25)" fg:x="2666" fg:w="4"/><text x="8.0590%" y="1247.50"></text></g><g><title>compiler_builtins::float::conv::int_to_float::u128_to_f64_bits (13 samples, 0.04%)</title><rect x="7.8237%" y="1269" width="0.0381%" height="15" fill="rgb(211,99,13)" fg:x="2671" fg:w="13"/><text x="8.0737%" y="1279.50"></text></g><g><title>__floattidf (17 samples, 0.05%)</title><rect x="7.8207%" y="1301" width="0.0498%" height="15" fill="rgb(232,111,31)" fg:x="2670" fg:w="17"/><text x="8.0707%" y="1311.50"></text></g><g><title>compiler_builtins::float::conv::__floattidf (17 samples, 0.05%)</title><rect x="7.8207%" y="1285" width="0.0498%" height="15" fill="rgb(245,82,37)" fg:x="2670" fg:w="17"/><text x="8.0707%" y="1295.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::powf (97 samples, 0.28%)</title><rect x="7.8764%" y="1301" width="0.2841%" height="15" fill="rgb(227,149,46)" fg:x="2689" fg:w="97"/><text x="8.1264%" y="1311.50"></text></g><g><title>pow (97 samples, 0.28%)</title><rect x="7.8764%" y="1285" width="0.2841%" height="15" fill="rgb(218,36,50)" fg:x="2689" fg:w="97"/><text x="8.1264%" y="1295.50"></text></g><g><title>[libm.so.6] (67 samples, 0.20%)</title><rect x="7.9643%" y="1269" width="0.1963%" height="15" fill="rgb(226,80,48)" fg:x="2719" fg:w="67"/><text x="8.2143%" y="1279.50"></text></g><g><title>clock_gettime (57 samples, 0.17%)</title><rect x="8.1664%" y="1285" width="0.1670%" height="15" fill="rgb(238,224,15)" fg:x="2788" fg:w="57"/><text x="8.4164%" y="1295.50"></text></g><g><title>__vdso_clock_gettime (25 samples, 0.07%)</title><rect x="8.2601%" y="1269" width="0.0732%" height="15" fill="rgb(241,136,10)" fg:x="2820" fg:w="25"/><text x="8.5101%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (199 samples, 0.58%)</title><rect x="7.7592%" y="1317" width="0.5829%" height="15" fill="rgb(208,32,45)" fg:x="2649" fg:w="199"/><text x="8.0092%" y="1327.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (62 samples, 0.18%)</title><rect x="8.1605%" y="1301" width="0.1816%" height="15" fill="rgb(207,135,9)" fg:x="2786" fg:w="62"/><text x="8.4105%" y="1311.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (75 samples, 0.22%)</title><rect x="8.3450%" y="1301" width="0.2197%" height="15" fill="rgb(206,86,44)" fg:x="2849" fg:w="75"/><text x="8.5950%" y="1311.50"></text></g><g><title>clock_gettime (72 samples, 0.21%)</title><rect x="8.3538%" y="1285" width="0.2109%" height="15" fill="rgb(245,177,15)" fg:x="2852" fg:w="72"/><text x="8.6038%" y="1295.50"></text></g><g><title>__vdso_clock_gettime (45 samples, 0.13%)</title><rect x="8.4329%" y="1269" width="0.1318%" height="15" fill="rgb(206,64,50)" fg:x="2879" fg:w="45"/><text x="8.6829%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::start_processing_scheduled_tasks (78 samples, 0.23%)</title><rect x="8.3421%" y="1317" width="0.2285%" height="15" fill="rgb(234,36,40)" fg:x="2848" fg:w="78"/><text x="8.5921%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::end_processing_scheduled_tasks (6 samples, 0.02%)</title><rect x="8.5823%" y="1301" width="0.0176%" height="15" fill="rgb(213,64,8)" fg:x="2930" fg:w="6"/><text x="8.8323%" y="1311.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (4 samples, 0.01%)</title><rect x="8.6028%" y="1253" width="0.0117%" height="15" fill="rgb(210,75,36)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1263.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (4 samples, 0.01%)</title><rect x="8.6028%" y="1237" width="0.0117%" height="15" fill="rgb(229,88,21)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (4 samples, 0.01%)</title><rect x="8.6028%" y="1221" width="0.0117%" height="15" fill="rgb(252,204,47)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="8.6028%" y="1205" width="0.0117%" height="15" fill="rgb(208,77,27)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (4 samples, 0.01%)</title><rect x="8.6028%" y="1189" width="0.0117%" height="15" fill="rgb(221,76,26)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.01%)</title><rect x="8.6028%" y="1173" width="0.0117%" height="15" fill="rgb(225,139,18)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1183.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (4 samples, 0.01%)</title><rect x="8.6028%" y="1157" width="0.0117%" height="15" fill="rgb(230,137,11)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1167.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (4 samples, 0.01%)</title><rect x="8.6028%" y="1141" width="0.0117%" height="15" fill="rgb(212,28,1)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1151.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (4 samples, 0.01%)</title><rect x="8.6028%" y="1125" width="0.0117%" height="15" fill="rgb(248,164,17)" fg:x="2937" fg:w="4"/><text x="8.8528%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (16 samples, 0.05%)</title><rect x="8.6028%" y="1301" width="0.0469%" height="15" fill="rgb(222,171,42)" fg:x="2937" fg:w="16"/><text x="8.8528%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park_timeout (16 samples, 0.05%)</title><rect x="8.6028%" y="1285" width="0.0469%" height="15" fill="rgb(243,84,45)" fg:x="2937" fg:w="16"/><text x="8.8528%" y="1295.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (16 samples, 0.05%)</title><rect x="8.6028%" y="1269" width="0.0469%" height="15" fill="rgb(252,49,23)" fg:x="2937" fg:w="16"/><text x="8.8528%" y="1279.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (11 samples, 0.03%)</title><rect x="8.6175%" y="1253" width="0.0322%" height="15" fill="rgb(215,19,7)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1263.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (11 samples, 0.03%)</title><rect x="8.6175%" y="1237" width="0.0322%" height="15" fill="rgb(238,81,41)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (11 samples, 0.03%)</title><rect x="8.6175%" y="1221" width="0.0322%" height="15" fill="rgb(210,199,37)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (11 samples, 0.03%)</title><rect x="8.6175%" y="1205" width="0.0322%" height="15" fill="rgb(244,192,49)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (11 samples, 0.03%)</title><rect x="8.6175%" y="1189" width="0.0322%" height="15" fill="rgb(226,211,11)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="8.6175%" y="1173" width="0.0322%" height="15" fill="rgb(236,162,54)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (11 samples, 0.03%)</title><rect x="8.6175%" y="1157" width="0.0322%" height="15" fill="rgb(220,229,9)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="8.6175%" y="1141" width="0.0322%" height="15" fill="rgb(250,87,22)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (11 samples, 0.03%)</title><rect x="8.6175%" y="1125" width="0.0322%" height="15" fill="rgb(239,43,17)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11 samples, 0.03%)</title><rect x="8.6175%" y="1109" width="0.0322%" height="15" fill="rgb(231,177,25)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1119.50"></text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (11 samples, 0.03%)</title><rect x="8.6175%" y="1093" width="0.0322%" height="15" fill="rgb(219,179,1)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1103.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (11 samples, 0.03%)</title><rect x="8.6175%" y="1077" width="0.0322%" height="15" fill="rgb(238,219,53)" fg:x="2942" fg:w="11"/><text x="8.8675%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::maintenance (29 samples, 0.08%)</title><rect x="8.5706%" y="1317" width="0.0849%" height="15" fill="rgb(232,167,36)" fg:x="2926" fg:w="29"/><text x="8.8206%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="8.8342%" y="1301" width="0.0146%" height="15" fill="rgb(244,19,51)" fg:x="3016" fg:w="5"/><text x="9.0842%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (5 samples, 0.01%)</title><rect x="8.8342%" y="1285" width="0.0146%" height="15" fill="rgb(224,6,22)" fg:x="3016" fg:w="5"/><text x="9.0842%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="8.8342%" y="1269" width="0.0146%" height="15" fill="rgb(224,145,5)" fg:x="3016" fg:w="5"/><text x="9.0842%" y="1279.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7 samples, 0.02%)</title><rect x="8.9397%" y="1285" width="0.0205%" height="15" fill="rgb(234,130,49)" fg:x="3052" fg:w="7"/><text x="9.1897%" y="1295.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7 samples, 0.02%)</title><rect x="8.9397%" y="1269" width="0.0205%" height="15" fill="rgb(254,6,2)" fg:x="3052" fg:w="7"/><text x="9.1897%" y="1279.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.02%)</title><rect x="8.9397%" y="1253" width="0.0205%" height="15" fill="rgb(208,96,46)" fg:x="3052" fg:w="7"/><text x="9.1897%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::scheduler::multi_thread::park::Parker&gt;&gt; (12 samples, 0.04%)</title><rect x="8.9836%" y="1285" width="0.0351%" height="15" fill="rgb(239,3,39)" fg:x="3067" fg:w="12"/><text x="9.2336%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (24 samples, 0.07%)</title><rect x="9.0275%" y="1253" width="0.0703%" height="15" fill="rgb(233,210,1)" fg:x="3082" fg:w="24"/><text x="9.2775%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.07%)</title><rect x="9.0275%" y="1237" width="0.0703%" height="15" fill="rgb(244,137,37)" fg:x="3082" fg:w="24"/><text x="9.2775%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.08%)</title><rect x="9.1066%" y="1237" width="0.0762%" height="15" fill="rgb(240,136,2)" fg:x="3109" fg:w="26"/><text x="9.3566%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.08%)</title><rect x="9.1066%" y="1221" width="0.0762%" height="15" fill="rgb(239,18,37)" fg:x="3109" fg:w="26"/><text x="9.3566%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 0.08%)</title><rect x="9.1974%" y="1189" width="0.0791%" height="15" fill="rgb(218,185,22)" fg:x="3140" fg:w="27"/><text x="9.4474%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (27 samples, 0.08%)</title><rect x="9.1974%" y="1173" width="0.0791%" height="15" fill="rgb(225,218,4)" fg:x="3140" fg:w="27"/><text x="9.4474%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.08%)</title><rect x="9.1974%" y="1157" width="0.0791%" height="15" fill="rgb(230,182,32)" fg:x="3140" fg:w="27"/><text x="9.4474%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (63 samples, 0.18%)</title><rect x="9.3556%" y="1125" width="0.1845%" height="15" fill="rgb(242,56,43)" fg:x="3194" fg:w="63"/><text x="9.6056%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (63 samples, 0.18%)</title><rect x="9.3556%" y="1109" width="0.1845%" height="15" fill="rgb(233,99,24)" fg:x="3194" fg:w="63"/><text x="9.6056%" y="1119.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (128 samples, 0.37%)</title><rect x="9.2999%" y="1141" width="0.3749%" height="15" fill="rgb(234,209,42)" fg:x="3175" fg:w="128"/><text x="9.5499%" y="1151.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (46 samples, 0.13%)</title><rect x="9.5401%" y="1125" width="0.1347%" height="15" fill="rgb(227,7,12)" fg:x="3257" fg:w="46"/><text x="9.7901%" y="1135.50"></text></g><g><title>syscall (43 samples, 0.13%)</title><rect x="9.5489%" y="1109" width="0.1260%" height="15" fill="rgb(245,203,43)" fg:x="3260" fg:w="43"/><text x="9.7989%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.02%)</title><rect x="9.6749%" y="1141" width="0.0234%" height="15" fill="rgb(238,205,33)" fg:x="3303" fg:w="8"/><text x="9.9249%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.02%)</title><rect x="9.6749%" y="1125" width="0.0234%" height="15" fill="rgb(231,56,7)" fg:x="3303" fg:w="8"/><text x="9.9249%" y="1135.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="9.6749%" y="1109" width="0.0234%" height="15" fill="rgb(244,186,29)" fg:x="3303" fg:w="8"/><text x="9.9249%" y="1119.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="9.6749%" y="1093" width="0.0234%" height="15" fill="rgb(234,111,31)" fg:x="3303" fg:w="8"/><text x="9.9249%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::hash (8 samples, 0.02%)</title><rect x="9.7188%" y="1125" width="0.0234%" height="15" fill="rgb(241,149,10)" fg:x="3318" fg:w="8"/><text x="9.9688%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (26 samples, 0.08%)</title><rect x="9.7071%" y="1141" width="0.0762%" height="15" fill="rgb(249,206,44)" fg:x="3314" fg:w="26"/><text x="9.9571%" y="1151.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (14 samples, 0.04%)</title><rect x="9.7422%" y="1125" width="0.0410%" height="15" fill="rgb(251,153,30)" fg:x="3326" fg:w="14"/><text x="9.9922%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.04%)</title><rect x="9.7422%" y="1109" width="0.0410%" height="15" fill="rgb(239,152,38)" fg:x="3326" fg:w="14"/><text x="9.9922%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.04%)</title><rect x="9.7422%" y="1093" width="0.0410%" height="15" fill="rgb(249,139,47)" fg:x="3326" fg:w="14"/><text x="9.9922%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::_{{closure}} (180 samples, 0.53%)</title><rect x="9.2970%" y="1157" width="0.5272%" height="15" fill="rgb(244,64,35)" fg:x="3174" fg:w="180"/><text x="9.5470%" y="1167.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (14 samples, 0.04%)</title><rect x="9.7832%" y="1141" width="0.0410%" height="15" fill="rgb(216,46,15)" fg:x="3340" fg:w="14"/><text x="10.0332%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.04%)</title><rect x="9.7832%" y="1125" width="0.0410%" height="15" fill="rgb(250,74,19)" fg:x="3340" fg:w="14"/><text x="10.0332%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.04%)</title><rect x="9.7832%" y="1109" width="0.0410%" height="15" fill="rgb(249,42,33)" fg:x="3340" fg:w="14"/><text x="10.0332%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (220 samples, 0.64%)</title><rect x="9.1828%" y="1237" width="0.6444%" height="15" fill="rgb(242,149,17)" fg:x="3135" fg:w="220"/><text x="9.4328%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (220 samples, 0.64%)</title><rect x="9.1828%" y="1221" width="0.6444%" height="15" fill="rgb(244,29,21)" fg:x="3135" fg:w="220"/><text x="9.4328%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (219 samples, 0.64%)</title><rect x="9.1857%" y="1205" width="0.6415%" height="15" fill="rgb(220,130,37)" fg:x="3136" fg:w="219"/><text x="9.4357%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::park (188 samples, 0.55%)</title><rect x="9.2765%" y="1189" width="0.5507%" height="15" fill="rgb(211,67,2)" fg:x="3167" fg:w="188"/><text x="9.5265%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (188 samples, 0.55%)</title><rect x="9.2765%" y="1173" width="0.5507%" height="15" fill="rgb(235,68,52)" fg:x="3167" fg:w="188"/><text x="9.5265%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_condvar (256 samples, 0.75%)</title><rect x="9.0978%" y="1253" width="0.7499%" height="15" fill="rgb(246,142,3)" fg:x="3106" fg:w="256"/><text x="9.3478%" y="1263.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="9.8272%" y="1237" width="0.0205%" height="15" fill="rgb(241,25,7)" fg:x="3355" fg:w="7"/><text x="10.0772%" y="1247.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.02%)</title><rect x="9.8301%" y="1221" width="0.0176%" height="15" fill="rgb(242,119,39)" fg:x="3356" fg:w="6"/><text x="10.0801%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.02%)</title><rect x="9.8301%" y="1205" width="0.0176%" height="15" fill="rgb(241,98,45)" fg:x="3356" fg:w="6"/><text x="10.0801%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.02%)</title><rect x="9.8301%" y="1189" width="0.0176%" height="15" fill="rgb(254,28,30)" fg:x="3356" fg:w="6"/><text x="10.0801%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.02%)</title><rect x="9.8301%" y="1173" width="0.0176%" height="15" fill="rgb(241,142,54)" fg:x="3356" fg:w="6"/><text x="10.0801%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.04%)</title><rect x="9.9180%" y="1237" width="0.0439%" height="15" fill="rgb(222,85,15)" fg:x="3386" fg:w="15"/><text x="10.1680%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.04%)</title><rect x="9.9180%" y="1221" width="0.0439%" height="15" fill="rgb(210,85,47)" fg:x="3386" fg:w="15"/><text x="10.1680%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (50 samples, 0.15%)</title><rect x="9.9619%" y="1237" width="0.1465%" height="15" fill="rgb(224,206,25)" fg:x="3401" fg:w="50"/><text x="10.2119%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (50 samples, 0.15%)</title><rect x="9.9619%" y="1221" width="0.1465%" height="15" fill="rgb(243,201,19)" fg:x="3401" fg:w="50"/><text x="10.2119%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="10.2197%" y="1141" width="0.0146%" height="15" fill="rgb(236,59,4)" fg:x="3489" fg:w="5"/><text x="10.4697%" y="1151.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::get_mut (5 samples, 0.01%)</title><rect x="10.2343%" y="1109" width="0.0146%" height="15" fill="rgb(254,179,45)" fg:x="3494" fg:w="5"/><text x="10.4843%" y="1119.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::get_mut (5 samples, 0.01%)</title><rect x="10.2343%" y="1093" width="0.0146%" height="15" fill="rgb(226,14,10)" fg:x="3494" fg:w="5"/><text x="10.4843%" y="1103.50"></text></g><g><title>core::cell::UnsafeCell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="10.2343%" y="1077" width="0.0146%" height="15" fill="rgb(244,27,41)" fg:x="3494" fg:w="5"/><text x="10.4843%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.11%)</title><rect x="10.8114%" y="1077" width="0.1113%" height="15" fill="rgb(235,35,32)" fg:x="3691" fg:w="38"/><text x="11.0614%" y="1087.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.11%)</title><rect x="10.8114%" y="1061" width="0.1113%" height="15" fill="rgb(218,68,31)" fg:x="3691" fg:w="38"/><text x="11.0614%" y="1071.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (19 samples, 0.06%)</title><rect x="10.8670%" y="1045" width="0.0557%" height="15" fill="rgb(207,120,37)" fg:x="3710" fg:w="19"/><text x="11.1170%" y="1055.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (90 samples, 0.26%)</title><rect x="10.9227%" y="1077" width="0.2636%" height="15" fill="rgb(227,98,0)" fg:x="3729" fg:w="90"/><text x="11.1727%" y="1087.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (90 samples, 0.26%)</title><rect x="10.9227%" y="1061" width="0.2636%" height="15" fill="rgb(207,7,3)" fg:x="3729" fg:w="90"/><text x="11.1727%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.01%)</title><rect x="11.1863%" y="1061" width="0.0117%" height="15" fill="rgb(206,98,19)" fg:x="3819" fg:w="4"/><text x="11.4363%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="11.1863%" y="1045" width="0.0117%" height="15" fill="rgb(217,5,26)" fg:x="3819" fg:w="4"/><text x="11.4363%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (367 samples, 1.07%)</title><rect x="10.1640%" y="1221" width="1.0750%" height="15" fill="rgb(235,190,38)" fg:x="3470" fg:w="367"/><text x="10.4140%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (367 samples, 1.07%)</title><rect x="10.1640%" y="1205" width="1.0750%" height="15" fill="rgb(247,86,24)" fg:x="3470" fg:w="367"/><text x="10.4140%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (367 samples, 1.07%)</title><rect x="10.1640%" y="1189" width="1.0750%" height="15" fill="rgb(205,101,16)" fg:x="3470" fg:w="367"/><text x="10.4140%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (367 samples, 1.07%)</title><rect x="10.1640%" y="1173" width="1.0750%" height="15" fill="rgb(246,168,33)" fg:x="3470" fg:w="367"/><text x="10.4140%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (367 samples, 1.07%)</title><rect x="10.1640%" y="1157" width="1.0750%" height="15" fill="rgb(231,114,1)" fg:x="3470" fg:w="367"/><text x="10.4140%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (343 samples, 1.00%)</title><rect x="10.2343%" y="1141" width="1.0047%" height="15" fill="rgb(207,184,53)" fg:x="3494" fg:w="343"/><text x="10.4843%" y="1151.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (343 samples, 1.00%)</title><rect x="10.2343%" y="1125" width="1.0047%" height="15" fill="rgb(224,95,51)" fg:x="3494" fg:w="343"/><text x="10.4843%" y="1135.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (338 samples, 0.99%)</title><rect x="10.2490%" y="1109" width="0.9900%" height="15" fill="rgb(212,188,45)" fg:x="3499" fg:w="338"/><text x="10.4990%" y="1119.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (335 samples, 0.98%)</title><rect x="10.2578%" y="1093" width="0.9813%" height="15" fill="rgb(223,154,38)" fg:x="3502" fg:w="335"/><text x="10.5078%" y="1103.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (18 samples, 0.05%)</title><rect x="11.1863%" y="1077" width="0.0527%" height="15" fill="rgb(251,22,52)" fg:x="3819" fg:w="18"/><text x="11.4363%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (14 samples, 0.04%)</title><rect x="11.1980%" y="1061" width="0.0410%" height="15" fill="rgb(229,209,22)" fg:x="3823" fg:w="14"/><text x="11.4480%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (19 samples, 0.06%)</title><rect x="11.2390%" y="1221" width="0.0557%" height="15" fill="rgb(234,138,34)" fg:x="3837" fg:w="19"/><text x="11.4890%" y="1231.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.06%)</title><rect x="11.2390%" y="1205" width="0.0557%" height="15" fill="rgb(212,95,11)" fg:x="3837" fg:w="19"/><text x="11.4890%" y="1215.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write_unlock (16 samples, 0.05%)</title><rect x="11.2478%" y="1189" width="0.0469%" height="15" fill="rgb(240,179,47)" fg:x="3840" fg:w="16"/><text x="11.4978%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (16 samples, 0.05%)</title><rect x="11.2478%" y="1173" width="0.0469%" height="15" fill="rgb(240,163,11)" fg:x="3840" fg:w="16"/><text x="11.4978%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.05%)</title><rect x="11.2478%" y="1157" width="0.0469%" height="15" fill="rgb(236,37,12)" fg:x="3840" fg:w="16"/><text x="11.4978%" y="1167.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (18 samples, 0.05%)</title><rect x="11.3005%" y="1221" width="0.0527%" height="15" fill="rgb(232,164,16)" fg:x="3858" fg:w="18"/><text x="11.5505%" y="1231.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::write (16 samples, 0.05%)</title><rect x="11.3064%" y="1205" width="0.0469%" height="15" fill="rgb(244,205,15)" fg:x="3860" fg:w="16"/><text x="11.5564%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (16 samples, 0.05%)</title><rect x="11.3064%" y="1189" width="0.0469%" height="15" fill="rgb(223,117,47)" fg:x="3860" fg:w="16"/><text x="11.5564%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.05%)</title><rect x="11.3064%" y="1173" width="0.0469%" height="15" fill="rgb(244,107,35)" fg:x="3860" fg:w="16"/><text x="11.5564%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="11.3679%" y="1189" width="0.0439%" height="15" fill="rgb(205,140,8)" fg:x="3881" fg:w="15"/><text x="11.6179%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;std::process::Child&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="11.3679%" y="1173" width="0.0439%" height="15" fill="rgb(228,84,46)" fg:x="3881" fg:w="15"/><text x="11.6179%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="11.3679%" y="1157" width="0.0439%" height="15" fill="rgb(254,188,9)" fg:x="3881" fg:w="15"/><text x="11.6179%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.04%)</title><rect x="11.3679%" y="1141" width="0.0439%" height="15" fill="rgb(206,112,54)" fg:x="3881" fg:w="15"/><text x="11.6179%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (14 samples, 0.04%)</title><rect x="11.3708%" y="1125" width="0.0410%" height="15" fill="rgb(216,84,49)" fg:x="3882" fg:w="14"/><text x="11.6208%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.04%)</title><rect x="11.3708%" y="1109" width="0.0410%" height="15" fill="rgb(214,194,35)" fg:x="3882" fg:w="14"/><text x="11.6208%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="11.4118%" y="1189" width="0.0586%" height="15" fill="rgb(249,28,3)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;tokio::sync::watch::Receiver&lt;()&gt;&gt;&gt;&gt; (20 samples, 0.06%)</title><rect x="11.4118%" y="1173" width="0.0586%" height="15" fill="rgb(222,56,52)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1183.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.06%)</title><rect x="11.4118%" y="1157" width="0.0586%" height="15" fill="rgb(245,217,50)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.06%)</title><rect x="11.4118%" y="1141" width="0.0586%" height="15" fill="rgb(213,201,24)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (20 samples, 0.06%)</title><rect x="11.4118%" y="1125" width="0.0586%" height="15" fill="rgb(248,116,28)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.06%)</title><rect x="11.4118%" y="1109" width="0.0586%" height="15" fill="rgb(219,72,43)" fg:x="3896" fg:w="20"/><text x="11.6618%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (21 samples, 0.06%)</title><rect x="11.4704%" y="1189" width="0.0615%" height="15" fill="rgb(209,138,14)" fg:x="3916" fg:w="21"/><text x="11.7204%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.06%)</title><rect x="11.4704%" y="1173" width="0.0615%" height="15" fill="rgb(222,18,33)" fg:x="3916" fg:w="21"/><text x="11.7204%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.06%)</title><rect x="11.4704%" y="1157" width="0.0615%" height="15" fill="rgb(213,199,7)" fg:x="3916" fg:w="21"/><text x="11.7204%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.06%)</title><rect x="11.4733%" y="1141" width="0.0586%" height="15" fill="rgb(250,110,10)" fg:x="3917" fg:w="20"/><text x="11.7233%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.06%)</title><rect x="11.4733%" y="1125" width="0.0586%" height="15" fill="rgb(248,123,6)" fg:x="3917" fg:w="20"/><text x="11.7233%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.06%)</title><rect x="11.5319%" y="1141" width="0.0615%" height="15" fill="rgb(206,91,31)" fg:x="3937" fg:w="21"/><text x="11.7819%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.06%)</title><rect x="11.5319%" y="1125" width="0.0615%" height="15" fill="rgb(211,154,13)" fg:x="3937" fg:w="21"/><text x="11.7819%" y="1135.50"></text></g><g><title>tokio::process::imp::GlobalOrphanQueue::reap_orphans (93 samples, 0.27%)</title><rect x="11.3533%" y="1221" width="0.2724%" height="15" fill="rgb(225,148,7)" fg:x="3876" fg:w="93"/><text x="11.6033%" y="1231.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (93 samples, 0.27%)</title><rect x="11.3533%" y="1205" width="0.2724%" height="15" fill="rgb(220,160,43)" fg:x="3876" fg:w="93"/><text x="11.6033%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::try_lock (32 samples, 0.09%)</title><rect x="11.5319%" y="1189" width="0.0937%" height="15" fill="rgb(213,52,39)" fg:x="3937" fg:w="32"/><text x="11.7819%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::try_lock (32 samples, 0.09%)</title><rect x="11.5319%" y="1173" width="0.0937%" height="15" fill="rgb(243,137,7)" fg:x="3937" fg:w="32"/><text x="11.7819%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::try_lock (32 samples, 0.09%)</title><rect x="11.5319%" y="1157" width="0.0937%" height="15" fill="rgb(230,79,13)" fg:x="3937" fg:w="32"/><text x="11.7819%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (11 samples, 0.03%)</title><rect x="11.5934%" y="1141" width="0.0322%" height="15" fill="rgb(247,105,23)" fg:x="3958" fg:w="11"/><text x="11.8434%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.03%)</title><rect x="11.5934%" y="1125" width="0.0322%" height="15" fill="rgb(223,179,41)" fg:x="3958" fg:w="11"/><text x="11.8434%" y="1135.50"></text></g><g><title>tokio::runtime::driver::Handle::time (18 samples, 0.05%)</title><rect x="11.6257%" y="1221" width="0.0527%" height="15" fill="rgb(218,9,34)" fg:x="3969" fg:w="18"/><text x="11.8757%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.05%)</title><rect x="11.6286%" y="1205" width="0.0498%" height="15" fill="rgb(222,106,8)" fg:x="3970" fg:w="17"/><text x="11.8786%" y="1215.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.10%)</title><rect x="11.6989%" y="1205" width="0.0967%" height="15" fill="rgb(211,220,0)" fg:x="3994" fg:w="33"/><text x="11.9489%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (33 samples, 0.10%)</title><rect x="11.6989%" y="1189" width="0.0967%" height="15" fill="rgb(229,52,16)" fg:x="3994" fg:w="33"/><text x="11.9489%" y="1199.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (33 samples, 0.10%)</title><rect x="11.6989%" y="1173" width="0.0967%" height="15" fill="rgb(212,155,18)" fg:x="3994" fg:w="33"/><text x="11.9489%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (5 samples, 0.01%)</title><rect x="11.9801%" y="1173" width="0.0146%" height="15" fill="rgb(242,21,14)" fg:x="4090" fg:w="5"/><text x="12.2301%" y="1183.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (15 samples, 0.04%)</title><rect x="11.9947%" y="1173" width="0.0439%" height="15" fill="rgb(222,19,48)" fg:x="4095" fg:w="15"/><text x="12.2447%" y="1183.50"></text></g><g><title>mio::sys::unix::selector::Selector::select::_{{closure}} (15 samples, 0.04%)</title><rect x="11.9947%" y="1157" width="0.0439%" height="15" fill="rgb(232,45,27)" fg:x="4095" fg:w="15"/><text x="12.2447%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (14 samples, 0.04%)</title><rect x="11.9977%" y="1141" width="0.0410%" height="15" fill="rgb(249,103,42)" fg:x="4096" fg:w="14"/><text x="12.2477%" y="1151.50"></text></g><g><title>[libc.so.6] (88 samples, 0.26%)</title><rect x="12.3345%" y="1157" width="0.2578%" height="15" fill="rgb(246,81,33)" fg:x="4211" fg:w="88"/><text x="12.5845%" y="1167.50"></text></g><g><title>mio::poll::Poll::poll (285 samples, 0.83%)</title><rect x="11.8014%" y="1205" width="0.8348%" height="15" fill="rgb(252,33,42)" fg:x="4029" fg:w="285"/><text x="12.0514%" y="1215.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (276 samples, 0.81%)</title><rect x="11.8278%" y="1189" width="0.8084%" height="15" fill="rgb(209,212,41)" fg:x="4038" fg:w="276"/><text x="12.0778%" y="1199.50"></text></g><g><title>epoll_wait (204 samples, 0.60%)</title><rect x="12.0387%" y="1173" width="0.5975%" height="15" fill="rgb(207,154,6)" fg:x="4110" fg:w="204"/><text x="12.2887%" y="1183.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="12.5923%" y="1157" width="0.0439%" height="15" fill="rgb(223,64,47)" fg:x="4299" fg:w="15"/><text x="12.8423%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (77 samples, 0.23%)</title><rect x="12.6508%" y="1189" width="0.2255%" height="15" fill="rgb(211,161,38)" fg:x="4319" fg:w="77"/><text x="12.9008%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (77 samples, 0.23%)</title><rect x="12.6508%" y="1173" width="0.2255%" height="15" fill="rgb(219,138,40)" fg:x="4319" fg:w="77"/><text x="12.9008%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (40 samples, 0.12%)</title><rect x="12.8764%" y="1189" width="0.1172%" height="15" fill="rgb(241,228,46)" fg:x="4396" fg:w="40"/><text x="13.1264%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (40 samples, 0.12%)</title><rect x="12.8764%" y="1173" width="0.1172%" height="15" fill="rgb(223,209,38)" fg:x="4396" fg:w="40"/><text x="13.1264%" y="1183.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (123 samples, 0.36%)</title><rect x="12.6450%" y="1205" width="0.3603%" height="15" fill="rgb(236,164,45)" fg:x="4317" fg:w="123"/><text x="12.8950%" y="1215.50"></text></g><g><title>tokio::util::bit::Pack::pack (4 samples, 0.01%)</title><rect x="12.9936%" y="1189" width="0.0117%" height="15" fill="rgb(231,15,5)" fg:x="4436" fg:w="4"/><text x="13.2436%" y="1199.50"></text></g><g><title>core::mem::drop (69 samples, 0.20%)</title><rect x="13.0141%" y="1189" width="0.2021%" height="15" fill="rgb(252,35,15)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (69 samples, 0.20%)</title><rect x="13.0141%" y="1173" width="0.2021%" height="15" fill="rgb(248,181,18)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (69 samples, 0.20%)</title><rect x="13.0141%" y="1157" width="0.2021%" height="15" fill="rgb(233,39,42)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.20%)</title><rect x="13.0141%" y="1141" width="0.2021%" height="15" fill="rgb(238,110,33)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (69 samples, 0.20%)</title><rect x="13.0141%" y="1125" width="0.2021%" height="15" fill="rgb(233,195,10)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (69 samples, 0.20%)</title><rect x="13.0141%" y="1109" width="0.2021%" height="15" fill="rgb(254,105,3)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.20%)</title><rect x="13.0141%" y="1093" width="0.2021%" height="15" fill="rgb(221,225,9)" fg:x="4443" fg:w="69"/><text x="13.2641%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.06%)</title><rect x="13.2308%" y="1189" width="0.0644%" height="15" fill="rgb(224,227,45)" fg:x="4517" fg:w="22"/><text x="13.4808%" y="1199.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.06%)</title><rect x="13.2308%" y="1173" width="0.0644%" height="15" fill="rgb(229,198,43)" fg:x="4517" fg:w="22"/><text x="13.4808%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.06%)</title><rect x="13.2308%" y="1157" width="0.0644%" height="15" fill="rgb(206,209,35)" fg:x="4517" fg:w="22"/><text x="13.4808%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.06%)</title><rect x="13.2337%" y="1141" width="0.0615%" height="15" fill="rgb(245,195,53)" fg:x="4518" fg:w="21"/><text x="13.4837%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.06%)</title><rect x="13.2337%" y="1125" width="0.0615%" height="15" fill="rgb(240,92,26)" fg:x="4518" fg:w="21"/><text x="13.4837%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (4 samples, 0.01%)</title><rect x="13.3040%" y="1125" width="0.0117%" height="15" fill="rgb(207,40,23)" fg:x="4542" fg:w="4"/><text x="13.5540%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (4 samples, 0.01%)</title><rect x="13.3040%" y="1109" width="0.0117%" height="15" fill="rgb(223,111,35)" fg:x="4542" fg:w="4"/><text x="13.5540%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="13.3158%" y="1061" width="0.0117%" height="15" fill="rgb(229,147,28)" fg:x="4546" fg:w="4"/><text x="13.5658%" y="1071.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (4 samples, 0.01%)</title><rect x="13.3158%" y="1045" width="0.0117%" height="15" fill="rgb(211,29,28)" fg:x="4546" fg:w="4"/><text x="13.5658%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (11 samples, 0.03%)</title><rect x="13.3158%" y="1109" width="0.0322%" height="15" fill="rgb(228,72,33)" fg:x="4546" fg:w="11"/><text x="13.5658%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (11 samples, 0.03%)</title><rect x="13.3158%" y="1093" width="0.0322%" height="15" fill="rgb(205,214,31)" fg:x="4546" fg:w="11"/><text x="13.5658%" y="1103.50"></text></g><g><title>tokio::runtime::context::with_scheduler (11 samples, 0.03%)</title><rect x="13.3158%" y="1077" width="0.0322%" height="15" fill="rgb(224,111,15)" fg:x="4546" fg:w="11"/><text x="13.5658%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (7 samples, 0.02%)</title><rect x="13.3275%" y="1061" width="0.0205%" height="15" fill="rgb(253,21,26)" fg:x="4550" fg:w="7"/><text x="13.5775%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (17 samples, 0.05%)</title><rect x="13.3158%" y="1125" width="0.0498%" height="15" fill="rgb(245,139,43)" fg:x="4546" fg:w="17"/><text x="13.5658%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::schedule (6 samples, 0.02%)</title><rect x="13.3480%" y="1109" width="0.0176%" height="15" fill="rgb(252,170,7)" fg:x="4557" fg:w="6"/><text x="13.5980%" y="1119.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (589 samples, 1.73%)</title><rect x="11.6813%" y="1221" width="1.7252%" height="15" fill="rgb(231,118,14)" fg:x="3988" fg:w="589"/><text x="11.9313%" y="1231.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (137 samples, 0.40%)</title><rect x="13.0053%" y="1205" width="0.4013%" height="15" fill="rgb(238,83,0)" fg:x="4440" fg:w="137"/><text x="13.2553%" y="1215.50"></text></g><g><title>tokio::util::wake_list::WakeList::wake_all (37 samples, 0.11%)</title><rect x="13.2982%" y="1189" width="0.1084%" height="15" fill="rgb(221,39,39)" fg:x="4540" fg:w="37"/><text x="13.5482%" y="1199.50"></text></g><g><title>core::task::wake::Waker::wake (36 samples, 0.11%)</title><rect x="13.3011%" y="1173" width="0.1054%" height="15" fill="rgb(222,119,46)" fg:x="4541" fg:w="36"/><text x="13.5511%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (35 samples, 0.10%)</title><rect x="13.3040%" y="1157" width="0.1025%" height="15" fill="rgb(222,165,49)" fg:x="4542" fg:w="35"/><text x="13.5540%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (35 samples, 0.10%)</title><rect x="13.3040%" y="1141" width="0.1025%" height="15" fill="rgb(219,113,52)" fg:x="4542" fg:w="35"/><text x="13.5540%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (14 samples, 0.04%)</title><rect x="13.3656%" y="1125" width="0.0410%" height="15" fill="rgb(214,7,15)" fg:x="4563" fg:w="14"/><text x="13.6156%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (14 samples, 0.04%)</title><rect x="13.3656%" y="1109" width="0.0410%" height="15" fill="rgb(235,32,4)" fg:x="4563" fg:w="14"/><text x="13.6156%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::load (12 samples, 0.04%)</title><rect x="13.3714%" y="1093" width="0.0351%" height="15" fill="rgb(238,90,54)" fg:x="4565" fg:w="12"/><text x="13.6214%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.04%)</title><rect x="13.3714%" y="1077" width="0.0351%" height="15" fill="rgb(213,208,19)" fg:x="4565" fg:w="12"/><text x="13.6214%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.04%)</title><rect x="13.3714%" y="1061" width="0.0351%" height="15" fill="rgb(233,156,4)" fg:x="4565" fg:w="12"/><text x="13.6214%" y="1071.50"></text></g><g><title>tokio::runtime::signal::Driver::process (4 samples, 0.01%)</title><rect x="13.4066%" y="1221" width="0.0117%" height="15" fill="rgb(207,194,5)" fg:x="4577" fg:w="4"/><text x="13.6566%" y="1231.50"></text></g><g><title>core::ops::function::FnOnce::call_once (4 samples, 0.01%)</title><rect x="13.4183%" y="1157" width="0.0117%" height="15" fill="rgb(206,111,30)" fg:x="4581" fg:w="4"/><text x="13.6683%" y="1167.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (4 samples, 0.01%)</title><rect x="13.4183%" y="1141" width="0.0117%" height="15" fill="rgb(243,70,54)" fg:x="4581" fg:w="4"/><text x="13.6683%" y="1151.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="13.4183%" y="1125" width="0.0117%" height="15" fill="rgb(242,28,8)" fg:x="4581" fg:w="4"/><text x="13.6683%" y="1135.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (12 samples, 0.04%)</title><rect x="13.4183%" y="1205" width="0.0351%" height="15" fill="rgb(219,106,18)" fg:x="4581" fg:w="12"/><text x="13.6683%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.04%)</title><rect x="13.4183%" y="1189" width="0.0351%" height="15" fill="rgb(244,222,10)" fg:x="4581" fg:w="12"/><text x="13.6683%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.04%)</title><rect x="13.4183%" y="1173" width="0.0351%" height="15" fill="rgb(236,179,52)" fg:x="4581" fg:w="12"/><text x="13.6683%" y="1183.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (8 samples, 0.02%)</title><rect x="13.4300%" y="1157" width="0.0234%" height="15" fill="rgb(213,23,39)" fg:x="4585" fg:w="8"/><text x="13.6800%" y="1167.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (6 samples, 0.02%)</title><rect x="13.4359%" y="1141" width="0.0176%" height="15" fill="rgb(238,48,10)" fg:x="4587" fg:w="6"/><text x="13.6859%" y="1151.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (4 samples, 0.01%)</title><rect x="13.4417%" y="1125" width="0.0117%" height="15" fill="rgb(251,196,23)" fg:x="4589" fg:w="4"/><text x="13.6917%" y="1135.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.03%)</title><rect x="13.5003%" y="1093" width="0.0293%" height="15" fill="rgb(250,152,24)" fg:x="4609" fg:w="10"/><text x="13.7503%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.03%)</title><rect x="13.5003%" y="1077" width="0.0293%" height="15" fill="rgb(209,150,17)" fg:x="4609" fg:w="10"/><text x="13.7503%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;tokio::runtime::time::ShardedWheel&gt;&gt; (229 samples, 0.67%)</title><rect x="13.8371%" y="1013" width="0.6708%" height="15" fill="rgb(234,202,34)" fg:x="4724" fg:w="229"/><text x="14.0871%" y="1023.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (229 samples, 0.67%)</title><rect x="13.8371%" y="997" width="0.6708%" height="15" fill="rgb(253,148,53)" fg:x="4724" fg:w="229"/><text x="14.0871%" y="1007.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read_unlock (229 samples, 0.67%)</title><rect x="13.8371%" y="981" width="0.6708%" height="15" fill="rgb(218,129,16)" fg:x="4724" fg:w="229"/><text x="14.0871%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_sub (211 samples, 0.62%)</title><rect x="13.8899%" y="965" width="0.6180%" height="15" fill="rgb(216,85,19)" fg:x="4742" fg:w="211"/><text x="14.1399%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (211 samples, 0.62%)</title><rect x="13.8899%" y="949" width="0.6180%" height="15" fill="rgb(235,228,7)" fg:x="4742" fg:w="211"/><text x="14.1399%" y="959.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (4 samples, 0.01%)</title><rect x="14.5079%" y="949" width="0.0117%" height="15" fill="rgb(245,175,0)" fg:x="4953" fg:w="4"/><text x="14.7579%" y="959.50"></text></g><g><title>core::mem::drop (481 samples, 1.41%)</title><rect x="13.8371%" y="1029" width="1.4089%" height="15" fill="rgb(208,168,36)" fg:x="4724" fg:w="481"/><text x="14.0871%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::time::wheel::Wheel&gt;&gt; (252 samples, 0.74%)</title><rect x="14.5079%" y="1013" width="0.7381%" height="15" fill="rgb(246,171,24)" fg:x="4953" fg:w="252"/><text x="14.7579%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::time::wheel::Wheel&gt;&gt; (252 samples, 0.74%)</title><rect x="14.5079%" y="997" width="0.7381%" height="15" fill="rgb(215,142,24)" fg:x="4953" fg:w="252"/><text x="14.7579%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (252 samples, 0.74%)</title><rect x="14.5079%" y="981" width="0.7381%" height="15" fill="rgb(250,187,7)" fg:x="4953" fg:w="252"/><text x="14.7579%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (252 samples, 0.74%)</title><rect x="14.5079%" y="965" width="0.7381%" height="15" fill="rgb(228,66,33)" fg:x="4953" fg:w="252"/><text x="14.7579%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (248 samples, 0.73%)</title><rect x="14.5196%" y="949" width="0.7264%" height="15" fill="rgb(234,215,21)" fg:x="4957" fg:w="248"/><text x="14.7696%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (248 samples, 0.73%)</title><rect x="14.5196%" y="933" width="0.7264%" height="15" fill="rgb(222,191,20)" fg:x="4957" fg:w="248"/><text x="14.7696%" y="943.50"></text></g><g><title>std::sync::poison::Flag::borrow (10 samples, 0.03%)</title><rect x="15.2548%" y="997" width="0.0293%" height="15" fill="rgb(245,79,54)" fg:x="5208" fg:w="10"/><text x="15.5048%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::get (6 samples, 0.02%)</title><rect x="15.2665%" y="981" width="0.0176%" height="15" fill="rgb(240,10,37)" fg:x="5212" fg:w="6"/><text x="15.5165%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (6 samples, 0.02%)</title><rect x="15.2665%" y="965" width="0.0176%" height="15" fill="rgb(214,192,32)" fg:x="5212" fg:w="6"/><text x="15.5165%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="15.2665%" y="949" width="0.0176%" height="15" fill="rgb(209,36,54)" fg:x="5212" fg:w="6"/><text x="15.5165%" y="959.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (18 samples, 0.05%)</title><rect x="15.2548%" y="1013" width="0.0527%" height="15" fill="rgb(220,10,11)" fg:x="5208" fg:w="18"/><text x="15.5048%" y="1023.50"></text></g><g><title>std::sync::poison::map_result (8 samples, 0.02%)</title><rect x="15.2841%" y="997" width="0.0234%" height="15" fill="rgb(221,106,17)" fg:x="5218" fg:w="8"/><text x="15.5341%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange_weak (288 samples, 0.84%)</title><rect x="15.3251%" y="997" width="0.8436%" height="15" fill="rgb(251,142,44)" fg:x="5232" fg:w="288"/><text x="15.5751%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (288 samples, 0.84%)</title><rect x="15.3251%" y="981" width="0.8436%" height="15" fill="rgb(238,13,15)" fg:x="5232" fg:w="288"/><text x="15.5751%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (325 samples, 0.95%)</title><rect x="15.2548%" y="1029" width="0.9520%" height="15" fill="rgb(208,107,27)" fg:x="5208" fg:w="325"/><text x="15.5048%" y="1039.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (307 samples, 0.90%)</title><rect x="15.3076%" y="1013" width="0.8992%" height="15" fill="rgb(205,136,37)" fg:x="5226" fg:w="307"/><text x="15.5576%" y="1023.50"></text></g><g><title>std::sys::sync::rwlock::futex::is_read_lockable (10 samples, 0.03%)</title><rect x="16.1775%" y="997" width="0.0293%" height="15" fill="rgb(250,205,27)" fg:x="5523" fg:w="10"/><text x="16.4275%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (9 samples, 0.03%)</title><rect x="16.2947%" y="1013" width="0.0264%" height="15" fill="rgb(210,80,43)" fg:x="5563" fg:w="9"/><text x="16.5447%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (9 samples, 0.03%)</title><rect x="16.2947%" y="997" width="0.0264%" height="15" fill="rgb(247,160,36)" fg:x="5563" fg:w="9"/><text x="16.5447%" y="1007.50"></text></g><g><title>core::slice::index::get_noubcheck (9 samples, 0.03%)</title><rect x="16.2947%" y="981" width="0.0264%" height="15" fill="rgb(234,13,49)" fg:x="5563" fg:w="9"/><text x="16.5447%" y="991.50"></text></g><g><title>tokio::runtime::time::ShardedWheel::lock_sharded_wheel (279 samples, 0.82%)</title><rect x="16.2068%" y="1029" width="0.8172%" height="15" fill="rgb(234,122,0)" fg:x="5533" fg:w="279"/><text x="16.4568%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (240 samples, 0.70%)</title><rect x="16.3210%" y="1013" width="0.7030%" height="15" fill="rgb(207,146,38)" fg:x="5572" fg:w="240"/><text x="16.5710%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (240 samples, 0.70%)</title><rect x="16.3210%" y="997" width="0.7030%" height="15" fill="rgb(207,177,25)" fg:x="5572" fg:w="240"/><text x="16.5710%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (240 samples, 0.70%)</title><rect x="16.3210%" y="981" width="0.7030%" height="15" fill="rgb(211,178,42)" fg:x="5572" fg:w="240"/><text x="16.5710%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (239 samples, 0.70%)</title><rect x="16.3240%" y="965" width="0.7001%" height="15" fill="rgb(230,69,54)" fg:x="5573" fg:w="239"/><text x="16.5740%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (239 samples, 0.70%)</title><rect x="16.3240%" y="949" width="0.7001%" height="15" fill="rgb(214,135,41)" fg:x="5573" fg:w="239"/><text x="16.5740%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.11%)</title><rect x="17.3872%" y="997" width="0.1054%" height="15" fill="rgb(237,67,25)" fg:x="5936" fg:w="36"/><text x="17.6372%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.11%)</title><rect x="17.3872%" y="981" width="0.1054%" height="15" fill="rgb(222,189,50)" fg:x="5936" fg:w="36"/><text x="17.6372%" y="991.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (21 samples, 0.06%)</title><rect x="17.4312%" y="965" width="0.0615%" height="15" fill="rgb(245,148,34)" fg:x="5951" fg:w="21"/><text x="17.6812%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (60 samples, 0.18%)</title><rect x="17.4927%" y="997" width="0.1757%" height="15" fill="rgb(222,29,6)" fg:x="5972" fg:w="60"/><text x="17.7427%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (60 samples, 0.18%)</title><rect x="17.4927%" y="981" width="0.1757%" height="15" fill="rgb(221,189,43)" fg:x="5972" fg:w="60"/><text x="17.7427%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (225 samples, 0.66%)</title><rect x="17.0299%" y="1013" width="0.6591%" height="15" fill="rgb(207,36,27)" fg:x="5814" fg:w="225"/><text x="17.2799%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (7 samples, 0.02%)</title><rect x="17.6684%" y="997" width="0.0205%" height="15" fill="rgb(217,90,24)" fg:x="6032" fg:w="7"/><text x="17.9184%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (7 samples, 0.02%)</title><rect x="17.6684%" y="981" width="0.0205%" height="15" fill="rgb(224,66,35)" fg:x="6032" fg:w="7"/><text x="17.9184%" y="991.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::set_elapsed (9 samples, 0.03%)</title><rect x="17.6889%" y="1013" width="0.0264%" height="15" fill="rgb(221,13,50)" fg:x="6039" fg:w="9"/><text x="17.9389%" y="1023.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (242 samples, 0.71%)</title><rect x="17.0299%" y="1029" width="0.7088%" height="15" fill="rgb(236,68,49)" fg:x="5814" fg:w="242"/><text x="17.2799%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (8 samples, 0.02%)</title><rect x="17.7153%" y="1013" width="0.0234%" height="15" fill="rgb(229,146,28)" fg:x="6048" fg:w="8"/><text x="17.9653%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.01%)</title><rect x="17.7241%" y="997" width="0.0146%" height="15" fill="rgb(225,31,38)" fg:x="6051" fg:w="5"/><text x="17.9741%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="17.7387%" y="1013" width="0.0322%" height="15" fill="rgb(250,208,3)" fg:x="6056" fg:w="11"/><text x="17.9887%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.11%)</title><rect x="17.9731%" y="997" width="0.1113%" height="15" fill="rgb(246,54,23)" fg:x="6136" fg:w="38"/><text x="18.2231%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.11%)</title><rect x="17.9731%" y="981" width="0.1113%" height="15" fill="rgb(243,76,11)" fg:x="6136" fg:w="38"/><text x="18.2231%" y="991.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.04%)</title><rect x="18.0463%" y="965" width="0.0381%" height="15" fill="rgb(245,21,50)" fg:x="6161" fg:w="13"/><text x="18.2963%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_expiration (58 samples, 0.17%)</title><rect x="18.0844%" y="997" width="0.1699%" height="15" fill="rgb(228,9,43)" fg:x="6174" fg:w="58"/><text x="18.3344%" y="1007.50"></text></g><g><title>tokio::runtime::time::wheel::level::Level::next_occupied_slot (58 samples, 0.17%)</title><rect x="18.0844%" y="981" width="0.1699%" height="15" fill="rgb(208,100,47)" fg:x="6174" fg:w="58"/><text x="18.3344%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (5 samples, 0.01%)</title><rect x="18.2542%" y="981" width="0.0146%" height="15" fill="rgb(232,26,8)" fg:x="6232" fg:w="5"/><text x="18.5042%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.01%)</title><rect x="18.2542%" y="965" width="0.0146%" height="15" fill="rgb(216,166,38)" fg:x="6232" fg:w="5"/><text x="18.5042%" y="975.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::poll_at (191 samples, 0.56%)</title><rect x="17.7387%" y="1029" width="0.5595%" height="15" fill="rgb(251,202,51)" fg:x="6056" fg:w="191"/><text x="17.9887%" y="1039.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (180 samples, 0.53%)</title><rect x="17.7709%" y="1013" width="0.5272%" height="15" fill="rgb(254,216,34)" fg:x="6067" fg:w="180"/><text x="18.0209%" y="1023.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (15 samples, 0.04%)</title><rect x="18.2542%" y="997" width="0.0439%" height="15" fill="rgb(251,32,27)" fg:x="6232" fg:w="15"/><text x="18.5042%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (10 samples, 0.03%)</title><rect x="18.2689%" y="981" width="0.0293%" height="15" fill="rgb(208,127,28)" fg:x="6237" fg:w="10"/><text x="18.5189%" y="991.50"></text></g><g><title>tokio::util::wake_list::WakeList::new (5 samples, 0.01%)</title><rect x="18.2982%" y="1029" width="0.0146%" height="15" fill="rgb(224,137,22)" fg:x="6247" fg:w="5"/><text x="18.5482%" y="1039.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (1,675 samples, 4.91%)</title><rect x="13.4534%" y="1205" width="4.9063%" height="15" fill="rgb(254,70,32)" fg:x="4593" fg:w="1675"/><text x="13.7034%" y="1215.50">tokio:..</text></g><g><title>core::iter::traits::iterator::Iterator::min (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1189" width="4.9004%" height="15" fill="rgb(229,75,37)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1199.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::min_by (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1173" width="4.9004%" height="15" fill="rgb(252,64,23)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1183.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1157" width="4.9004%" height="15" fill="rgb(232,162,48)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1167.50">core::..</text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1141" width="4.9004%" height="15" fill="rgb(246,160,12)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1151.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1125" width="4.9004%" height="15" fill="rgb(247,166,0)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1135.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,673 samples, 4.90%)</title><rect x="13.4593%" y="1109" width="4.9004%" height="15" fill="rgb(249,219,21)" fg:x="4595" fg:w="1673"/><text x="13.7093%" y="1119.50">core::..</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (1,649 samples, 4.83%)</title><rect x="13.5296%" y="1093" width="4.8301%" height="15" fill="rgb(205,209,3)" fg:x="4619" fg:w="1649"/><text x="13.7796%" y="1103.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1,649 samples, 4.83%)</title><rect x="13.5296%" y="1077" width="4.8301%" height="15" fill="rgb(243,44,1)" fg:x="4619" fg:w="1649"/><text x="13.7796%" y="1087.50">core::..</text></g><g><title>tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time::_{{closure}} (1,643 samples, 4.81%)</title><rect x="13.5472%" y="1061" width="4.8125%" height="15" fill="rgb(206,159,16)" fg:x="4625" fg:w="1643"/><text x="13.7972%" y="1071.50">tokio:..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,617 samples, 4.74%)</title><rect x="13.6233%" y="1045" width="4.7364%" height="15" fill="rgb(244,77,30)" fg:x="4651" fg:w="1617"/><text x="13.8733%" y="1055.50">tokio:..</text></g><g><title>tokio::util::wake_list::WakeList::wake_all (16 samples, 0.05%)</title><rect x="18.3128%" y="1029" width="0.0469%" height="15" fill="rgb(218,69,12)" fg:x="6252" fg:w="16"/><text x="18.5628%" y="1039.50"></text></g><g><title>core::ptr::eq (4 samples, 0.01%)</title><rect x="18.3480%" y="1013" width="0.0117%" height="15" fill="rgb(212,87,7)" fg:x="6264" fg:w="4"/><text x="18.5980%" y="1023.50"></text></g><g><title>tokio::runtime::time::Inner::get_shard_size (9 samples, 0.03%)</title><rect x="18.3597%" y="1205" width="0.0264%" height="15" fill="rgb(245,114,25)" fg:x="6268" fg:w="9"/><text x="18.6097%" y="1215.50"></text></g><g><title>core::time::Duration::as_millis (5 samples, 0.01%)</title><rect x="18.3948%" y="1173" width="0.0146%" height="15" fill="rgb(210,61,42)" fg:x="6280" fg:w="5"/><text x="18.6448%" y="1183.50"></text></g><g><title>tokio::runtime::time::source::TimeSource::instant_to_tick (18 samples, 0.05%)</title><rect x="18.3861%" y="1189" width="0.0527%" height="15" fill="rgb(211,52,33)" fg:x="6277" fg:w="18"/><text x="18.6361%" y="1199.50"></text></g><g><title>tokio::time::instant::Instant::saturating_duration_since (10 samples, 0.03%)</title><rect x="18.4095%" y="1173" width="0.0293%" height="15" fill="rgb(234,58,33)" fg:x="6285" fg:w="10"/><text x="18.6595%" y="1183.50"></text></g><g><title>std::time::Instant::duration_since (10 samples, 0.03%)</title><rect x="18.4095%" y="1157" width="0.0293%" height="15" fill="rgb(220,115,36)" fg:x="6285" fg:w="10"/><text x="18.6595%" y="1167.50"></text></g><g><title>std::time::Instant::checked_duration_since (10 samples, 0.03%)</title><rect x="18.4095%" y="1141" width="0.0293%" height="15" fill="rgb(243,153,54)" fg:x="6285" fg:w="10"/><text x="18.6595%" y="1151.50"></text></g><g><title>std::sys::pal::unix::time::Instant::checked_sub_instant (10 samples, 0.03%)</title><rect x="18.4095%" y="1125" width="0.0293%" height="15" fill="rgb(251,47,18)" fg:x="6285" fg:w="10"/><text x="18.6595%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (9 samples, 0.03%)</title><rect x="18.4124%" y="1109" width="0.0264%" height="15" fill="rgb(242,102,42)" fg:x="6286" fg:w="9"/><text x="18.6624%" y="1119.50"></text></g><g><title>clock_gettime (139 samples, 0.41%)</title><rect x="18.4534%" y="1141" width="0.4071%" height="15" fill="rgb(234,31,38)" fg:x="6300" fg:w="139"/><text x="18.7034%" y="1151.50"></text></g><g><title>__vdso_clock_gettime (81 samples, 0.24%)</title><rect x="18.6233%" y="1125" width="0.2373%" height="15" fill="rgb(221,117,51)" fg:x="6358" fg:w="81"/><text x="18.8733%" y="1135.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (146 samples, 0.43%)</title><rect x="18.4388%" y="1157" width="0.4277%" height="15" fill="rgb(212,20,18)" fg:x="6295" fg:w="146"/><text x="18.6888%" y="1167.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1,861 samples, 5.45%)</title><rect x="13.4183%" y="1221" width="5.4511%" height="15" fill="rgb(245,133,36)" fg:x="4581" fg:w="1861"/><text x="13.6683%" y="1231.50">tokio::..</text></g><g><title>tokio::runtime::time::source::TimeSource::now (165 samples, 0.48%)</title><rect x="18.3861%" y="1205" width="0.4833%" height="15" fill="rgb(212,6,19)" fg:x="6277" fg:w="165"/><text x="18.6361%" y="1215.50"></text></g><g><title>tokio::time::clock::Clock::now (147 samples, 0.43%)</title><rect x="18.4388%" y="1189" width="0.4306%" height="15" fill="rgb(218,1,36)" fg:x="6295" fg:w="147"/><text x="18.6888%" y="1199.50"></text></g><g><title>tokio::time::clock::now (147 samples, 0.43%)</title><rect x="18.4388%" y="1173" width="0.4306%" height="15" fill="rgb(246,84,54)" fg:x="6295" fg:w="147"/><text x="18.6888%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park_driver (3,083 samples, 9.03%)</title><rect x="9.8477%" y="1253" width="9.0305%" height="15" fill="rgb(242,110,6)" fg:x="3362" fg:w="3083"/><text x="10.0977%" y="1263.50">tokio::runtim..</text></g><g><title>tokio::runtime::time::Driver::park_internal (2,991 samples, 8.76%)</title><rect x="10.1172%" y="1237" width="8.7610%" height="15" fill="rgb(214,47,5)" fg:x="3454" fg:w="2991"/><text x="10.3672%" y="1247.50">tokio::runti..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3,404 samples, 9.97%)</title><rect x="9.0246%" y="1285" width="9.9707%" height="15" fill="rgb(218,159,25)" fg:x="3081" fg:w="3404"/><text x="9.2746%" y="1295.50">tokio::runtime..</text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::park (3,404 samples, 9.97%)</title><rect x="9.0246%" y="1269" width="9.9707%" height="15" fill="rgb(215,211,28)" fg:x="3081" fg:w="3404"/><text x="9.2746%" y="1279.50">tokio::runtime..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (40 samples, 0.12%)</title><rect x="18.8781%" y="1253" width="0.1172%" height="15" fill="rgb(238,59,32)" fg:x="6445" fg:w="40"/><text x="19.1281%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (40 samples, 0.12%)</title><rect x="18.8781%" y="1237" width="0.1172%" height="15" fill="rgb(226,82,3)" fg:x="6445" fg:w="40"/><text x="19.1281%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.12%)</title><rect x="18.8781%" y="1221" width="0.1172%" height="15" fill="rgb(240,164,32)" fg:x="6445" fg:w="40"/><text x="19.1281%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (3,472 samples, 10.17%)</title><rect x="8.8489%" y="1301" width="10.1699%" height="15" fill="rgb(232,46,7)" fg:x="3021" fg:w="3472"/><text x="9.0989%" y="1311.50">tokio::runtime:..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::should_notify_others (8 samples, 0.02%)</title><rect x="18.9953%" y="1285" width="0.0234%" height="15" fill="rgb(229,129,53)" fg:x="6485" fg:w="8"/><text x="19.2453%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (32 samples, 0.09%)</title><rect x="19.1301%" y="1285" width="0.0937%" height="15" fill="rgb(234,188,29)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (32 samples, 0.09%)</title><rect x="19.1301%" y="1269" width="0.0937%" height="15" fill="rgb(246,141,4)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1279.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.09%)</title><rect x="19.1301%" y="1253" width="0.0937%" height="15" fill="rgb(229,23,39)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (32 samples, 0.09%)</title><rect x="19.1301%" y="1237" width="0.0937%" height="15" fill="rgb(206,12,3)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (32 samples, 0.09%)</title><rect x="19.1301%" y="1221" width="0.0937%" height="15" fill="rgb(252,226,20)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.09%)</title><rect x="19.1301%" y="1205" width="0.0937%" height="15" fill="rgb(216,123,35)" fg:x="6531" fg:w="32"/><text x="19.3801%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (19 samples, 0.06%)</title><rect x="19.2238%" y="1237" width="0.0557%" height="15" fill="rgb(212,68,40)" fg:x="6563" fg:w="19"/><text x="19.4738%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.06%)</title><rect x="19.2238%" y="1221" width="0.0557%" height="15" fill="rgb(254,125,32)" fg:x="6563" fg:w="19"/><text x="19.4738%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.06%)</title><rect x="19.2238%" y="1285" width="0.0586%" height="15" fill="rgb(253,97,22)" fg:x="6563" fg:w="20"/><text x="19.4738%" y="1295.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.06%)</title><rect x="19.2238%" y="1269" width="0.0586%" height="15" fill="rgb(241,101,14)" fg:x="6563" fg:w="20"/><text x="19.4738%" y="1279.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.06%)</title><rect x="19.2238%" y="1253" width="0.0586%" height="15" fill="rgb(238,103,29)" fg:x="6563" fg:w="20"/><text x="19.4738%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::maintenance (94 samples, 0.28%)</title><rect x="19.0187%" y="1301" width="0.2753%" height="15" fill="rgb(233,195,47)" fg:x="6493" fg:w="94"/><text x="19.2687%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::inject::shared::Shared&lt;T&gt;::is_closed (4 samples, 0.01%)</title><rect x="19.2824%" y="1285" width="0.0117%" height="15" fill="rgb(246,218,30)" fg:x="6583" fg:w="4"/><text x="19.5324%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (16 samples, 0.05%)</title><rect x="19.3146%" y="1269" width="0.0469%" height="15" fill="rgb(219,145,47)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (16 samples, 0.05%)</title><rect x="19.3146%" y="1253" width="0.0469%" height="15" fill="rgb(243,12,26)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="19.3146%" y="1237" width="0.0469%" height="15" fill="rgb(214,87,16)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (16 samples, 0.05%)</title><rect x="19.3146%" y="1221" width="0.0469%" height="15" fill="rgb(208,99,42)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (16 samples, 0.05%)</title><rect x="19.3146%" y="1205" width="0.0469%" height="15" fill="rgb(253,99,2)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.05%)</title><rect x="19.3146%" y="1189" width="0.0469%" height="15" fill="rgb(220,168,23)" fg:x="6594" fg:w="16"/><text x="19.5646%" y="1199.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::_{{closure}} (8 samples, 0.02%)</title><rect x="19.3995%" y="1221" width="0.0234%" height="15" fill="rgb(242,38,24)" fg:x="6623" fg:w="8"/><text x="19.6495%" y="1231.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (8 samples, 0.02%)</title><rect x="19.3995%" y="1205" width="0.0234%" height="15" fill="rgb(225,182,9)" fg:x="6623" fg:w="8"/><text x="19.6495%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (32 samples, 0.09%)</title><rect x="19.3615%" y="1269" width="0.0937%" height="15" fill="rgb(243,178,37)" fg:x="6610" fg:w="32"/><text x="19.6115%" y="1279.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (32 samples, 0.09%)</title><rect x="19.3615%" y="1253" width="0.0937%" height="15" fill="rgb(232,139,19)" fg:x="6610" fg:w="32"/><text x="19.6115%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (32 samples, 0.09%)</title><rect x="19.3615%" y="1237" width="0.0937%" height="15" fill="rgb(225,201,24)" fg:x="6610" fg:w="32"/><text x="19.6115%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="19.4230%" y="1221" width="0.0322%" height="15" fill="rgb(221,47,46)" fg:x="6631" fg:w="11"/><text x="19.6730%" y="1231.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="19.4347%" y="1205" width="0.0205%" height="15" fill="rgb(249,23,13)" fg:x="6635" fg:w="7"/><text x="19.6847%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::is_parked (57 samples, 0.17%)</title><rect x="19.3117%" y="1285" width="0.1670%" height="15" fill="rgb(219,9,5)" fg:x="6593" fg:w="57"/><text x="19.5617%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="19.4552%" y="1269" width="0.0234%" height="15" fill="rgb(254,171,16)" fg:x="6642" fg:w="8"/><text x="19.7052%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.02%)</title><rect x="19.4552%" y="1253" width="0.0234%" height="15" fill="rgb(230,171,20)" fg:x="6642" fg:w="8"/><text x="19.7052%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.02%)</title><rect x="19.4552%" y="1237" width="0.0234%" height="15" fill="rgb(210,71,41)" fg:x="6642" fg:w="8"/><text x="19.7052%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (8 samples, 0.02%)</title><rect x="19.4552%" y="1221" width="0.0234%" height="15" fill="rgb(206,173,20)" fg:x="6642" fg:w="8"/><text x="19.7052%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.02%)</title><rect x="19.4552%" y="1205" width="0.0234%" height="15" fill="rgb(233,88,34)" fg:x="6642" fg:w="8"/><text x="19.7052%" y="1215.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_parked (74 samples, 0.22%)</title><rect x="19.2941%" y="1301" width="0.2168%" height="15" fill="rgb(223,209,46)" fg:x="6587" fg:w="74"/><text x="19.5441%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::unpark_worker_by_id (11 samples, 0.03%)</title><rect x="19.4786%" y="1285" width="0.0322%" height="15" fill="rgb(250,43,18)" fg:x="6650" fg:w="11"/><text x="19.7286%" y="1295.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="19.4991%" y="1269" width="0.0117%" height="15" fill="rgb(208,13,10)" fg:x="6657" fg:w="4"/><text x="19.7491%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.01%)</title><rect x="19.4991%" y="1253" width="0.0117%" height="15" fill="rgb(212,200,36)" fg:x="6657" fg:w="4"/><text x="19.7491%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.01%)</title><rect x="19.4991%" y="1237" width="0.0117%" height="15" fill="rgb(225,90,30)" fg:x="6657" fg:w="4"/><text x="19.7491%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (4 samples, 0.01%)</title><rect x="19.4991%" y="1221" width="0.0117%" height="15" fill="rgb(236,182,39)" fg:x="6657" fg:w="4"/><text x="19.7491%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.01%)</title><rect x="19.4991%" y="1205" width="0.0117%" height="15" fill="rgb(212,144,35)" fg:x="6657" fg:w="4"/><text x="19.7491%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (21 samples, 0.06%)</title><rect x="19.5196%" y="1269" width="0.0615%" height="15" fill="rgb(228,63,44)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (21 samples, 0.06%)</title><rect x="19.5196%" y="1253" width="0.0615%" height="15" fill="rgb(228,109,6)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1263.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.06%)</title><rect x="19.5196%" y="1237" width="0.0615%" height="15" fill="rgb(238,117,24)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (21 samples, 0.06%)</title><rect x="19.5196%" y="1221" width="0.0615%" height="15" fill="rgb(242,26,26)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (21 samples, 0.06%)</title><rect x="19.5196%" y="1205" width="0.0615%" height="15" fill="rgb(221,92,48)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (21 samples, 0.06%)</title><rect x="19.5196%" y="1189" width="0.0615%" height="15" fill="rgb(209,209,32)" fg:x="6664" fg:w="21"/><text x="19.7696%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.04%)</title><rect x="19.5811%" y="1221" width="0.0351%" height="15" fill="rgb(221,70,22)" fg:x="6685" fg:w="12"/><text x="19.8311%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.04%)</title><rect x="19.5811%" y="1205" width="0.0351%" height="15" fill="rgb(248,145,5)" fg:x="6685" fg:w="12"/><text x="19.8311%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 0.04%)</title><rect x="19.5811%" y="1269" width="0.0381%" height="15" fill="rgb(226,116,26)" fg:x="6685" fg:w="13"/><text x="19.8311%" y="1279.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 0.04%)</title><rect x="19.5811%" y="1253" width="0.0381%" height="15" fill="rgb(244,5,17)" fg:x="6685" fg:w="13"/><text x="19.8311%" y="1263.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.04%)</title><rect x="19.5811%" y="1237" width="0.0381%" height="15" fill="rgb(252,159,33)" fg:x="6685" fg:w="13"/><text x="19.8311%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (50 samples, 0.15%)</title><rect x="19.5167%" y="1285" width="0.1465%" height="15" fill="rgb(206,71,0)" fg:x="6663" fg:w="50"/><text x="19.7667%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::dec_num_unparked (15 samples, 0.04%)</title><rect x="19.6192%" y="1269" width="0.0439%" height="15" fill="rgb(233,118,54)" fg:x="6698" fg:w="15"/><text x="19.8692%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.04%)</title><rect x="19.6192%" y="1253" width="0.0439%" height="15" fill="rgb(234,83,48)" fg:x="6698" fg:w="15"/><text x="19.8692%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.04%)</title><rect x="19.6192%" y="1237" width="0.0439%" height="15" fill="rgb(228,3,54)" fg:x="6698" fg:w="15"/><text x="19.8692%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::is_empty (6 samples, 0.02%)</title><rect x="19.6778%" y="1269" width="0.0176%" height="15" fill="rgb(226,155,13)" fg:x="6718" fg:w="6"/><text x="19.9278%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::is_empty (6 samples, 0.02%)</title><rect x="19.6778%" y="1253" width="0.0176%" height="15" fill="rgb(241,28,37)" fg:x="6718" fg:w="6"/><text x="19.9278%" y="1263.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Inner&lt;T&gt;::len (6 samples, 0.02%)</title><rect x="19.6778%" y="1237" width="0.0176%" height="15" fill="rgb(233,93,10)" fg:x="6718" fg:w="6"/><text x="19.9278%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (13 samples, 0.04%)</title><rect x="19.6632%" y="1285" width="0.0381%" height="15" fill="rgb(225,113,19)" fg:x="6713" fg:w="13"/><text x="19.9132%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park (3,773 samples, 11.05%)</title><rect x="8.6555%" y="1317" width="11.0516%" height="15" fill="rgb(241,2,18)" fg:x="2955" fg:w="3773"/><text x="8.9055%" y="1327.50">tokio::runtime::..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_parked (67 samples, 0.20%)</title><rect x="19.5108%" y="1301" width="0.1963%" height="15" fill="rgb(228,207,21)" fg:x="6661" fg:w="67"/><text x="19.7608%" y="1311.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (19 samples, 0.06%)</title><rect x="19.7598%" y="1253" width="0.0557%" height="15" fill="rgb(213,211,35)" fg:x="6746" fg:w="19"/><text x="20.0098%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (19 samples, 0.06%)</title><rect x="19.7598%" y="1237" width="0.0557%" height="15" fill="rgb(209,83,10)" fg:x="6746" fg:w="19"/><text x="20.0098%" y="1247.50"></text></g><g><title>core::cell::BorrowRefMut::new (19 samples, 0.06%)</title><rect x="19.7598%" y="1221" width="0.0557%" height="15" fill="rgb(209,164,1)" fg:x="6746" fg:w="19"/><text x="20.0098%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.03%)</title><rect x="19.8155%" y="1253" width="0.0293%" height="15" fill="rgb(213,184,43)" fg:x="6765" fg:w="10"/><text x="20.0655%" y="1263.50"></text></g><g><title>core::mem::replace (10 samples, 0.03%)</title><rect x="19.8155%" y="1237" width="0.0293%" height="15" fill="rgb(231,61,34)" fg:x="6765" fg:w="10"/><text x="20.0655%" y="1247.50"></text></g><g><title>core::ptr::read (10 samples, 0.03%)</title><rect x="19.8155%" y="1221" width="0.0293%" height="15" fill="rgb(235,75,3)" fg:x="6765" fg:w="10"/><text x="20.0655%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::reset_lifo_enabled (5 samples, 0.01%)</title><rect x="19.8565%" y="1253" width="0.0146%" height="15" fill="rgb(220,106,47)" fg:x="6779" fg:w="5"/><text x="20.1065%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (6 samples, 0.02%)</title><rect x="19.9268%" y="1093" width="0.0176%" height="15" fill="rgb(210,196,33)" fg:x="6803" fg:w="6"/><text x="20.1768%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.04%)</title><rect x="19.9151%" y="1125" width="0.0381%" height="15" fill="rgb(229,154,42)" fg:x="6799" fg:w="13"/><text x="20.1651%" y="1135.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (13 samples, 0.04%)</title><rect x="19.9151%" y="1109" width="0.0381%" height="15" fill="rgb(228,114,26)" fg:x="6799" fg:w="13"/><text x="20.1651%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="19.9590%" y="1109" width="0.0205%" height="15" fill="rgb(208,144,1)" fg:x="6814" fg:w="7"/><text x="20.2090%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (7 samples, 0.02%)</title><rect x="19.9590%" y="1093" width="0.0205%" height="15" fill="rgb(239,112,37)" fg:x="6814" fg:w="7"/><text x="20.2090%" y="1103.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (7 samples, 0.02%)</title><rect x="19.9590%" y="1077" width="0.0205%" height="15" fill="rgb(210,96,50)" fg:x="6814" fg:w="7"/><text x="20.2090%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (48 samples, 0.14%)</title><rect x="20.0117%" y="1061" width="0.1406%" height="15" fill="rgb(222,178,2)" fg:x="6832" fg:w="48"/><text x="20.2617%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (48 samples, 0.14%)</title><rect x="20.0117%" y="1045" width="0.1406%" height="15" fill="rgb(226,74,18)" fg:x="6832" fg:w="48"/><text x="20.2617%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (41 samples, 0.12%)</title><rect x="20.1523%" y="1061" width="0.1201%" height="15" fill="rgb(225,67,54)" fg:x="6880" fg:w="41"/><text x="20.4023%" y="1071.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (41 samples, 0.12%)</title><rect x="20.1523%" y="1045" width="0.1201%" height="15" fill="rgb(251,92,32)" fg:x="6880" fg:w="41"/><text x="20.4023%" y="1055.50"></text></g><g><title>clock_gettime (41 samples, 0.12%)</title><rect x="20.1523%" y="1029" width="0.1201%" height="15" fill="rgb(228,149,22)" fg:x="6880" fg:w="41"/><text x="20.4023%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (14 samples, 0.04%)</title><rect x="20.2314%" y="1013" width="0.0410%" height="15" fill="rgb(243,54,13)" fg:x="6907" fg:w="14"/><text x="20.4814%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (27 samples, 0.08%)</title><rect x="20.2724%" y="1061" width="0.0791%" height="15" fill="rgb(243,180,28)" fg:x="6921" fg:w="27"/><text x="20.5224%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (22 samples, 0.06%)</title><rect x="20.2871%" y="1045" width="0.0644%" height="15" fill="rgb(208,167,24)" fg:x="6926" fg:w="22"/><text x="20.5371%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.06%)</title><rect x="20.2871%" y="1029" width="0.0644%" height="15" fill="rgb(245,73,45)" fg:x="6926" fg:w="22"/><text x="20.5371%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.06%)</title><rect x="20.2871%" y="1013" width="0.0644%" height="15" fill="rgb(237,203,48)" fg:x="6926" fg:w="22"/><text x="20.5371%" y="1023.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (130 samples, 0.38%)</title><rect x="19.9883%" y="1093" width="0.3808%" height="15" fill="rgb(211,197,16)" fg:x="6824" fg:w="130"/><text x="20.2383%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (130 samples, 0.38%)</title><rect x="19.9883%" y="1077" width="0.3808%" height="15" fill="rgb(243,99,51)" fg:x="6824" fg:w="130"/><text x="20.2383%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (6 samples, 0.02%)</title><rect x="20.3515%" y="1061" width="0.0176%" height="15" fill="rgb(215,123,29)" fg:x="6948" fg:w="6"/><text x="20.6015%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (6 samples, 0.02%)</title><rect x="20.3515%" y="1045" width="0.0176%" height="15" fill="rgb(239,186,37)" fg:x="6948" fg:w="6"/><text x="20.6015%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.02%)</title><rect x="20.3515%" y="1029" width="0.0176%" height="15" fill="rgb(252,136,39)" fg:x="6948" fg:w="6"/><text x="20.6015%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.02%)</title><rect x="20.3515%" y="1013" width="0.0176%" height="15" fill="rgb(223,213,32)" fg:x="6948" fg:w="6"/><text x="20.6015%" y="1023.50"></text></g><g><title>syscall (13 samples, 0.04%)</title><rect x="20.3691%" y="1093" width="0.0381%" height="15" fill="rgb(233,115,5)" fg:x="6954" fg:w="13"/><text x="20.6191%" y="1103.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (14 samples, 0.04%)</title><rect x="20.4101%" y="1029" width="0.0410%" height="15" fill="rgb(207,226,44)" fg:x="6968" fg:w="14"/><text x="20.6601%" y="1039.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (14 samples, 0.04%)</title><rect x="20.4101%" y="1013" width="0.0410%" height="15" fill="rgb(208,126,0)" fg:x="6968" fg:w="14"/><text x="20.6601%" y="1023.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (14 samples, 0.04%)</title><rect x="20.4101%" y="997" width="0.0410%" height="15" fill="rgb(244,66,21)" fg:x="6968" fg:w="14"/><text x="20.6601%" y="1007.50"></text></g><g><title>write (14 samples, 0.04%)</title><rect x="20.4101%" y="981" width="0.0410%" height="15" fill="rgb(222,97,12)" fg:x="6968" fg:w="14"/><text x="20.6601%" y="991.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="20.4394%" y="965" width="0.0117%" height="15" fill="rgb(219,213,19)" fg:x="6978" fg:w="4"/><text x="20.6894%" y="975.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (16 samples, 0.05%)</title><rect x="20.4071%" y="1093" width="0.0469%" height="15" fill="rgb(252,169,30)" fg:x="6967" fg:w="16"/><text x="20.6571%" y="1103.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (16 samples, 0.05%)</title><rect x="20.4071%" y="1077" width="0.0469%" height="15" fill="rgb(206,32,51)" fg:x="6967" fg:w="16"/><text x="20.6571%" y="1087.50"></text></g><g><title>mio::waker::Waker::wake (15 samples, 0.04%)</title><rect x="20.4101%" y="1061" width="0.0439%" height="15" fill="rgb(250,172,42)" fg:x="6968" fg:w="15"/><text x="20.6601%" y="1071.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (15 samples, 0.04%)</title><rect x="20.4101%" y="1045" width="0.0439%" height="15" fill="rgb(209,34,43)" fg:x="6968" fg:w="15"/><text x="20.6601%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (27 samples, 0.08%)</title><rect x="20.4657%" y="1061" width="0.0791%" height="15" fill="rgb(223,11,35)" fg:x="6987" fg:w="27"/><text x="20.7157%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_swap (27 samples, 0.08%)</title><rect x="20.4657%" y="1045" width="0.0791%" height="15" fill="rgb(251,219,26)" fg:x="6987" fg:w="27"/><text x="20.7157%" y="1055.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (35 samples, 0.10%)</title><rect x="20.4540%" y="1093" width="0.1025%" height="15" fill="rgb(231,119,3)" fg:x="6983" fg:w="35"/><text x="20.7040%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (35 samples, 0.10%)</title><rect x="20.4540%" y="1077" width="0.1025%" height="15" fill="rgb(216,97,11)" fg:x="6983" fg:w="35"/><text x="20.7040%" y="1087.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::push_back_or_overflow (17 samples, 0.05%)</title><rect x="20.5565%" y="1093" width="0.0498%" height="15" fill="rgb(223,59,9)" fg:x="7018" fg:w="17"/><text x="20.8065%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (11 samples, 0.03%)</title><rect x="20.5741%" y="1077" width="0.0322%" height="15" fill="rgb(233,93,31)" fg:x="7024" fg:w="11"/><text x="20.8241%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.03%)</title><rect x="20.5741%" y="1061" width="0.0322%" height="15" fill="rgb(239,81,33)" fg:x="7024" fg:w="11"/><text x="20.8241%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.04%)</title><rect x="20.6151%" y="1061" width="0.0381%" height="15" fill="rgb(213,120,34)" fg:x="7038" fg:w="13"/><text x="20.8651%" y="1071.50"></text></g><g><title>core::ptr::read (11 samples, 0.03%)</title><rect x="20.6210%" y="1045" width="0.0322%" height="15" fill="rgb(243,49,53)" fg:x="7040" fg:w="11"/><text x="20.8710%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.02%)</title><rect x="20.6532%" y="1061" width="0.0176%" height="15" fill="rgb(247,216,33)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (6 samples, 0.02%)</title><rect x="20.6532%" y="1045" width="0.0176%" height="15" fill="rgb(226,26,14)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="1055.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="20.6532%" y="1029" width="0.0176%" height="15" fill="rgb(215,49,53)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.02%)</title><rect x="20.6532%" y="1013" width="0.0176%" height="15" fill="rgb(245,162,40)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.02%)</title><rect x="20.6532%" y="997" width="0.0176%" height="15" fill="rgb(229,68,17)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="20.6532%" y="981" width="0.0176%" height="15" fill="rgb(213,182,10)" fg:x="7051" fg:w="6"/><text x="20.9032%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="20.6708%" y="1061" width="0.0146%" height="15" fill="rgb(245,125,30)" fg:x="7057" fg:w="5"/><text x="20.9208%" y="1071.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="20.6708%" y="1045" width="0.0146%" height="15" fill="rgb(232,202,2)" fg:x="7057" fg:w="5"/><text x="20.9208%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="20.6708%" y="1029" width="0.0146%" height="15" fill="rgb(237,140,51)" fg:x="7057" fg:w="5"/><text x="20.9208%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="20.6708%" y="1013" width="0.0146%" height="15" fill="rgb(236,157,25)" fg:x="7057" fg:w="5"/><text x="20.9208%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="20.6708%" y="997" width="0.0146%" height="15" fill="rgb(219,209,0)" fg:x="7057" fg:w="5"/><text x="20.9208%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (35 samples, 0.10%)</title><rect x="20.6854%" y="1045" width="0.1025%" height="15" fill="rgb(240,116,54)" fg:x="7062" fg:w="35"/><text x="20.9354%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (35 samples, 0.10%)</title><rect x="20.6854%" y="1029" width="0.1025%" height="15" fill="rgb(216,10,36)" fg:x="7062" fg:w="35"/><text x="20.9354%" y="1039.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (36 samples, 0.11%)</title><rect x="20.6854%" y="1061" width="0.1054%" height="15" fill="rgb(222,72,44)" fg:x="7062" fg:w="36"/><text x="20.9354%" y="1071.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::yield_now (300 samples, 0.88%)</title><rect x="19.9151%" y="1189" width="0.8787%" height="15" fill="rgb(232,159,9)" fg:x="6799" fg:w="300"/><text x="20.1651%" y="1199.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (300 samples, 0.88%)</title><rect x="19.9151%" y="1173" width="0.8787%" height="15" fill="rgb(210,39,32)" fg:x="6799" fg:w="300"/><text x="20.1651%" y="1183.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (300 samples, 0.88%)</title><rect x="19.9151%" y="1157" width="0.8787%" height="15" fill="rgb(216,194,45)" fg:x="6799" fg:w="300"/><text x="20.1651%" y="1167.50"></text></g><g><title>tokio::runtime::context::with_scheduler (300 samples, 0.88%)</title><rect x="19.9151%" y="1141" width="0.8787%" height="15" fill="rgb(218,18,35)" fg:x="6799" fg:w="300"/><text x="20.1651%" y="1151.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (287 samples, 0.84%)</title><rect x="19.9531%" y="1125" width="0.8407%" height="15" fill="rgb(207,83,51)" fg:x="6812" fg:w="287"/><text x="20.2031%" y="1135.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (277 samples, 0.81%)</title><rect x="19.9824%" y="1109" width="0.8114%" height="15" fill="rgb(225,63,43)" fg:x="6822" fg:w="277"/><text x="20.2324%" y="1119.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (64 samples, 0.19%)</title><rect x="20.6063%" y="1093" width="0.1875%" height="15" fill="rgb(207,57,36)" fg:x="7035" fg:w="64"/><text x="20.8563%" y="1103.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (62 samples, 0.18%)</title><rect x="20.6122%" y="1077" width="0.1816%" height="15" fill="rgb(216,99,33)" fg:x="7037" fg:w="62"/><text x="20.8622%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (7 samples, 0.02%)</title><rect x="20.7938%" y="1189" width="0.0205%" height="15" fill="rgb(225,42,16)" fg:x="7099" fg:w="7"/><text x="21.0438%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (7 samples, 0.02%)</title><rect x="20.7938%" y="1173" width="0.0205%" height="15" fill="rgb(220,201,45)" fg:x="7099" fg:w="7"/><text x="21.0438%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.02%)</title><rect x="20.7967%" y="1157" width="0.0176%" height="15" fill="rgb(225,33,4)" fg:x="7100" fg:w="6"/><text x="21.0467%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.02%)</title><rect x="20.7967%" y="1141" width="0.0176%" height="15" fill="rgb(224,33,50)" fg:x="7100" fg:w="6"/><text x="21.0467%" y="1151.50"></text></g><g><title>&lt;F as core::future::into_future::IntoFuture&gt;::into_future (9 samples, 0.03%)</title><rect x="21.9947%" y="901" width="0.0264%" height="15" fill="rgb(246,198,51)" fg:x="7509" fg:w="9"/><text x="22.2447%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (34 samples, 0.10%)</title><rect x="22.0211%" y="901" width="0.0996%" height="15" fill="rgb(205,22,4)" fg:x="7518" fg:w="34"/><text x="22.2711%" y="911.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="22.8237%" y="645" width="0.0205%" height="15" fill="rgb(206,3,8)" fg:x="7792" fg:w="7"/><text x="23.0737%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="22.8237%" y="629" width="0.0205%" height="15" fill="rgb(251,23,15)" fg:x="7792" fg:w="7"/><text x="23.0737%" y="639.50"></text></g><g><title>_rjem_malloc (7 samples, 0.02%)</title><rect x="22.8237%" y="613" width="0.0205%" height="15" fill="rgb(252,88,28)" fg:x="7792" fg:w="7"/><text x="23.0737%" y="623.50"></text></g><g><title>imalloc_fastpath (7 samples, 0.02%)</title><rect x="22.8237%" y="597" width="0.0205%" height="15" fill="rgb(212,127,14)" fg:x="7792" fg:w="7"/><text x="23.0737%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (14 samples, 0.04%)</title><rect x="22.8061%" y="757" width="0.0410%" height="15" fill="rgb(247,145,37)" fg:x="7786" fg:w="14"/><text x="23.0561%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (14 samples, 0.04%)</title><rect x="22.8061%" y="741" width="0.0410%" height="15" fill="rgb(209,117,53)" fg:x="7786" fg:w="14"/><text x="23.0561%" y="751.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (14 samples, 0.04%)</title><rect x="22.8061%" y="725" width="0.0410%" height="15" fill="rgb(212,90,42)" fg:x="7786" fg:w="14"/><text x="23.0561%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="22.8237%" y="709" width="0.0234%" height="15" fill="rgb(218,164,37)" fg:x="7792" fg:w="8"/><text x="23.0737%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="22.8237%" y="693" width="0.0234%" height="15" fill="rgb(246,65,34)" fg:x="7792" fg:w="8"/><text x="23.0737%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="22.8237%" y="677" width="0.0234%" height="15" fill="rgb(231,100,33)" fg:x="7792" fg:w="8"/><text x="23.0737%" y="687.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="22.8237%" y="661" width="0.0234%" height="15" fill="rgb(228,126,14)" fg:x="7792" fg:w="8"/><text x="23.0737%" y="671.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="23.4886%" y="693" width="0.0205%" height="15" fill="rgb(215,173,21)" fg:x="8019" fg:w="7"/><text x="23.7386%" y="703.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;fastwebsockets::frame::OpCode&gt; for wisp_mux::ws::OpCode&gt;::from (7 samples, 0.02%)</title><rect x="23.4886%" y="677" width="0.0205%" height="15" fill="rgb(210,6,40)" fg:x="8019" fg:w="7"/><text x="23.7386%" y="687.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (14 samples, 0.04%)</title><rect x="23.5091%" y="693" width="0.0410%" height="15" fill="rgb(212,48,18)" fg:x="8026" fg:w="14"/><text x="23.7591%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (23 samples, 0.07%)</title><rect x="23.5501%" y="693" width="0.0674%" height="15" fill="rgb(230,214,11)" fg:x="8040" fg:w="23"/><text x="23.8001%" y="703.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (23 samples, 0.07%)</title><rect x="23.5501%" y="677" width="0.0674%" height="15" fill="rgb(254,105,39)" fg:x="8040" fg:w="23"/><text x="23.8001%" y="687.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="24.2209%" y="677" width="0.0117%" height="15" fill="rgb(245,158,5)" fg:x="8269" fg:w="4"/><text x="24.4709%" y="687.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (10 samples, 0.03%)</title><rect x="25.2197%" y="629" width="0.0293%" height="15" fill="rgb(249,208,11)" fg:x="8610" fg:w="10"/><text x="25.4697%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (15 samples, 0.04%)</title><rect x="25.2109%" y="645" width="0.0439%" height="15" fill="rgb(210,39,28)" fg:x="8607" fg:w="15"/><text x="25.4609%" y="655.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::convert::TryFrom&lt;u8&gt;&gt;::try_from (5 samples, 0.01%)</title><rect x="25.2548%" y="645" width="0.0146%" height="15" fill="rgb(211,56,53)" fg:x="8622" fg:w="5"/><text x="25.5048%" y="655.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_mut::BufMut&gt;::advance_mut (43 samples, 0.13%)</title><rect x="25.2724%" y="629" width="0.1260%" height="15" fill="rgb(226,201,30)" fg:x="8628" fg:w="43"/><text x="25.5224%" y="639.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (34 samples, 0.10%)</title><rect x="25.2988%" y="613" width="0.0996%" height="15" fill="rgb(239,101,34)" fg:x="8637" fg:w="34"/><text x="25.5488%" y="623.50"></text></g><g><title>bytes::bytes_mut::BytesMut::len (30 samples, 0.09%)</title><rect x="25.3105%" y="597" width="0.0879%" height="15" fill="rgb(226,209,5)" fg:x="8641" fg:w="30"/><text x="25.5605%" y="607.50"></text></g><g><title>[libc.so.6] (134 samples, 0.39%)</title><rect x="25.9197%" y="405" width="0.3925%" height="15" fill="rgb(250,105,47)" fg:x="8849" fg:w="134"/><text x="26.1697%" y="415.50"></text></g><g><title>recv (255 samples, 0.75%)</title><rect x="25.6239%" y="421" width="0.7469%" height="15" fill="rgb(230,72,3)" fg:x="8748" fg:w="255"/><text x="25.8739%" y="431.50"></text></g><g><title>[unknown] (20 samples, 0.06%)</title><rect x="26.3122%" y="405" width="0.0586%" height="15" fill="rgb(232,218,39)" fg:x="8983" fg:w="20"/><text x="26.5622%" y="415.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (35 samples, 0.10%)</title><rect x="26.3767%" y="405" width="0.1025%" height="15" fill="rgb(248,166,6)" fg:x="9005" fg:w="35"/><text x="26.6267%" y="415.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (294 samples, 0.86%)</title><rect x="25.6210%" y="549" width="0.8612%" height="15" fill="rgb(247,89,20)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="559.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (294 samples, 0.86%)</title><rect x="25.6210%" y="533" width="0.8612%" height="15" fill="rgb(248,130,54)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="543.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (294 samples, 0.86%)</title><rect x="25.6210%" y="517" width="0.8612%" height="15" fill="rgb(234,196,4)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="527.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (294 samples, 0.86%)</title><rect x="25.6210%" y="501" width="0.8612%" height="15" fill="rgb(250,143,31)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="511.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (294 samples, 0.86%)</title><rect x="25.6210%" y="485" width="0.8612%" height="15" fill="rgb(211,110,34)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="495.50"></text></g><g><title>std::sys_common::net::TcpStream::read (294 samples, 0.86%)</title><rect x="25.6210%" y="469" width="0.8612%" height="15" fill="rgb(215,124,48)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="479.50"></text></g><g><title>std::sys::pal::unix::net::Socket::read (294 samples, 0.86%)</title><rect x="25.6210%" y="453" width="0.8612%" height="15" fill="rgb(216,46,13)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="463.50"></text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (294 samples, 0.86%)</title><rect x="25.6210%" y="437" width="0.8612%" height="15" fill="rgb(205,184,25)" fg:x="8747" fg:w="294"/><text x="25.8710%" y="447.50"></text></g><g><title>std::sys::pal::unix::cvt (38 samples, 0.11%)</title><rect x="26.3708%" y="421" width="0.1113%" height="15" fill="rgb(228,1,10)" fg:x="9003" fg:w="38"/><text x="26.6208%" y="431.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (14 samples, 0.04%)</title><rect x="26.4851%" y="549" width="0.0410%" height="15" fill="rgb(213,116,27)" fg:x="9042" fg:w="14"/><text x="26.7351%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.02%)</title><rect x="26.5319%" y="501" width="0.0205%" height="15" fill="rgb(241,95,50)" fg:x="9058" fg:w="7"/><text x="26.7819%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.02%)</title><rect x="26.5319%" y="485" width="0.0205%" height="15" fill="rgb(238,48,32)" fg:x="9058" fg:w="7"/><text x="26.7819%" y="495.50"></text></g><g><title>tokio::runtime::io::registration::Registration::clear_readiness (13 samples, 0.04%)</title><rect x="26.5319%" y="549" width="0.0381%" height="15" fill="rgb(235,113,49)" fg:x="9058" fg:w="13"/><text x="26.7819%" y="559.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::clear_readiness (13 samples, 0.04%)</title><rect x="26.5319%" y="533" width="0.0381%" height="15" fill="rgb(205,127,43)" fg:x="9058" fg:w="13"/><text x="26.7819%" y="543.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::set_readiness (13 samples, 0.04%)</title><rect x="26.5319%" y="517" width="0.0381%" height="15" fill="rgb(250,162,2)" fg:x="9058" fg:w="13"/><text x="26.7819%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.02%)</title><rect x="26.5524%" y="501" width="0.0176%" height="15" fill="rgb(220,13,41)" fg:x="9065" fg:w="6"/><text x="26.8024%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="26.5524%" y="485" width="0.0176%" height="15" fill="rgb(249,221,25)" fg:x="9065" fg:w="6"/><text x="26.8024%" y="495.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (6 samples, 0.02%)</title><rect x="26.5934%" y="517" width="0.0176%" height="15" fill="rgb(215,208,19)" fg:x="9079" fg:w="6"/><text x="26.8434%" y="527.50"></text></g><g><title>tokio::runtime::context::budget (6 samples, 0.02%)</title><rect x="26.5934%" y="501" width="0.0176%" height="15" fill="rgb(236,175,2)" fg:x="9079" fg:w="6"/><text x="26.8434%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="26.5934%" y="485" width="0.0176%" height="15" fill="rgb(241,52,2)" fg:x="9079" fg:w="6"/><text x="26.8434%" y="495.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (4 samples, 0.01%)</title><rect x="26.5993%" y="469" width="0.0117%" height="15" fill="rgb(248,140,14)" fg:x="9081" fg:w="4"/><text x="26.8493%" y="479.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (4 samples, 0.01%)</title><rect x="26.5993%" y="453" width="0.0117%" height="15" fill="rgb(253,22,42)" fg:x="9081" fg:w="4"/><text x="26.8493%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="26.6198%" y="501" width="0.0264%" height="15" fill="rgb(234,61,47)" fg:x="9088" fg:w="9"/><text x="26.8698%" y="511.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (9 samples, 0.03%)</title><rect x="26.6198%" y="485" width="0.0264%" height="15" fill="rgb(208,226,15)" fg:x="9088" fg:w="9"/><text x="26.8698%" y="495.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (5 samples, 0.01%)</title><rect x="26.6315%" y="469" width="0.0146%" height="15" fill="rgb(217,221,4)" fg:x="9092" fg:w="5"/><text x="26.8815%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.01%)</title><rect x="26.6315%" y="453" width="0.0146%" height="15" fill="rgb(212,174,34)" fg:x="9092" fg:w="5"/><text x="26.8815%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.01%)</title><rect x="26.6315%" y="437" width="0.0146%" height="15" fill="rgb(253,83,4)" fg:x="9092" fg:w="5"/><text x="26.8815%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (54 samples, 0.16%)</title><rect x="26.6579%" y="501" width="0.1582%" height="15" fill="rgb(250,195,49)" fg:x="9101" fg:w="54"/><text x="26.9079%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (54 samples, 0.16%)</title><rect x="26.6579%" y="485" width="0.1582%" height="15" fill="rgb(241,192,25)" fg:x="9101" fg:w="54"/><text x="26.9079%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="26.8161%" y="501" width="0.0146%" height="15" fill="rgb(208,124,10)" fg:x="9155" fg:w="5"/><text x="27.0661%" y="511.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="26.8161%" y="485" width="0.0146%" height="15" fill="rgb(222,33,0)" fg:x="9155" fg:w="5"/><text x="27.0661%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="26.8161%" y="469" width="0.0146%" height="15" fill="rgb(234,209,28)" fg:x="9155" fg:w="5"/><text x="27.0661%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="26.8161%" y="453" width="0.0146%" height="15" fill="rgb(224,11,23)" fg:x="9155" fg:w="5"/><text x="27.0661%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="26.8161%" y="437" width="0.0146%" height="15" fill="rgb(232,99,1)" fg:x="9155" fg:w="5"/><text x="27.0661%" y="447.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_read::AsyncRead&gt;::poll_read (490 samples, 1.44%)</title><rect x="25.4071%" y="629" width="1.4353%" height="15" fill="rgb(237,95,45)" fg:x="8674" fg:w="490"/><text x="25.6571%" y="639.50"></text></g><g><title>&lt;tokio::io::util::chain::Chain&lt;T,U&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (490 samples, 1.44%)</title><rect x="25.4071%" y="613" width="1.4353%" height="15" fill="rgb(208,109,11)" fg:x="8674" fg:w="490"/><text x="25.6571%" y="623.50"></text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_read::AsyncRead&gt;::poll_read (490 samples, 1.44%)</title><rect x="25.4071%" y="597" width="1.4353%" height="15" fill="rgb(216,190,48)" fg:x="8674" fg:w="490"/><text x="25.6571%" y="607.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (444 samples, 1.30%)</title><rect x="25.5419%" y="581" width="1.3005%" height="15" fill="rgb(251,171,36)" fg:x="8720" fg:w="444"/><text x="25.7919%" y="591.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (430 samples, 1.26%)</title><rect x="25.5829%" y="565" width="1.2595%" height="15" fill="rgb(230,62,22)" fg:x="8734" fg:w="430"/><text x="25.8329%" y="575.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (93 samples, 0.27%)</title><rect x="26.5700%" y="549" width="0.2724%" height="15" fill="rgb(225,114,35)" fg:x="9071" fg:w="93"/><text x="26.8200%" y="559.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (93 samples, 0.27%)</title><rect x="26.5700%" y="533" width="0.2724%" height="15" fill="rgb(215,118,42)" fg:x="9071" fg:w="93"/><text x="26.8200%" y="543.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (79 samples, 0.23%)</title><rect x="26.6110%" y="517" width="0.2314%" height="15" fill="rgb(243,119,21)" fg:x="9085" fg:w="79"/><text x="26.8610%" y="527.50"></text></g><g><title>&lt;core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="26.8424%" y="629" width="0.0176%" height="15" fill="rgb(252,177,53)" fg:x="9164" fg:w="6"/><text x="27.0924%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (4 samples, 0.01%)</title><rect x="26.8688%" y="629" width="0.0117%" height="15" fill="rgb(237,209,29)" fg:x="9173" fg:w="4"/><text x="27.1188%" y="639.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (6 samples, 0.02%)</title><rect x="26.8805%" y="629" width="0.0176%" height="15" fill="rgb(212,65,23)" fg:x="9177" fg:w="6"/><text x="27.1305%" y="639.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (557 samples, 1.63%)</title><rect x="25.2695%" y="645" width="1.6315%" height="15" fill="rgb(230,222,46)" fg:x="8627" fg:w="557"/><text x="25.5195%" y="655.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u16 (8 samples, 0.02%)</title><rect x="26.9010%" y="645" width="0.0234%" height="15" fill="rgb(215,135,32)" fg:x="9184" fg:w="8"/><text x="27.1510%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (7 samples, 0.02%)</title><rect x="26.9039%" y="629" width="0.0205%" height="15" fill="rgb(246,101,22)" fg:x="9185" fg:w="7"/><text x="27.1539%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (6 samples, 0.02%)</title><rect x="26.9069%" y="613" width="0.0176%" height="15" fill="rgb(206,107,13)" fg:x="9186" fg:w="6"/><text x="27.1569%" y="623.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32 (11 samples, 0.03%)</title><rect x="26.9244%" y="645" width="0.0322%" height="15" fill="rgb(250,100,44)" fg:x="9192" fg:w="11"/><text x="27.1744%" y="655.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (8 samples, 0.02%)</title><rect x="26.9332%" y="629" width="0.0234%" height="15" fill="rgb(231,147,38)" fg:x="9195" fg:w="8"/><text x="27.1832%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (8 samples, 0.02%)</title><rect x="26.9332%" y="613" width="0.0234%" height="15" fill="rgb(229,8,40)" fg:x="9195" fg:w="8"/><text x="27.1832%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2,399 samples, 7.03%)</title><rect x="27.0621%" y="565" width="7.0269%" height="15" fill="rgb(221,135,30)" fg:x="9239" fg:w="2399"/><text x="27.3121%" y="575.50">core::int..</text></g><g><title>[libc.so.6] (2,399 samples, 7.03%)</title><rect x="27.0621%" y="549" width="7.0269%" height="15" fill="rgb(249,193,18)" fg:x="9239" fg:w="2399"/><text x="27.3121%" y="559.50">[libc.so...</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2,415 samples, 7.07%)</title><rect x="27.0211%" y="613" width="7.0738%" height="15" fill="rgb(209,133,39)" fg:x="9225" fg:w="2415"/><text x="27.2711%" y="623.50">alloc::ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2,415 samples, 7.07%)</title><rect x="27.0211%" y="597" width="7.0738%" height="15" fill="rgb(232,100,14)" fg:x="9225" fg:w="2415"/><text x="27.2711%" y="607.50">&lt;alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2,415 samples, 7.07%)</title><rect x="27.0211%" y="581" width="7.0738%" height="15" fill="rgb(224,185,1)" fg:x="9225" fg:w="2415"/><text x="27.2711%" y="591.50">alloc::ve..</text></g><g><title>sz_index2size (36 samples, 0.11%)</title><rect x="34.1330%" y="389" width="0.1054%" height="15" fill="rgb(223,139,8)" fg:x="11653" fg:w="36"/><text x="34.3830%" y="399.50"></text></g><g><title>sz_index2size_lookup (36 samples, 0.11%)</title><rect x="34.1330%" y="373" width="0.1054%" height="15" fill="rgb(232,213,38)" fg:x="11653" fg:w="36"/><text x="34.3830%" y="383.50"></text></g><g><title>sz_index2size_lookup_impl (36 samples, 0.11%)</title><rect x="34.1330%" y="357" width="0.1054%" height="15" fill="rgb(207,94,22)" fg:x="11653" fg:w="36"/><text x="34.3830%" y="367.50"></text></g><g><title>aligned_usize_get (52 samples, 0.15%)</title><rect x="34.1154%" y="405" width="0.1523%" height="15" fill="rgb(219,183,54)" fg:x="11647" fg:w="52"/><text x="34.3654%" y="415.50"></text></g><g><title>sz_size2index (10 samples, 0.03%)</title><rect x="34.2384%" y="389" width="0.0293%" height="15" fill="rgb(216,185,54)" fg:x="11689" fg:w="10"/><text x="34.4884%" y="399.50"></text></g><g><title>sz_size2index_compute (9 samples, 0.03%)</title><rect x="34.2414%" y="373" width="0.0264%" height="15" fill="rgb(254,217,39)" fg:x="11690" fg:w="9"/><text x="34.4914%" y="383.50"></text></g><g><title>arena_choose_maybe_huge (16 samples, 0.05%)</title><rect x="34.3409%" y="341" width="0.0469%" height="15" fill="rgb(240,178,23)" fg:x="11724" fg:w="16"/><text x="34.5909%" y="351.50"></text></g><g><title>arena_choose (8 samples, 0.02%)</title><rect x="34.3644%" y="325" width="0.0234%" height="15" fill="rgb(218,11,47)" fg:x="11732" fg:w="8"/><text x="34.6144%" y="335.50"></text></g><g><title>arena_choose_impl (8 samples, 0.02%)</title><rect x="34.3644%" y="309" width="0.0234%" height="15" fill="rgb(218,51,51)" fg:x="11732" fg:w="8"/><text x="34.6144%" y="319.50"></text></g><g><title>arena_malloc_small (8 samples, 0.02%)</title><rect x="34.3878%" y="341" width="0.0234%" height="15" fill="rgb(238,126,27)" fg:x="11740" fg:w="8"/><text x="34.6378%" y="351.50"></text></g><g><title>sz_index2size (8 samples, 0.02%)</title><rect x="34.3878%" y="325" width="0.0234%" height="15" fill="rgb(249,202,22)" fg:x="11740" fg:w="8"/><text x="34.6378%" y="335.50"></text></g><g><title>sz_index2size_lookup (8 samples, 0.02%)</title><rect x="34.3878%" y="309" width="0.0234%" height="15" fill="rgb(254,195,49)" fg:x="11740" fg:w="8"/><text x="34.6378%" y="319.50"></text></g><g><title>sz_index2size_lookup_impl (8 samples, 0.02%)</title><rect x="34.3878%" y="293" width="0.0234%" height="15" fill="rgb(208,123,14)" fg:x="11740" fg:w="8"/><text x="34.6378%" y="303.50"></text></g><g><title>_rjem_je_arena_malloc_hard (41 samples, 0.12%)</title><rect x="34.2941%" y="357" width="0.1201%" height="15" fill="rgb(224,200,8)" fg:x="11708" fg:w="41"/><text x="34.5441%" y="367.50"></text></g><g><title>_rjem_je_arena_get_ehooks (16 samples, 0.05%)</title><rect x="34.5167%" y="325" width="0.0469%" height="15" fill="rgb(217,61,36)" fg:x="11784" fg:w="16"/><text x="34.7667%" y="335.50"></text></g><g><title>_rjem_je_emap_remap (14 samples, 0.04%)</title><rect x="34.6016%" y="309" width="0.0410%" height="15" fill="rgb(206,35,45)" fg:x="11813" fg:w="14"/><text x="34.8516%" y="319.50"></text></g><g><title>pa_nactive_add (18 samples, 0.05%)</title><rect x="34.6514%" y="309" width="0.0527%" height="15" fill="rgb(217,65,33)" fg:x="11830" fg:w="18"/><text x="34.9014%" y="319.50"></text></g><g><title>atomic_fetch_add_zu (18 samples, 0.05%)</title><rect x="34.6514%" y="293" width="0.0527%" height="15" fill="rgb(222,158,48)" fg:x="11830" fg:w="18"/><text x="34.9014%" y="303.50"></text></g><g><title>pa_shard_uses_hpa (27 samples, 0.08%)</title><rect x="34.7042%" y="309" width="0.0791%" height="15" fill="rgb(254,2,54)" fg:x="11848" fg:w="27"/><text x="34.9542%" y="319.50"></text></g><g><title>atomic_load_b (27 samples, 0.08%)</title><rect x="34.7042%" y="293" width="0.0791%" height="15" fill="rgb(250,143,38)" fg:x="11848" fg:w="27"/><text x="34.9542%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_first (76 samples, 0.22%)</title><rect x="35.2255%" y="181" width="0.2226%" height="15" fill="rgb(248,25,0)" fg:x="12026" fg:w="76"/><text x="35.4755%" y="191.50"></text></g><g><title>ph_first (69 samples, 0.20%)</title><rect x="35.2460%" y="165" width="0.2021%" height="15" fill="rgb(206,152,27)" fg:x="12033" fg:w="69"/><text x="35.4960%" y="175.50"></text></g><g><title>ph_merge_aux (42 samples, 0.12%)</title><rect x="35.3251%" y="149" width="0.1230%" height="15" fill="rgb(240,77,30)" fg:x="12060" fg:w="42"/><text x="35.5751%" y="159.50"></text></g><g><title>phn_next_get (38 samples, 0.11%)</title><rect x="35.3368%" y="133" width="0.1113%" height="15" fill="rgb(231,5,3)" fg:x="12064" fg:w="38"/><text x="35.5868%" y="143.50"></text></g><g><title>sz_pind2sz (11 samples, 0.03%)</title><rect x="35.4687%" y="149" width="0.0322%" height="15" fill="rgb(207,226,32)" fg:x="12109" fg:w="11"/><text x="35.7187%" y="159.50"></text></g><g><title>sz_pind2sz_lookup (11 samples, 0.03%)</title><rect x="35.4687%" y="133" width="0.0322%" height="15" fill="rgb(222,207,47)" fg:x="12109" fg:w="11"/><text x="35.7187%" y="143.50"></text></g><g><title>_rjem_je_sz_psz_quantize_ceil (31 samples, 0.09%)</title><rect x="35.4482%" y="181" width="0.0908%" height="15" fill="rgb(229,115,45)" fg:x="12102" fg:w="31"/><text x="35.6982%" y="191.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (29 samples, 0.08%)</title><rect x="35.4540%" y="165" width="0.0849%" height="15" fill="rgb(224,191,6)" fg:x="12104" fg:w="29"/><text x="35.7040%" y="175.50"></text></g><g><title>sz_psz2ind (13 samples, 0.04%)</title><rect x="35.5009%" y="149" width="0.0381%" height="15" fill="rgb(230,227,24)" fg:x="12120" fg:w="13"/><text x="35.7509%" y="159.50"></text></g><g><title>edata_cmp_summary_comp (28 samples, 0.08%)</title><rect x="35.5390%" y="181" width="0.0820%" height="15" fill="rgb(228,80,19)" fg:x="12133" fg:w="28"/><text x="35.7890%" y="191.50"></text></g><g><title>fb_ffs (34 samples, 0.10%)</title><rect x="35.6210%" y="181" width="0.0996%" height="15" fill="rgb(247,229,0)" fg:x="12161" fg:w="34"/><text x="35.8710%" y="191.50"></text></g><g><title>fb_find_impl (34 samples, 0.10%)</title><rect x="35.6210%" y="165" width="0.0996%" height="15" fill="rgb(237,194,15)" fg:x="12161" fg:w="34"/><text x="35.8710%" y="175.50"></text></g><g><title>ffs_lu (7 samples, 0.02%)</title><rect x="35.7001%" y="149" width="0.0205%" height="15" fill="rgb(219,203,20)" fg:x="12188" fg:w="7"/><text x="35.9501%" y="159.50"></text></g><g><title>_rjem_je_eset_fit (246 samples, 0.72%)</title><rect x="35.0351%" y="213" width="0.7206%" height="15" fill="rgb(234,128,8)" fg:x="11961" fg:w="246"/><text x="35.2851%" y="223.50"></text></g><g><title>eset_first_fit (238 samples, 0.70%)</title><rect x="35.0586%" y="197" width="0.6971%" height="15" fill="rgb(248,202,8)" fg:x="11969" fg:w="238"/><text x="35.3086%" y="207.50"></text></g><g><title>sz_psz2ind (11 samples, 0.03%)</title><rect x="35.7235%" y="181" width="0.0322%" height="15" fill="rgb(206,104,37)" fg:x="12196" fg:w="11"/><text x="35.9735%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (14 samples, 0.04%)</title><rect x="35.7967%" y="181" width="0.0410%" height="15" fill="rgb(223,8,27)" fg:x="12221" fg:w="14"/><text x="36.0467%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (37 samples, 0.11%)</title><rect x="35.8377%" y="181" width="0.1084%" height="15" fill="rgb(216,217,28)" fg:x="12235" fg:w="37"/><text x="36.0877%" y="191.50"></text></g><g><title>rtree_leaf_elm_bits_read (36 samples, 0.11%)</title><rect x="35.8407%" y="165" width="0.1054%" height="15" fill="rgb(249,199,1)" fg:x="12236" fg:w="36"/><text x="36.0907%" y="175.50"></text></g><g><title>atomic_load_p (36 samples, 0.11%)</title><rect x="35.8407%" y="149" width="0.1054%" height="15" fill="rgb(240,85,17)" fg:x="12236" fg:w="36"/><text x="36.0907%" y="159.50"></text></g><g><title>_rjem_je_emap_update_edata_state (61 samples, 0.18%)</title><rect x="35.7704%" y="197" width="0.1787%" height="15" fill="rgb(206,108,45)" fg:x="12212" fg:w="61"/><text x="36.0204%" y="207.50"></text></g><g><title>ph_merge_children (6 samples, 0.02%)</title><rect x="36.0164%" y="149" width="0.0176%" height="15" fill="rgb(245,210,41)" fg:x="12296" fg:w="6"/><text x="36.2664%" y="159.50"></text></g><g><title>phn_merge_siblings (6 samples, 0.02%)</title><rect x="36.0164%" y="133" width="0.0176%" height="15" fill="rgb(206,13,37)" fg:x="12296" fg:w="6"/><text x="36.2664%" y="143.50"></text></g><g><title>phn_next_get (5 samples, 0.01%)</title><rect x="36.0193%" y="117" width="0.0146%" height="15" fill="rgb(250,61,18)" fg:x="12297" fg:w="5"/><text x="36.2693%" y="127.50"></text></g><g><title>_rjem_je_edata_heap_remove (13 samples, 0.04%)</title><rect x="36.0047%" y="181" width="0.0381%" height="15" fill="rgb(235,172,48)" fg:x="12292" fg:w="13"/><text x="36.2547%" y="191.50"></text></g><g><title>ph_remove (11 samples, 0.03%)</title><rect x="36.0105%" y="165" width="0.0322%" height="15" fill="rgb(249,201,17)" fg:x="12294" fg:w="11"/><text x="36.2605%" y="175.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (18 samples, 0.05%)</title><rect x="36.0428%" y="181" width="0.0527%" height="15" fill="rgb(219,208,6)" fg:x="12305" fg:w="18"/><text x="36.2928%" y="191.50"></text></g><g><title>sz_psz2ind (6 samples, 0.02%)</title><rect x="36.0779%" y="165" width="0.0176%" height="15" fill="rgb(248,31,23)" fg:x="12317" fg:w="6"/><text x="36.3279%" y="175.50"></text></g><g><title>lg_ceil (4 samples, 0.01%)</title><rect x="36.0838%" y="149" width="0.0117%" height="15" fill="rgb(245,15,42)" fg:x="12319" fg:w="4"/><text x="36.3338%" y="159.50"></text></g><g><title>edata_list_inactive_remove (17 samples, 0.05%)</title><rect x="36.1043%" y="181" width="0.0498%" height="15" fill="rgb(222,217,39)" fg:x="12326" fg:w="17"/><text x="36.3543%" y="191.50"></text></g><g><title>atomic_load_zu (50 samples, 0.15%)</title><rect x="36.1541%" y="165" width="0.1465%" height="15" fill="rgb(210,219,27)" fg:x="12343" fg:w="50"/><text x="36.4041%" y="175.50"></text></g><g><title>eset_stats_sub (51 samples, 0.15%)</title><rect x="36.1541%" y="181" width="0.1494%" height="15" fill="rgb(252,166,36)" fg:x="12343" fg:w="51"/><text x="36.4041%" y="191.50"></text></g><g><title>extent_recycle_extract (462 samples, 1.35%)</title><rect x="35.0000%" y="229" width="1.3533%" height="15" fill="rgb(245,132,34)" fg:x="11949" fg:w="462"/><text x="35.2500%" y="239.50"></text></g><g><title>extent_activate_locked (204 samples, 0.60%)</title><rect x="35.7557%" y="213" width="0.5975%" height="15" fill="rgb(236,54,3)" fg:x="12207" fg:w="204"/><text x="36.0057%" y="223.50"></text></g><g><title>_rjem_je_eset_remove (138 samples, 0.40%)</title><rect x="35.9490%" y="197" width="0.4042%" height="15" fill="rgb(241,173,43)" fg:x="12273" fg:w="138"/><text x="36.1990%" y="207.50"></text></g><g><title>sz_psz2ind (16 samples, 0.05%)</title><rect x="36.3064%" y="181" width="0.0469%" height="15" fill="rgb(215,190,9)" fg:x="12395" fg:w="16"/><text x="36.5564%" y="191.50"></text></g><g><title>rtree_leaf_elm_lookup (5 samples, 0.01%)</title><rect x="36.4236%" y="165" width="0.0146%" height="15" fill="rgb(242,101,16)" fg:x="12435" fg:w="5"/><text x="36.6736%" y="175.50"></text></g><g><title>_rjem_je_emap_update_edata_state (180 samples, 0.53%)</title><rect x="36.3972%" y="181" width="0.5272%" height="15" fill="rgb(223,190,21)" fg:x="12426" fg:w="180"/><text x="36.6472%" y="191.50"></text></g><g><title>rtree_leaf_elm_state_update (166 samples, 0.49%)</title><rect x="36.4382%" y="165" width="0.4862%" height="15" fill="rgb(215,228,25)" fg:x="12440" fg:w="166"/><text x="36.6882%" y="175.50"></text></g><g><title>rtree_leaf_elm_bits_read (165 samples, 0.48%)</title><rect x="36.4411%" y="149" width="0.4833%" height="15" fill="rgb(225,36,22)" fg:x="12441" fg:w="165"/><text x="36.6911%" y="159.50"></text></g><g><title>atomic_load_p (165 samples, 0.48%)</title><rect x="36.4411%" y="133" width="0.4833%" height="15" fill="rgb(251,106,46)" fg:x="12441" fg:w="165"/><text x="36.6911%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_empty (19 samples, 0.06%)</title><rect x="36.9596%" y="165" width="0.0557%" height="15" fill="rgb(208,90,1)" fg:x="12618" fg:w="19"/><text x="37.2096%" y="175.50"></text></g><g><title>phn_link_init (4 samples, 0.01%)</title><rect x="37.0533%" y="133" width="0.0117%" height="15" fill="rgb(243,10,4)" fg:x="12650" fg:w="4"/><text x="37.3033%" y="143.50"></text></g><g><title>_rjem_je_edata_heap_insert (18 samples, 0.05%)</title><rect x="37.0152%" y="165" width="0.0527%" height="15" fill="rgb(212,137,27)" fg:x="12637" fg:w="18"/><text x="37.2652%" y="175.50"></text></g><g><title>ph_insert (15 samples, 0.04%)</title><rect x="37.0240%" y="149" width="0.0439%" height="15" fill="rgb(231,220,49)" fg:x="12640" fg:w="15"/><text x="37.2740%" y="159.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (10 samples, 0.03%)</title><rect x="37.0680%" y="165" width="0.0293%" height="15" fill="rgb(237,96,20)" fg:x="12655" fg:w="10"/><text x="37.3180%" y="175.50"></text></g><g><title>sz_psz2ind (6 samples, 0.02%)</title><rect x="37.0797%" y="149" width="0.0176%" height="15" fill="rgb(239,229,30)" fg:x="12659" fg:w="6"/><text x="37.3297%" y="159.50"></text></g><g><title>edata_cmp_summary_get (5 samples, 0.01%)</title><rect x="37.1002%" y="165" width="0.0146%" height="15" fill="rgb(219,65,33)" fg:x="12666" fg:w="5"/><text x="37.3502%" y="175.50"></text></g><g><title>edata_list_inactive_append (10 samples, 0.03%)</title><rect x="37.1148%" y="165" width="0.0293%" height="15" fill="rgb(243,134,7)" fg:x="12671" fg:w="10"/><text x="37.3648%" y="175.50"></text></g><g><title>atomic_load_zu (6 samples, 0.02%)</title><rect x="37.1500%" y="149" width="0.0176%" height="15" fill="rgb(216,177,54)" fg:x="12683" fg:w="6"/><text x="37.4000%" y="159.50"></text></g><g><title>eset_stats_add (13 samples, 0.04%)</title><rect x="37.1470%" y="165" width="0.0381%" height="15" fill="rgb(211,160,20)" fg:x="12682" fg:w="13"/><text x="37.3970%" y="175.50"></text></g><g><title>atomic_store_zu (6 samples, 0.02%)</title><rect x="37.1675%" y="149" width="0.0176%" height="15" fill="rgb(239,85,39)" fg:x="12689" fg:w="6"/><text x="37.4175%" y="159.50"></text></g><g><title>extent_deactivate_locked (296 samples, 0.87%)</title><rect x="36.3533%" y="213" width="0.8670%" height="15" fill="rgb(232,125,22)" fg:x="12411" fg:w="296"/><text x="36.6033%" y="223.50"></text></g><g><title>extent_deactivate_locked_impl (296 samples, 0.87%)</title><rect x="36.3533%" y="197" width="0.8670%" height="15" fill="rgb(244,57,34)" fg:x="12411" fg:w="296"/><text x="36.6033%" y="207.50"></text></g><g><title>_rjem_je_eset_insert (101 samples, 0.30%)</title><rect x="36.9244%" y="181" width="0.2958%" height="15" fill="rgb(214,203,32)" fg:x="12606" fg:w="101"/><text x="37.1744%" y="191.50"></text></g><g><title>sz_psz2ind (11 samples, 0.03%)</title><rect x="37.1880%" y="165" width="0.0322%" height="15" fill="rgb(207,58,43)" fg:x="12696" fg:w="11"/><text x="37.4380%" y="175.50"></text></g><g><title>edata_avail_ph_cmp (12 samples, 0.04%)</title><rect x="37.4136%" y="85" width="0.0351%" height="15" fill="rgb(215,193,15)" fg:x="12773" fg:w="12"/><text x="37.6636%" y="95.50"></text></g><g><title>edata_esnead_comp (12 samples, 0.04%)</title><rect x="37.4136%" y="69" width="0.0351%" height="15" fill="rgb(232,15,44)" fg:x="12773" fg:w="12"/><text x="37.6636%" y="79.50"></text></g><g><title>edata_esn_comp (10 samples, 0.03%)</title><rect x="37.4194%" y="53" width="0.0293%" height="15" fill="rgb(212,3,48)" fg:x="12775" fg:w="10"/><text x="37.6694%" y="63.50"></text></g><g><title>edata_esn_get (10 samples, 0.03%)</title><rect x="37.4194%" y="37" width="0.0293%" height="15" fill="rgb(218,128,7)" fg:x="12775" fg:w="10"/><text x="37.6694%" y="47.50"></text></g><g><title>phn_merge (13 samples, 0.04%)</title><rect x="37.4136%" y="101" width="0.0381%" height="15" fill="rgb(226,216,39)" fg:x="12773" fg:w="13"/><text x="37.6636%" y="111.50"></text></g><g><title>phn_next_get (13 samples, 0.04%)</title><rect x="37.4517%" y="101" width="0.0381%" height="15" fill="rgb(243,47,51)" fg:x="12786" fg:w="13"/><text x="37.7017%" y="111.50"></text></g><g><title>phn_merge_siblings (28 samples, 0.08%)</title><rect x="37.4136%" y="117" width="0.0820%" height="15" fill="rgb(241,183,40)" fg:x="12773" fg:w="28"/><text x="37.6636%" y="127.50"></text></g><g><title>_rjem_je_edata_avail_first (50 samples, 0.15%)</title><rect x="37.3755%" y="165" width="0.1465%" height="15" fill="rgb(231,217,32)" fg:x="12760" fg:w="50"/><text x="37.6255%" y="175.50"></text></g><g><title>ph_first (45 samples, 0.13%)</title><rect x="37.3902%" y="149" width="0.1318%" height="15" fill="rgb(229,61,38)" fg:x="12765" fg:w="45"/><text x="37.6402%" y="159.50"></text></g><g><title>ph_merge_aux (38 samples, 0.11%)</title><rect x="37.4107%" y="133" width="0.1113%" height="15" fill="rgb(225,210,5)" fg:x="12772" fg:w="38"/><text x="37.6607%" y="143.50"></text></g><g><title>phn_next_get (9 samples, 0.03%)</title><rect x="37.4956%" y="117" width="0.0264%" height="15" fill="rgb(231,79,45)" fg:x="12801" fg:w="9"/><text x="37.7456%" y="127.50"></text></g><g><title>edata_ead_comp (4 samples, 0.01%)</title><rect x="37.6011%" y="53" width="0.0117%" height="15" fill="rgb(224,100,7)" fg:x="12837" fg:w="4"/><text x="37.8511%" y="63.50"></text></g><g><title>edata_avail_ph_cmp (16 samples, 0.05%)</title><rect x="37.5981%" y="85" width="0.0469%" height="15" fill="rgb(241,198,18)" fg:x="12836" fg:w="16"/><text x="37.8481%" y="95.50"></text></g><g><title>edata_esnead_comp (16 samples, 0.05%)</title><rect x="37.5981%" y="69" width="0.0469%" height="15" fill="rgb(252,97,53)" fg:x="12836" fg:w="16"/><text x="37.8481%" y="79.50"></text></g><g><title>edata_esn_comp (11 samples, 0.03%)</title><rect x="37.6128%" y="53" width="0.0322%" height="15" fill="rgb(220,88,7)" fg:x="12841" fg:w="11"/><text x="37.8628%" y="63.50"></text></g><g><title>edata_esn_get (9 samples, 0.03%)</title><rect x="37.6186%" y="37" width="0.0264%" height="15" fill="rgb(213,176,14)" fg:x="12843" fg:w="9"/><text x="37.8686%" y="47.50"></text></g><g><title>phn_lchild_get (7 samples, 0.02%)</title><rect x="37.6450%" y="69" width="0.0205%" height="15" fill="rgb(246,73,7)" fg:x="12852" fg:w="7"/><text x="37.8950%" y="79.50"></text></g><g><title>phn_lchild_set (5 samples, 0.01%)</title><rect x="37.6655%" y="69" width="0.0146%" height="15" fill="rgb(245,64,36)" fg:x="12859" fg:w="5"/><text x="37.9155%" y="79.50"></text></g><g><title>phn_merge (40 samples, 0.12%)</title><rect x="37.5952%" y="101" width="0.1172%" height="15" fill="rgb(245,80,10)" fg:x="12835" fg:w="40"/><text x="37.8452%" y="111.50"></text></g><g><title>phn_merge_ordered (23 samples, 0.07%)</title><rect x="37.6450%" y="85" width="0.0674%" height="15" fill="rgb(232,107,50)" fg:x="12852" fg:w="23"/><text x="37.8950%" y="95.50"></text></g><g><title>phn_prev_set (11 samples, 0.03%)</title><rect x="37.6801%" y="69" width="0.0322%" height="15" fill="rgb(253,3,0)" fg:x="12864" fg:w="11"/><text x="37.9301%" y="79.50"></text></g><g><title>phn_next_get (126 samples, 0.37%)</title><rect x="37.7124%" y="101" width="0.3691%" height="15" fill="rgb(212,99,53)" fg:x="12875" fg:w="126"/><text x="37.9624%" y="111.50"></text></g><g><title>phn_next_set (7 samples, 0.02%)</title><rect x="38.0814%" y="101" width="0.0205%" height="15" fill="rgb(249,111,54)" fg:x="13001" fg:w="7"/><text x="38.3314%" y="111.50"></text></g><g><title>ph_merge_children (191 samples, 0.56%)</title><rect x="37.5747%" y="133" width="0.5595%" height="15" fill="rgb(249,55,30)" fg:x="12828" fg:w="191"/><text x="37.8247%" y="143.50"></text></g><g><title>phn_merge_siblings (191 samples, 0.56%)</title><rect x="37.5747%" y="117" width="0.5595%" height="15" fill="rgb(237,47,42)" fg:x="12828" fg:w="191"/><text x="37.8247%" y="127.50"></text></g><g><title>phn_prev_set (11 samples, 0.03%)</title><rect x="38.1019%" y="101" width="0.0322%" height="15" fill="rgb(211,20,18)" fg:x="13008" fg:w="11"/><text x="38.3519%" y="111.50"></text></g><g><title>phn_lchild_get (4 samples, 0.01%)</title><rect x="38.1342%" y="133" width="0.0117%" height="15" fill="rgb(231,203,46)" fg:x="13019" fg:w="4"/><text x="38.3842%" y="143.50"></text></g><g><title>_rjem_je_edata_avail_remove (215 samples, 0.63%)</title><rect x="37.5220%" y="165" width="0.6298%" height="15" fill="rgb(237,142,3)" fg:x="12810" fg:w="215"/><text x="37.7720%" y="175.50"></text></g><g><title>ph_remove (209 samples, 0.61%)</title><rect x="37.5395%" y="149" width="0.6122%" height="15" fill="rgb(241,107,1)" fg:x="12816" fg:w="209"/><text x="37.7895%" y="159.50"></text></g><g><title>malloc_mutex_trylock_final (46 samples, 0.13%)</title><rect x="38.1634%" y="149" width="0.1347%" height="15" fill="rgb(229,83,13)" fg:x="13029" fg:w="46"/><text x="38.4134%" y="159.50"></text></g><g><title>pthread_mutex_trylock (45 samples, 0.13%)</title><rect x="38.1664%" y="133" width="0.1318%" height="15" fill="rgb(241,91,40)" fg:x="13030" fg:w="45"/><text x="38.4164%" y="143.50"></text></g><g><title>malloc_mutex_lock (48 samples, 0.14%)</title><rect x="38.1605%" y="165" width="0.1406%" height="15" fill="rgb(225,3,45)" fg:x="13028" fg:w="48"/><text x="38.4105%" y="175.50"></text></g><g><title>[libc.so.6] (71 samples, 0.21%)</title><rect x="38.3011%" y="149" width="0.2080%" height="15" fill="rgb(244,223,14)" fg:x="13076" fg:w="71"/><text x="38.5511%" y="159.50"></text></g><g><title>pthread_mutex_unlock (38 samples, 0.11%)</title><rect x="38.5091%" y="149" width="0.1113%" height="15" fill="rgb(224,124,37)" fg:x="13147" fg:w="38"/><text x="38.7591%" y="159.50"></text></g><g><title>_rjem_je_edata_cache_get (434 samples, 1.27%)</title><rect x="37.3638%" y="181" width="1.2712%" height="15" fill="rgb(251,171,30)" fg:x="12756" fg:w="434"/><text x="37.6138%" y="191.50"></text></g><g><title>malloc_mutex_unlock (114 samples, 0.33%)</title><rect x="38.3011%" y="165" width="0.3339%" height="15" fill="rgb(236,46,54)" fg:x="13076" fg:w="114"/><text x="38.5511%" y="175.50"></text></g><g><title>pthread_mutex_unlock@plt (5 samples, 0.01%)</title><rect x="38.6204%" y="149" width="0.0146%" height="15" fill="rgb(245,213,5)" fg:x="13185" fg:w="5"/><text x="38.8704%" y="159.50"></text></g><g><title>rtree_contents_encode (10 samples, 0.03%)</title><rect x="38.6643%" y="133" width="0.0293%" height="15" fill="rgb(230,144,27)" fg:x="13200" fg:w="10"/><text x="38.9143%" y="143.50"></text></g><g><title>rtree_leaf_elm_bits_encode (10 samples, 0.03%)</title><rect x="38.6643%" y="117" width="0.0293%" height="15" fill="rgb(220,86,6)" fg:x="13200" fg:w="10"/><text x="38.9143%" y="127.50"></text></g><g><title>_rjem_je_emap_split_commit (22 samples, 0.06%)</title><rect x="38.6350%" y="181" width="0.0644%" height="15" fill="rgb(240,20,13)" fg:x="13190" fg:w="22"/><text x="38.8850%" y="191.50"></text></g><g><title>emap_rtree_write_acquired (17 samples, 0.05%)</title><rect x="38.6497%" y="165" width="0.0498%" height="15" fill="rgb(217,89,34)" fg:x="13195" fg:w="17"/><text x="38.8997%" y="175.50"></text></g><g><title>rtree_leaf_elm_write (12 samples, 0.04%)</title><rect x="38.6643%" y="149" width="0.0351%" height="15" fill="rgb(229,13,5)" fg:x="13200" fg:w="12"/><text x="38.9143%" y="159.50"></text></g><g><title>edata_base_get (6 samples, 0.02%)</title><rect x="38.7376%" y="149" width="0.0176%" height="15" fill="rgb(244,67,35)" fg:x="13225" fg:w="6"/><text x="38.9876%" y="159.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (22 samples, 0.06%)</title><rect x="38.7288%" y="165" width="0.0644%" height="15" fill="rgb(221,40,2)" fg:x="13222" fg:w="22"/><text x="38.9788%" y="175.50"></text></g><g><title>rtree_leaf_elm_lookup (12 samples, 0.04%)</title><rect x="38.7581%" y="149" width="0.0351%" height="15" fill="rgb(237,157,21)" fg:x="13232" fg:w="12"/><text x="39.0081%" y="159.50"></text></g><g><title>_rjem_je_emap_split_prepare (33 samples, 0.10%)</title><rect x="38.6995%" y="181" width="0.0967%" height="15" fill="rgb(222,94,11)" fg:x="13212" fg:w="33"/><text x="38.9495%" y="191.50"></text></g><g><title>edata_size_set (5 samples, 0.01%)</title><rect x="38.8049%" y="165" width="0.0146%" height="15" fill="rgb(249,113,6)" fg:x="13248" fg:w="5"/><text x="39.0549%" y="175.50"></text></g><g><title>edata_init (10 samples, 0.03%)</title><rect x="38.7991%" y="181" width="0.0293%" height="15" fill="rgb(238,137,36)" fg:x="13246" fg:w="10"/><text x="39.0491%" y="191.50"></text></g><g><title>ehooks_split (13 samples, 0.04%)</title><rect x="38.8313%" y="181" width="0.0381%" height="15" fill="rgb(210,102,26)" fg:x="13257" fg:w="13"/><text x="39.0813%" y="191.50"></text></g><g><title>extent_recycle_split (863 samples, 2.53%)</title><rect x="36.3533%" y="229" width="2.5278%" height="15" fill="rgb(218,30,30)" fg:x="12411" fg:w="863"/><text x="36.6033%" y="239.50">ex..</text></g><g><title>extent_split_interior (567 samples, 1.66%)</title><rect x="37.2203%" y="213" width="1.6608%" height="15" fill="rgb(214,67,26)" fg:x="12707" fg:w="567"/><text x="37.4703%" y="223.50"></text></g><g><title>extent_split_impl (559 samples, 1.64%)</title><rect x="37.2437%" y="197" width="1.6374%" height="15" fill="rgb(251,9,53)" fg:x="12715" fg:w="559"/><text x="37.4937%" y="207.50"></text></g><g><title>ehooks_split_will_fail (4 samples, 0.01%)</title><rect x="38.8694%" y="181" width="0.0117%" height="15" fill="rgb(228,204,25)" fg:x="13270" fg:w="4"/><text x="39.1194%" y="191.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (4 samples, 0.01%)</title><rect x="38.8694%" y="165" width="0.0117%" height="15" fill="rgb(207,153,8)" fg:x="13270" fg:w="4"/><text x="39.1194%" y="175.50"></text></g><g><title>atomic_load_p (4 samples, 0.01%)</title><rect x="38.8694%" y="149" width="0.0117%" height="15" fill="rgb(242,9,16)" fg:x="13270" fg:w="4"/><text x="39.1194%" y="159.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (5 samples, 0.01%)</title><rect x="38.8811%" y="213" width="0.0146%" height="15" fill="rgb(217,211,10)" fg:x="13274" fg:w="5"/><text x="39.1311%" y="223.50"></text></g><g><title>pthread_mutex_trylock (152 samples, 0.45%)</title><rect x="38.8987%" y="197" width="0.4452%" height="15" fill="rgb(219,228,52)" fg:x="13280" fg:w="152"/><text x="39.1487%" y="207.50"></text></g><g><title>malloc_mutex_trylock_final (175 samples, 0.51%)</title><rect x="38.8957%" y="213" width="0.5126%" height="15" fill="rgb(231,92,29)" fg:x="13279" fg:w="175"/><text x="39.1457%" y="223.50"></text></g><g><title>pthread_mutex_trylock@plt (22 samples, 0.06%)</title><rect x="39.3439%" y="197" width="0.0644%" height="15" fill="rgb(232,8,23)" fg:x="13432" fg:w="22"/><text x="39.5939%" y="207.50"></text></g><g><title>malloc_mutex_lock (184 samples, 0.54%)</title><rect x="38.8811%" y="229" width="0.5390%" height="15" fill="rgb(216,211,34)" fg:x="13274" fg:w="184"/><text x="39.1311%" y="239.50"></text></g><g><title>mutex_owner_stats_update (4 samples, 0.01%)</title><rect x="39.4083%" y="213" width="0.0117%" height="15" fill="rgb(236,151,0)" fg:x="13454" fg:w="4"/><text x="39.6583%" y="223.50"></text></g><g><title>[libc.so.6] (51 samples, 0.15%)</title><rect x="39.4200%" y="213" width="0.1494%" height="15" fill="rgb(209,168,3)" fg:x="13458" fg:w="51"/><text x="39.6700%" y="223.50"></text></g><g><title>_rjem_je_ecache_alloc (1,603 samples, 4.70%)</title><rect x="34.8946%" y="261" width="4.6954%" height="15" fill="rgb(208,129,28)" fg:x="11913" fg:w="1603"/><text x="35.1446%" y="271.50">_rjem..</text></g><g><title>extent_recycle (1,591 samples, 4.66%)</title><rect x="34.9297%" y="245" width="4.6602%" height="15" fill="rgb(229,78,22)" fg:x="11925" fg:w="1591"/><text x="35.1797%" y="255.50">exten..</text></g><g><title>malloc_mutex_unlock (58 samples, 0.17%)</title><rect x="39.4200%" y="229" width="0.1699%" height="15" fill="rgb(228,187,13)" fg:x="13458" fg:w="58"/><text x="39.6700%" y="239.50"></text></g><g><title>_rjem_je_eset_fit (4 samples, 0.01%)</title><rect x="39.5929%" y="197" width="0.0117%" height="15" fill="rgb(240,119,24)" fg:x="13517" fg:w="4"/><text x="39.8429%" y="207.50"></text></g><g><title>eset_first_fit (4 samples, 0.01%)</title><rect x="39.5929%" y="181" width="0.0117%" height="15" fill="rgb(209,194,42)" fg:x="13517" fg:w="4"/><text x="39.8429%" y="191.50"></text></g><g><title>extent_recycle_extract (9 samples, 0.03%)</title><rect x="39.5929%" y="213" width="0.0264%" height="15" fill="rgb(247,200,46)" fg:x="13517" fg:w="9"/><text x="39.8429%" y="223.50"></text></g><g><title>extent_activate_locked (5 samples, 0.01%)</title><rect x="39.6046%" y="197" width="0.0146%" height="15" fill="rgb(218,76,16)" fg:x="13521" fg:w="5"/><text x="39.8546%" y="207.50"></text></g><g><title>_rjem_je_emap_update_edata_state (6 samples, 0.02%)</title><rect x="39.6251%" y="165" width="0.0176%" height="15" fill="rgb(225,21,48)" fg:x="13528" fg:w="6"/><text x="39.8751%" y="175.50"></text></g><g><title>rtree_leaf_elm_state_update (6 samples, 0.02%)</title><rect x="39.6251%" y="149" width="0.0176%" height="15" fill="rgb(239,223,50)" fg:x="13528" fg:w="6"/><text x="39.8751%" y="159.50"></text></g><g><title>rtree_leaf_elm_bits_read (6 samples, 0.02%)</title><rect x="39.6251%" y="133" width="0.0176%" height="15" fill="rgb(244,45,21)" fg:x="13528" fg:w="6"/><text x="39.8751%" y="143.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="39.6251%" y="117" width="0.0176%" height="15" fill="rgb(232,33,43)" fg:x="13528" fg:w="6"/><text x="39.8751%" y="127.50"></text></g><g><title>extent_deactivate_locked (9 samples, 0.03%)</title><rect x="39.6192%" y="197" width="0.0264%" height="15" fill="rgb(209,8,3)" fg:x="13526" fg:w="9"/><text x="39.8692%" y="207.50"></text></g><g><title>extent_deactivate_locked_impl (9 samples, 0.03%)</title><rect x="39.6192%" y="181" width="0.0264%" height="15" fill="rgb(214,25,53)" fg:x="13526" fg:w="9"/><text x="39.8692%" y="191.50"></text></g><g><title>_rjem_je_edata_cache_get (5 samples, 0.01%)</title><rect x="39.6514%" y="165" width="0.0146%" height="15" fill="rgb(254,186,54)" fg:x="13537" fg:w="5"/><text x="39.9014%" y="175.50"></text></g><g><title>extent_recycle_split (17 samples, 0.05%)</title><rect x="39.6192%" y="213" width="0.0498%" height="15" fill="rgb(208,174,49)" fg:x="13526" fg:w="17"/><text x="39.8692%" y="223.50"></text></g><g><title>extent_split_interior (8 samples, 0.02%)</title><rect x="39.6456%" y="197" width="0.0234%" height="15" fill="rgb(233,191,51)" fg:x="13535" fg:w="8"/><text x="39.8956%" y="207.50"></text></g><g><title>extent_split_impl (7 samples, 0.02%)</title><rect x="39.6485%" y="181" width="0.0205%" height="15" fill="rgb(222,134,10)" fg:x="13536" fg:w="7"/><text x="39.8985%" y="191.50"></text></g><g><title>extent_recycle (28 samples, 0.08%)</title><rect x="39.5929%" y="229" width="0.0820%" height="15" fill="rgb(230,226,20)" fg:x="13517" fg:w="28"/><text x="39.8429%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc_grow (31 samples, 0.09%)</title><rect x="39.5899%" y="261" width="0.0908%" height="15" fill="rgb(251,111,25)" fg:x="13516" fg:w="31"/><text x="39.8399%" y="271.50"></text></g><g><title>extent_alloc_retained (31 samples, 0.09%)</title><rect x="39.5899%" y="245" width="0.0908%" height="15" fill="rgb(224,40,46)" fg:x="13516" fg:w="31"/><text x="39.8399%" y="255.50"></text></g><g><title>pac_alloc_real (1,644 samples, 4.82%)</title><rect x="34.8711%" y="277" width="4.8155%" height="15" fill="rgb(236,108,47)" fg:x="11905" fg:w="1644"/><text x="35.1211%" y="287.50">pac_al..</text></g><g><title>pac_alloc_impl (1,702 samples, 4.99%)</title><rect x="34.7950%" y="293" width="4.9854%" height="15" fill="rgb(234,93,0)" fg:x="11879" fg:w="1702"/><text x="35.0450%" y="303.50">pac_al..</text></g><g><title>pac_ehooks_get (32 samples, 0.09%)</title><rect x="39.6866%" y="277" width="0.0937%" height="15" fill="rgb(224,213,32)" fg:x="13549" fg:w="32"/><text x="39.9366%" y="287.50"></text></g><g><title>_rjem_je_pa_alloc (1,783 samples, 5.22%)</title><rect x="34.5636%" y="325" width="5.2226%" height="15" fill="rgb(251,11,48)" fg:x="11800" fg:w="1783"/><text x="34.8136%" y="335.50">_rjem_..</text></g><g><title>pai_alloc (1,708 samples, 5.00%)</title><rect x="34.7832%" y="309" width="5.0029%" height="15" fill="rgb(236,173,5)" fg:x="11875" fg:w="1708"/><text x="35.0332%" y="319.50">pai_al..</text></g><g><title>arena_cache_oblivious_randomize (5 samples, 0.01%)</title><rect x="39.7862%" y="325" width="0.0146%" height="15" fill="rgb(230,95,12)" fg:x="13583" fg:w="5"/><text x="40.0362%" y="335.50"></text></g><g><title>locked_inc_u64 (37 samples, 0.11%)</title><rect x="39.8067%" y="309" width="0.1084%" height="15" fill="rgb(232,209,1)" fg:x="13590" fg:w="37"/><text x="40.0567%" y="319.50"></text></g><g><title>atomic_fetch_add_u64 (37 samples, 0.11%)</title><rect x="39.8067%" y="293" width="0.1084%" height="15" fill="rgb(232,6,1)" fg:x="13590" fg:w="37"/><text x="40.0567%" y="303.50"></text></g><g><title>arena_large_malloc_stats_update (47 samples, 0.14%)</title><rect x="39.8008%" y="325" width="0.1377%" height="15" fill="rgb(210,224,50)" fg:x="13588" fg:w="47"/><text x="40.0508%" y="335.50"></text></g><g><title>sz_size2index (8 samples, 0.02%)</title><rect x="39.9151%" y="309" width="0.0234%" height="15" fill="rgb(228,127,35)" fg:x="13627" fg:w="8"/><text x="40.1651%" y="319.50"></text></g><g><title>sz_size2index_compute (8 samples, 0.02%)</title><rect x="39.9151%" y="293" width="0.0234%" height="15" fill="rgb(245,102,45)" fg:x="13627" fg:w="8"/><text x="40.1651%" y="303.50"></text></g><g><title>san_large_extent_decide_guard (13 samples, 0.04%)</title><rect x="39.9414%" y="325" width="0.0381%" height="15" fill="rgb(214,1,49)" fg:x="13636" fg:w="13"/><text x="40.1914%" y="335.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (1,902 samples, 5.57%)</title><rect x="34.4610%" y="341" width="5.5712%" height="15" fill="rgb(226,163,40)" fg:x="11765" fg:w="1902"/><text x="34.7110%" y="351.50">_rjem_j..</text></g><g><title>sz_size2index (18 samples, 0.05%)</title><rect x="39.9795%" y="325" width="0.0527%" height="15" fill="rgb(239,212,28)" fg:x="13649" fg:w="18"/><text x="40.2295%" y="335.50"></text></g><g><title>sz_size2index_compute (17 samples, 0.05%)</title><rect x="39.9824%" y="309" width="0.0498%" height="15" fill="rgb(220,20,13)" fg:x="13650" fg:w="17"/><text x="40.2324%" y="319.50"></text></g><g><title>arena_choose_maybe_huge (6 samples, 0.02%)</title><rect x="40.0322%" y="341" width="0.0176%" height="15" fill="rgb(210,164,35)" fg:x="13667" fg:w="6"/><text x="40.2822%" y="351.50"></text></g><g><title>_rjem_je_arena_decay (4 samples, 0.01%)</title><rect x="40.0557%" y="309" width="0.0117%" height="15" fill="rgb(248,109,41)" fg:x="13675" fg:w="4"/><text x="40.3057%" y="319.50"></text></g><g><title>arena_decay_dirty (4 samples, 0.01%)</title><rect x="40.0557%" y="293" width="0.0117%" height="15" fill="rgb(238,23,50)" fg:x="13675" fg:w="4"/><text x="40.3057%" y="303.50"></text></g><g><title>arena_decay_tick (8 samples, 0.02%)</title><rect x="40.0498%" y="341" width="0.0234%" height="15" fill="rgb(211,48,49)" fg:x="13673" fg:w="8"/><text x="40.2998%" y="351.50"></text></g><g><title>arena_decay_ticks (8 samples, 0.02%)</title><rect x="40.0498%" y="325" width="0.0234%" height="15" fill="rgb(223,36,21)" fg:x="13673" fg:w="8"/><text x="40.2998%" y="335.50"></text></g><g><title>_rjem_je_large_palloc (1,965 samples, 5.76%)</title><rect x="34.4230%" y="357" width="5.7557%" height="15" fill="rgb(207,123,46)" fg:x="11752" fg:w="1965"/><text x="34.6730%" y="367.50">_rjem_j..</text></g><g><title>sz_sa2u (36 samples, 0.11%)</title><rect x="40.0732%" y="341" width="0.1054%" height="15" fill="rgb(240,218,32)" fg:x="13681" fg:w="36"/><text x="40.3232%" y="351.50"></text></g><g><title>sz_s2u (9 samples, 0.03%)</title><rect x="40.1523%" y="325" width="0.0264%" height="15" fill="rgb(252,5,43)" fg:x="13708" fg:w="9"/><text x="40.4023%" y="335.50"></text></g><g><title>sz_s2u_compute (9 samples, 0.03%)</title><rect x="40.1523%" y="309" width="0.0264%" height="15" fill="rgb(252,84,19)" fg:x="13708" fg:w="9"/><text x="40.4023%" y="319.50"></text></g><g><title>arena_slab_alloc (6 samples, 0.02%)</title><rect x="40.1875%" y="309" width="0.0176%" height="15" fill="rgb(243,152,39)" fg:x="13720" fg:w="6"/><text x="40.4375%" y="319.50"></text></g><g><title>_rjem_je_pa_alloc (5 samples, 0.01%)</title><rect x="40.1904%" y="293" width="0.0146%" height="15" fill="rgb(234,160,15)" fg:x="13721" fg:w="5"/><text x="40.4404%" y="303.50"></text></g><g><title>pai_alloc (5 samples, 0.01%)</title><rect x="40.1904%" y="277" width="0.0146%" height="15" fill="rgb(237,34,20)" fg:x="13721" fg:w="5"/><text x="40.4404%" y="287.50"></text></g><g><title>pac_alloc_impl (5 samples, 0.01%)</title><rect x="40.1904%" y="261" width="0.0146%" height="15" fill="rgb(229,97,13)" fg:x="13721" fg:w="5"/><text x="40.4404%" y="271.50"></text></g><g><title>pac_alloc_real (4 samples, 0.01%)</title><rect x="40.1933%" y="245" width="0.0117%" height="15" fill="rgb(234,71,50)" fg:x="13722" fg:w="4"/><text x="40.4433%" y="255.50"></text></g><g><title>_rjem_je_ecache_alloc (4 samples, 0.01%)</title><rect x="40.1933%" y="229" width="0.0117%" height="15" fill="rgb(253,155,4)" fg:x="13722" fg:w="4"/><text x="40.4433%" y="239.50"></text></g><g><title>extent_recycle (4 samples, 0.01%)</title><rect x="40.1933%" y="213" width="0.0117%" height="15" fill="rgb(222,185,37)" fg:x="13722" fg:w="4"/><text x="40.4433%" y="223.50"></text></g><g><title>malloc_mutex_lock (8 samples, 0.02%)</title><rect x="40.2080%" y="309" width="0.0234%" height="15" fill="rgb(251,177,13)" fg:x="13727" fg:w="8"/><text x="40.4580%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (8 samples, 0.02%)</title><rect x="40.2080%" y="293" width="0.0234%" height="15" fill="rgb(250,179,40)" fg:x="13727" fg:w="8"/><text x="40.4580%" y="303.50"></text></g><g><title>pthread_mutex_trylock (8 samples, 0.02%)</title><rect x="40.2080%" y="277" width="0.0234%" height="15" fill="rgb(242,44,2)" fg:x="13727" fg:w="8"/><text x="40.4580%" y="287.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (19 samples, 0.06%)</title><rect x="40.1787%" y="341" width="0.0557%" height="15" fill="rgb(216,177,13)" fg:x="13717" fg:w="19"/><text x="40.4287%" y="351.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (19 samples, 0.06%)</title><rect x="40.1787%" y="325" width="0.0557%" height="15" fill="rgb(216,106,43)" fg:x="13717" fg:w="19"/><text x="40.4287%" y="335.50"></text></g><g><title>iallocztm (2,048 samples, 6.00%)</title><rect x="34.2677%" y="389" width="5.9988%" height="15" fill="rgb(216,183,2)" fg:x="11699" fg:w="2048"/><text x="34.5177%" y="399.50">iallocztm</text></g><g><title>arena_malloc (2,048 samples, 6.00%)</title><rect x="34.2677%" y="373" width="5.9988%" height="15" fill="rgb(249,75,3)" fg:x="11699" fg:w="2048"/><text x="34.5177%" y="383.50">arena_ma..</text></g><g><title>tcache_alloc_small (30 samples, 0.09%)</title><rect x="40.1787%" y="357" width="0.0879%" height="15" fill="rgb(219,67,39)" fg:x="13717" fg:w="30"/><text x="40.4287%" y="367.50"></text></g><g><title>cache_bin_alloc (11 samples, 0.03%)</title><rect x="40.2343%" y="341" width="0.0322%" height="15" fill="rgb(253,228,2)" fg:x="13736" fg:w="11"/><text x="40.4843%" y="351.50"></text></g><g><title>cache_bin_alloc_impl (11 samples, 0.03%)</title><rect x="40.2343%" y="325" width="0.0322%" height="15" fill="rgb(235,138,27)" fg:x="13736" fg:w="11"/><text x="40.4843%" y="335.50"></text></g><g><title>imalloc_no_sample (2,050 samples, 6.00%)</title><rect x="34.2677%" y="405" width="6.0047%" height="15" fill="rgb(236,97,51)" fg:x="11699" fg:w="2050"/><text x="34.5177%" y="415.50">imalloc_..</text></g><g><title>_rjem_je_peak_event_update (7 samples, 0.02%)</title><rect x="40.2783%" y="357" width="0.0205%" height="15" fill="rgb(240,80,30)" fg:x="13751" fg:w="7"/><text x="40.5283%" y="367.50"></text></g><g><title>peak_update (7 samples, 0.02%)</title><rect x="40.2783%" y="341" width="0.0205%" height="15" fill="rgb(230,178,19)" fg:x="13751" fg:w="7"/><text x="40.5283%" y="351.50"></text></g><g><title>_rjem_je_peak_alloc_event_handler (11 samples, 0.03%)</title><rect x="40.2783%" y="373" width="0.0322%" height="15" fill="rgb(210,190,27)" fg:x="13751" fg:w="11"/><text x="40.5283%" y="383.50"></text></g><g><title>peak_event_activity_callback (4 samples, 0.01%)</title><rect x="40.2988%" y="357" width="0.0117%" height="15" fill="rgb(222,107,31)" fg:x="13758" fg:w="4"/><text x="40.5488%" y="367.50"></text></g><g><title>cache_bin_ncached_get_local (12 samples, 0.04%)</title><rect x="40.5067%" y="309" width="0.0351%" height="15" fill="rgb(216,127,34)" fg:x="13829" fg:w="12"/><text x="40.7567%" y="319.50"></text></g><g><title>cache_bin_ncached_get_internal (12 samples, 0.04%)</title><rect x="40.5067%" y="293" width="0.0351%" height="15" fill="rgb(234,116,52)" fg:x="13829" fg:w="12"/><text x="40.7567%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (36 samples, 0.11%)</title><rect x="40.4745%" y="325" width="0.1054%" height="15" fill="rgb(222,124,15)" fg:x="13818" fg:w="36"/><text x="40.7245%" y="335.50"></text></g><g><title>cache_bin_nstashed_get_local (13 samples, 0.04%)</title><rect x="40.5419%" y="309" width="0.0381%" height="15" fill="rgb(231,179,28)" fg:x="13841" fg:w="13"/><text x="40.7919%" y="319.50"></text></g><g><title>cache_bin_nstashed_get_internal (13 samples, 0.04%)</title><rect x="40.5419%" y="293" width="0.0381%" height="15" fill="rgb(226,93,45)" fg:x="13841" fg:w="13"/><text x="40.7919%" y="303.50"></text></g><g><title>cache_bin_low_bits_low_bound_get (12 samples, 0.04%)</title><rect x="40.5448%" y="277" width="0.0351%" height="15" fill="rgb(215,8,51)" fg:x="13842" fg:w="12"/><text x="40.7948%" y="287.50"></text></g><g><title>cache_bin_low_water_set (6 samples, 0.02%)</title><rect x="40.5800%" y="325" width="0.0176%" height="15" fill="rgb(223,106,5)" fg:x="13854" fg:w="6"/><text x="40.8300%" y="335.50"></text></g><g><title>cache_bin_finish_flush (7 samples, 0.02%)</title><rect x="40.6034%" y="277" width="0.0205%" height="15" fill="rgb(250,191,5)" fg:x="13862" fg:w="7"/><text x="40.8534%" y="287.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (16 samples, 0.05%)</title><rect x="40.6415%" y="261" width="0.0469%" height="15" fill="rgb(242,132,44)" fg:x="13875" fg:w="16"/><text x="40.8915%" y="271.50"></text></g><g><title>pac_dalloc_impl (11 samples, 0.03%)</title><rect x="40.6561%" y="245" width="0.0322%" height="15" fill="rgb(251,152,29)" fg:x="13880" fg:w="11"/><text x="40.9061%" y="255.50"></text></g><g><title>_rjem_je_extent_record (7 samples, 0.02%)</title><rect x="40.6678%" y="229" width="0.0205%" height="15" fill="rgb(218,179,5)" fg:x="13884" fg:w="7"/><text x="40.9178%" y="239.50"></text></g><g><title>extent_try_coalesce_large (4 samples, 0.01%)</title><rect x="40.6766%" y="213" width="0.0117%" height="15" fill="rgb(227,67,19)" fg:x="13887" fg:w="4"/><text x="40.9266%" y="223.50"></text></g><g><title>extent_try_coalesce_impl (4 samples, 0.01%)</title><rect x="40.6766%" y="197" width="0.0117%" height="15" fill="rgb(233,119,31)" fg:x="13887" fg:w="4"/><text x="40.9266%" y="207.50"></text></g><g><title>arena_dalloc_bin_locked_step (8 samples, 0.02%)</title><rect x="40.6913%" y="261" width="0.0234%" height="15" fill="rgb(241,120,22)" fg:x="13892" fg:w="8"/><text x="40.9413%" y="271.50"></text></g><g><title>edata_arena_ind_get (11 samples, 0.03%)</title><rect x="40.7323%" y="261" width="0.0322%" height="15" fill="rgb(224,102,30)" fg:x="13906" fg:w="11"/><text x="40.9823%" y="271.50"></text></g><g><title>malloc_mutex_trylock_final (18 samples, 0.05%)</title><rect x="40.7674%" y="245" width="0.0527%" height="15" fill="rgb(210,164,37)" fg:x="13918" fg:w="18"/><text x="41.0174%" y="255.50"></text></g><g><title>pthread_mutex_trylock (18 samples, 0.05%)</title><rect x="40.7674%" y="229" width="0.0527%" height="15" fill="rgb(226,191,16)" fg:x="13918" fg:w="18"/><text x="41.0174%" y="239.50"></text></g><g><title>malloc_mutex_lock (19 samples, 0.06%)</title><rect x="40.7674%" y="261" width="0.0557%" height="15" fill="rgb(214,40,45)" fg:x="13918" fg:w="19"/><text x="41.0174%" y="271.50"></text></g><g><title>malloc_mutex_unlock (4 samples, 0.01%)</title><rect x="40.8231%" y="261" width="0.0117%" height="15" fill="rgb(244,29,26)" fg:x="13937" fg:w="4"/><text x="41.0731%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.01%)</title><rect x="40.8231%" y="245" width="0.0117%" height="15" fill="rgb(216,16,5)" fg:x="13937" fg:w="4"/><text x="41.0731%" y="255.50"></text></g><g><title>rtree_leaf_elm_read (13 samples, 0.04%)</title><rect x="40.8729%" y="229" width="0.0381%" height="15" fill="rgb(249,76,35)" fg:x="13954" fg:w="13"/><text x="41.1229%" y="239.50"></text></g><g><title>rtree_leaf_elm_bits_read (12 samples, 0.04%)</title><rect x="40.8758%" y="213" width="0.0351%" height="15" fill="rgb(207,11,44)" fg:x="13955" fg:w="12"/><text x="41.1258%" y="223.50"></text></g><g><title>atomic_load_p (12 samples, 0.04%)</title><rect x="40.8758%" y="197" width="0.0351%" height="15" fill="rgb(228,190,49)" fg:x="13955" fg:w="12"/><text x="41.1258%" y="207.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (29 samples, 0.08%)</title><rect x="40.8348%" y="261" width="0.0849%" height="15" fill="rgb(214,173,12)" fg:x="13941" fg:w="29"/><text x="41.0848%" y="271.50"></text></g><g><title>emap_edata_lookup_batch (29 samples, 0.08%)</title><rect x="40.8348%" y="245" width="0.0849%" height="15" fill="rgb(218,26,35)" fg:x="13941" fg:w="29"/><text x="41.0848%" y="255.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (110 samples, 0.32%)</title><rect x="40.6005%" y="309" width="0.3222%" height="15" fill="rgb(220,200,19)" fg:x="13861" fg:w="110"/><text x="40.8505%" y="319.50"></text></g><g><title>tcache_bin_flush_bottom (109 samples, 0.32%)</title><rect x="40.6034%" y="293" width="0.3193%" height="15" fill="rgb(239,95,49)" fg:x="13862" fg:w="109"/><text x="40.8534%" y="303.50"></text></g><g><title>tcache_bin_flush_impl (102 samples, 0.30%)</title><rect x="40.6239%" y="277" width="0.2988%" height="15" fill="rgb(235,85,53)" fg:x="13869" fg:w="102"/><text x="40.8739%" y="287.50"></text></g><g><title>tcache_gc_small (112 samples, 0.33%)</title><rect x="40.5975%" y="325" width="0.3281%" height="15" fill="rgb(233,133,31)" fg:x="13860" fg:w="112"/><text x="40.8475%" y="335.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (188 samples, 0.55%)</title><rect x="40.3954%" y="357" width="0.5507%" height="15" fill="rgb(218,25,20)" fg:x="13791" fg:w="188"/><text x="40.6454%" y="367.50"></text></g><g><title>tcache_event (183 samples, 0.54%)</title><rect x="40.4101%" y="341" width="0.5360%" height="15" fill="rgb(252,210,38)" fg:x="13796" fg:w="183"/><text x="40.6601%" y="351.50"></text></g><g><title>tcache_get (7 samples, 0.02%)</title><rect x="40.9256%" y="325" width="0.0205%" height="15" fill="rgb(242,134,21)" fg:x="13972" fg:w="7"/><text x="41.1756%" y="335.50"></text></g><g><title>tcache_available (7 samples, 0.02%)</title><rect x="40.9256%" y="309" width="0.0205%" height="15" fill="rgb(213,28,48)" fg:x="13972" fg:w="7"/><text x="41.1756%" y="319.50"></text></g><g><title>atomic_fence (21 samples, 0.06%)</title><rect x="40.9813%" y="293" width="0.0615%" height="15" fill="rgb(250,196,2)" fg:x="13991" fg:w="21"/><text x="41.2313%" y="303.50"></text></g><g><title>te_adjust_thresholds_helper (33 samples, 0.10%)</title><rect x="40.9695%" y="357" width="0.0967%" height="15" fill="rgb(227,5,17)" fg:x="13987" fg:w="33"/><text x="41.2195%" y="367.50"></text></g><g><title>te_ctx_next_event_set (33 samples, 0.10%)</title><rect x="40.9695%" y="341" width="0.0967%" height="15" fill="rgb(221,226,24)" fg:x="13987" fg:w="33"/><text x="41.2195%" y="351.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (29 samples, 0.08%)</title><rect x="40.9813%" y="325" width="0.0849%" height="15" fill="rgb(211,5,48)" fg:x="13991" fg:w="29"/><text x="41.2313%" y="335.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (29 samples, 0.08%)</title><rect x="40.9813%" y="309" width="0.0849%" height="15" fill="rgb(219,150,6)" fg:x="13991" fg:w="29"/><text x="41.2313%" y="319.50"></text></g><g><title>te_ctx_next_event_fast_update (8 samples, 0.02%)</title><rect x="41.0428%" y="293" width="0.0234%" height="15" fill="rgb(251,46,16)" fg:x="14012" fg:w="8"/><text x="41.2928%" y="303.50"></text></g><g><title>_rjem_je_te_event_trigger (260 samples, 0.76%)</title><rect x="40.3105%" y="373" width="0.7616%" height="15" fill="rgb(220,204,40)" fg:x="13762" fg:w="260"/><text x="40.5605%" y="383.50"></text></g><g><title>imalloc_body (2,378 samples, 6.97%)</title><rect x="34.1154%" y="421" width="6.9654%" height="15" fill="rgb(211,85,2)" fg:x="11647" fg:w="2378"/><text x="34.3654%" y="431.50">imalloc_b..</text></g><g><title>thread_alloc_event (276 samples, 0.81%)</title><rect x="40.2724%" y="405" width="0.8084%" height="15" fill="rgb(229,17,7)" fg:x="13749" fg:w="276"/><text x="40.5224%" y="415.50"></text></g><g><title>te_event_advance (276 samples, 0.81%)</title><rect x="40.2724%" y="389" width="0.8084%" height="15" fill="rgb(239,72,28)" fg:x="13749" fg:w="276"/><text x="40.5224%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (2,390 samples, 7.00%)</title><rect x="34.1008%" y="453" width="7.0006%" height="15" fill="rgb(230,47,54)" fg:x="11642" fg:w="2390"/><text x="34.3508%" y="463.50">_rjem_je_..</text></g><g><title>imalloc (2,385 samples, 6.99%)</title><rect x="34.1154%" y="437" width="6.9859%" height="15" fill="rgb(214,50,8)" fg:x="11647" fg:w="2385"/><text x="34.3654%" y="447.50">imalloc</text></g><g><title>tsd_fetch (7 samples, 0.02%)</title><rect x="41.0808%" y="421" width="0.0205%" height="15" fill="rgb(216,198,43)" fg:x="14025" fg:w="7"/><text x="41.3308%" y="431.50"></text></g><g><title>tsd_fetch_impl (7 samples, 0.02%)</title><rect x="41.0808%" y="405" width="0.0205%" height="15" fill="rgb(234,20,35)" fg:x="14025" fg:w="7"/><text x="41.3308%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,399 samples, 7.03%)</title><rect x="34.1008%" y="533" width="7.0269%" height="15" fill="rgb(254,45,19)" fg:x="11642" fg:w="2399"/><text x="34.3508%" y="543.50">&lt;alloc::a..</text></g><g><title>alloc::alloc::Global::alloc_impl (2,399 samples, 7.03%)</title><rect x="34.1008%" y="517" width="7.0269%" height="15" fill="rgb(219,14,44)" fg:x="11642" fg:w="2399"/><text x="34.3508%" y="527.50">alloc::al..</text></g><g><title>alloc::alloc::alloc (2,399 samples, 7.03%)</title><rect x="34.1008%" y="501" width="7.0269%" height="15" fill="rgb(217,220,26)" fg:x="11642" fg:w="2399"/><text x="34.3508%" y="511.50">alloc::al..</text></g><g><title>__rust_alloc (2,399 samples, 7.03%)</title><rect x="34.1008%" y="485" width="7.0269%" height="15" fill="rgb(213,158,28)" fg:x="11642" fg:w="2399"/><text x="34.3508%" y="495.50">__rust_al..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2,399 samples, 7.03%)</title><rect x="34.1008%" y="469" width="7.0269%" height="15" fill="rgb(252,51,52)" fg:x="11642" fg:w="2399"/><text x="34.3508%" y="479.50">&lt;tikv_jem..</text></g><g><title>_rjem_malloc (8 samples, 0.02%)</title><rect x="41.1043%" y="453" width="0.0234%" height="15" fill="rgb(246,89,16)" fg:x="14033" fg:w="8"/><text x="41.3543%" y="463.50"></text></g><g><title>imalloc_fastpath (8 samples, 0.02%)</title><rect x="41.1043%" y="437" width="0.0234%" height="15" fill="rgb(216,158,49)" fg:x="14033" fg:w="8"/><text x="41.3543%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,404 samples, 7.04%)</title><rect x="34.0949%" y="613" width="7.0416%" height="15" fill="rgb(236,107,19)" fg:x="11640" fg:w="2404"/><text x="34.3449%" y="623.50">alloc::ve..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,404 samples, 7.04%)</title><rect x="34.0949%" y="597" width="7.0416%" height="15" fill="rgb(228,185,30)" fg:x="11640" fg:w="2404"/><text x="34.3449%" y="607.50">alloc::ve..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,404 samples, 7.04%)</title><rect x="34.0949%" y="581" width="7.0416%" height="15" fill="rgb(246,134,8)" fg:x="11640" fg:w="2404"/><text x="34.3449%" y="591.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (2,404 samples, 7.04%)</title><rect x="34.0949%" y="565" width="7.0416%" height="15" fill="rgb(214,143,50)" fg:x="11640" fg:w="2404"/><text x="34.3449%" y="575.50">alloc::ra..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (2,404 samples, 7.04%)</title><rect x="34.0949%" y="549" width="7.0416%" height="15" fill="rgb(228,75,8)" fg:x="11640" fg:w="2404"/><text x="34.3449%" y="559.50">alloc::ra..</text></g><g><title>bytes::bytes_mut::Shared::is_unique (11 samples, 0.03%)</title><rect x="41.1365%" y="613" width="0.0322%" height="15" fill="rgb(207,175,4)" fg:x="14044" fg:w="11"/><text x="41.3865%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.03%)</title><rect x="41.1394%" y="597" width="0.0293%" height="15" fill="rgb(205,108,24)" fg:x="14045" fg:w="10"/><text x="41.3894%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.03%)</title><rect x="41.1394%" y="581" width="0.0293%" height="15" fill="rgb(244,120,49)" fg:x="14045" fg:w="10"/><text x="41.3894%" y="591.50"></text></g><g><title>bytes::bytes_mut::original_capacity_from_repr (4 samples, 0.01%)</title><rect x="41.1687%" y="613" width="0.0117%" height="15" fill="rgb(223,47,38)" fg:x="14055" fg:w="4"/><text x="41.4187%" y="623.50"></text></g><g><title>bytes::bytes_mut::release_shared (266 samples, 0.78%)</title><rect x="41.1804%" y="613" width="0.7791%" height="15" fill="rgb(229,179,11)" fg:x="14059" fg:w="266"/><text x="41.4304%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (265 samples, 0.78%)</title><rect x="41.1834%" y="597" width="0.7762%" height="15" fill="rgb(231,122,1)" fg:x="14060" fg:w="265"/><text x="41.4334%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (265 samples, 0.78%)</title><rect x="41.1834%" y="581" width="0.7762%" height="15" fill="rgb(245,119,9)" fg:x="14060" fg:w="265"/><text x="41.4334%" y="591.50"></text></g><g><title>core::cmp::max (4 samples, 0.01%)</title><rect x="41.9596%" y="613" width="0.0117%" height="15" fill="rgb(241,163,25)" fg:x="14325" fg:w="4"/><text x="42.2096%" y="623.50"></text></g><g><title>core::cmp::Ord::max (4 samples, 0.01%)</title><rect x="41.9596%" y="597" width="0.0117%" height="15" fill="rgb(217,214,3)" fg:x="14325" fg:w="4"/><text x="42.2096%" y="607.50"></text></g><g><title>core::cmp::max_by (4 samples, 0.01%)</title><rect x="41.9596%" y="581" width="0.0117%" height="15" fill="rgb(240,86,28)" fg:x="14325" fg:w="4"/><text x="42.2096%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.05%)</title><rect x="41.9713%" y="613" width="0.0469%" height="15" fill="rgb(215,47,9)" fg:x="14329" fg:w="16"/><text x="42.2213%" y="623.50"></text></g><g><title>[libc.so.6] (16 samples, 0.05%)</title><rect x="41.9713%" y="597" width="0.0469%" height="15" fill="rgb(252,25,45)" fg:x="14329" fg:w="16"/><text x="42.2213%" y="607.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (5,146 samples, 15.07%)</title><rect x="26.9566%" y="645" width="15.0732%" height="15" fill="rgb(251,164,9)" fg:x="9203" fg:w="5146"/><text x="27.2066%" y="655.50">bytes::bytes_mut::Bytes..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (5,144 samples, 15.07%)</title><rect x="26.9625%" y="629" width="15.0674%" height="15" fill="rgb(233,194,0)" fg:x="9205" fg:w="5144"/><text x="27.2125%" y="639.50">bytes::bytes_mut::Bytes..</text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (4 samples, 0.01%)</title><rect x="42.0387%" y="629" width="0.0117%" height="15" fill="rgb(249,111,24)" fg:x="14352" fg:w="4"/><text x="42.2887%" y="639.50"></text></g><g><title>_rjem_je_pa_alloc (4 samples, 0.01%)</title><rect x="42.1470%" y="325" width="0.0117%" height="15" fill="rgb(250,223,3)" fg:x="14389" fg:w="4"/><text x="42.3970%" y="335.50"></text></g><g><title>arena_slab_alloc (5 samples, 0.01%)</title><rect x="42.1470%" y="341" width="0.0146%" height="15" fill="rgb(236,178,37)" fg:x="14389" fg:w="5"/><text x="42.3970%" y="351.50"></text></g><g><title>arena_slab_reg_alloc_batch (5 samples, 0.01%)</title><rect x="42.1617%" y="341" width="0.0146%" height="15" fill="rgb(241,158,50)" fg:x="14394" fg:w="5"/><text x="42.4117%" y="351.50"></text></g><g><title>malloc_mutex_lock (24 samples, 0.07%)</title><rect x="42.1822%" y="341" width="0.0703%" height="15" fill="rgb(213,121,41)" fg:x="14401" fg:w="24"/><text x="42.4322%" y="351.50"></text></g><g><title>malloc_mutex_trylock_final (24 samples, 0.07%)</title><rect x="42.1822%" y="325" width="0.0703%" height="15" fill="rgb(240,92,3)" fg:x="14401" fg:w="24"/><text x="42.4322%" y="335.50"></text></g><g><title>pthread_mutex_trylock (23 samples, 0.07%)</title><rect x="42.1851%" y="309" width="0.0674%" height="15" fill="rgb(205,123,3)" fg:x="14402" fg:w="23"/><text x="42.4351%" y="319.50"></text></g><g><title>[libc.so.6] (5 samples, 0.01%)</title><rect x="42.2554%" y="325" width="0.0146%" height="15" fill="rgb(205,97,47)" fg:x="14426" fg:w="5"/><text x="42.5054%" y="335.50"></text></g><g><title>pthread_mutex_unlock (4 samples, 0.01%)</title><rect x="42.2701%" y="325" width="0.0117%" height="15" fill="rgb(247,152,14)" fg:x="14431" fg:w="4"/><text x="42.5201%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (54 samples, 0.16%)</title><rect x="42.1324%" y="357" width="0.1582%" height="15" fill="rgb(248,195,53)" fg:x="14384" fg:w="54"/><text x="42.3824%" y="367.50"></text></g><g><title>malloc_mutex_unlock (13 samples, 0.04%)</title><rect x="42.2525%" y="341" width="0.0381%" height="15" fill="rgb(226,201,16)" fg:x="14425" fg:w="13"/><text x="42.5025%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (58 samples, 0.17%)</title><rect x="42.1236%" y="373" width="0.1699%" height="15" fill="rgb(205,98,0)" fg:x="14381" fg:w="58"/><text x="42.3736%" y="383.50"></text></g><g><title>_rjem_je_malloc_default (68 samples, 0.20%)</title><rect x="42.1178%" y="485" width="0.1992%" height="15" fill="rgb(214,191,48)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="495.50"></text></g><g><title>imalloc (68 samples, 0.20%)</title><rect x="42.1178%" y="469" width="0.1992%" height="15" fill="rgb(237,112,39)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="479.50"></text></g><g><title>imalloc_body (68 samples, 0.20%)</title><rect x="42.1178%" y="453" width="0.1992%" height="15" fill="rgb(247,203,27)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="463.50"></text></g><g><title>imalloc_no_sample (68 samples, 0.20%)</title><rect x="42.1178%" y="437" width="0.1992%" height="15" fill="rgb(235,124,28)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="447.50"></text></g><g><title>iallocztm (68 samples, 0.20%)</title><rect x="42.1178%" y="421" width="0.1992%" height="15" fill="rgb(208,207,46)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="431.50"></text></g><g><title>arena_malloc (68 samples, 0.20%)</title><rect x="42.1178%" y="405" width="0.1992%" height="15" fill="rgb(234,176,4)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="415.50"></text></g><g><title>tcache_alloc_small (68 samples, 0.20%)</title><rect x="42.1178%" y="389" width="0.1992%" height="15" fill="rgb(230,133,28)" fg:x="14379" fg:w="68"/><text x="42.3678%" y="399.50"></text></g><g><title>cache_bin_alloc (6 samples, 0.02%)</title><rect x="42.2994%" y="373" width="0.0176%" height="15" fill="rgb(211,137,40)" fg:x="14441" fg:w="6"/><text x="42.5494%" y="383.50"></text></g><g><title>cache_bin_alloc_impl (6 samples, 0.02%)</title><rect x="42.2994%" y="357" width="0.0176%" height="15" fill="rgb(254,35,13)" fg:x="14441" fg:w="6"/><text x="42.5494%" y="367.50"></text></g><g><title>cache_bin_alloc_easy (40 samples, 0.12%)</title><rect x="42.5366%" y="453" width="0.1172%" height="15" fill="rgb(225,49,51)" fg:x="14522" fg:w="40"/><text x="42.7866%" y="463.50"></text></g><g><title>cache_bin_alloc_impl (40 samples, 0.12%)</title><rect x="42.5366%" y="437" width="0.1172%" height="15" fill="rgb(251,10,15)" fg:x="14522" fg:w="40"/><text x="42.7866%" y="447.50"></text></g><g><title>sz_index2size_lookup_impl (29 samples, 0.08%)</title><rect x="42.6596%" y="437" width="0.0849%" height="15" fill="rgb(228,207,15)" fg:x="14564" fg:w="29"/><text x="42.9096%" y="447.50"></text></g><g><title>sz_size2index_usize_fastpath (31 samples, 0.09%)</title><rect x="42.6596%" y="453" width="0.0908%" height="15" fill="rgb(241,99,19)" fg:x="14564" fg:w="31"/><text x="42.9096%" y="463.50"></text></g><g><title>__rust_alloc (218 samples, 0.64%)</title><rect x="42.1178%" y="517" width="0.6385%" height="15" fill="rgb(207,104,49)" fg:x="14379" fg:w="218"/><text x="42.3678%" y="527.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (218 samples, 0.64%)</title><rect x="42.1178%" y="501" width="0.6385%" height="15" fill="rgb(234,99,18)" fg:x="14379" fg:w="218"/><text x="42.3678%" y="511.50"></text></g><g><title>_rjem_malloc (150 samples, 0.44%)</title><rect x="42.3169%" y="485" width="0.4394%" height="15" fill="rgb(213,191,49)" fg:x="14447" fg:w="150"/><text x="42.5669%" y="495.50"></text></g><g><title>imalloc_fastpath (150 samples, 0.44%)</title><rect x="42.3169%" y="469" width="0.4394%" height="15" fill="rgb(210,226,19)" fg:x="14447" fg:w="150"/><text x="42.5669%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (252 samples, 0.74%)</title><rect x="42.0650%" y="597" width="0.7381%" height="15" fill="rgb(229,97,18)" fg:x="14361" fg:w="252"/><text x="42.3150%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (235 samples, 0.69%)</title><rect x="42.1148%" y="581" width="0.6883%" height="15" fill="rgb(211,167,15)" fg:x="14378" fg:w="235"/><text x="42.3648%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (234 samples, 0.69%)</title><rect x="42.1178%" y="565" width="0.6854%" height="15" fill="rgb(210,169,34)" fg:x="14379" fg:w="234"/><text x="42.3678%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (234 samples, 0.69%)</title><rect x="42.1178%" y="549" width="0.6854%" height="15" fill="rgb(241,121,31)" fg:x="14379" fg:w="234"/><text x="42.3678%" y="559.50"></text></g><g><title>alloc::alloc::alloc (234 samples, 0.69%)</title><rect x="42.1178%" y="533" width="0.6854%" height="15" fill="rgb(232,40,11)" fg:x="14379" fg:w="234"/><text x="42.3678%" y="543.50"></text></g><g><title>core::ptr::read_volatile (16 samples, 0.05%)</title><rect x="42.7563%" y="517" width="0.0469%" height="15" fill="rgb(205,86,26)" fg:x="14597" fg:w="16"/><text x="43.0063%" y="527.50"></text></g><g><title>bytes::bytes_mut::BytesMut::promote_to_shared (258 samples, 0.76%)</title><rect x="42.0533%" y="613" width="0.7557%" height="15" fill="rgb(231,126,28)" fg:x="14357" fg:w="258"/><text x="42.3033%" y="623.50"></text></g><g><title>fastwebsockets::ReadHalf::parse_frame_header::_{{closure}} (6,230 samples, 18.25%)</title><rect x="24.5811%" y="661" width="18.2484%" height="15" fill="rgb(219,221,18)" fg:x="8392" fg:w="6230"/><text x="24.8311%" y="671.50">fastwebsockets::ReadHalf::pa..</text></g><g><title>bytes::bytes_mut::BytesMut::split_to (273 samples, 0.80%)</title><rect x="42.0299%" y="645" width="0.7996%" height="15" fill="rgb(211,40,0)" fg:x="14349" fg:w="273"/><text x="42.2799%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::shallow_clone (266 samples, 0.78%)</title><rect x="42.0504%" y="629" width="0.7791%" height="15" fill="rgb(239,85,43)" fg:x="14356" fg:w="266"/><text x="42.3004%" y="639.50"></text></g><g><title>bytes::bytes_mut::increment_shared (7 samples, 0.02%)</title><rect x="42.8090%" y="613" width="0.0205%" height="15" fill="rgb(231,55,21)" fg:x="14615" fg:w="7"/><text x="43.0590%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.02%)</title><rect x="42.8090%" y="597" width="0.0205%" height="15" fill="rgb(225,184,43)" fg:x="14615" fg:w="7"/><text x="43.0590%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.02%)</title><rect x="42.8090%" y="581" width="0.0205%" height="15" fill="rgb(251,158,41)" fg:x="14615" fg:w="7"/><text x="43.0590%" y="591.50"></text></g><g><title>fastwebsockets::frame::Payload::to_mut (15 samples, 0.04%)</title><rect x="42.8969%" y="645" width="0.0439%" height="15" fill="rgb(234,159,37)" fg:x="14645" fg:w="15"/><text x="43.1469%" y="655.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.04%)</title><rect x="54.9766%" y="613" width="0.0439%" height="15" fill="rgb(216,204,22)" fg:x="18769" fg:w="15"/><text x="55.2266%" y="623.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::align_to_mut (8 samples, 0.02%)</title><rect x="55.0205%" y="613" width="0.0234%" height="15" fill="rgb(214,17,3)" fg:x="18784" fg:w="8"/><text x="55.2705%" y="623.50"></text></g><g><title>fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{closure}} (10,734 samples, 31.44%)</title><rect x="23.6262%" y="693" width="31.4411%" height="15" fill="rgb(212,111,17)" fg:x="8066" fg:w="10734"/><text x="23.8762%" y="703.50">fastwebsockets::WebSocketRead&lt;S&gt;::read_frame::_{{cl..</text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (10,527 samples, 30.83%)</title><rect x="24.2326%" y="677" width="30.8348%" height="15" fill="rgb(221,157,24)" fg:x="8273" fg:w="10527"/><text x="24.4826%" y="687.50">fastwebsockets::ReadHalf::read_frame_inner::_{{clo..</text></g><g><title>fastwebsockets::frame::Frame::unmask (4,178 samples, 12.24%)</title><rect x="42.8295%" y="661" width="12.2378%" height="15" fill="rgb(252,16,13)" fg:x="14622" fg:w="4178"/><text x="43.0795%" y="671.50">fastwebsockets::fr..</text></g><g><title>fastwebsockets::mask::unmask (4,140 samples, 12.13%)</title><rect x="42.9408%" y="645" width="12.1265%" height="15" fill="rgb(221,62,2)" fg:x="14660" fg:w="4140"/><text x="43.1908%" y="655.50">fastwebsockets::ma..</text></g><g><title>fastwebsockets::mask::unmask_fallback (4,140 samples, 12.13%)</title><rect x="42.9408%" y="629" width="12.1265%" height="15" fill="rgb(247,87,22)" fg:x="14660" fg:w="4140"/><text x="43.1908%" y="639.50">fastwebsockets::ma..</text></g><g><title>fastwebsockets::mask::unmask_easy (8 samples, 0.02%)</title><rect x="55.0439%" y="613" width="0.0234%" height="15" fill="rgb(215,73,9)" fg:x="18792" fg:w="8"/><text x="55.2939%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.02%)</title><rect x="55.0439%" y="597" width="0.0234%" height="15" fill="rgb(207,175,33)" fg:x="18792" fg:w="8"/><text x="55.2939%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="55.0439%" y="581" width="0.0234%" height="15" fill="rgb(243,129,54)" fg:x="18792" fg:w="8"/><text x="55.2939%" y="591.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="55.0439%" y="565" width="0.0234%" height="15" fill="rgb(227,119,45)" fg:x="18792" fg:w="8"/><text x="55.2939%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::_{{closure}} (4 samples, 0.01%)</title><rect x="55.0557%" y="549" width="0.0117%" height="15" fill="rgb(205,109,36)" fg:x="18796" fg:w="4"/><text x="55.3057%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::_{{closure}} (4 samples, 0.01%)</title><rect x="55.0557%" y="533" width="0.0117%" height="15" fill="rgb(205,6,39)" fg:x="18796" fg:w="4"/><text x="55.3057%" y="543.50"></text></g><g><title>fastwebsockets::mask::unmask_easy::_{{closure}} (4 samples, 0.01%)</title><rect x="55.0557%" y="517" width="0.0117%" height="15" fill="rgb(221,32,16)" fg:x="18796" fg:w="4"/><text x="55.3057%" y="527.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10,946 samples, 32.06%)</title><rect x="23.1488%" y="725" width="32.0621%" height="15" fill="rgb(228,144,50)" fg:x="7903" fg:w="10946"/><text x="23.3988%" y="735.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;:..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (10,946 samples, 32.06%)</title><rect x="23.1488%" y="709" width="32.0621%" height="15" fill="rgb(229,201,53)" fg:x="7903" fg:w="10946"/><text x="23.3988%" y="719.50">wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSo..</text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (49 samples, 0.14%)</title><rect x="55.0674%" y="693" width="0.1435%" height="15" fill="rgb(249,153,27)" fg:x="18800" fg:w="49"/><text x="55.3174%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (22 samples, 0.06%)</title><rect x="55.5800%" y="581" width="0.0644%" height="15" fill="rgb(227,106,25)" fg:x="18975" fg:w="22"/><text x="55.8300%" y="591.50"></text></g><g><title>cache_bin_full (10 samples, 0.03%)</title><rect x="55.6151%" y="565" width="0.0293%" height="15" fill="rgb(230,65,29)" fg:x="18987" fg:w="10"/><text x="55.8651%" y="575.50"></text></g><g><title>sz_index2size (17 samples, 0.05%)</title><rect x="55.6444%" y="581" width="0.0498%" height="15" fill="rgb(221,57,46)" fg:x="18997" fg:w="17"/><text x="55.8944%" y="591.50"></text></g><g><title>sz_index2size_lookup (17 samples, 0.05%)</title><rect x="55.6444%" y="565" width="0.0498%" height="15" fill="rgb(229,161,17)" fg:x="18997" fg:w="17"/><text x="55.8944%" y="575.50"></text></g><g><title>sz_index2size_lookup_impl (17 samples, 0.05%)</title><rect x="55.6444%" y="549" width="0.0498%" height="15" fill="rgb(222,213,11)" fg:x="18997" fg:w="17"/><text x="55.8944%" y="559.50"></text></g><g><title>_rjem_sdallocx (144 samples, 0.42%)</title><rect x="55.2753%" y="613" width="0.4218%" height="15" fill="rgb(235,35,13)" fg:x="18871" fg:w="144"/><text x="55.5253%" y="623.50"></text></g><g><title>free_fastpath (143 samples, 0.42%)</title><rect x="55.2783%" y="597" width="0.4189%" height="15" fill="rgb(233,158,34)" fg:x="18872" fg:w="143"/><text x="55.5283%" y="607.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 samples, 0.43%)</title><rect x="55.2695%" y="693" width="0.4306%" height="15" fill="rgb(215,151,48)" fg:x="18869" fg:w="147"/><text x="55.5195%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (147 samples, 0.43%)</title><rect x="55.2695%" y="677" width="0.4306%" height="15" fill="rgb(229,84,14)" fg:x="18869" fg:w="147"/><text x="55.5195%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (147 samples, 0.43%)</title><rect x="55.2695%" y="661" width="0.4306%" height="15" fill="rgb(229,68,14)" fg:x="18869" fg:w="147"/><text x="55.5195%" y="671.50"></text></g><g><title>__rust_dealloc (147 samples, 0.43%)</title><rect x="55.2695%" y="645" width="0.4306%" height="15" fill="rgb(243,106,26)" fg:x="18869" fg:w="147"/><text x="55.5195%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (147 samples, 0.43%)</title><rect x="55.2695%" y="629" width="0.4306%" height="15" fill="rgb(206,45,38)" fg:x="18869" fg:w="147"/><text x="55.5195%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (169 samples, 0.50%)</title><rect x="55.2109%" y="725" width="0.4950%" height="15" fill="rgb(226,6,15)" fg:x="18849" fg:w="169"/><text x="55.4609%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (169 samples, 0.50%)</title><rect x="55.2109%" y="709" width="0.4950%" height="15" fill="rgb(232,22,54)" fg:x="18849" fg:w="169"/><text x="55.4609%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,227 samples, 32.89%)</title><rect x="22.8471%" y="757" width="32.8852%" height="15" fill="rgb(229,222,32)" fg:x="7800" fg:w="11227"/><text x="23.0971%" y="767.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (11,227 samples, 32.89%)</title><rect x="22.8471%" y="741" width="32.8852%" height="15" fill="rgb(228,62,29)" fg:x="7800" fg:w="11227"/><text x="23.0971%" y="751.50">&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+co..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split (9 samples, 0.03%)</title><rect x="55.7059%" y="725" width="0.0264%" height="15" fill="rgb(251,103,34)" fg:x="19018" fg:w="9"/><text x="55.9559%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (9 samples, 0.03%)</title><rect x="55.7059%" y="709" width="0.0264%" height="15" fill="rgb(233,12,30)" fg:x="19018" fg:w="9"/><text x="55.9559%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (9 samples, 0.03%)</title><rect x="55.7059%" y="693" width="0.0264%" height="15" fill="rgb(238,52,0)" fg:x="19018" fg:w="9"/><text x="55.9559%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="55.7147%" y="677" width="0.0176%" height="15" fill="rgb(223,98,5)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="55.7147%" y="661" width="0.0176%" height="15" fill="rgb(228,75,37)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="55.7147%" y="645" width="0.0176%" height="15" fill="rgb(205,115,49)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="655.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="55.7147%" y="629" width="0.0176%" height="15" fill="rgb(250,154,43)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="639.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="55.7147%" y="613" width="0.0176%" height="15" fill="rgb(226,43,29)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="55.7147%" y="597" width="0.0176%" height="15" fill="rgb(249,228,39)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="607.50"></text></g><g><title>_rjem_malloc (6 samples, 0.02%)</title><rect x="55.7147%" y="581" width="0.0176%" height="15" fill="rgb(216,79,43)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="591.50"></text></g><g><title>imalloc_fastpath (6 samples, 0.02%)</title><rect x="55.7147%" y="565" width="0.0176%" height="15" fill="rgb(228,95,12)" fg:x="19021" fg:w="6"/><text x="55.9647%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="55.7176%" y="549" width="0.0146%" height="15" fill="rgb(249,221,15)" fg:x="19022" fg:w="5"/><text x="55.9676%" y="559.50"></text></g><g><title>cache_bin_alloc_impl (5 samples, 0.01%)</title><rect x="55.7176%" y="533" width="0.0146%" height="15" fill="rgb(233,34,13)" fg:x="19022" fg:w="5"/><text x="55.9676%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.01%)</title><rect x="55.7323%" y="757" width="0.0146%" height="15" fill="rgb(214,103,39)" fg:x="19027" fg:w="5"/><text x="55.9823%" y="767.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="55.7323%" y="741" width="0.0146%" height="15" fill="rgb(251,126,39)" fg:x="19027" fg:w="5"/><text x="55.9823%" y="751.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="55.7323%" y="725" width="0.0146%" height="15" fill="rgb(214,216,36)" fg:x="19027" fg:w="5"/><text x="55.9823%" y="735.50"></text></g><g><title>_rjem_sdallocx (27 samples, 0.08%)</title><rect x="55.8407%" y="645" width="0.0791%" height="15" fill="rgb(220,221,8)" fg:x="19064" fg:w="27"/><text x="56.0907%" y="655.50"></text></g><g><title>free_fastpath (27 samples, 0.08%)</title><rect x="55.8407%" y="629" width="0.0791%" height="15" fill="rgb(240,216,3)" fg:x="19064" fg:w="27"/><text x="56.0907%" y="639.50"></text></g><g><title>cache_bin_dalloc_easy (7 samples, 0.02%)</title><rect x="55.8992%" y="613" width="0.0205%" height="15" fill="rgb(232,218,17)" fg:x="19084" fg:w="7"/><text x="56.1492%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,403 samples, 33.40%)</title><rect x="22.5220%" y="789" width="33.4007%" height="15" fill="rgb(229,163,45)" fg:x="7689" fg:w="11403"/><text x="22.7720%" y="799.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::p..</text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (11,403 samples, 33.40%)</title><rect x="22.5220%" y="773" width="33.4007%" height="15" fill="rgb(231,110,42)" fg:x="7689" fg:w="11403"/><text x="22.7720%" y="783.50">&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (60 samples, 0.18%)</title><rect x="55.7469%" y="757" width="0.1757%" height="15" fill="rgb(208,170,48)" fg:x="19032" fg:w="60"/><text x="55.9969%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (60 samples, 0.18%)</title><rect x="55.7469%" y="741" width="0.1757%" height="15" fill="rgb(239,116,25)" fg:x="19032" fg:w="60"/><text x="55.9969%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.09%)</title><rect x="55.8348%" y="725" width="0.0879%" height="15" fill="rgb(219,200,50)" fg:x="19062" fg:w="30"/><text x="56.0848%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.08%)</title><rect x="55.8377%" y="709" width="0.0849%" height="15" fill="rgb(245,200,0)" fg:x="19063" fg:w="29"/><text x="56.0877%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.08%)</title><rect x="55.8377%" y="693" width="0.0849%" height="15" fill="rgb(245,119,33)" fg:x="19063" fg:w="29"/><text x="56.0877%" y="703.50"></text></g><g><title>__rust_dealloc (29 samples, 0.08%)</title><rect x="55.8377%" y="677" width="0.0849%" height="15" fill="rgb(231,125,12)" fg:x="19063" fg:w="29"/><text x="56.0877%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (29 samples, 0.08%)</title><rect x="55.8377%" y="661" width="0.0849%" height="15" fill="rgb(216,96,41)" fg:x="19063" fg:w="29"/><text x="56.0877%" y="671.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="55.9344%" y="757" width="0.0117%" height="15" fill="rgb(248,43,45)" fg:x="19096" fg:w="4"/><text x="56.1844%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (18 samples, 0.05%)</title><rect x="55.9490%" y="757" width="0.0527%" height="15" fill="rgb(217,222,7)" fg:x="19101" fg:w="18"/><text x="56.1990%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (18 samples, 0.05%)</title><rect x="55.9490%" y="741" width="0.0527%" height="15" fill="rgb(233,28,6)" fg:x="19101" fg:w="18"/><text x="56.1990%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.05%)</title><rect x="55.9490%" y="725" width="0.0527%" height="15" fill="rgb(231,218,15)" fg:x="19101" fg:w="18"/><text x="56.1990%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.05%)</title><rect x="55.9549%" y="709" width="0.0469%" height="15" fill="rgb(226,171,48)" fg:x="19103" fg:w="16"/><text x="56.2049%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.05%)</title><rect x="55.9549%" y="693" width="0.0469%" height="15" fill="rgb(235,201,9)" fg:x="19103" fg:w="16"/><text x="56.2049%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;flume::Hook&lt;wisp_mux::inner::WsEvent,flume::async::AsyncSignal&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="56.0018%" y="757" width="0.0498%" height="15" fill="rgb(217,80,15)" fg:x="19119" fg:w="17"/><text x="56.2518%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="56.0018%" y="741" width="0.0498%" height="15" fill="rgb(219,152,8)" fg:x="19119" fg:w="17"/><text x="56.2518%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.05%)</title><rect x="56.0018%" y="725" width="0.0498%" height="15" fill="rgb(243,107,38)" fg:x="19119" fg:w="17"/><text x="56.2518%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.05%)</title><rect x="56.0018%" y="709" width="0.0498%" height="15" fill="rgb(231,17,5)" fg:x="19119" fg:w="17"/><text x="56.2518%" y="719.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (4 samples, 0.01%)</title><rect x="56.0633%" y="725" width="0.0117%" height="15" fill="rgb(209,25,54)" fg:x="19140" fg:w="4"/><text x="56.3133%" y="735.50"></text></g><g><title>core::mem::drop (14 samples, 0.04%)</title><rect x="56.0750%" y="725" width="0.0410%" height="15" fill="rgb(219,0,2)" fg:x="19144" fg:w="14"/><text x="56.3250%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;wisp_mux::inner::WsEvent&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="56.0750%" y="709" width="0.0410%" height="15" fill="rgb(246,9,5)" fg:x="19144" fg:w="14"/><text x="56.3250%" y="719.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="56.0750%" y="693" width="0.0410%" height="15" fill="rgb(226,159,4)" fg:x="19144" fg:w="14"/><text x="56.3250%" y="703.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (12 samples, 0.04%)</title><rect x="56.0808%" y="677" width="0.0351%" height="15" fill="rgb(219,175,34)" fg:x="19146" fg:w="12"/><text x="56.3308%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (12 samples, 0.04%)</title><rect x="56.0808%" y="661" width="0.0351%" height="15" fill="rgb(236,10,46)" fg:x="19146" fg:w="12"/><text x="56.3308%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.04%)</title><rect x="56.0808%" y="645" width="0.0351%" height="15" fill="rgb(240,211,16)" fg:x="19146" fg:w="12"/><text x="56.3308%" y="655.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (54 samples, 0.16%)</title><rect x="56.0516%" y="757" width="0.1582%" height="15" fill="rgb(205,3,43)" fg:x="19136" fg:w="54"/><text x="56.3016%" y="767.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (54 samples, 0.16%)</title><rect x="56.0516%" y="741" width="0.1582%" height="15" fill="rgb(245,7,22)" fg:x="19136" fg:w="54"/><text x="56.3016%" y="751.50"></text></g><g><title>flume::wait_lock (27 samples, 0.08%)</title><rect x="56.1306%" y="725" width="0.0791%" height="15" fill="rgb(239,132,32)" fg:x="19163" fg:w="27"/><text x="56.3806%" y="735.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.08%)</title><rect x="56.1306%" y="709" width="0.0791%" height="15" fill="rgb(228,202,34)" fg:x="19163" fg:w="27"/><text x="56.3806%" y="719.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (26 samples, 0.08%)</title><rect x="56.1336%" y="693" width="0.0762%" height="15" fill="rgb(254,200,22)" fg:x="19164" fg:w="26"/><text x="56.3836%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (26 samples, 0.08%)</title><rect x="56.1336%" y="677" width="0.0762%" height="15" fill="rgb(219,10,39)" fg:x="19164" fg:w="26"/><text x="56.3836%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.08%)</title><rect x="56.1336%" y="661" width="0.0762%" height="15" fill="rgb(226,210,39)" fg:x="19164" fg:w="26"/><text x="56.3836%" y="671.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.35%)</title><rect x="55.9227%" y="789" width="0.3486%" height="15" fill="rgb(208,219,16)" fg:x="19092" fg:w="119"/><text x="56.1727%" y="799.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (119 samples, 0.35%)</title><rect x="55.9227%" y="773" width="0.3486%" height="15" fill="rgb(216,158,51)" fg:x="19092" fg:w="119"/><text x="56.1727%" y="783.50"></text></g><g><title>flume::async::&lt;impl flume::Hook&lt;T,flume::async::AsyncSignal&gt;&gt;::update_waker (21 samples, 0.06%)</title><rect x="56.2097%" y="757" width="0.0615%" height="15" fill="rgb(233,14,44)" fg:x="19190" fg:w="21"/><text x="56.4597%" y="767.50"></text></g><g><title>spin::mutex::Mutex&lt;T,R&gt;::lock (16 samples, 0.05%)</title><rect x="56.2244%" y="741" width="0.0469%" height="15" fill="rgb(237,97,39)" fg:x="19195" fg:w="16"/><text x="56.4744%" y="751.50"></text></g><g><title>spin::mutex::spin::SpinMutex&lt;T,R&gt;::lock (16 samples, 0.05%)</title><rect x="56.2244%" y="725" width="0.0469%" height="15" fill="rgb(218,198,43)" fg:x="19195" fg:w="16"/><text x="56.4744%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange_weak (16 samples, 0.05%)</title><rect x="56.2244%" y="709" width="0.0469%" height="15" fill="rgb(231,104,20)" fg:x="19195" fg:w="16"/><text x="56.4744%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.05%)</title><rect x="56.2244%" y="693" width="0.0469%" height="15" fill="rgb(254,36,13)" fg:x="19195" fg:w="16"/><text x="56.4744%" y="703.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.02%)</title><rect x="56.4880%" y="613" width="0.0176%" height="15" fill="rgb(248,14,50)" fg:x="19285" fg:w="6"/><text x="56.7380%" y="623.50"></text></g><g><title>free_fastpath (6 samples, 0.02%)</title><rect x="56.4880%" y="597" width="0.0176%" height="15" fill="rgb(217,107,29)" fg:x="19285" fg:w="6"/><text x="56.7380%" y="607.50"></text></g><g><title>cache_bin_dalloc_easy (6 samples, 0.02%)</title><rect x="56.4880%" y="581" width="0.0176%" height="15" fill="rgb(251,169,33)" fg:x="19285" fg:w="6"/><text x="56.7380%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="56.4880%" y="677" width="0.0234%" height="15" fill="rgb(217,108,32)" fg:x="19285" fg:w="8"/><text x="56.7380%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="56.4880%" y="661" width="0.0234%" height="15" fill="rgb(219,66,42)" fg:x="19285" fg:w="8"/><text x="56.7380%" y="671.50"></text></g><g><title>__rust_dealloc (8 samples, 0.02%)</title><rect x="56.4880%" y="645" width="0.0234%" height="15" fill="rgb(206,180,7)" fg:x="19285" fg:w="8"/><text x="56.7380%" y="655.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (8 samples, 0.02%)</title><rect x="56.4880%" y="629" width="0.0234%" height="15" fill="rgb(208,226,31)" fg:x="19285" fg:w="8"/><text x="56.7380%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="56.4880%" y="693" width="0.0264%" height="15" fill="rgb(218,26,49)" fg:x="19285" fg:w="9"/><text x="56.7380%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (11,657 samples, 34.14%)</title><rect x="22.3726%" y="869" width="34.1447%" height="15" fill="rgb(233,197,48)" fg:x="7638" fg:w="11657"/><text x="22.6226%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (11,656 samples, 34.14%)</title><rect x="22.3755%" y="853" width="34.1418%" height="15" fill="rgb(252,181,51)" fg:x="7639" fg:w="11656"/><text x="22.6255%" y="863.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}..</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (11,607 samples, 34.00%)</title><rect x="22.5190%" y="837" width="33.9982%" height="15" fill="rgb(253,90,19)" fg:x="7688" fg:w="11607"/><text x="22.7690%" y="847.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11,607 samples, 34.00%)</title><rect x="22.5190%" y="821" width="33.9982%" height="15" fill="rgb(215,171,30)" fg:x="7688" fg:w="11607"/><text x="22.7690%" y="831.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::po..</text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (11,607 samples, 34.00%)</title><rect x="22.5190%" y="805" width="33.9982%" height="15" fill="rgb(214,222,9)" fg:x="7688" fg:w="11607"/><text x="22.7690%" y="815.50">&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core:..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (84 samples, 0.25%)</title><rect x="56.2712%" y="789" width="0.2460%" height="15" fill="rgb(223,3,22)" fg:x="19211" fg:w="84"/><text x="56.5212%" y="799.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll::_{{closure}} (30 samples, 0.09%)</title><rect x="56.4294%" y="773" width="0.0879%" height="15" fill="rgb(225,196,46)" fg:x="19265" fg:w="30"/><text x="56.6794%" y="783.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (30 samples, 0.09%)</title><rect x="56.4294%" y="757" width="0.0879%" height="15" fill="rgb(209,110,37)" fg:x="19265" fg:w="30"/><text x="56.6794%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt;&gt; (28 samples, 0.08%)</title><rect x="56.4353%" y="741" width="0.0820%" height="15" fill="rgb(249,89,12)" fg:x="19267" fg:w="28"/><text x="56.6853%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (28 samples, 0.08%)</title><rect x="56.4353%" y="725" width="0.0820%" height="15" fill="rgb(226,27,33)" fg:x="19267" fg:w="28"/><text x="56.6853%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(wisp_mux::ws::Frame,core::option::Option&lt;wisp_mux::ws::Frame&gt;),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (28 samples, 0.08%)</title><rect x="56.4353%" y="709" width="0.0820%" height="15" fill="rgb(213,82,22)" fg:x="19267" fg:w="28"/><text x="56.6853%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (15 samples, 0.04%)</title><rect x="56.5173%" y="853" width="0.0439%" height="15" fill="rgb(248,140,0)" fg:x="19295" fg:w="15"/><text x="56.7673%" y="863.50"></text></g><g><title>core::ptr::swap (15 samples, 0.04%)</title><rect x="56.5173%" y="837" width="0.0439%" height="15" fill="rgb(228,106,3)" fg:x="19295" fg:w="15"/><text x="56.7673%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.04%)</title><rect x="56.5173%" y="821" width="0.0439%" height="15" fill="rgb(209,23,37)" fg:x="19295" fg:w="15"/><text x="56.7673%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="56.5612%" y="789" width="0.0176%" height="15" fill="rgb(241,93,50)" fg:x="19310" fg:w="6"/><text x="56.8112%" y="799.50"></text></g><g><title>futures_util::async_await::random::random::RNG::_{{constant}}::_{{closure}} (6 samples, 0.02%)</title><rect x="56.5612%" y="773" width="0.0176%" height="15" fill="rgb(253,46,43)" fg:x="19310" fg:w="6"/><text x="56.8112%" y="783.50"></text></g><g><title>std::sys::thread_local::native::lazy::Storage&lt;T,D&gt;::get_or_init (6 samples, 0.02%)</title><rect x="56.5612%" y="757" width="0.0176%" height="15" fill="rgb(226,206,43)" fg:x="19310" fg:w="6"/><text x="56.8112%" y="767.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (11,768 samples, 34.47%)</title><rect x="22.1207%" y="901" width="34.4698%" height="15" fill="rgb(217,54,7)" fg:x="7552" fg:w="11768"/><text x="22.3707%" y="911.50">&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::futur..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (11,768 samples, 34.47%)</title><rect x="22.1207%" y="885" width="34.4698%" height="15" fill="rgb(223,5,52)" fg:x="7552" fg:w="11768"/><text x="22.3707%" y="895.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}:..</text></g><g><title>futures_util::async_await::random::shuffle (25 samples, 0.07%)</title><rect x="56.5173%" y="869" width="0.0732%" height="15" fill="rgb(206,52,46)" fg:x="19295" fg:w="25"/><text x="56.7673%" y="879.50"></text></g><g><title>futures_util::async_await::random::gen_index (10 samples, 0.03%)</title><rect x="56.5612%" y="853" width="0.0293%" height="15" fill="rgb(253,136,11)" fg:x="19310" fg:w="10"/><text x="56.8112%" y="863.50"></text></g><g><title>futures_util::async_await::random::random (10 samples, 0.03%)</title><rect x="56.5612%" y="837" width="0.0293%" height="15" fill="rgb(208,106,33)" fg:x="19310" fg:w="10"/><text x="56.8112%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.03%)</title><rect x="56.5612%" y="821" width="0.0293%" height="15" fill="rgb(206,54,4)" fg:x="19310" fg:w="10"/><text x="56.8112%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.03%)</title><rect x="56.5612%" y="805" width="0.0293%" height="15" fill="rgb(213,3,15)" fg:x="19310" fg:w="10"/><text x="56.8112%" y="815.50"></text></g><g><title>futures_util::async_await::random::random::_{{closure}} (4 samples, 0.01%)</title><rect x="56.5788%" y="789" width="0.0117%" height="15" fill="rgb(252,211,39)" fg:x="19316" fg:w="4"/><text x="56.8288%" y="799.50"></text></g><g><title>__rust_alloc (14 samples, 0.04%)</title><rect x="56.5993%" y="789" width="0.0410%" height="15" fill="rgb(223,6,36)" fg:x="19323" fg:w="14"/><text x="56.8493%" y="799.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (14 samples, 0.04%)</title><rect x="56.5993%" y="773" width="0.0410%" height="15" fill="rgb(252,169,45)" fg:x="19323" fg:w="14"/><text x="56.8493%" y="783.50"></text></g><g><title>_rjem_malloc (14 samples, 0.04%)</title><rect x="56.5993%" y="757" width="0.0410%" height="15" fill="rgb(212,48,26)" fg:x="19323" fg:w="14"/><text x="56.8493%" y="767.50"></text></g><g><title>imalloc_fastpath (14 samples, 0.04%)</title><rect x="56.5993%" y="741" width="0.0410%" height="15" fill="rgb(251,102,48)" fg:x="19323" fg:w="14"/><text x="56.8493%" y="751.50"></text></g><g><title>cache_bin_alloc_easy (10 samples, 0.03%)</title><rect x="56.6110%" y="725" width="0.0293%" height="15" fill="rgb(243,208,16)" fg:x="19327" fg:w="10"/><text x="56.8610%" y="735.50"></text></g><g><title>cache_bin_alloc_impl (10 samples, 0.03%)</title><rect x="56.6110%" y="709" width="0.0293%" height="15" fill="rgb(219,96,24)" fg:x="19327" fg:w="10"/><text x="56.8610%" y="719.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (28 samples, 0.08%)</title><rect x="56.5905%" y="901" width="0.0820%" height="15" fill="rgb(219,33,29)" fg:x="19320" fg:w="28"/><text x="56.8405%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (28 samples, 0.08%)</title><rect x="56.5905%" y="885" width="0.0820%" height="15" fill="rgb(223,176,5)" fg:x="19320" fg:w="28"/><text x="56.8405%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.08%)</title><rect x="56.5905%" y="869" width="0.0820%" height="15" fill="rgb(228,140,14)" fg:x="19320" fg:w="28"/><text x="56.8405%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.08%)</title><rect x="56.5964%" y="853" width="0.0762%" height="15" fill="rgb(217,179,31)" fg:x="19322" fg:w="26"/><text x="56.8464%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.07%)</title><rect x="56.5993%" y="837" width="0.0732%" height="15" fill="rgb(230,9,30)" fg:x="19323" fg:w="25"/><text x="56.8493%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.07%)</title><rect x="56.5993%" y="821" width="0.0732%" height="15" fill="rgb(230,136,20)" fg:x="19323" fg:w="25"/><text x="56.8493%" y="831.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.07%)</title><rect x="56.5993%" y="805" width="0.0732%" height="15" fill="rgb(215,210,22)" fg:x="19323" fg:w="25"/><text x="56.8493%" y="815.50"></text></g><g><title>core::ptr::read_volatile (11 samples, 0.03%)</title><rect x="56.6403%" y="789" width="0.0322%" height="15" fill="rgb(218,43,5)" fg:x="19337" fg:w="11"/><text x="56.8903%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::server_handle_packet::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="56.6725%" y="901" width="0.0117%" height="15" fill="rgb(216,11,5)" fg:x="19348" fg:w="4"/><text x="56.9225%" y="911.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (7 samples, 0.02%)</title><rect x="57.3989%" y="869" width="0.0205%" height="15" fill="rgb(209,82,29)" fg:x="19596" fg:w="7"/><text x="57.6489%" y="879.50"></text></g><g><title>&lt;&amp;mut T as bytes::buf::buf_impl::Buf&gt;::remaining (4 samples, 0.01%)</title><rect x="57.4312%" y="853" width="0.0117%" height="15" fill="rgb(244,115,12)" fg:x="19607" fg:w="4"/><text x="57.6812%" y="863.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::remaining (4 samples, 0.01%)</title><rect x="57.4312%" y="837" width="0.0117%" height="15" fill="rgb(222,82,18)" fg:x="19607" fg:w="4"/><text x="57.6812%" y="847.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u32_le (11 samples, 0.03%)</title><rect x="57.4194%" y="869" width="0.0322%" height="15" fill="rgb(249,227,8)" fg:x="19603" fg:w="11"/><text x="57.6694%" y="879.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (275 samples, 0.81%)</title><rect x="56.6842%" y="901" width="0.8055%" height="15" fill="rgb(253,141,45)" fg:x="19352" fg:w="275"/><text x="56.9342%" y="911.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (181 samples, 0.53%)</title><rect x="56.9596%" y="885" width="0.5302%" height="15" fill="rgb(234,184,4)" fg:x="19446" fg:w="181"/><text x="57.2096%" y="895.50"></text></g><g><title>bytes::buf::buf_impl::Buf::get_u8 (13 samples, 0.04%)</title><rect x="57.4517%" y="869" width="0.0381%" height="15" fill="rgb(218,194,23)" fg:x="19614" fg:w="13"/><text x="57.7017%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (8 samples, 0.02%)</title><rect x="57.4663%" y="853" width="0.0234%" height="15" fill="rgb(235,66,41)" fg:x="19619" fg:w="8"/><text x="57.7163%" y="863.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_impl::Buf&gt;::advance (6 samples, 0.02%)</title><rect x="57.4722%" y="837" width="0.0176%" height="15" fill="rgb(245,217,1)" fg:x="19621" fg:w="6"/><text x="57.7222%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::advance_unchecked (5 samples, 0.01%)</title><rect x="57.4751%" y="821" width="0.0146%" height="15" fill="rgb(229,91,1)" fg:x="19622" fg:w="5"/><text x="57.7251%" y="831.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="57.7592%" y="837" width="0.0146%" height="15" fill="rgb(207,101,30)" fg:x="19719" fg:w="5"/><text x="58.0092%" y="847.50"></text></g><g><title>free_fastpath (5 samples, 0.01%)</title><rect x="57.7592%" y="821" width="0.0146%" height="15" fill="rgb(223,82,49)" fg:x="19719" fg:w="5"/><text x="58.0092%" y="831.50"></text></g><g><title>inallocx (11 samples, 0.03%)</title><rect x="57.8149%" y="629" width="0.0322%" height="15" fill="rgb(218,167,17)" fg:x="19738" fg:w="11"/><text x="58.0649%" y="639.50"></text></g><g><title>aligned_usize_get (11 samples, 0.03%)</title><rect x="57.8149%" y="613" width="0.0322%" height="15" fill="rgb(208,103,14)" fg:x="19738" fg:w="11"/><text x="58.0649%" y="623.50"></text></g><g><title>sz_s2u (11 samples, 0.03%)</title><rect x="57.8149%" y="597" width="0.0322%" height="15" fill="rgb(238,20,8)" fg:x="19738" fg:w="11"/><text x="58.0649%" y="607.50"></text></g><g><title>sz_s2u_compute (11 samples, 0.03%)</title><rect x="57.8149%" y="581" width="0.0322%" height="15" fill="rgb(218,80,54)" fg:x="19738" fg:w="11"/><text x="58.0649%" y="591.50"></text></g><g><title>arena_get_from_edata (6 samples, 0.02%)</title><rect x="57.8530%" y="549" width="0.0176%" height="15" fill="rgb(240,144,17)" fg:x="19751" fg:w="6"/><text x="58.1030%" y="559.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="57.8530%" y="533" width="0.0176%" height="15" fill="rgb(245,27,50)" fg:x="19751" fg:w="6"/><text x="58.1030%" y="543.50"></text></g><g><title>extent_deactivate_locked (9 samples, 0.03%)</title><rect x="57.8881%" y="501" width="0.0264%" height="15" fill="rgb(251,51,7)" fg:x="19763" fg:w="9"/><text x="58.1381%" y="511.50"></text></g><g><title>extent_deactivate_locked_impl (9 samples, 0.03%)</title><rect x="57.8881%" y="485" width="0.0264%" height="15" fill="rgb(245,217,29)" fg:x="19763" fg:w="9"/><text x="58.1381%" y="495.50"></text></g><g><title>_rjem_je_eset_insert (7 samples, 0.02%)</title><rect x="57.8940%" y="469" width="0.0205%" height="15" fill="rgb(221,176,29)" fg:x="19765" fg:w="7"/><text x="58.1440%" y="479.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (5 samples, 0.01%)</title><rect x="57.9174%" y="469" width="0.0146%" height="15" fill="rgb(212,180,24)" fg:x="19773" fg:w="5"/><text x="58.1674%" y="479.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (5 samples, 0.01%)</title><rect x="57.9174%" y="453" width="0.0146%" height="15" fill="rgb(254,24,2)" fg:x="19773" fg:w="5"/><text x="58.1674%" y="463.50"></text></g><g><title>_rjem_je_edata_cache_put (5 samples, 0.01%)</title><rect x="57.9467%" y="421" width="0.0146%" height="15" fill="rgb(230,100,2)" fg:x="19783" fg:w="5"/><text x="58.1967%" y="431.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.01%)</title><rect x="57.9496%" y="405" width="0.0117%" height="15" fill="rgb(219,142,25)" fg:x="19784" fg:w="4"/><text x="58.1996%" y="415.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.01%)</title><rect x="57.9496%" y="389" width="0.0117%" height="15" fill="rgb(240,73,43)" fg:x="19784" fg:w="4"/><text x="58.1996%" y="399.50"></text></g><g><title>pthread_mutex_trylock (4 samples, 0.01%)</title><rect x="57.9496%" y="373" width="0.0117%" height="15" fill="rgb(214,114,15)" fg:x="19784" fg:w="4"/><text x="58.1996%" y="383.50"></text></g><g><title>extent_try_coalesce_large (21 samples, 0.06%)</title><rect x="57.9145%" y="501" width="0.0615%" height="15" fill="rgb(207,130,4)" fg:x="19772" fg:w="21"/><text x="58.1645%" y="511.50"></text></g><g><title>extent_try_coalesce_impl (21 samples, 0.06%)</title><rect x="57.9145%" y="485" width="0.0615%" height="15" fill="rgb(221,25,40)" fg:x="19772" fg:w="21"/><text x="58.1645%" y="495.50"></text></g><g><title>extent_coalesce (15 samples, 0.04%)</title><rect x="57.9320%" y="469" width="0.0439%" height="15" fill="rgb(241,184,7)" fg:x="19778" fg:w="15"/><text x="58.1820%" y="479.50"></text></g><g><title>extent_merge_impl (12 samples, 0.04%)</title><rect x="57.9408%" y="453" width="0.0351%" height="15" fill="rgb(235,159,4)" fg:x="19781" fg:w="12"/><text x="58.1908%" y="463.50"></text></g><g><title>extent_merge_impl (11 samples, 0.03%)</title><rect x="57.9438%" y="437" width="0.0322%" height="15" fill="rgb(214,87,48)" fg:x="19782" fg:w="11"/><text x="58.1938%" y="447.50"></text></g><g><title>_rjem_je_extent_record (35 samples, 0.10%)</title><rect x="57.8822%" y="517" width="0.1025%" height="15" fill="rgb(246,198,24)" fg:x="19761" fg:w="35"/><text x="58.1322%" y="527.50"></text></g><g><title>large_dalloc_finish_impl (42 samples, 0.12%)</title><rect x="57.8705%" y="549" width="0.1230%" height="15" fill="rgb(209,66,40)" fg:x="19757" fg:w="42"/><text x="58.1205%" y="559.50"></text></g><g><title>pac_dalloc_impl (39 samples, 0.11%)</title><rect x="57.8793%" y="533" width="0.1142%" height="15" fill="rgb(233,147,39)" fg:x="19760" fg:w="39"/><text x="58.1293%" y="543.50"></text></g><g><title>_rjem_je_large_dalloc (50 samples, 0.15%)</title><rect x="57.8500%" y="565" width="0.1465%" height="15" fill="rgb(231,145,52)" fg:x="19750" fg:w="50"/><text x="58.1000%" y="575.50"></text></g><g><title>arena_dalloc_large (56 samples, 0.16%)</title><rect x="57.8471%" y="581" width="0.1640%" height="15" fill="rgb(206,20,26)" fg:x="19749" fg:w="56"/><text x="58.0971%" y="591.50"></text></g><g><title>tcache_dalloc_large (4 samples, 0.01%)</title><rect x="57.9994%" y="565" width="0.0117%" height="15" fill="rgb(238,220,4)" fg:x="19801" fg:w="4"/><text x="58.2494%" y="575.50"></text></g><g><title>cache_bin_dalloc_easy (4 samples, 0.01%)</title><rect x="57.9994%" y="549" width="0.0117%" height="15" fill="rgb(252,195,42)" fg:x="19801" fg:w="4"/><text x="58.2494%" y="559.50"></text></g><g><title>isdalloct (72 samples, 0.21%)</title><rect x="57.8471%" y="613" width="0.2109%" height="15" fill="rgb(209,10,6)" fg:x="19749" fg:w="72"/><text x="58.0971%" y="623.50"></text></g><g><title>arena_sdalloc (72 samples, 0.21%)</title><rect x="57.8471%" y="597" width="0.2109%" height="15" fill="rgb(229,3,52)" fg:x="19749" fg:w="72"/><text x="58.0971%" y="607.50"></text></g><g><title>tcache_dalloc_small (16 samples, 0.05%)</title><rect x="58.0111%" y="581" width="0.0469%" height="15" fill="rgb(253,49,37)" fg:x="19805" fg:w="16"/><text x="58.2611%" y="591.50"></text></g><g><title>cache_bin_dalloc_easy (16 samples, 0.05%)</title><rect x="58.0111%" y="565" width="0.0469%" height="15" fill="rgb(240,103,49)" fg:x="19805" fg:w="16"/><text x="58.2611%" y="575.50"></text></g><g><title>cache_bin_full (14 samples, 0.04%)</title><rect x="58.0170%" y="549" width="0.0410%" height="15" fill="rgb(250,182,30)" fg:x="19807" fg:w="14"/><text x="58.2670%" y="559.50"></text></g><g><title>sz_size2index (15 samples, 0.04%)</title><rect x="58.0580%" y="613" width="0.0439%" height="15" fill="rgb(248,8,30)" fg:x="19821" fg:w="15"/><text x="58.3080%" y="623.50"></text></g><g><title>sz_size2index_compute (13 samples, 0.04%)</title><rect x="58.0639%" y="597" width="0.0381%" height="15" fill="rgb(237,120,30)" fg:x="19823" fg:w="13"/><text x="58.3139%" y="607.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (6 samples, 0.02%)</title><rect x="58.1722%" y="549" width="0.0176%" height="15" fill="rgb(221,146,34)" fg:x="19860" fg:w="6"/><text x="58.4222%" y="559.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (5 samples, 0.01%)</title><rect x="58.1986%" y="485" width="0.0146%" height="15" fill="rgb(242,55,13)" fg:x="19869" fg:w="5"/><text x="58.4486%" y="495.50"></text></g><g><title>pac_dalloc_impl (5 samples, 0.01%)</title><rect x="58.1986%" y="469" width="0.0146%" height="15" fill="rgb(242,112,31)" fg:x="19869" fg:w="5"/><text x="58.4486%" y="479.50"></text></g><g><title>_rjem_je_extent_record (4 samples, 0.01%)</title><rect x="58.2015%" y="453" width="0.0117%" height="15" fill="rgb(249,192,27)" fg:x="19870" fg:w="4"/><text x="58.4515%" y="463.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.01%)</title><rect x="58.2132%" y="469" width="0.0117%" height="15" fill="rgb(208,204,44)" fg:x="19874" fg:w="4"/><text x="58.4632%" y="479.50"></text></g><g><title>pthread_mutex_trylock (4 samples, 0.01%)</title><rect x="58.2132%" y="453" width="0.0117%" height="15" fill="rgb(208,93,54)" fg:x="19874" fg:w="4"/><text x="58.4632%" y="463.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="58.2132%" y="485" width="0.0146%" height="15" fill="rgb(242,1,31)" fg:x="19874" fg:w="5"/><text x="58.4632%" y="495.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (31 samples, 0.09%)</title><rect x="58.1517%" y="565" width="0.0908%" height="15" fill="rgb(241,83,25)" fg:x="19853" fg:w="31"/><text x="58.4017%" y="575.50"></text></g><g><title>tcache_gc_small (18 samples, 0.05%)</title><rect x="58.1898%" y="549" width="0.0527%" height="15" fill="rgb(205,169,50)" fg:x="19866" fg:w="18"/><text x="58.4398%" y="559.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.05%)</title><rect x="58.1927%" y="533" width="0.0498%" height="15" fill="rgb(239,186,37)" fg:x="19867" fg:w="17"/><text x="58.4427%" y="543.50"></text></g><g><title>tcache_bin_flush_bottom (17 samples, 0.05%)</title><rect x="58.1927%" y="517" width="0.0498%" height="15" fill="rgb(205,221,10)" fg:x="19867" fg:w="17"/><text x="58.4427%" y="527.50"></text></g><g><title>tcache_bin_flush_impl (17 samples, 0.05%)</title><rect x="58.1927%" y="501" width="0.0498%" height="15" fill="rgb(218,196,15)" fg:x="19867" fg:w="17"/><text x="58.4427%" y="511.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (4 samples, 0.01%)</title><rect x="58.2308%" y="485" width="0.0117%" height="15" fill="rgb(218,196,35)" fg:x="19880" fg:w="4"/><text x="58.4808%" y="495.50"></text></g><g><title>emap_edata_lookup_batch (4 samples, 0.01%)</title><rect x="58.2308%" y="469" width="0.0117%" height="15" fill="rgb(233,63,24)" fg:x="19880" fg:w="4"/><text x="58.4808%" y="479.50"></text></g><g><title>_rjem_je_te_event_trigger (51 samples, 0.15%)</title><rect x="58.1224%" y="581" width="0.1494%" height="15" fill="rgb(225,8,4)" fg:x="19843" fg:w="51"/><text x="58.3724%" y="591.50"></text></g><g><title>_rjem_je_sdallocx_default (168 samples, 0.49%)</title><rect x="57.7885%" y="645" width="0.4921%" height="15" fill="rgb(234,105,35)" fg:x="19729" fg:w="168"/><text x="58.0385%" y="655.50"></text></g><g><title>isfree (148 samples, 0.43%)</title><rect x="57.8471%" y="629" width="0.4335%" height="15" fill="rgb(236,21,32)" fg:x="19749" fg:w="148"/><text x="58.0971%" y="639.50"></text></g><g><title>thread_dalloc_event (61 samples, 0.18%)</title><rect x="58.1019%" y="613" width="0.1787%" height="15" fill="rgb(228,109,6)" fg:x="19836" fg:w="61"/><text x="58.3519%" y="623.50"></text></g><g><title>te_event_advance (61 samples, 0.18%)</title><rect x="58.1019%" y="597" width="0.1787%" height="15" fill="rgb(229,215,31)" fg:x="19836" fg:w="61"/><text x="58.3519%" y="607.50"></text></g><g><title>core::mem::drop (174 samples, 0.51%)</title><rect x="57.7739%" y="821" width="0.5097%" height="15" fill="rgb(221,52,54)" fg:x="19724" fg:w="174"/><text x="58.0239%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (174 samples, 0.51%)</title><rect x="57.7739%" y="805" width="0.5097%" height="15" fill="rgb(252,129,43)" fg:x="19724" fg:w="174"/><text x="58.0239%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (169 samples, 0.50%)</title><rect x="57.7885%" y="789" width="0.4950%" height="15" fill="rgb(248,183,27)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (169 samples, 0.50%)</title><rect x="57.7885%" y="773" width="0.4950%" height="15" fill="rgb(250,0,22)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (169 samples, 0.50%)</title><rect x="57.7885%" y="757" width="0.4950%" height="15" fill="rgb(213,166,10)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.50%)</title><rect x="57.7885%" y="741" width="0.4950%" height="15" fill="rgb(207,163,36)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (169 samples, 0.50%)</title><rect x="57.7885%" y="725" width="0.4950%" height="15" fill="rgb(208,122,22)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (169 samples, 0.50%)</title><rect x="57.7885%" y="709" width="0.4950%" height="15" fill="rgb(207,104,49)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (169 samples, 0.50%)</title><rect x="57.7885%" y="693" width="0.4950%" height="15" fill="rgb(248,211,50)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="703.50"></text></g><g><title>__rust_dealloc (169 samples, 0.50%)</title><rect x="57.7885%" y="677" width="0.4950%" height="15" fill="rgb(217,13,45)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="687.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (169 samples, 0.50%)</title><rect x="57.7885%" y="661" width="0.4950%" height="15" fill="rgb(211,216,49)" fg:x="19729" fg:w="169"/><text x="58.0385%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.07%)</title><rect x="58.2835%" y="821" width="0.0703%" height="15" fill="rgb(221,58,53)" fg:x="19898" fg:w="24"/><text x="58.5335%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.07%)</title><rect x="58.2835%" y="805" width="0.0703%" height="15" fill="rgb(220,112,41)" fg:x="19898" fg:w="24"/><text x="58.5335%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (205 samples, 0.60%)</title><rect x="57.7592%" y="869" width="0.6005%" height="15" fill="rgb(236,38,28)" fg:x="19719" fg:w="205"/><text x="58.0092%" y="879.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (205 samples, 0.60%)</title><rect x="57.7592%" y="853" width="0.6005%" height="15" fill="rgb(227,195,22)" fg:x="19719" fg:w="205"/><text x="58.0092%" y="863.50"></text></g><g><title>bytes::bytes_mut::release_shared (200 samples, 0.59%)</title><rect x="57.7739%" y="837" width="0.5858%" height="15" fill="rgb(214,55,33)" fg:x="19724" fg:w="200"/><text x="58.0239%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (9 samples, 0.03%)</title><rect x="58.3597%" y="869" width="0.0264%" height="15" fill="rgb(248,80,13)" fg:x="19924" fg:w="9"/><text x="58.6097%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.03%)</title><rect x="58.3597%" y="853" width="0.0264%" height="15" fill="rgb(238,52,6)" fg:x="19924" fg:w="9"/><text x="58.6097%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (6 samples, 0.02%)</title><rect x="58.4095%" y="805" width="0.0176%" height="15" fill="rgb(224,198,47)" fg:x="19941" fg:w="6"/><text x="58.6595%" y="815.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (4 samples, 0.01%)</title><rect x="58.4153%" y="789" width="0.0117%" height="15" fill="rgb(233,171,20)" fg:x="19943" fg:w="4"/><text x="58.6653%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (4 samples, 0.01%)</title><rect x="58.4153%" y="773" width="0.0117%" height="15" fill="rgb(241,30,25)" fg:x="19943" fg:w="4"/><text x="58.6653%" y="783.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (4 samples, 0.01%)</title><rect x="58.4153%" y="757" width="0.0117%" height="15" fill="rgb(207,171,38)" fg:x="19943" fg:w="4"/><text x="58.6653%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (4 samples, 0.01%)</title><rect x="58.4153%" y="741" width="0.0117%" height="15" fill="rgb(234,70,1)" fg:x="19943" fg:w="4"/><text x="58.6653%" y="751.50"></text></g><g><title>&lt;flume::async::AsyncSignal as flume::signal::Signal&gt;::fire (9 samples, 0.03%)</title><rect x="58.4036%" y="821" width="0.0264%" height="15" fill="rgb(232,178,18)" fg:x="19939" fg:w="9"/><text x="58.6536%" y="831.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_write (6 samples, 0.02%)</title><rect x="58.4446%" y="805" width="0.0176%" height="15" fill="rgb(241,78,40)" fg:x="19953" fg:w="6"/><text x="58.6946%" y="815.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="58.4446%" y="789" width="0.0176%" height="15" fill="rgb(222,35,25)" fg:x="19953" fg:w="6"/><text x="58.6946%" y="799.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_back (10 samples, 0.03%)</title><rect x="58.4417%" y="821" width="0.0293%" height="15" fill="rgb(207,92,16)" fg:x="19952" fg:w="10"/><text x="58.6917%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.01%)</title><rect x="58.4739%" y="821" width="0.0146%" height="15" fill="rgb(216,59,51)" fg:x="19963" fg:w="5"/><text x="58.7239%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="58.4886%" y="821" width="0.0146%" height="15" fill="rgb(213,80,28)" fg:x="19968" fg:w="5"/><text x="58.7386%" y="831.50"></text></g><g><title>flume::Shared&lt;T&gt;::send::_{{closure}} (5 samples, 0.01%)</title><rect x="58.4886%" y="805" width="0.0146%" height="15" fill="rgb(220,93,7)" fg:x="19968" fg:w="5"/><text x="58.7386%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (39 samples, 0.11%)</title><rect x="58.5032%" y="821" width="0.1142%" height="15" fill="rgb(225,24,44)" fg:x="19973" fg:w="39"/><text x="58.7532%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.11%)</title><rect x="58.5032%" y="805" width="0.1142%" height="15" fill="rgb(243,74,40)" fg:x="19973" fg:w="39"/><text x="58.7532%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (39 samples, 0.11%)</title><rect x="58.5032%" y="789" width="0.1142%" height="15" fill="rgb(228,39,7)" fg:x="19973" fg:w="39"/><text x="58.7532%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (38 samples, 0.11%)</title><rect x="58.5062%" y="773" width="0.1113%" height="15" fill="rgb(227,79,8)" fg:x="19974" fg:w="38"/><text x="58.7562%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (38 samples, 0.11%)</title><rect x="58.5062%" y="757" width="0.1113%" height="15" fill="rgb(236,58,11)" fg:x="19974" fg:w="38"/><text x="58.7562%" y="767.50"></text></g><g><title>flume::Sender&lt;T&gt;::try_send (140 samples, 0.41%)</title><rect x="58.3861%" y="869" width="0.4101%" height="15" fill="rgb(249,63,35)" fg:x="19933" fg:w="140"/><text x="58.6361%" y="879.50"></text></g><g><title>flume::Shared&lt;T&gt;::send_sync (138 samples, 0.40%)</title><rect x="58.3919%" y="853" width="0.4042%" height="15" fill="rgb(252,114,16)" fg:x="19935" fg:w="138"/><text x="58.6419%" y="863.50"></text></g><g><title>flume::Shared&lt;T&gt;::send (138 samples, 0.40%)</title><rect x="58.3919%" y="837" width="0.4042%" height="15" fill="rgb(254,151,24)" fg:x="19935" fg:w="138"/><text x="58.6419%" y="847.50"></text></g><g><title>flume::wait_lock (58 samples, 0.17%)</title><rect x="58.6262%" y="821" width="0.1699%" height="15" fill="rgb(253,54,39)" fg:x="20015" fg:w="58"/><text x="58.8762%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (57 samples, 0.17%)</title><rect x="58.6292%" y="805" width="0.1670%" height="15" fill="rgb(243,25,45)" fg:x="20016" fg:w="57"/><text x="58.8792%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (56 samples, 0.16%)</title><rect x="58.6321%" y="789" width="0.1640%" height="15" fill="rgb(234,134,9)" fg:x="20017" fg:w="56"/><text x="58.8821%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (56 samples, 0.16%)</title><rect x="58.6321%" y="773" width="0.1640%" height="15" fill="rgb(227,166,31)" fg:x="20017" fg:w="56"/><text x="58.8821%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.16%)</title><rect x="58.6321%" y="757" width="0.1640%" height="15" fill="rgb(245,143,41)" fg:x="20017" fg:w="56"/><text x="58.8821%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::_{{closure}} (35 samples, 0.10%)</title><rect x="58.8606%" y="757" width="0.1025%" height="15" fill="rgb(238,181,32)" fg:x="20095" fg:w="35"/><text x="59.1106%" y="767.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (35 samples, 0.10%)</title><rect x="58.8606%" y="741" width="0.1025%" height="15" fill="rgb(224,113,18)" fg:x="20095" fg:w="35"/><text x="59.1106%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (35 samples, 0.10%)</title><rect x="58.8606%" y="725" width="0.1025%" height="15" fill="rgb(240,229,28)" fg:x="20095" fg:w="35"/><text x="59.1106%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (35 samples, 0.10%)</title><rect x="58.8606%" y="709" width="0.1025%" height="15" fill="rgb(250,185,3)" fg:x="20095" fg:w="35"/><text x="59.1106%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (38 samples, 0.11%)</title><rect x="58.8606%" y="773" width="0.1113%" height="15" fill="rgb(212,59,25)" fg:x="20095" fg:w="38"/><text x="59.1106%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (28 samples, 0.08%)</title><rect x="58.9748%" y="773" width="0.0820%" height="15" fill="rgb(221,87,20)" fg:x="20134" fg:w="28"/><text x="59.2248%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (28 samples, 0.08%)</title><rect x="58.9748%" y="757" width="0.0820%" height="15" fill="rgb(213,74,28)" fg:x="20134" fg:w="28"/><text x="59.2248%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (28 samples, 0.08%)</title><rect x="58.9748%" y="741" width="0.0820%" height="15" fill="rgb(224,132,34)" fg:x="20134" fg:w="28"/><text x="59.2248%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (99 samples, 0.29%)</title><rect x="58.7961%" y="869" width="0.2900%" height="15" fill="rgb(222,101,24)" fg:x="20073" fg:w="99"/><text x="59.0461%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (99 samples, 0.29%)</title><rect x="58.7961%" y="853" width="0.2900%" height="15" fill="rgb(254,142,4)" fg:x="20073" fg:w="99"/><text x="59.0461%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (99 samples, 0.29%)</title><rect x="58.7961%" y="837" width="0.2900%" height="15" fill="rgb(230,229,49)" fg:x="20073" fg:w="99"/><text x="59.0461%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (85 samples, 0.25%)</title><rect x="58.8371%" y="821" width="0.2490%" height="15" fill="rgb(238,70,47)" fg:x="20087" fg:w="85"/><text x="59.0871%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (85 samples, 0.25%)</title><rect x="58.8371%" y="805" width="0.2490%" height="15" fill="rgb(231,160,17)" fg:x="20087" fg:w="85"/><text x="59.0871%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (85 samples, 0.25%)</title><rect x="58.8371%" y="789" width="0.2490%" height="15" fill="rgb(218,68,53)" fg:x="20087" fg:w="85"/><text x="59.0871%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.03%)</title><rect x="59.0568%" y="773" width="0.0293%" height="15" fill="rgb(236,111,10)" fg:x="20162" fg:w="10"/><text x="59.3068%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (10 samples, 0.03%)</title><rect x="59.0568%" y="757" width="0.0293%" height="15" fill="rgb(224,34,41)" fg:x="20162" fg:w="10"/><text x="59.3068%" y="767.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll::_{{closure}} (13,062 samples, 38.26%)</title><rect x="20.8494%" y="981" width="38.2601%" height="15" fill="rgb(241,118,19)" fg:x="7118" fg:w="13062"/><text x="21.0994%" y="991.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future:..</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13,062 samples, 38.26%)</title><rect x="20.8494%" y="965" width="38.2601%" height="15" fill="rgb(238,129,25)" fg:x="7118" fg:w="13062"/><text x="21.0994%" y="975.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::fut..</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (13,062 samples, 38.26%)</title><rect x="20.8494%" y="949" width="38.2601%" height="15" fill="rgb(238,22,31)" fg:x="7118" fg:w="13062"/><text x="21.0994%" y="959.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future..</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}} (13,061 samples, 38.26%)</title><rect x="20.8524%" y="933" width="38.2572%" height="15" fill="rgb(222,174,48)" fg:x="7119" fg:w="13061"/><text x="21.1024%" y="943.50">wisp_mux::inner::MuxInner&lt;R&gt;::into_future::_{{closure}}</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (13,042 samples, 38.20%)</title><rect x="20.9080%" y="917" width="38.2015%" height="15" fill="rgb(206,152,40)" fg:x="7138" fg:w="13042"/><text x="21.1580%" y="927.50">wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}</text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::server_handle_packet::_{{closure}} (552 samples, 1.62%)</title><rect x="57.4927%" y="901" width="1.6169%" height="15" fill="rgb(218,99,54)" fg:x="19628" fg:w="552"/><text x="57.7427%" y="911.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::handle_data_packet (478 samples, 1.40%)</title><rect x="57.7094%" y="885" width="1.4001%" height="15" fill="rgb(220,174,26)" fg:x="19702" fg:w="478"/><text x="57.9594%" y="895.50"></text></g><g><title>wisp_mux::ws::&lt;impl core::convert::From&lt;wisp_mux::ws::Payload&gt; for bytes::bytes_mut::BytesMut&gt;::from (8 samples, 0.02%)</title><rect x="59.0861%" y="869" width="0.0234%" height="15" fill="rgb(245,116,9)" fg:x="20172" fg:w="8"/><text x="59.3361%" y="879.50"></text></g><g><title>&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future::future::Future&gt;::poll (13,066 samples, 38.27%)</title><rect x="20.8494%" y="1029" width="38.2718%" height="15" fill="rgb(209,72,35)" fg:x="7118" fg:w="13066"/><text x="21.0994%" y="1039.50">&lt;tokio::task::unconstrained::Unconstrained&lt;F&gt; as core::future:..</text></g><g><title>tokio::runtime::coop::with_unconstrained (13,066 samples, 38.27%)</title><rect x="20.8494%" y="1013" width="38.2718%" height="15" fill="rgb(226,126,21)" fg:x="7118" fg:w="13066"/><text x="21.0994%" y="1023.50">tokio::runtime::coop::with_unconstrained</text></g><g><title>tokio::runtime::coop::with_budget (13,066 samples, 38.27%)</title><rect x="20.8494%" y="997" width="38.2718%" height="15" fill="rgb(227,192,1)" fg:x="7118" fg:w="13066"/><text x="21.0994%" y="1007.50">tokio::runtime::coop::with_budget</text></g><g><title>core::ops::function::FnOnce::call_once (16 samples, 0.05%)</title><rect x="59.1213%" y="965" width="0.0469%" height="15" fill="rgb(237,180,29)" fg:x="20184" fg:w="16"/><text x="59.3713%" y="975.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (16 samples, 0.05%)</title><rect x="59.1213%" y="949" width="0.0469%" height="15" fill="rgb(230,197,35)" fg:x="20184" fg:w="16"/><text x="59.3713%" y="959.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (16 samples, 0.05%)</title><rect x="59.1213%" y="933" width="0.0469%" height="15" fill="rgb(246,193,31)" fg:x="20184" fg:w="16"/><text x="59.3713%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (12 samples, 0.04%)</title><rect x="59.1330%" y="917" width="0.0351%" height="15" fill="rgb(241,36,4)" fg:x="20188" fg:w="12"/><text x="59.3830%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::TaskIdGuard&gt; (24 samples, 0.07%)</title><rect x="59.1213%" y="1029" width="0.0703%" height="15" fill="rgb(241,130,17)" fg:x="20184" fg:w="24"/><text x="59.3713%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (24 samples, 0.07%)</title><rect x="59.1213%" y="1013" width="0.0703%" height="15" fill="rgb(206,137,32)" fg:x="20184" fg:w="24"/><text x="59.3713%" y="1023.50"></text></g><g><title>tokio::runtime::context::set_current_task_id (24 samples, 0.07%)</title><rect x="59.1213%" y="997" width="0.0703%" height="15" fill="rgb(237,228,51)" fg:x="20184" fg:w="24"/><text x="59.3713%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.07%)</title><rect x="59.1213%" y="981" width="0.0703%" height="15" fill="rgb(243,6,42)" fg:x="20184" fg:w="24"/><text x="59.3713%" y="991.50"></text></g><g><title>tokio::runtime::context::set_current_task_id::_{{closure}} (8 samples, 0.02%)</title><rect x="59.1681%" y="965" width="0.0234%" height="15" fill="rgb(251,74,28)" fg:x="20200" fg:w="8"/><text x="59.4181%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.02%)</title><rect x="59.1681%" y="949" width="0.0234%" height="15" fill="rgb(218,20,49)" fg:x="20200" fg:w="8"/><text x="59.4181%" y="959.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="59.1681%" y="933" width="0.0234%" height="15" fill="rgb(238,28,14)" fg:x="20200" fg:w="8"/><text x="59.4181%" y="943.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="59.1681%" y="917" width="0.0234%" height="15" fill="rgb(229,40,46)" fg:x="20200" fg:w="8"/><text x="59.4181%" y="927.50"></text></g><g><title>event_listener::EventListener&lt;T&gt;::listener_mut (5 samples, 0.01%)</title><rect x="59.3527%" y="965" width="0.0146%" height="15" fill="rgb(244,195,20)" fg:x="20263" fg:w="5"/><text x="59.6027%" y="975.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::as_mut (5 samples, 0.01%)</title><rect x="59.3527%" y="949" width="0.0146%" height="15" fill="rgb(253,56,35)" fg:x="20263" fg:w="5"/><text x="59.6027%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.01%)</title><rect x="59.3527%" y="933" width="0.0146%" height="15" fill="rgb(210,149,44)" fg:x="20263" fg:w="5"/><text x="59.6027%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (8 samples, 0.02%)</title><rect x="59.4610%" y="933" width="0.0234%" height="15" fill="rgb(240,135,12)" fg:x="20300" fg:w="8"/><text x="59.7110%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="59.4669%" y="917" width="0.0176%" height="15" fill="rgb(251,24,50)" fg:x="20302" fg:w="6"/><text x="59.7169%" y="927.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="59.4669%" y="901" width="0.0176%" height="15" fill="rgb(243,200,47)" fg:x="20302" fg:w="6"/><text x="59.7169%" y="911.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4 samples, 0.01%)</title><rect x="59.4728%" y="885" width="0.0117%" height="15" fill="rgb(224,166,26)" fg:x="20304" fg:w="4"/><text x="59.7228%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.01%)</title><rect x="59.4728%" y="869" width="0.0117%" height="15" fill="rgb(233,0,47)" fg:x="20304" fg:w="4"/><text x="59.7228%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.01%)</title><rect x="59.4728%" y="853" width="0.0117%" height="15" fill="rgb(253,80,5)" fg:x="20304" fg:w="4"/><text x="59.7228%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 0.22%)</title><rect x="59.3439%" y="981" width="0.2226%" height="15" fill="rgb(214,133,25)" fg:x="20260" fg:w="76"/><text x="59.5939%" y="991.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (68 samples, 0.20%)</title><rect x="59.3673%" y="965" width="0.1992%" height="15" fill="rgb(209,27,14)" fg:x="20268" fg:w="68"/><text x="59.6173%" y="975.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (43 samples, 0.13%)</title><rect x="59.4405%" y="949" width="0.1260%" height="15" fill="rgb(219,102,51)" fg:x="20293" fg:w="43"/><text x="59.6905%" y="959.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (28 samples, 0.08%)</title><rect x="59.4845%" y="933" width="0.0820%" height="15" fill="rgb(237,18,16)" fg:x="20308" fg:w="28"/><text x="59.7345%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (28 samples, 0.08%)</title><rect x="59.4845%" y="917" width="0.0820%" height="15" fill="rgb(241,85,17)" fg:x="20308" fg:w="28"/><text x="59.7345%" y="927.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (28 samples, 0.08%)</title><rect x="59.4845%" y="901" width="0.0820%" height="15" fill="rgb(236,90,42)" fg:x="20308" fg:w="28"/><text x="59.7345%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (28 samples, 0.08%)</title><rect x="59.4845%" y="885" width="0.0820%" height="15" fill="rgb(249,57,21)" fg:x="20308" fg:w="28"/><text x="59.7345%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.08%)</title><rect x="59.4845%" y="869" width="0.0820%" height="15" fill="rgb(243,12,36)" fg:x="20308" fg:w="28"/><text x="59.7345%" y="879.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (26 samples, 0.08%)</title><rect x="59.9824%" y="773" width="0.0762%" height="15" fill="rgb(253,128,47)" fg:x="20478" fg:w="26"/><text x="60.2324%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::unfold_state::UnfoldState&lt;wisp_mux::stream::MuxStreamRead,wisp_mux::stream::MuxStreamRead::into_inner_stream::{{closure}}::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="60.0469%" y="757" width="0.0117%" height="15" fill="rgb(207,33,20)" fg:x="20500" fg:w="4"/><text x="60.2969%" y="767.50"></text></g><g><title>futures_util::unfold_state::UnfoldState&lt;T,R&gt;::take_value (36 samples, 0.11%)</title><rect x="60.0615%" y="773" width="0.1054%" height="15" fill="rgb(233,215,35)" fg:x="20505" fg:w="36"/><text x="60.3115%" y="783.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (14 samples, 0.04%)</title><rect x="60.2841%" y="405" width="0.0410%" height="15" fill="rgb(249,188,52)" fg:x="20581" fg:w="14"/><text x="60.5341%" y="415.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (14 samples, 0.04%)</title><rect x="60.2841%" y="389" width="0.0410%" height="15" fill="rgb(225,12,32)" fg:x="20581" fg:w="14"/><text x="60.5341%" y="399.50"></text></g><g><title>_rjem_je_malloc_default (16 samples, 0.05%)</title><rect x="60.2812%" y="517" width="0.0469%" height="15" fill="rgb(247,98,14)" fg:x="20580" fg:w="16"/><text x="60.5312%" y="527.50"></text></g><g><title>imalloc (16 samples, 0.05%)</title><rect x="60.2812%" y="501" width="0.0469%" height="15" fill="rgb(247,219,48)" fg:x="20580" fg:w="16"/><text x="60.5312%" y="511.50"></text></g><g><title>imalloc_body (16 samples, 0.05%)</title><rect x="60.2812%" y="485" width="0.0469%" height="15" fill="rgb(253,60,48)" fg:x="20580" fg:w="16"/><text x="60.5312%" y="495.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.04%)</title><rect x="60.2841%" y="469" width="0.0439%" height="15" fill="rgb(245,15,52)" fg:x="20581" fg:w="15"/><text x="60.5341%" y="479.50"></text></g><g><title>iallocztm (15 samples, 0.04%)</title><rect x="60.2841%" y="453" width="0.0439%" height="15" fill="rgb(220,133,28)" fg:x="20581" fg:w="15"/><text x="60.5341%" y="463.50"></text></g><g><title>arena_malloc (15 samples, 0.04%)</title><rect x="60.2841%" y="437" width="0.0439%" height="15" fill="rgb(217,180,4)" fg:x="20581" fg:w="15"/><text x="60.5341%" y="447.50"></text></g><g><title>tcache_alloc_small (15 samples, 0.04%)</title><rect x="60.2841%" y="421" width="0.0439%" height="15" fill="rgb(251,24,1)" fg:x="20581" fg:w="15"/><text x="60.5341%" y="431.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.07%)</title><rect x="60.2783%" y="741" width="0.0703%" height="15" fill="rgb(212,185,49)" fg:x="20579" fg:w="24"/><text x="60.5283%" y="751.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (24 samples, 0.07%)</title><rect x="60.2783%" y="725" width="0.0703%" height="15" fill="rgb(215,175,22)" fg:x="20579" fg:w="24"/><text x="60.5283%" y="735.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (24 samples, 0.07%)</title><rect x="60.2783%" y="709" width="0.0703%" height="15" fill="rgb(250,205,14)" fg:x="20579" fg:w="24"/><text x="60.5283%" y="719.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (23 samples, 0.07%)</title><rect x="60.2812%" y="693" width="0.0674%" height="15" fill="rgb(225,211,22)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (23 samples, 0.07%)</title><rect x="60.2812%" y="677" width="0.0674%" height="15" fill="rgb(251,179,42)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.07%)</title><rect x="60.2812%" y="661" width="0.0674%" height="15" fill="rgb(208,216,51)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.07%)</title><rect x="60.2812%" y="645" width="0.0674%" height="15" fill="rgb(235,36,11)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (23 samples, 0.07%)</title><rect x="60.2812%" y="629" width="0.0674%" height="15" fill="rgb(213,189,28)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (23 samples, 0.07%)</title><rect x="60.2812%" y="613" width="0.0674%" height="15" fill="rgb(227,203,42)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.07%)</title><rect x="60.2812%" y="597" width="0.0674%" height="15" fill="rgb(244,72,36)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.07%)</title><rect x="60.2812%" y="581" width="0.0674%" height="15" fill="rgb(213,53,17)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="591.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.07%)</title><rect x="60.2812%" y="565" width="0.0674%" height="15" fill="rgb(207,167,3)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="575.50"></text></g><g><title>__rust_alloc (23 samples, 0.07%)</title><rect x="60.2812%" y="549" width="0.0674%" height="15" fill="rgb(216,98,30)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.07%)</title><rect x="60.2812%" y="533" width="0.0674%" height="15" fill="rgb(236,123,15)" fg:x="20580" fg:w="23"/><text x="60.5312%" y="543.50"></text></g><g><title>_rjem_malloc (7 samples, 0.02%)</title><rect x="60.3281%" y="517" width="0.0205%" height="15" fill="rgb(248,81,50)" fg:x="20596" fg:w="7"/><text x="60.5781%" y="527.50"></text></g><g><title>imalloc_fastpath (7 samples, 0.02%)</title><rect x="60.3281%" y="501" width="0.0205%" height="15" fill="rgb(214,120,4)" fg:x="20596" fg:w="7"/><text x="60.5781%" y="511.50"></text></g><g><title>cache_bin_alloc_easy (6 samples, 0.02%)</title><rect x="60.3310%" y="485" width="0.0176%" height="15" fill="rgb(208,179,34)" fg:x="20597" fg:w="6"/><text x="60.5810%" y="495.50"></text></g><g><title>cache_bin_alloc_impl (6 samples, 0.02%)</title><rect x="60.3310%" y="469" width="0.0176%" height="15" fill="rgb(227,140,7)" fg:x="20597" fg:w="6"/><text x="60.5810%" y="479.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as futures_core::future::FusedFuture&gt;::is_terminated (40 samples, 0.12%)</title><rect x="60.4130%" y="661" width="0.1172%" height="15" fill="rgb(214,22,6)" fg:x="20625" fg:w="40"/><text x="60.6630%" y="671.50"></text></g><g><title>flume::Shared&lt;T&gt;::is_disconnected (31 samples, 0.09%)</title><rect x="60.4394%" y="645" width="0.0908%" height="15" fill="rgb(207,137,27)" fg:x="20634" fg:w="31"/><text x="60.6894%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (31 samples, 0.09%)</title><rect x="60.4394%" y="629" width="0.0908%" height="15" fill="rgb(210,8,46)" fg:x="20634" fg:w="31"/><text x="60.6894%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.09%)</title><rect x="60.4394%" y="613" width="0.0908%" height="15" fill="rgb(240,16,54)" fg:x="20634" fg:w="31"/><text x="60.6894%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::future::FusedFuture&gt;::is_terminated (41 samples, 0.12%)</title><rect x="60.4130%" y="677" width="0.1201%" height="15" fill="rgb(211,209,29)" fg:x="20625" fg:w="41"/><text x="60.6630%" y="687.50"></text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="60.5331%" y="677" width="0.0322%" height="15" fill="rgb(226,228,24)" fg:x="20666" fg:w="11"/><text x="60.7831%" y="687.50"></text></g><g><title>&lt;flume::async::OwnedOrRef&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="60.6005%" y="613" width="0.0176%" height="15" fill="rgb(222,84,9)" fg:x="20689" fg:w="6"/><text x="60.8505%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="60.6180%" y="613" width="0.0117%" height="15" fill="rgb(234,203,30)" fg:x="20695" fg:w="4"/><text x="60.8680%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="60.6298%" y="613" width="0.0234%" height="15" fill="rgb(238,109,14)" fg:x="20699" fg:w="8"/><text x="60.8798%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="60.6298%" y="597" width="0.0234%" height="15" fill="rgb(233,206,34)" fg:x="20699" fg:w="8"/><text x="60.8798%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="60.6298%" y="581" width="0.0234%" height="15" fill="rgb(220,167,47)" fg:x="20699" fg:w="8"/><text x="60.8798%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.02%)</title><rect x="60.6298%" y="565" width="0.0234%" height="15" fill="rgb(238,105,10)" fg:x="20699" fg:w="8"/><text x="60.8798%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.02%)</title><rect x="60.6298%" y="549" width="0.0234%" height="15" fill="rgb(213,227,17)" fg:x="20699" fg:w="8"/><text x="60.8798%" y="559.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (12 samples, 0.04%)</title><rect x="60.7030%" y="581" width="0.0351%" height="15" fill="rgb(217,132,38)" fg:x="20724" fg:w="12"/><text x="60.9530%" y="591.50"></text></g><g><title>core::ptr::read (11 samples, 0.03%)</title><rect x="60.7059%" y="565" width="0.0322%" height="15" fill="rgb(242,146,4)" fg:x="20725" fg:w="11"/><text x="60.9559%" y="575.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (15 samples, 0.04%)</title><rect x="60.7001%" y="597" width="0.0439%" height="15" fill="rgb(212,61,9)" fg:x="20723" fg:w="15"/><text x="60.9501%" y="607.50"></text></g><g><title>core::mem::drop (15 samples, 0.04%)</title><rect x="60.7469%" y="597" width="0.0439%" height="15" fill="rgb(247,126,22)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;flume::Chan&lt;bytes::bytes::Bytes&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="60.7469%" y="581" width="0.0439%" height="15" fill="rgb(220,196,2)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="60.7469%" y="565" width="0.0439%" height="15" fill="rgb(208,46,4)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (15 samples, 0.04%)</title><rect x="60.7469%" y="549" width="0.0439%" height="15" fill="rgb(252,104,46)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (15 samples, 0.04%)</title><rect x="60.7469%" y="533" width="0.0439%" height="15" fill="rgb(237,152,48)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.04%)</title><rect x="60.7469%" y="517" width="0.0439%" height="15" fill="rgb(221,59,37)" fg:x="20739" fg:w="15"/><text x="60.9969%" y="527.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (6 samples, 0.02%)</title><rect x="60.7909%" y="597" width="0.0176%" height="15" fill="rgb(209,202,51)" fg:x="20754" fg:w="6"/><text x="61.0409%" y="607.50"></text></g><g><title>_rjem_je_eset_fit (4 samples, 0.01%)</title><rect x="60.8260%" y="165" width="0.0117%" height="15" fill="rgb(228,81,30)" fg:x="20766" fg:w="4"/><text x="61.0760%" y="175.50"></text></g><g><title>extent_recycle_extract (5 samples, 0.01%)</title><rect x="60.8260%" y="181" width="0.0146%" height="15" fill="rgb(227,42,39)" fg:x="20766" fg:w="5"/><text x="61.0760%" y="191.50"></text></g><g><title>arena_slab_alloc (10 samples, 0.03%)</title><rect x="60.8143%" y="293" width="0.0293%" height="15" fill="rgb(221,26,2)" fg:x="20762" fg:w="10"/><text x="61.0643%" y="303.50"></text></g><g><title>_rjem_je_pa_alloc (7 samples, 0.02%)</title><rect x="60.8231%" y="277" width="0.0205%" height="15" fill="rgb(254,61,31)" fg:x="20765" fg:w="7"/><text x="61.0731%" y="287.50"></text></g><g><title>pai_alloc (7 samples, 0.02%)</title><rect x="60.8231%" y="261" width="0.0205%" height="15" fill="rgb(222,173,38)" fg:x="20765" fg:w="7"/><text x="61.0731%" y="271.50"></text></g><g><title>pac_alloc_impl (7 samples, 0.02%)</title><rect x="60.8231%" y="245" width="0.0205%" height="15" fill="rgb(218,50,12)" fg:x="20765" fg:w="7"/><text x="61.0731%" y="255.50"></text></g><g><title>pac_alloc_real (6 samples, 0.02%)</title><rect x="60.8260%" y="229" width="0.0176%" height="15" fill="rgb(223,88,40)" fg:x="20766" fg:w="6"/><text x="61.0760%" y="239.50"></text></g><g><title>_rjem_je_ecache_alloc (6 samples, 0.02%)</title><rect x="60.8260%" y="213" width="0.0176%" height="15" fill="rgb(237,54,19)" fg:x="20766" fg:w="6"/><text x="61.0760%" y="223.50"></text></g><g><title>extent_recycle (6 samples, 0.02%)</title><rect x="60.8260%" y="197" width="0.0176%" height="15" fill="rgb(251,129,25)" fg:x="20766" fg:w="6"/><text x="61.0760%" y="207.50"></text></g><g><title>_rjem_je_malloc_default (13 samples, 0.04%)</title><rect x="60.8084%" y="437" width="0.0381%" height="15" fill="rgb(238,97,19)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="447.50"></text></g><g><title>imalloc (13 samples, 0.04%)</title><rect x="60.8084%" y="421" width="0.0381%" height="15" fill="rgb(240,169,18)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="431.50"></text></g><g><title>imalloc_body (13 samples, 0.04%)</title><rect x="60.8084%" y="405" width="0.0381%" height="15" fill="rgb(230,187,49)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="415.50"></text></g><g><title>imalloc_no_sample (13 samples, 0.04%)</title><rect x="60.8084%" y="389" width="0.0381%" height="15" fill="rgb(209,44,26)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="399.50"></text></g><g><title>iallocztm (13 samples, 0.04%)</title><rect x="60.8084%" y="373" width="0.0381%" height="15" fill="rgb(244,0,6)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="383.50"></text></g><g><title>arena_malloc (13 samples, 0.04%)</title><rect x="60.8084%" y="357" width="0.0381%" height="15" fill="rgb(248,18,21)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="367.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.04%)</title><rect x="60.8084%" y="341" width="0.0381%" height="15" fill="rgb(245,180,19)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (13 samples, 0.04%)</title><rect x="60.8084%" y="325" width="0.0381%" height="15" fill="rgb(252,118,36)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="335.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (13 samples, 0.04%)</title><rect x="60.8084%" y="309" width="0.0381%" height="15" fill="rgb(210,224,19)" fg:x="20760" fg:w="13"/><text x="61.0584%" y="319.50"></text></g><g><title>flume::Hook&lt;T,S&gt;::trigger (15 samples, 0.04%)</title><rect x="60.8084%" y="581" width="0.0439%" height="15" fill="rgb(218,30,24)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="591.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (15 samples, 0.04%)</title><rect x="60.8084%" y="565" width="0.0439%" height="15" fill="rgb(219,75,50)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="575.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.04%)</title><rect x="60.8084%" y="549" width="0.0439%" height="15" fill="rgb(234,72,50)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="559.50"></text></g><g><title>alloc::alloc::exchange_malloc (15 samples, 0.04%)</title><rect x="60.8084%" y="533" width="0.0439%" height="15" fill="rgb(219,100,48)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.04%)</title><rect x="60.8084%" y="517" width="0.0439%" height="15" fill="rgb(253,5,41)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.04%)</title><rect x="60.8084%" y="501" width="0.0439%" height="15" fill="rgb(247,181,11)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="511.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.04%)</title><rect x="60.8084%" y="485" width="0.0439%" height="15" fill="rgb(222,223,25)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="495.50"></text></g><g><title>__rust_alloc (15 samples, 0.04%)</title><rect x="60.8084%" y="469" width="0.0439%" height="15" fill="rgb(214,198,28)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="479.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (15 samples, 0.04%)</title><rect x="60.8084%" y="453" width="0.0439%" height="15" fill="rgb(230,46,43)" fg:x="20760" fg:w="15"/><text x="61.0584%" y="463.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner::_{{closure}} (16 samples, 0.05%)</title><rect x="60.8084%" y="597" width="0.0469%" height="15" fill="rgb(233,65,53)" fg:x="20760" fg:w="16"/><text x="61.0584%" y="607.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="60.8582%" y="565" width="0.0117%" height="15" fill="rgb(221,121,27)" fg:x="20777" fg:w="4"/><text x="61.1082%" y="575.50"></text></g><g><title>std::sync::poison::Flag::guard (4 samples, 0.01%)</title><rect x="60.8582%" y="549" width="0.0117%" height="15" fill="rgb(247,70,47)" fg:x="20777" fg:w="4"/><text x="61.1082%" y="559.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (102 samples, 0.30%)</title><rect x="60.6620%" y="613" width="0.2988%" height="15" fill="rgb(228,85,35)" fg:x="20710" fg:w="102"/><text x="60.9120%" y="623.50"></text></g><g><title>flume::wait_lock (36 samples, 0.11%)</title><rect x="60.8553%" y="597" width="0.1054%" height="15" fill="rgb(209,50,18)" fg:x="20776" fg:w="36"/><text x="61.1053%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.10%)</title><rect x="60.8582%" y="581" width="0.1025%" height="15" fill="rgb(250,19,35)" fg:x="20777" fg:w="35"/><text x="61.1082%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (31 samples, 0.09%)</title><rect x="60.8699%" y="565" width="0.0908%" height="15" fill="rgb(253,107,29)" fg:x="20781" fg:w="31"/><text x="61.1199%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (30 samples, 0.09%)</title><rect x="60.8729%" y="549" width="0.0879%" height="15" fill="rgb(252,179,29)" fg:x="20782" fg:w="30"/><text x="61.1229%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.09%)</title><rect x="60.8729%" y="533" width="0.0879%" height="15" fill="rgb(238,194,6)" fg:x="20782" fg:w="30"/><text x="61.1229%" y="543.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv_sync (11 samples, 0.03%)</title><rect x="60.9607%" y="613" width="0.0322%" height="15" fill="rgb(238,164,29)" fg:x="20812" fg:w="11"/><text x="61.2107%" y="623.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (11 samples, 0.03%)</title><rect x="60.9607%" y="597" width="0.0322%" height="15" fill="rgb(224,25,9)" fg:x="20812" fg:w="11"/><text x="61.2107%" y="607.50"></text></g><g><title>flume::wait_lock (4 samples, 0.01%)</title><rect x="60.9813%" y="581" width="0.0117%" height="15" fill="rgb(244,153,23)" fg:x="20819" fg:w="4"/><text x="61.2313%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="60.9813%" y="565" width="0.0117%" height="15" fill="rgb(212,203,14)" fg:x="20819" fg:w="4"/><text x="61.2313%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="60.9813%" y="549" width="0.0117%" height="15" fill="rgb(220,164,20)" fg:x="20819" fg:w="4"/><text x="61.2313%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.01%)</title><rect x="60.9813%" y="533" width="0.0117%" height="15" fill="rgb(222,203,48)" fg:x="20819" fg:w="4"/><text x="61.2313%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="60.9813%" y="517" width="0.0117%" height="15" fill="rgb(215,159,22)" fg:x="20819" fg:w="4"/><text x="61.2313%" y="527.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 0.40%)</title><rect x="60.5975%" y="645" width="0.4042%" height="15" fill="rgb(216,183,47)" fg:x="20688" fg:w="138"/><text x="60.8475%" y="655.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::poll_inner (138 samples, 0.40%)</title><rect x="60.5975%" y="629" width="0.4042%" height="15" fill="rgb(229,195,25)" fg:x="20688" fg:w="138"/><text x="60.8475%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (9 samples, 0.03%)</title><rect x="61.0340%" y="581" width="0.0264%" height="15" fill="rgb(224,132,51)" fg:x="20837" fg:w="9"/><text x="61.2840%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="61.0369%" y="565" width="0.0234%" height="15" fill="rgb(240,63,7)" fg:x="20838" fg:w="8"/><text x="61.2869%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="61.0369%" y="549" width="0.0234%" height="15" fill="rgb(249,182,41)" fg:x="20838" fg:w="8"/><text x="61.2869%" y="559.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (8 samples, 0.02%)</title><rect x="61.0369%" y="533" width="0.0234%" height="15" fill="rgb(243,47,26)" fg:x="20838" fg:w="8"/><text x="61.2869%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (7 samples, 0.02%)</title><rect x="61.0398%" y="517" width="0.0205%" height="15" fill="rgb(233,48,2)" fg:x="20839" fg:w="7"/><text x="61.2898%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.02%)</title><rect x="61.0398%" y="501" width="0.0205%" height="15" fill="rgb(244,165,34)" fg:x="20839" fg:w="7"/><text x="61.2898%" y="511.50"></text></g><g><title>event_listener::TaskRef::into_task (42 samples, 0.12%)</title><rect x="61.0603%" y="581" width="0.1230%" height="15" fill="rgb(207,89,7)" fg:x="20846" fg:w="42"/><text x="61.3103%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (42 samples, 0.12%)</title><rect x="61.0603%" y="565" width="0.1230%" height="15" fill="rgb(244,117,36)" fg:x="20846" fg:w="42"/><text x="61.3103%" y="575.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (40 samples, 0.12%)</title><rect x="61.0662%" y="549" width="0.1172%" height="15" fill="rgb(226,144,34)" fg:x="20848" fg:w="40"/><text x="61.3162%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (22 samples, 0.06%)</title><rect x="61.1189%" y="533" width="0.0644%" height="15" fill="rgb(213,23,19)" fg:x="20866" fg:w="22"/><text x="61.3689%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (22 samples, 0.06%)</title><rect x="61.1189%" y="517" width="0.0644%" height="15" fill="rgb(217,75,12)" fg:x="20866" fg:w="22"/><text x="61.3689%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (22 samples, 0.06%)</title><rect x="61.1189%" y="501" width="0.0644%" height="15" fill="rgb(224,159,17)" fg:x="20866" fg:w="22"/><text x="61.3689%" y="511.50"></text></g><g><title>&lt;event_listener::EventListener&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.21%)</title><rect x="61.0018%" y="629" width="0.2138%" height="15" fill="rgb(217,118,1)" fg:x="20826" fg:w="73"/><text x="61.2518%" y="639.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::poll_internal (73 samples, 0.21%)</title><rect x="61.0018%" y="613" width="0.2138%" height="15" fill="rgb(232,180,48)" fg:x="20826" fg:w="73"/><text x="61.2518%" y="623.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::register (65 samples, 0.19%)</title><rect x="61.0252%" y="597" width="0.1904%" height="15" fill="rgb(230,27,33)" fg:x="20834" fg:w="65"/><text x="61.2752%" y="607.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (10 samples, 0.03%)</title><rect x="61.1863%" y="581" width="0.0293%" height="15" fill="rgb(205,31,21)" fg:x="20889" fg:w="10"/><text x="61.4363%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.03%)</title><rect x="61.1863%" y="565" width="0.0293%" height="15" fill="rgb(253,59,4)" fg:x="20889" fg:w="10"/><text x="61.4363%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (8 samples, 0.02%)</title><rect x="61.1921%" y="549" width="0.0234%" height="15" fill="rgb(224,201,9)" fg:x="20891" fg:w="8"/><text x="61.4421%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (8 samples, 0.02%)</title><rect x="61.1921%" y="533" width="0.0234%" height="15" fill="rgb(229,206,30)" fg:x="20891" fg:w="8"/><text x="61.4421%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.02%)</title><rect x="61.1921%" y="517" width="0.0234%" height="15" fill="rgb(212,67,47)" fg:x="20891" fg:w="8"/><text x="61.4421%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (286 samples, 0.84%)</title><rect x="60.3808%" y="709" width="0.8377%" height="15" fill="rgb(211,96,50)" fg:x="20614" fg:w="286"/><text x="60.6308%" y="719.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}}::_{{closure}} (286 samples, 0.84%)</title><rect x="60.3808%" y="693" width="0.8377%" height="15" fill="rgb(252,114,18)" fg:x="20614" fg:w="286"/><text x="60.6308%" y="703.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (223 samples, 0.65%)</title><rect x="60.5653%" y="677" width="0.6532%" height="15" fill="rgb(223,58,37)" fg:x="20677" fg:w="223"/><text x="60.8153%" y="687.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (212 samples, 0.62%)</title><rect x="60.5975%" y="661" width="0.6210%" height="15" fill="rgb(237,70,4)" fg:x="20688" fg:w="212"/><text x="60.8475%" y="671.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (74 samples, 0.22%)</title><rect x="61.0018%" y="645" width="0.2168%" height="15" fill="rgb(244,85,46)" fg:x="20826" fg:w="74"/><text x="61.2518%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::swap (19 samples, 0.06%)</title><rect x="61.2185%" y="693" width="0.0557%" height="15" fill="rgb(223,39,52)" fg:x="20900" fg:w="19"/><text x="61.4685%" y="703.50"></text></g><g><title>core::ptr::swap (18 samples, 0.05%)</title><rect x="61.2214%" y="677" width="0.0527%" height="15" fill="rgb(218,200,14)" fg:x="20901" fg:w="18"/><text x="61.4714%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.04%)</title><rect x="61.2302%" y="661" width="0.0439%" height="15" fill="rgb(208,171,16)" fg:x="20904" fg:w="15"/><text x="61.4802%" y="671.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (314 samples, 0.92%)</title><rect x="60.3574%" y="741" width="0.9197%" height="15" fill="rgb(234,200,18)" fg:x="20606" fg:w="314"/><text x="60.6074%" y="751.50"></text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}}::_{{closure}} (314 samples, 0.92%)</title><rect x="60.3574%" y="725" width="0.9197%" height="15" fill="rgb(228,45,11)" fg:x="20606" fg:w="314"/><text x="60.6074%" y="735.50"></text></g><g><title>futures_util::async_await::random::shuffle (20 samples, 0.06%)</title><rect x="61.2185%" y="709" width="0.0586%" height="15" fill="rgb(237,182,11)" fg:x="20900" fg:w="20"/><text x="61.4685%" y="719.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (13 samples, 0.04%)</title><rect x="61.2859%" y="693" width="0.0381%" height="15" fill="rgb(241,175,49)" fg:x="20923" fg:w="13"/><text x="61.5359%" y="703.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (12 samples, 0.04%)</title><rect x="61.2888%" y="677" width="0.0351%" height="15" fill="rgb(247,38,35)" fg:x="20924" fg:w="12"/><text x="61.5388%" y="687.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (12 samples, 0.04%)</title><rect x="61.2888%" y="661" width="0.0351%" height="15" fill="rgb(228,39,49)" fg:x="20924" fg:w="12"/><text x="61.5388%" y="671.50"></text></g><g><title>&lt;flume::async::RecvFut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.07%)</title><rect x="61.2771%" y="725" width="0.0703%" height="15" fill="rgb(226,101,26)" fg:x="20920" fg:w="24"/><text x="61.5271%" y="735.50"></text></g><g><title>flume::async::RecvFut&lt;T&gt;::reset_hook (24 samples, 0.07%)</title><rect x="61.2771%" y="709" width="0.0703%" height="15" fill="rgb(206,141,19)" fg:x="20920" fg:w="24"/><text x="61.5271%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;flume::async::RecvFut&lt;bytes::bytes::Bytes&gt;&gt; (26 samples, 0.08%)</title><rect x="61.2771%" y="741" width="0.0762%" height="15" fill="rgb(211,200,13)" fg:x="20920" fg:w="26"/><text x="61.5271%" y="751.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.01%)</title><rect x="61.3533%" y="709" width="0.0117%" height="15" fill="rgb(241,121,6)" fg:x="20946" fg:w="4"/><text x="61.6033%" y="719.50"></text></g><g><title>free_fastpath (4 samples, 0.01%)</title><rect x="61.3533%" y="693" width="0.0117%" height="15" fill="rgb(234,221,29)" fg:x="20946" fg:w="4"/><text x="61.6033%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="61.3650%" y="645" width="0.0498%" height="15" fill="rgb(229,136,5)" fg:x="20950" fg:w="17"/><text x="61.6150%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="61.3650%" y="629" width="0.0498%" height="15" fill="rgb(238,36,11)" fg:x="20950" fg:w="17"/><text x="61.6150%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.05%)</title><rect x="61.3650%" y="613" width="0.0498%" height="15" fill="rgb(251,55,41)" fg:x="20950" fg:w="17"/><text x="61.6150%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.05%)</title><rect x="61.3650%" y="597" width="0.0498%" height="15" fill="rgb(242,34,40)" fg:x="20950" fg:w="17"/><text x="61.6150%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::State&lt;()&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="61.4206%" y="613" width="0.0469%" height="15" fill="rgb(215,42,17)" fg:x="20969" fg:w="16"/><text x="61.6706%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&lt;()&gt;&gt; (15 samples, 0.04%)</title><rect x="61.4236%" y="597" width="0.0439%" height="15" fill="rgb(207,44,46)" fg:x="20970" fg:w="15"/><text x="61.6736%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::Task&gt; (13 samples, 0.04%)</title><rect x="61.4294%" y="581" width="0.0381%" height="15" fill="rgb(211,206,28)" fg:x="20972" fg:w="13"/><text x="61.6794%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (12 samples, 0.04%)</title><rect x="61.4323%" y="565" width="0.0351%" height="15" fill="rgb(237,167,16)" fg:x="20973" fg:w="12"/><text x="61.6823%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (12 samples, 0.04%)</title><rect x="61.4323%" y="549" width="0.0351%" height="15" fill="rgb(233,66,6)" fg:x="20973" fg:w="12"/><text x="61.6823%" y="559.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (12 samples, 0.04%)</title><rect x="61.4323%" y="533" width="0.0351%" height="15" fill="rgb(246,123,29)" fg:x="20973" fg:w="12"/><text x="61.6823%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::drop_reference (9 samples, 0.03%)</title><rect x="61.4411%" y="517" width="0.0264%" height="15" fill="rgb(209,62,40)" fg:x="20976" fg:w="9"/><text x="61.6911%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (9 samples, 0.03%)</title><rect x="61.4411%" y="501" width="0.0264%" height="15" fill="rgb(218,4,25)" fg:x="20976" fg:w="9"/><text x="61.6911%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.03%)</title><rect x="61.4411%" y="485" width="0.0264%" height="15" fill="rgb(253,91,49)" fg:x="20976" fg:w="9"/><text x="61.6911%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.03%)</title><rect x="61.4411%" y="469" width="0.0264%" height="15" fill="rgb(228,155,29)" fg:x="20976" fg:w="9"/><text x="61.6911%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (18 samples, 0.05%)</title><rect x="61.4733%" y="597" width="0.0527%" height="15" fill="rgb(243,57,37)" fg:x="20987" fg:w="18"/><text x="61.7233%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (18 samples, 0.05%)</title><rect x="61.4733%" y="581" width="0.0527%" height="15" fill="rgb(244,167,17)" fg:x="20987" fg:w="18"/><text x="61.7233%" y="591.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.05%)</title><rect x="61.4733%" y="565" width="0.0527%" height="15" fill="rgb(207,181,38)" fg:x="20987" fg:w="18"/><text x="61.7233%" y="575.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (18 samples, 0.05%)</title><rect x="61.4733%" y="549" width="0.0527%" height="15" fill="rgb(211,8,23)" fg:x="20987" fg:w="18"/><text x="61.7233%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (17 samples, 0.05%)</title><rect x="61.4763%" y="533" width="0.0498%" height="15" fill="rgb(235,11,44)" fg:x="20988" fg:w="17"/><text x="61.7263%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_swap (17 samples, 0.05%)</title><rect x="61.4763%" y="517" width="0.0498%" height="15" fill="rgb(248,18,52)" fg:x="20988" fg:w="17"/><text x="61.7263%" y="527.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (15 samples, 0.04%)</title><rect x="61.5261%" y="597" width="0.0439%" height="15" fill="rgb(208,4,7)" fg:x="21005" fg:w="15"/><text x="61.7761%" y="607.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (15 samples, 0.04%)</title><rect x="61.5261%" y="581" width="0.0439%" height="15" fill="rgb(240,17,39)" fg:x="21005" fg:w="15"/><text x="61.7761%" y="591.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (14 samples, 0.04%)</title><rect x="61.5290%" y="565" width="0.0410%" height="15" fill="rgb(207,170,3)" fg:x="21006" fg:w="14"/><text x="61.7790%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (14 samples, 0.04%)</title><rect x="61.5290%" y="549" width="0.0410%" height="15" fill="rgb(236,100,52)" fg:x="21006" fg:w="14"/><text x="61.7790%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.04%)</title><rect x="61.5290%" y="533" width="0.0410%" height="15" fill="rgb(246,78,51)" fg:x="21006" fg:w="14"/><text x="61.7790%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::future::future::fuse::Fuse&lt;event_listener::EventListener&gt;&gt; (79 samples, 0.23%)</title><rect x="61.3533%" y="741" width="0.2314%" height="15" fill="rgb(211,17,15)" fg:x="20946" fg:w="79"/><text x="61.6033%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (79 samples, 0.23%)</title><rect x="61.3533%" y="725" width="0.2314%" height="15" fill="rgb(209,59,46)" fg:x="20946" fg:w="79"/><text x="61.6033%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (75 samples, 0.22%)</title><rect x="61.3650%" y="709" width="0.2197%" height="15" fill="rgb(210,92,25)" fg:x="20950" fg:w="75"/><text x="61.6150%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt;&gt; (75 samples, 0.22%)</title><rect x="61.3650%" y="693" width="0.2197%" height="15" fill="rgb(238,174,52)" fg:x="20950" fg:w="75"/><text x="61.6150%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt;&gt; (75 samples, 0.22%)</title><rect x="61.3650%" y="677" width="0.2197%" height="15" fill="rgb(230,73,7)" fg:x="20950" fg:w="75"/><text x="61.6150%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::InnerListener&lt;(),alloc::sync::Arc&lt;event_listener::Inner&lt;()&gt;&gt;&gt;&gt; (75 samples, 0.22%)</title><rect x="61.3650%" y="661" width="0.2197%" height="15" fill="rgb(243,124,40)" fg:x="20950" fg:w="75"/><text x="61.6150%" y="671.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop (57 samples, 0.17%)</title><rect x="61.4177%" y="645" width="0.1670%" height="15" fill="rgb(244,170,11)" fg:x="20968" fg:w="57"/><text x="61.6677%" y="655.50"></text></g><g><title>event_listener::_::&lt;impl core::ops::drop::Drop for event_listener::InnerListener&lt;T,B&gt;&gt;::drop::__drop_inner (57 samples, 0.17%)</title><rect x="61.4177%" y="629" width="0.1670%" height="15" fill="rgb(207,114,54)" fg:x="20968" fg:w="57"/><text x="61.6677%" y="639.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::remove (40 samples, 0.12%)</title><rect x="61.4675%" y="613" width="0.1172%" height="15" fill="rgb(205,42,20)" fg:x="20985" fg:w="40"/><text x="61.7175%" y="623.50"></text></g><g><title>event_listener::sys::Inner&lt;T&gt;::remove (5 samples, 0.01%)</title><rect x="61.5700%" y="597" width="0.0146%" height="15" fill="rgb(230,30,28)" fg:x="21020" fg:w="5"/><text x="61.8200%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (16 samples, 0.05%)</title><rect x="61.5847%" y="741" width="0.0469%" height="15" fill="rgb(205,73,54)" fg:x="21025" fg:w="16"/><text x="61.8347%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.05%)</title><rect x="61.5847%" y="725" width="0.0469%" height="15" fill="rgb(254,227,23)" fg:x="21025" fg:w="16"/><text x="61.8347%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (14 samples, 0.04%)</title><rect x="61.6315%" y="741" width="0.0410%" height="15" fill="rgb(228,202,34)" fg:x="21041" fg:w="14"/><text x="61.8815%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.04%)</title><rect x="61.6315%" y="725" width="0.0410%" height="15" fill="rgb(222,225,37)" fg:x="21041" fg:w="14"/><text x="61.8815%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (48 samples, 0.14%)</title><rect x="61.6725%" y="725" width="0.1406%" height="15" fill="rgb(221,14,54)" fg:x="21055" fg:w="48"/><text x="61.9225%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (47 samples, 0.14%)</title><rect x="61.6755%" y="709" width="0.1377%" height="15" fill="rgb(254,102,2)" fg:x="21056" fg:w="47"/><text x="61.9255%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (47 samples, 0.14%)</title><rect x="61.6755%" y="693" width="0.1377%" height="15" fill="rgb(232,104,17)" fg:x="21056" fg:w="47"/><text x="61.9255%" y="703.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.01%)</title><rect x="61.8424%" y="485" width="0.0146%" height="15" fill="rgb(250,220,14)" fg:x="21113" fg:w="5"/><text x="62.0924%" y="495.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (5 samples, 0.01%)</title><rect x="61.8424%" y="469" width="0.0146%" height="15" fill="rgb(241,158,9)" fg:x="21113" fg:w="5"/><text x="62.0924%" y="479.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="61.8424%" y="533" width="0.0205%" height="15" fill="rgb(246,9,43)" fg:x="21113" fg:w="7"/><text x="62.0924%" y="543.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="61.8424%" y="517" width="0.0205%" height="15" fill="rgb(206,73,33)" fg:x="21113" fg:w="7"/><text x="62.0924%" y="527.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="61.8424%" y="501" width="0.0205%" height="15" fill="rgb(222,79,8)" fg:x="21113" fg:w="7"/><text x="62.0924%" y="511.50"></text></g><g><title>_rjem_je_malloc_default (8 samples, 0.02%)</title><rect x="61.8424%" y="597" width="0.0234%" height="15" fill="rgb(234,8,54)" fg:x="21113" fg:w="8"/><text x="62.0924%" y="607.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="61.8424%" y="581" width="0.0234%" height="15" fill="rgb(209,134,38)" fg:x="21113" fg:w="8"/><text x="62.0924%" y="591.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="61.8424%" y="565" width="0.0234%" height="15" fill="rgb(230,127,29)" fg:x="21113" fg:w="8"/><text x="62.0924%" y="575.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.02%)</title><rect x="61.8424%" y="549" width="0.0234%" height="15" fill="rgb(242,44,41)" fg:x="21113" fg:w="8"/><text x="62.0924%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (25 samples, 0.07%)</title><rect x="62.0240%" y="565" width="0.0732%" height="15" fill="rgb(222,56,43)" fg:x="21175" fg:w="25"/><text x="62.2740%" y="575.50"></text></g><g><title>cache_bin_alloc_impl (25 samples, 0.07%)</title><rect x="62.0240%" y="549" width="0.0732%" height="15" fill="rgb(238,39,47)" fg:x="21175" fg:w="25"/><text x="62.2740%" y="559.50"></text></g><g><title>__rust_alloc (93 samples, 0.27%)</title><rect x="61.8424%" y="629" width="0.2724%" height="15" fill="rgb(226,79,43)" fg:x="21113" fg:w="93"/><text x="62.0924%" y="639.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (93 samples, 0.27%)</title><rect x="61.8424%" y="613" width="0.2724%" height="15" fill="rgb(242,105,53)" fg:x="21113" fg:w="93"/><text x="62.0924%" y="623.50"></text></g><g><title>_rjem_malloc (85 samples, 0.25%)</title><rect x="61.8658%" y="597" width="0.2490%" height="15" fill="rgb(251,132,46)" fg:x="21121" fg:w="85"/><text x="62.1158%" y="607.50"></text></g><g><title>imalloc_fastpath (84 samples, 0.25%)</title><rect x="61.8688%" y="581" width="0.2460%" height="15" fill="rgb(231,77,14)" fg:x="21122" fg:w="84"/><text x="62.1188%" y="591.50"></text></g><g><title>sz_size2index_usize_fastpath (5 samples, 0.01%)</title><rect x="62.1002%" y="565" width="0.0146%" height="15" fill="rgb(240,135,9)" fg:x="21201" fg:w="5"/><text x="62.3502%" y="575.50"></text></g><g><title>sz_index2size_lookup_impl (5 samples, 0.01%)</title><rect x="62.1002%" y="549" width="0.0146%" height="15" fill="rgb(248,109,14)" fg:x="21201" fg:w="5"/><text x="62.3502%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (104 samples, 0.30%)</title><rect x="61.8131%" y="725" width="0.3046%" height="15" fill="rgb(227,146,52)" fg:x="21103" fg:w="104"/><text x="62.0631%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (104 samples, 0.30%)</title><rect x="61.8131%" y="709" width="0.3046%" height="15" fill="rgb(232,54,3)" fg:x="21103" fg:w="104"/><text x="62.0631%" y="719.50"></text></g><g><title>alloc::alloc::exchange_malloc (94 samples, 0.28%)</title><rect x="61.8424%" y="693" width="0.2753%" height="15" fill="rgb(229,201,43)" fg:x="21113" fg:w="94"/><text x="62.0924%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.28%)</title><rect x="61.8424%" y="677" width="0.2753%" height="15" fill="rgb(252,161,33)" fg:x="21113" fg:w="94"/><text x="62.0924%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.28%)</title><rect x="61.8424%" y="661" width="0.2753%" height="15" fill="rgb(226,146,40)" fg:x="21113" fg:w="94"/><text x="62.0924%" y="671.50"></text></g><g><title>alloc::alloc::alloc (94 samples, 0.28%)</title><rect x="61.8424%" y="645" width="0.2753%" height="15" fill="rgb(219,47,25)" fg:x="21113" fg:w="94"/><text x="62.0924%" y="655.50"></text></g><g><title>core::pin::Pin&lt;Ptr&gt;::set (5 samples, 0.01%)</title><rect x="62.1324%" y="693" width="0.0146%" height="15" fill="rgb(250,135,13)" fg:x="21212" fg:w="5"/><text x="62.3824%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::sys::ListLock&lt;()&gt;&gt; (14 samples, 0.04%)</title><rect x="62.1470%" y="693" width="0.0410%" height="15" fill="rgb(219,229,18)" fg:x="21217" fg:w="14"/><text x="62.3970%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::sys::Inner&lt;()&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="62.1470%" y="677" width="0.0410%" height="15" fill="rgb(217,152,27)" fg:x="21217" fg:w="14"/><text x="62.3970%" y="687.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="62.1470%" y="661" width="0.0410%" height="15" fill="rgb(225,71,47)" fg:x="21217" fg:w="14"/><text x="62.3970%" y="671.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (12 samples, 0.04%)</title><rect x="62.1529%" y="645" width="0.0351%" height="15" fill="rgb(220,139,14)" fg:x="21219" fg:w="12"/><text x="62.4029%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (11 samples, 0.03%)</title><rect x="62.1558%" y="629" width="0.0322%" height="15" fill="rgb(247,54,32)" fg:x="21220" fg:w="11"/><text x="62.4058%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_swap (11 samples, 0.03%)</title><rect x="62.1558%" y="613" width="0.0322%" height="15" fill="rgb(252,131,39)" fg:x="21220" fg:w="11"/><text x="62.4058%" y="623.50"></text></g><g><title>event_listener::Event&lt;T&gt;::listen (211 samples, 0.62%)</title><rect x="61.6725%" y="741" width="0.6180%" height="15" fill="rgb(210,108,39)" fg:x="21055" fg:w="211"/><text x="61.9225%" y="751.50"></text></g><g><title>event_listener::InnerListener&lt;T,B&gt;::listen (56 samples, 0.16%)</title><rect x="62.1265%" y="725" width="0.1640%" height="15" fill="rgb(205,23,29)" fg:x="21210" fg:w="56"/><text x="62.3765%" y="735.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::insert (56 samples, 0.16%)</title><rect x="62.1265%" y="709" width="0.1640%" height="15" fill="rgb(246,139,46)" fg:x="21210" fg:w="56"/><text x="62.3765%" y="719.50"></text></g><g><title>event_listener::sys::&lt;impl event_listener::Inner&lt;T&gt;&gt;::lock (35 samples, 0.10%)</title><rect x="62.1880%" y="693" width="0.1025%" height="15" fill="rgb(250,81,26)" fg:x="21231" fg:w="35"/><text x="62.4380%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (35 samples, 0.10%)</title><rect x="62.1880%" y="677" width="0.1025%" height="15" fill="rgb(214,104,7)" fg:x="21231" fg:w="35"/><text x="62.4380%" y="687.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (34 samples, 0.10%)</title><rect x="62.1910%" y="661" width="0.0996%" height="15" fill="rgb(233,189,8)" fg:x="21232" fg:w="34"/><text x="62.4410%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (33 samples, 0.10%)</title><rect x="62.1939%" y="645" width="0.0967%" height="15" fill="rgb(228,141,17)" fg:x="21233" fg:w="33"/><text x="62.4439%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.10%)</title><rect x="62.1939%" y="629" width="0.0967%" height="15" fill="rgb(247,157,1)" fg:x="21233" fg:w="33"/><text x="62.4439%" y="639.50"></text></g><g><title>_rjem_je_eset_fit (5 samples, 0.01%)</title><rect x="62.3286%" y="309" width="0.0146%" height="15" fill="rgb(249,225,5)" fg:x="21279" fg:w="5"/><text x="62.5786%" y="319.50"></text></g><g><title>eset_first_fit (5 samples, 0.01%)</title><rect x="62.3286%" y="293" width="0.0146%" height="15" fill="rgb(242,55,13)" fg:x="21279" fg:w="5"/><text x="62.5786%" y="303.50"></text></g><g><title>extent_recycle_extract (6 samples, 0.02%)</title><rect x="62.3286%" y="325" width="0.0176%" height="15" fill="rgb(230,49,50)" fg:x="21279" fg:w="6"/><text x="62.5786%" y="335.50"></text></g><g><title>extent_recycle_split (5 samples, 0.01%)</title><rect x="62.3462%" y="325" width="0.0146%" height="15" fill="rgb(241,111,38)" fg:x="21285" fg:w="5"/><text x="62.5962%" y="335.50"></text></g><g><title>extent_split_interior (4 samples, 0.01%)</title><rect x="62.3492%" y="309" width="0.0117%" height="15" fill="rgb(252,155,4)" fg:x="21286" fg:w="4"/><text x="62.5992%" y="319.50"></text></g><g><title>extent_split_impl (4 samples, 0.01%)</title><rect x="62.3492%" y="293" width="0.0117%" height="15" fill="rgb(212,69,32)" fg:x="21286" fg:w="4"/><text x="62.5992%" y="303.50"></text></g><g><title>_rjem_je_edata_cache_get (4 samples, 0.01%)</title><rect x="62.3492%" y="277" width="0.0117%" height="15" fill="rgb(243,107,47)" fg:x="21286" fg:w="4"/><text x="62.5992%" y="287.50"></text></g><g><title>arena_slab_alloc (16 samples, 0.05%)</title><rect x="62.3169%" y="437" width="0.0469%" height="15" fill="rgb(247,130,12)" fg:x="21275" fg:w="16"/><text x="62.5669%" y="447.50"></text></g><g><title>_rjem_je_pa_alloc (16 samples, 0.05%)</title><rect x="62.3169%" y="421" width="0.0469%" height="15" fill="rgb(233,74,16)" fg:x="21275" fg:w="16"/><text x="62.5669%" y="431.50"></text></g><g><title>pai_alloc (14 samples, 0.04%)</title><rect x="62.3228%" y="405" width="0.0410%" height="15" fill="rgb(208,58,18)" fg:x="21277" fg:w="14"/><text x="62.5728%" y="415.50"></text></g><g><title>pac_alloc_impl (13 samples, 0.04%)</title><rect x="62.3257%" y="389" width="0.0381%" height="15" fill="rgb(242,225,1)" fg:x="21278" fg:w="13"/><text x="62.5757%" y="399.50"></text></g><g><title>pac_alloc_real (13 samples, 0.04%)</title><rect x="62.3257%" y="373" width="0.0381%" height="15" fill="rgb(249,39,40)" fg:x="21278" fg:w="13"/><text x="62.5757%" y="383.50"></text></g><g><title>_rjem_je_ecache_alloc (13 samples, 0.04%)</title><rect x="62.3257%" y="357" width="0.0381%" height="15" fill="rgb(207,72,44)" fg:x="21278" fg:w="13"/><text x="62.5757%" y="367.50"></text></g><g><title>extent_recycle (13 samples, 0.04%)</title><rect x="62.3257%" y="341" width="0.0381%" height="15" fill="rgb(215,193,12)" fg:x="21278" fg:w="13"/><text x="62.5757%" y="351.50"></text></g><g><title>imalloc_no_sample (21 samples, 0.06%)</title><rect x="62.3081%" y="533" width="0.0615%" height="15" fill="rgb(248,41,39)" fg:x="21272" fg:w="21"/><text x="62.5581%" y="543.50"></text></g><g><title>iallocztm (21 samples, 0.06%)</title><rect x="62.3081%" y="517" width="0.0615%" height="15" fill="rgb(253,85,4)" fg:x="21272" fg:w="21"/><text x="62.5581%" y="527.50"></text></g><g><title>arena_malloc (21 samples, 0.06%)</title><rect x="62.3081%" y="501" width="0.0615%" height="15" fill="rgb(243,70,31)" fg:x="21272" fg:w="21"/><text x="62.5581%" y="511.50"></text></g><g><title>tcache_alloc_small (21 samples, 0.06%)</title><rect x="62.3081%" y="485" width="0.0615%" height="15" fill="rgb(253,195,26)" fg:x="21272" fg:w="21"/><text x="62.5581%" y="495.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (21 samples, 0.06%)</title><rect x="62.3081%" y="469" width="0.0615%" height="15" fill="rgb(243,42,11)" fg:x="21272" fg:w="21"/><text x="62.5581%" y="479.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (20 samples, 0.06%)</title><rect x="62.3111%" y="453" width="0.0586%" height="15" fill="rgb(239,66,17)" fg:x="21273" fg:w="20"/><text x="62.5611%" y="463.50"></text></g><g><title>_rjem_je_malloc_default (22 samples, 0.06%)</title><rect x="62.3081%" y="581" width="0.0644%" height="15" fill="rgb(217,132,21)" fg:x="21272" fg:w="22"/><text x="62.5581%" y="591.50"></text></g><g><title>imalloc (22 samples, 0.06%)</title><rect x="62.3081%" y="565" width="0.0644%" height="15" fill="rgb(252,202,21)" fg:x="21272" fg:w="22"/><text x="62.5581%" y="575.50"></text></g><g><title>imalloc_body (22 samples, 0.06%)</title><rect x="62.3081%" y="549" width="0.0644%" height="15" fill="rgb(233,98,36)" fg:x="21272" fg:w="22"/><text x="62.5581%" y="559.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame (29 samples, 0.08%)</title><rect x="62.3052%" y="725" width="0.0849%" height="15" fill="rgb(216,153,54)" fg:x="21271" fg:w="29"/><text x="62.5552%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (29 samples, 0.08%)</title><rect x="62.3052%" y="709" width="0.0849%" height="15" fill="rgb(250,99,7)" fg:x="21271" fg:w="29"/><text x="62.5552%" y="719.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.08%)</title><rect x="62.3052%" y="693" width="0.0849%" height="15" fill="rgb(207,56,50)" fg:x="21271" fg:w="29"/><text x="62.5552%" y="703.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.08%)</title><rect x="62.3081%" y="677" width="0.0820%" height="15" fill="rgb(244,61,34)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.08%)</title><rect x="62.3081%" y="661" width="0.0820%" height="15" fill="rgb(241,50,38)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.08%)</title><rect x="62.3081%" y="645" width="0.0820%" height="15" fill="rgb(212,166,30)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="655.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.08%)</title><rect x="62.3081%" y="629" width="0.0820%" height="15" fill="rgb(249,127,32)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="639.50"></text></g><g><title>__rust_alloc (28 samples, 0.08%)</title><rect x="62.3081%" y="613" width="0.0820%" height="15" fill="rgb(209,103,0)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="623.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.08%)</title><rect x="62.3081%" y="597" width="0.0820%" height="15" fill="rgb(238,209,51)" fg:x="21272" fg:w="28"/><text x="62.5581%" y="607.50"></text></g><g><title>_rjem_malloc (6 samples, 0.02%)</title><rect x="62.3726%" y="581" width="0.0176%" height="15" fill="rgb(237,56,23)" fg:x="21294" fg:w="6"/><text x="62.6226%" y="591.50"></text></g><g><title>imalloc_fastpath (6 samples, 0.02%)</title><rect x="62.3726%" y="565" width="0.0176%" height="15" fill="rgb(215,153,46)" fg:x="21294" fg:w="6"/><text x="62.6226%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="62.3755%" y="549" width="0.0146%" height="15" fill="rgb(224,49,31)" fg:x="21295" fg:w="5"/><text x="62.6255%" y="559.50"></text></g><g><title>cache_bin_alloc_impl (5 samples, 0.01%)</title><rect x="62.3755%" y="533" width="0.0146%" height="15" fill="rgb(250,18,42)" fg:x="21295" fg:w="5"/><text x="62.6255%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="62.4048%" y="661" width="0.0351%" height="15" fill="rgb(215,176,39)" fg:x="21305" fg:w="12"/><text x="62.6548%" y="671.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame::_{{closure}} (12 samples, 0.04%)</title><rect x="62.4048%" y="645" width="0.0351%" height="15" fill="rgb(223,77,29)" fg:x="21305" fg:w="12"/><text x="62.6548%" y="655.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (9 samples, 0.03%)</title><rect x="62.4136%" y="629" width="0.0264%" height="15" fill="rgb(234,94,52)" fg:x="21308" fg:w="9"/><text x="62.6636%" y="639.50"></text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (8 samples, 0.02%)</title><rect x="62.4165%" y="613" width="0.0234%" height="15" fill="rgb(220,154,50)" fg:x="21309" fg:w="8"/><text x="62.6665%" y="623.50"></text></g><g><title>extent_recycle_extract (4 samples, 0.01%)</title><rect x="62.4458%" y="261" width="0.0117%" height="15" fill="rgb(212,11,10)" fg:x="21319" fg:w="4"/><text x="62.6958%" y="271.50"></text></g><g><title>arena_slab_alloc (8 samples, 0.02%)</title><rect x="62.4429%" y="373" width="0.0234%" height="15" fill="rgb(205,166,19)" fg:x="21318" fg:w="8"/><text x="62.6929%" y="383.50"></text></g><g><title>_rjem_je_pa_alloc (8 samples, 0.02%)</title><rect x="62.4429%" y="357" width="0.0234%" height="15" fill="rgb(244,198,16)" fg:x="21318" fg:w="8"/><text x="62.6929%" y="367.50"></text></g><g><title>pai_alloc (8 samples, 0.02%)</title><rect x="62.4429%" y="341" width="0.0234%" height="15" fill="rgb(219,69,12)" fg:x="21318" fg:w="8"/><text x="62.6929%" y="351.50"></text></g><g><title>pac_alloc_impl (8 samples, 0.02%)</title><rect x="62.4429%" y="325" width="0.0234%" height="15" fill="rgb(245,30,7)" fg:x="21318" fg:w="8"/><text x="62.6929%" y="335.50"></text></g><g><title>pac_alloc_real (7 samples, 0.02%)</title><rect x="62.4458%" y="309" width="0.0205%" height="15" fill="rgb(218,221,48)" fg:x="21319" fg:w="7"/><text x="62.6958%" y="319.50"></text></g><g><title>_rjem_je_ecache_alloc (7 samples, 0.02%)</title><rect x="62.4458%" y="293" width="0.0205%" height="15" fill="rgb(216,66,15)" fg:x="21319" fg:w="7"/><text x="62.6958%" y="303.50"></text></g><g><title>extent_recycle (7 samples, 0.02%)</title><rect x="62.4458%" y="277" width="0.0205%" height="15" fill="rgb(226,122,50)" fg:x="21319" fg:w="7"/><text x="62.6958%" y="287.50"></text></g><g><title>_rjem_je_malloc_default (12 samples, 0.04%)</title><rect x="62.4429%" y="517" width="0.0351%" height="15" fill="rgb(239,156,16)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="527.50"></text></g><g><title>imalloc (12 samples, 0.04%)</title><rect x="62.4429%" y="501" width="0.0351%" height="15" fill="rgb(224,27,38)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="511.50"></text></g><g><title>imalloc_body (12 samples, 0.04%)</title><rect x="62.4429%" y="485" width="0.0351%" height="15" fill="rgb(224,39,27)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="495.50"></text></g><g><title>imalloc_no_sample (12 samples, 0.04%)</title><rect x="62.4429%" y="469" width="0.0351%" height="15" fill="rgb(215,92,29)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="479.50"></text></g><g><title>iallocztm (12 samples, 0.04%)</title><rect x="62.4429%" y="453" width="0.0351%" height="15" fill="rgb(207,159,16)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="463.50"></text></g><g><title>arena_malloc (12 samples, 0.04%)</title><rect x="62.4429%" y="437" width="0.0351%" height="15" fill="rgb(238,163,47)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="447.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.04%)</title><rect x="62.4429%" y="421" width="0.0351%" height="15" fill="rgb(219,91,49)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="431.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (12 samples, 0.04%)</title><rect x="62.4429%" y="405" width="0.0351%" height="15" fill="rgb(227,167,31)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="415.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (12 samples, 0.04%)</title><rect x="62.4429%" y="389" width="0.0351%" height="15" fill="rgb(234,80,54)" fg:x="21318" fg:w="12"/><text x="62.6929%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (31 samples, 0.09%)</title><rect x="62.3902%" y="725" width="0.0908%" height="15" fill="rgb(212,114,2)" fg:x="21300" fg:w="31"/><text x="62.6402%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (31 samples, 0.09%)</title><rect x="62.3902%" y="709" width="0.0908%" height="15" fill="rgb(234,50,24)" fg:x="21300" fg:w="31"/><text x="62.6402%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (26 samples, 0.08%)</title><rect x="62.4048%" y="693" width="0.0762%" height="15" fill="rgb(221,68,8)" fg:x="21305" fg:w="26"/><text x="62.6548%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_frame::_{{closure}} (26 samples, 0.08%)</title><rect x="62.4048%" y="677" width="0.0762%" height="15" fill="rgb(254,180,31)" fg:x="21305" fg:w="26"/><text x="62.6548%" y="687.50"></text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_frame (13 samples, 0.04%)</title><rect x="62.4429%" y="661" width="0.0381%" height="15" fill="rgb(247,130,50)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="671.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (13 samples, 0.04%)</title><rect x="62.4429%" y="645" width="0.0381%" height="15" fill="rgb(211,109,4)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="655.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (13 samples, 0.04%)</title><rect x="62.4429%" y="629" width="0.0381%" height="15" fill="rgb(238,50,21)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (13 samples, 0.04%)</title><rect x="62.4429%" y="613" width="0.0381%" height="15" fill="rgb(225,57,45)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.04%)</title><rect x="62.4429%" y="597" width="0.0381%" height="15" fill="rgb(209,196,50)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.04%)</title><rect x="62.4429%" y="581" width="0.0381%" height="15" fill="rgb(242,140,13)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="591.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.04%)</title><rect x="62.4429%" y="565" width="0.0381%" height="15" fill="rgb(217,111,7)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="575.50"></text></g><g><title>__rust_alloc (13 samples, 0.04%)</title><rect x="62.4429%" y="549" width="0.0381%" height="15" fill="rgb(253,193,51)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="559.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (13 samples, 0.04%)</title><rect x="62.4429%" y="533" width="0.0381%" height="15" fill="rgb(252,70,29)" fg:x="21318" fg:w="13"/><text x="62.6929%" y="543.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.04%)</title><rect x="62.4810%" y="725" width="0.0351%" height="15" fill="rgb(232,127,12)" fg:x="21331" fg:w="12"/><text x="62.7310%" y="735.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (906 samples, 2.65%)</title><rect x="59.8711%" y="805" width="2.6538%" height="15" fill="rgb(211,180,21)" fg:x="20440" fg:w="906"/><text x="60.1211%" y="815.50">&lt;c..</text></g><g><title>&lt;futures_util::stream::unfold::Unfold&lt;T,F,Fut&gt; as futures_core::stream::Stream&gt;::poll_next (904 samples, 2.65%)</title><rect x="59.8770%" y="789" width="2.6479%" height="15" fill="rgb(229,72,13)" fg:x="20442" fg:w="904"/><text x="60.1270%" y="799.50">&lt;f..</text></g><g><title>wisp_mux::stream::MuxStreamRead::into_inner_stream::_{{closure}}::_{{closure}} (805 samples, 2.36%)</title><rect x="60.1670%" y="773" width="2.3579%" height="15" fill="rgb(240,211,49)" fg:x="20541" fg:w="805"/><text x="60.4170%" y="783.50">w..</text></g><g><title>wisp_mux::stream::MuxStreamRead::read::_{{closure}} (788 samples, 2.31%)</title><rect x="60.2168%" y="757" width="2.3081%" height="15" fill="rgb(219,149,40)" fg:x="20558" fg:w="788"/><text x="60.4668%" y="767.50">w..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_frame::_{{closure}} (79 samples, 0.23%)</title><rect x="62.2935%" y="741" width="0.2314%" height="15" fill="rgb(210,127,46)" fg:x="21267" fg:w="79"/><text x="62.5435%" y="751.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (930 samples, 2.72%)</title><rect x="59.8125%" y="885" width="2.7241%" height="15" fill="rgb(220,106,7)" fg:x="20420" fg:w="930"/><text x="60.0625%" y="895.50">&lt;t..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (930 samples, 2.72%)</title><rect x="59.8125%" y="869" width="2.7241%" height="15" fill="rgb(249,31,22)" fg:x="20420" fg:w="930"/><text x="60.0625%" y="879.50">&lt;w..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (930 samples, 2.72%)</title><rect x="59.8125%" y="853" width="2.7241%" height="15" fill="rgb(253,1,49)" fg:x="20420" fg:w="930"/><text x="60.0625%" y="863.50">&lt;f..</text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (910 samples, 2.67%)</title><rect x="59.8711%" y="837" width="2.6655%" height="15" fill="rgb(227,144,33)" fg:x="20440" fg:w="910"/><text x="60.1211%" y="847.50">&lt;S..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (910 samples, 2.67%)</title><rect x="59.8711%" y="821" width="2.6655%" height="15" fill="rgb(249,163,44)" fg:x="20440" fg:w="910"/><text x="60.1211%" y="831.50">&lt;w..</text></g><g><title>core::task::poll::Poll&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="62.5249%" y="805" width="0.0117%" height="15" fill="rgb(234,15,39)" fg:x="21346" fg:w="4"/><text x="62.7749%" y="815.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (936 samples, 2.74%)</title><rect x="59.8037%" y="901" width="2.7417%" height="15" fill="rgb(207,66,16)" fg:x="20417" fg:w="936"/><text x="60.0537%" y="911.50">&lt;t..</text></g><g><title>[libc.so.6] (82 samples, 0.24%)</title><rect x="62.8207%" y="709" width="0.2402%" height="15" fill="rgb(233,112,24)" fg:x="21447" fg:w="82"/><text x="63.0707%" y="719.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (157 samples, 0.46%)</title><rect x="62.6538%" y="821" width="0.4599%" height="15" fill="rgb(230,90,22)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="831.50"></text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (157 samples, 0.46%)</title><rect x="62.6538%" y="805" width="0.4599%" height="15" fill="rgb(229,61,13)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="815.50"></text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (157 samples, 0.46%)</title><rect x="62.6538%" y="789" width="0.4599%" height="15" fill="rgb(225,57,24)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="799.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (157 samples, 0.46%)</title><rect x="62.6538%" y="773" width="0.4599%" height="15" fill="rgb(208,169,48)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="783.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (157 samples, 0.46%)</title><rect x="62.6538%" y="757" width="0.4599%" height="15" fill="rgb(244,218,51)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="767.50"></text></g><g><title>std::sys_common::net::TcpStream::write (157 samples, 0.46%)</title><rect x="62.6538%" y="741" width="0.4599%" height="15" fill="rgb(214,148,10)" fg:x="21390" fg:w="157"/><text x="62.9038%" y="751.50"></text></g><g><title>__send (156 samples, 0.46%)</title><rect x="62.6567%" y="725" width="0.4569%" height="15" fill="rgb(225,174,27)" fg:x="21391" fg:w="156"/><text x="62.9067%" y="735.50"></text></g><g><title>[unknown] (18 samples, 0.05%)</title><rect x="63.0609%" y="709" width="0.0527%" height="15" fill="rgb(230,96,26)" fg:x="21529" fg:w="18"/><text x="63.3109%" y="719.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (8 samples, 0.02%)</title><rect x="63.1342%" y="789" width="0.0234%" height="15" fill="rgb(232,10,30)" fg:x="21554" fg:w="8"/><text x="63.3842%" y="799.50"></text></g><g><title>tokio::runtime::context::budget (8 samples, 0.02%)</title><rect x="63.1342%" y="773" width="0.0234%" height="15" fill="rgb(222,8,50)" fg:x="21554" fg:w="8"/><text x="63.3842%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.02%)</title><rect x="63.1342%" y="757" width="0.0234%" height="15" fill="rgb(213,81,27)" fg:x="21554" fg:w="8"/><text x="63.3842%" y="767.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (7 samples, 0.02%)</title><rect x="63.1371%" y="741" width="0.0205%" height="15" fill="rgb(245,50,10)" fg:x="21555" fg:w="7"/><text x="63.3871%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (7 samples, 0.02%)</title><rect x="63.1371%" y="725" width="0.0205%" height="15" fill="rgb(216,100,18)" fg:x="21555" fg:w="7"/><text x="63.3871%" y="735.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (4 samples, 0.01%)</title><rect x="63.1459%" y="709" width="0.0117%" height="15" fill="rgb(236,147,54)" fg:x="21558" fg:w="4"/><text x="63.3959%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (6 samples, 0.02%)</title><rect x="63.1664%" y="773" width="0.0176%" height="15" fill="rgb(205,143,26)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::io::scheduled_io::Waiters&gt;&gt; (6 samples, 0.02%)</title><rect x="63.1664%" y="757" width="0.0176%" height="15" fill="rgb(236,26,9)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="63.1664%" y="741" width="0.0176%" height="15" fill="rgb(221,165,53)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.02%)</title><rect x="63.1664%" y="725" width="0.0176%" height="15" fill="rgb(214,110,17)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.02%)</title><rect x="63.1664%" y="709" width="0.0176%" height="15" fill="rgb(237,197,12)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.02%)</title><rect x="63.1664%" y="693" width="0.0176%" height="15" fill="rgb(205,84,17)" fg:x="21565" fg:w="6"/><text x="63.4164%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.02%)</title><rect x="63.1839%" y="773" width="0.0234%" height="15" fill="rgb(237,18,45)" fg:x="21571" fg:w="8"/><text x="63.4339%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="63.1839%" y="757" width="0.0234%" height="15" fill="rgb(221,87,14)" fg:x="21571" fg:w="8"/><text x="63.4339%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="63.2074%" y="773" width="0.0205%" height="15" fill="rgb(238,186,15)" fg:x="21579" fg:w="7"/><text x="63.4574%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.02%)</title><rect x="63.2074%" y="757" width="0.0205%" height="15" fill="rgb(208,115,11)" fg:x="21579" fg:w="7"/><text x="63.4574%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.02%)</title><rect x="63.2074%" y="741" width="0.0205%" height="15" fill="rgb(254,175,0)" fg:x="21579" fg:w="7"/><text x="63.4574%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.02%)</title><rect x="63.2074%" y="725" width="0.0205%" height="15" fill="rgb(227,24,42)" fg:x="21579" fg:w="7"/><text x="63.4574%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.02%)</title><rect x="63.2074%" y="709" width="0.0205%" height="15" fill="rgb(223,211,37)" fg:x="21579" fg:w="7"/><text x="63.4574%" y="719.50"></text></g><g><title>&lt;tokio::io::util::write::Write&lt;W&gt; as core::future::future::Future&gt;::poll (236 samples, 0.69%)</title><rect x="62.5454%" y="901" width="0.6913%" height="15" fill="rgb(235,49,27)" fg:x="21353" fg:w="236"/><text x="62.7954%" y="911.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (235 samples, 0.69%)</title><rect x="62.5483%" y="885" width="0.6883%" height="15" fill="rgb(254,97,51)" fg:x="21354" fg:w="235"/><text x="62.7983%" y="895.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (228 samples, 0.67%)</title><rect x="62.5688%" y="869" width="0.6678%" height="15" fill="rgb(249,51,40)" fg:x="21361" fg:w="228"/><text x="62.8188%" y="879.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (223 samples, 0.65%)</title><rect x="62.5835%" y="853" width="0.6532%" height="15" fill="rgb(210,128,45)" fg:x="21366" fg:w="223"/><text x="62.8335%" y="863.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (203 samples, 0.59%)</title><rect x="62.6421%" y="837" width="0.5946%" height="15" fill="rgb(224,137,50)" fg:x="21386" fg:w="203"/><text x="62.8921%" y="847.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (39 samples, 0.11%)</title><rect x="63.1224%" y="821" width="0.1142%" height="15" fill="rgb(242,15,9)" fg:x="21550" fg:w="39"/><text x="63.3724%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (38 samples, 0.11%)</title><rect x="63.1254%" y="805" width="0.1113%" height="15" fill="rgb(233,187,41)" fg:x="21551" fg:w="38"/><text x="63.3754%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (27 samples, 0.08%)</title><rect x="63.1576%" y="789" width="0.0791%" height="15" fill="rgb(227,2,29)" fg:x="21562" fg:w="27"/><text x="63.4076%" y="799.50"></text></g><g><title>cache_bin_dalloc_easy (13 samples, 0.04%)</title><rect x="63.2953%" y="757" width="0.0381%" height="15" fill="rgb(222,70,3)" fg:x="21609" fg:w="13"/><text x="63.5453%" y="767.50"></text></g><g><title>cache_bin_full (4 samples, 0.01%)</title><rect x="63.3216%" y="741" width="0.0117%" height="15" fill="rgb(213,11,42)" fg:x="21618" fg:w="4"/><text x="63.5716%" y="751.50"></text></g><g><title>sz_index2size (5 samples, 0.01%)</title><rect x="63.3333%" y="757" width="0.0146%" height="15" fill="rgb(225,150,9)" fg:x="21622" fg:w="5"/><text x="63.5833%" y="767.50"></text></g><g><title>sz_index2size_lookup (5 samples, 0.01%)</title><rect x="63.3333%" y="741" width="0.0146%" height="15" fill="rgb(230,162,45)" fg:x="21622" fg:w="5"/><text x="63.5833%" y="751.50"></text></g><g><title>sz_index2size_lookup_impl (5 samples, 0.01%)</title><rect x="63.3333%" y="725" width="0.0146%" height="15" fill="rgb(222,14,52)" fg:x="21622" fg:w="5"/><text x="63.5833%" y="735.50"></text></g><g><title>_rjem_sdallocx (33 samples, 0.10%)</title><rect x="63.2542%" y="789" width="0.0967%" height="15" fill="rgb(254,198,14)" fg:x="21595" fg:w="33"/><text x="63.5042%" y="799.50"></text></g><g><title>free_fastpath (33 samples, 0.10%)</title><rect x="63.2542%" y="773" width="0.0967%" height="15" fill="rgb(220,217,30)" fg:x="21595" fg:w="33"/><text x="63.5042%" y="783.50"></text></g><g><title>inallocx (18 samples, 0.05%)</title><rect x="63.4564%" y="533" width="0.0527%" height="15" fill="rgb(215,146,41)" fg:x="21664" fg:w="18"/><text x="63.7064%" y="543.50"></text></g><g><title>aligned_usize_get (16 samples, 0.05%)</title><rect x="63.4622%" y="517" width="0.0469%" height="15" fill="rgb(217,27,36)" fg:x="21666" fg:w="16"/><text x="63.7122%" y="527.50"></text></g><g><title>sz_s2u (15 samples, 0.04%)</title><rect x="63.4651%" y="501" width="0.0439%" height="15" fill="rgb(219,218,39)" fg:x="21667" fg:w="15"/><text x="63.7151%" y="511.50"></text></g><g><title>sz_s2u_compute (14 samples, 0.04%)</title><rect x="63.4681%" y="485" width="0.0410%" height="15" fill="rgb(219,4,42)" fg:x="21668" fg:w="14"/><text x="63.7181%" y="495.50"></text></g><g><title>_rjem_je_arena_decay (4 samples, 0.01%)</title><rect x="63.5559%" y="469" width="0.0117%" height="15" fill="rgb(249,119,36)" fg:x="21698" fg:w="4"/><text x="63.8059%" y="479.50"></text></g><g><title>arena_decay_tick (4 samples, 0.01%)</title><rect x="63.5794%" y="453" width="0.0117%" height="15" fill="rgb(209,23,33)" fg:x="21706" fg:w="4"/><text x="63.8294%" y="463.50"></text></g><g><title>arena_decay_ticks (4 samples, 0.01%)</title><rect x="63.5794%" y="437" width="0.0117%" height="15" fill="rgb(211,10,0)" fg:x="21706" fg:w="4"/><text x="63.8294%" y="447.50"></text></g><g><title>ticker_geom_ticks (4 samples, 0.01%)</title><rect x="63.5794%" y="421" width="0.0117%" height="15" fill="rgb(208,99,37)" fg:x="21706" fg:w="4"/><text x="63.8294%" y="431.50"></text></g><g><title>arena_get_from_edata (111 samples, 0.33%)</title><rect x="63.5911%" y="453" width="0.3251%" height="15" fill="rgb(213,132,31)" fg:x="21710" fg:w="111"/><text x="63.8411%" y="463.50"></text></g><g><title>atomic_load_p (111 samples, 0.33%)</title><rect x="63.5911%" y="437" width="0.3251%" height="15" fill="rgb(243,129,40)" fg:x="21710" fg:w="111"/><text x="63.8411%" y="447.50"></text></g><g><title>_rjem_je_arena_handle_deferred_work (11 samples, 0.03%)</title><rect x="63.9309%" y="437" width="0.0322%" height="15" fill="rgb(210,66,33)" fg:x="21826" fg:w="11"/><text x="64.1809%" y="447.50"></text></g><g><title>arena_background_thread_inactivity_check (10 samples, 0.03%)</title><rect x="63.9338%" y="421" width="0.0293%" height="15" fill="rgb(209,189,4)" fg:x="21827" fg:w="10"/><text x="64.1838%" y="431.50"></text></g><g><title>background_thread_enabled (8 samples, 0.02%)</title><rect x="63.9397%" y="405" width="0.0234%" height="15" fill="rgb(214,107,37)" fg:x="21829" fg:w="8"/><text x="64.1897%" y="415.50"></text></g><g><title>atomic_load_b (8 samples, 0.02%)</title><rect x="63.9397%" y="389" width="0.0234%" height="15" fill="rgb(245,88,54)" fg:x="21829" fg:w="8"/><text x="64.1897%" y="399.50"></text></g><g><title>_rjem_je_emap_remap (7 samples, 0.02%)</title><rect x="63.9807%" y="421" width="0.0205%" height="15" fill="rgb(205,146,20)" fg:x="21843" fg:w="7"/><text x="64.2307%" y="431.50"></text></g><g><title>pa_nactive_sub (28 samples, 0.08%)</title><rect x="64.0041%" y="421" width="0.0820%" height="15" fill="rgb(220,161,25)" fg:x="21851" fg:w="28"/><text x="64.2541%" y="431.50"></text></g><g><title>atomic_fetch_sub_zu (28 samples, 0.08%)</title><rect x="64.0041%" y="405" width="0.0820%" height="15" fill="rgb(215,152,15)" fg:x="21851" fg:w="28"/><text x="64.2541%" y="415.50"></text></g><g><title>_rjem_je_pa_dalloc (53 samples, 0.16%)</title><rect x="63.9660%" y="437" width="0.1552%" height="15" fill="rgb(233,192,44)" fg:x="21838" fg:w="53"/><text x="64.2160%" y="447.50"></text></g><g><title>pai_dalloc (12 samples, 0.04%)</title><rect x="64.0861%" y="421" width="0.0351%" height="15" fill="rgb(240,170,46)" fg:x="21879" fg:w="12"/><text x="64.3361%" y="431.50"></text></g><g><title>[libc.so.6] (39 samples, 0.11%)</title><rect x="64.1506%" y="421" width="0.1142%" height="15" fill="rgb(207,104,33)" fg:x="21901" fg:w="39"/><text x="64.4006%" y="431.50"></text></g><g><title>_rjem_je_ecache_dalloc (16 samples, 0.05%)</title><rect x="64.2648%" y="421" width="0.0469%" height="15" fill="rgb(219,21,39)" fg:x="21940" fg:w="16"/><text x="64.5148%" y="431.50"></text></g><g><title>edata_base_get (16 samples, 0.05%)</title><rect x="64.2648%" y="405" width="0.0469%" height="15" fill="rgb(214,133,29)" fg:x="21940" fg:w="16"/><text x="64.5148%" y="415.50"></text></g><g><title>atomic_load_zu (5 samples, 0.01%)</title><rect x="64.3790%" y="405" width="0.0146%" height="15" fill="rgb(226,93,6)" fg:x="21979" fg:w="5"/><text x="64.6290%" y="415.50"></text></g><g><title>edata_state_set (5 samples, 0.01%)</title><rect x="64.4376%" y="357" width="0.0146%" height="15" fill="rgb(252,222,34)" fg:x="21999" fg:w="5"/><text x="64.6876%" y="367.50"></text></g><g><title>rtree_leaf_elm_lookup (4 samples, 0.01%)</title><rect x="64.4523%" y="357" width="0.0117%" height="15" fill="rgb(252,92,48)" fg:x="22004" fg:w="4"/><text x="64.7023%" y="367.50"></text></g><g><title>_rjem_je_emap_update_edata_state (17 samples, 0.05%)</title><rect x="64.4171%" y="373" width="0.0498%" height="15" fill="rgb(245,223,24)" fg:x="21992" fg:w="17"/><text x="64.6671%" y="383.50"></text></g><g><title>_rjem_je_edata_heap_empty (10 samples, 0.03%)</title><rect x="64.5108%" y="357" width="0.0293%" height="15" fill="rgb(205,176,3)" fg:x="22024" fg:w="10"/><text x="64.7608%" y="367.50"></text></g><g><title>edata_heap_ph_cmp (12 samples, 0.04%)</title><rect x="64.5782%" y="325" width="0.0351%" height="15" fill="rgb(235,151,15)" fg:x="22047" fg:w="12"/><text x="64.8282%" y="335.50"></text></g><g><title>edata_snad_comp (12 samples, 0.04%)</title><rect x="64.5782%" y="309" width="0.0351%" height="15" fill="rgb(237,209,11)" fg:x="22047" fg:w="12"/><text x="64.8282%" y="319.50"></text></g><g><title>edata_cmp_summary_get (12 samples, 0.04%)</title><rect x="64.5782%" y="293" width="0.0351%" height="15" fill="rgb(243,227,24)" fg:x="22047" fg:w="12"/><text x="64.8282%" y="303.50"></text></g><g><title>edata_sn_get (12 samples, 0.04%)</title><rect x="64.5782%" y="277" width="0.0351%" height="15" fill="rgb(239,193,16)" fg:x="22047" fg:w="12"/><text x="64.8282%" y="287.50"></text></g><g><title>_rjem_je_edata_heap_insert (29 samples, 0.08%)</title><rect x="64.5401%" y="357" width="0.0849%" height="15" fill="rgb(231,27,9)" fg:x="22034" fg:w="29"/><text x="64.7901%" y="367.50"></text></g><g><title>ph_insert (24 samples, 0.07%)</title><rect x="64.5548%" y="341" width="0.0703%" height="15" fill="rgb(219,169,10)" fg:x="22039" fg:w="24"/><text x="64.8048%" y="351.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (7 samples, 0.02%)</title><rect x="64.6251%" y="357" width="0.0205%" height="15" fill="rgb(244,229,43)" fg:x="22063" fg:w="7"/><text x="64.8751%" y="367.50"></text></g><g><title>edata_list_inactive_append (12 samples, 0.04%)</title><rect x="64.6514%" y="357" width="0.0351%" height="15" fill="rgb(254,38,20)" fg:x="22072" fg:w="12"/><text x="64.9014%" y="367.50"></text></g><g><title>atomic_load_zu (4 samples, 0.01%)</title><rect x="64.6924%" y="341" width="0.0117%" height="15" fill="rgb(250,47,30)" fg:x="22086" fg:w="4"/><text x="64.9424%" y="351.50"></text></g><g><title>eset_stats_add (8 samples, 0.02%)</title><rect x="64.6895%" y="357" width="0.0234%" height="15" fill="rgb(224,124,36)" fg:x="22085" fg:w="8"/><text x="64.9395%" y="367.50"></text></g><g><title>extent_deactivate_locked (126 samples, 0.37%)</title><rect x="64.3966%" y="405" width="0.3691%" height="15" fill="rgb(246,68,51)" fg:x="21985" fg:w="126"/><text x="64.6466%" y="415.50"></text></g><g><title>extent_deactivate_locked_impl (126 samples, 0.37%)</title><rect x="64.3966%" y="389" width="0.3691%" height="15" fill="rgb(253,43,49)" fg:x="21985" fg:w="126"/><text x="64.6466%" y="399.50"></text></g><g><title>_rjem_je_eset_insert (102 samples, 0.30%)</title><rect x="64.4669%" y="373" width="0.2988%" height="15" fill="rgb(219,54,36)" fg:x="22009" fg:w="102"/><text x="64.7169%" y="383.50"></text></g><g><title>sz_psz2ind (16 samples, 0.05%)</title><rect x="64.7188%" y="357" width="0.0469%" height="15" fill="rgb(227,133,34)" fg:x="22095" fg:w="16"/><text x="64.9688%" y="367.50"></text></g><g><title>rtree_leaf_elm_lookup (6 samples, 0.02%)</title><rect x="64.9707%" y="325" width="0.0176%" height="15" fill="rgb(247,227,15)" fg:x="22181" fg:w="6"/><text x="65.2207%" y="335.50"></text></g><g><title>rtree_leaf_elm_state_update (14 samples, 0.04%)</title><rect x="64.9883%" y="325" width="0.0410%" height="15" fill="rgb(229,96,14)" fg:x="22187" fg:w="14"/><text x="65.2383%" y="335.50"></text></g><g><title>rtree_leaf_elm_bits_read (12 samples, 0.04%)</title><rect x="64.9941%" y="309" width="0.0351%" height="15" fill="rgb(220,79,17)" fg:x="22189" fg:w="12"/><text x="65.2441%" y="319.50"></text></g><g><title>atomic_load_p (12 samples, 0.04%)</title><rect x="64.9941%" y="293" width="0.0351%" height="15" fill="rgb(205,131,53)" fg:x="22189" fg:w="12"/><text x="65.2441%" y="303.50"></text></g><g><title>_rjem_je_emap_update_edata_state (26 samples, 0.08%)</title><rect x="64.9561%" y="341" width="0.0762%" height="15" fill="rgb(209,50,29)" fg:x="22176" fg:w="26"/><text x="65.2061%" y="351.50"></text></g><g><title>edata_committed_get (26 samples, 0.08%)</title><rect x="65.0937%" y="325" width="0.0762%" height="15" fill="rgb(245,86,46)" fg:x="22223" fg:w="26"/><text x="65.3437%" y="335.50"></text></g><g><title>extent_can_acquire_neighbor (51 samples, 0.15%)</title><rect x="65.0381%" y="341" width="0.1494%" height="15" fill="rgb(235,66,46)" fg:x="22204" fg:w="51"/><text x="65.2881%" y="351.50"></text></g><g><title>rtree_leaf_elm_lookup (12 samples, 0.04%)</title><rect x="65.1875%" y="341" width="0.0351%" height="15" fill="rgb(232,148,31)" fg:x="22255" fg:w="12"/><text x="65.4375%" y="351.50"></text></g><g><title>rtree_leaf_elm_read (52 samples, 0.15%)</title><rect x="65.2226%" y="341" width="0.1523%" height="15" fill="rgb(217,149,8)" fg:x="22267" fg:w="52"/><text x="65.4726%" y="351.50"></text></g><g><title>rtree_leaf_elm_bits_read (49 samples, 0.14%)</title><rect x="65.2314%" y="325" width="0.1435%" height="15" fill="rgb(209,183,11)" fg:x="22270" fg:w="49"/><text x="65.4814%" y="335.50"></text></g><g><title>atomic_load_p (49 samples, 0.14%)</title><rect x="65.2314%" y="309" width="0.1435%" height="15" fill="rgb(208,55,20)" fg:x="22270" fg:w="49"/><text x="65.4814%" y="319.50"></text></g><g><title>_rjem_je_emap_try_acquire_edata_neighbor (178 samples, 0.52%)</title><rect x="64.8594%" y="373" width="0.5214%" height="15" fill="rgb(218,39,14)" fg:x="22143" fg:w="178"/><text x="65.1094%" y="383.50"></text></g><g><title>emap_try_acquire_edata_neighbor_impl (174 samples, 0.51%)</title><rect x="64.8711%" y="357" width="0.5097%" height="15" fill="rgb(216,169,33)" fg:x="22147" fg:w="174"/><text x="65.1211%" y="367.50"></text></g><g><title>ph_merge_children (5 samples, 0.01%)</title><rect x="65.4921%" y="309" width="0.0146%" height="15" fill="rgb(233,80,24)" fg:x="22359" fg:w="5"/><text x="65.7421%" y="319.50"></text></g><g><title>phn_merge_siblings (4 samples, 0.01%)</title><rect x="65.4950%" y="293" width="0.0117%" height="15" fill="rgb(213,179,31)" fg:x="22360" fg:w="4"/><text x="65.7450%" y="303.50"></text></g><g><title>_rjem_je_edata_heap_remove (32 samples, 0.09%)</title><rect x="65.4335%" y="341" width="0.0937%" height="15" fill="rgb(209,19,5)" fg:x="22339" fg:w="32"/><text x="65.6835%" y="351.50"></text></g><g><title>ph_remove (26 samples, 0.08%)</title><rect x="65.4511%" y="325" width="0.0762%" height="15" fill="rgb(219,18,35)" fg:x="22345" fg:w="26"/><text x="65.7011%" y="335.50"></text></g><g><title>_rjem_je_sz_psz_quantize_floor (24 samples, 0.07%)</title><rect x="65.5272%" y="341" width="0.0703%" height="15" fill="rgb(209,169,16)" fg:x="22371" fg:w="24"/><text x="65.7772%" y="351.50"></text></g><g><title>sz_psz2ind (9 samples, 0.03%)</title><rect x="65.5712%" y="325" width="0.0264%" height="15" fill="rgb(245,90,51)" fg:x="22386" fg:w="9"/><text x="65.8212%" y="335.50"></text></g><g><title>edata_list_inactive_remove (10 samples, 0.03%)</title><rect x="65.6063%" y="341" width="0.0293%" height="15" fill="rgb(220,99,45)" fg:x="22398" fg:w="10"/><text x="65.8563%" y="351.50"></text></g><g><title>atomic_load_zu (41 samples, 0.12%)</title><rect x="65.6385%" y="325" width="0.1201%" height="15" fill="rgb(249,89,25)" fg:x="22409" fg:w="41"/><text x="65.8885%" y="335.50"></text></g><g><title>eset_stats_sub (42 samples, 0.12%)</title><rect x="65.6385%" y="341" width="0.1230%" height="15" fill="rgb(239,193,0)" fg:x="22409" fg:w="42"/><text x="65.8885%" y="351.50"></text></g><g><title>_rjem_je_eset_remove (135 samples, 0.40%)</title><rect x="65.3954%" y="357" width="0.3954%" height="15" fill="rgb(231,126,1)" fg:x="22326" fg:w="135"/><text x="65.6454%" y="367.50"></text></g><g><title>sz_psz2ind (8 samples, 0.02%)</title><rect x="65.7674%" y="341" width="0.0234%" height="15" fill="rgb(243,166,3)" fg:x="22453" fg:w="8"/><text x="66.0174%" y="351.50"></text></g><g><title>_rjem_je_ehooks_default_merge_impl (18 samples, 0.05%)</title><rect x="65.8407%" y="325" width="0.0527%" height="15" fill="rgb(223,22,34)" fg:x="22478" fg:w="18"/><text x="66.0907%" y="335.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (16 samples, 0.05%)</title><rect x="65.8465%" y="309" width="0.0469%" height="15" fill="rgb(251,52,51)" fg:x="22480" fg:w="16"/><text x="66.0965%" y="319.50"></text></g><g><title>ehooks_merge (31 samples, 0.09%)</title><rect x="65.8202%" y="341" width="0.0908%" height="15" fill="rgb(221,165,28)" fg:x="22471" fg:w="31"/><text x="66.0702%" y="351.50"></text></g><g><title>ehooks_get_extent_hooks_ptr (6 samples, 0.02%)</title><rect x="65.8934%" y="325" width="0.0176%" height="15" fill="rgb(218,121,47)" fg:x="22496" fg:w="6"/><text x="66.1434%" y="335.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="65.8934%" y="309" width="0.0176%" height="15" fill="rgb(209,120,9)" fg:x="22496" fg:w="6"/><text x="66.1434%" y="319.50"></text></g><g><title>[libc.so.6] (40 samples, 0.12%)</title><rect x="65.9285%" y="325" width="0.1172%" height="15" fill="rgb(236,68,12)" fg:x="22508" fg:w="40"/><text x="66.1785%" y="335.50"></text></g><g><title>edata_avail_ph_cmp (12 samples, 0.04%)</title><rect x="66.0984%" y="277" width="0.0351%" height="15" fill="rgb(225,194,26)" fg:x="22566" fg:w="12"/><text x="66.3484%" y="287.50"></text></g><g><title>edata_esnead_comp (12 samples, 0.04%)</title><rect x="66.0984%" y="261" width="0.0351%" height="15" fill="rgb(231,84,39)" fg:x="22566" fg:w="12"/><text x="66.3484%" y="271.50"></text></g><g><title>edata_esn_comp (10 samples, 0.03%)</title><rect x="66.1043%" y="245" width="0.0293%" height="15" fill="rgb(210,11,45)" fg:x="22568" fg:w="10"/><text x="66.3543%" y="255.50"></text></g><g><title>edata_esn_get (9 samples, 0.03%)</title><rect x="66.1072%" y="229" width="0.0264%" height="15" fill="rgb(224,54,52)" fg:x="22569" fg:w="9"/><text x="66.3572%" y="239.50"></text></g><g><title>edata_avail_ph_cmp (12 samples, 0.04%)</title><rect x="66.1424%" y="245" width="0.0351%" height="15" fill="rgb(238,102,14)" fg:x="22581" fg:w="12"/><text x="66.3924%" y="255.50"></text></g><g><title>edata_esnead_comp (12 samples, 0.04%)</title><rect x="66.1424%" y="229" width="0.0351%" height="15" fill="rgb(243,160,52)" fg:x="22581" fg:w="12"/><text x="66.3924%" y="239.50"></text></g><g><title>edata_esn_comp (10 samples, 0.03%)</title><rect x="66.1482%" y="213" width="0.0293%" height="15" fill="rgb(216,114,19)" fg:x="22583" fg:w="10"/><text x="66.3982%" y="223.50"></text></g><g><title>edata_esn_get (10 samples, 0.03%)</title><rect x="66.1482%" y="197" width="0.0293%" height="15" fill="rgb(244,166,37)" fg:x="22583" fg:w="10"/><text x="66.3982%" y="207.50"></text></g><g><title>phn_merge (16 samples, 0.05%)</title><rect x="66.1424%" y="261" width="0.0469%" height="15" fill="rgb(246,29,44)" fg:x="22581" fg:w="16"/><text x="66.3924%" y="271.50"></text></g><g><title>phn_merge_ordered (4 samples, 0.01%)</title><rect x="66.1775%" y="245" width="0.0117%" height="15" fill="rgb(215,56,53)" fg:x="22593" fg:w="4"/><text x="66.4275%" y="255.50"></text></g><g><title>phn_next_get (7 samples, 0.02%)</title><rect x="66.1892%" y="261" width="0.0205%" height="15" fill="rgb(217,60,2)" fg:x="22597" fg:w="7"/><text x="66.4392%" y="271.50"></text></g><g><title>ph_try_aux_merge_pair (29 samples, 0.08%)</title><rect x="66.1336%" y="277" width="0.0849%" height="15" fill="rgb(207,26,24)" fg:x="22578" fg:w="29"/><text x="66.3836%" y="287.50"></text></g><g><title>phn_link_init (8 samples, 0.02%)</title><rect x="66.2214%" y="277" width="0.0234%" height="15" fill="rgb(252,210,15)" fg:x="22608" fg:w="8"/><text x="66.4714%" y="287.50"></text></g><g><title>_rjem_je_edata_avail_insert (60 samples, 0.18%)</title><rect x="66.0750%" y="309" width="0.1757%" height="15" fill="rgb(253,209,26)" fg:x="22558" fg:w="60"/><text x="66.3250%" y="319.50"></text></g><g><title>ph_insert (58 samples, 0.17%)</title><rect x="66.0808%" y="293" width="0.1699%" height="15" fill="rgb(238,170,14)" fg:x="22560" fg:w="58"/><text x="66.3308%" y="303.50"></text></g><g><title>atomic_load_add_store_zu (6 samples, 0.02%)</title><rect x="66.2507%" y="309" width="0.0176%" height="15" fill="rgb(216,178,15)" fg:x="22618" fg:w="6"/><text x="66.5007%" y="319.50"></text></g><g><title>malloc_mutex_trylock_final (38 samples, 0.11%)</title><rect x="66.2800%" y="293" width="0.1113%" height="15" fill="rgb(250,197,2)" fg:x="22628" fg:w="38"/><text x="66.5300%" y="303.50"></text></g><g><title>pthread_mutex_trylock (38 samples, 0.11%)</title><rect x="66.2800%" y="277" width="0.1113%" height="15" fill="rgb(212,70,42)" fg:x="22628" fg:w="38"/><text x="66.5300%" y="287.50"></text></g><g><title>malloc_mutex_lock (43 samples, 0.13%)</title><rect x="66.2683%" y="309" width="0.1260%" height="15" fill="rgb(227,213,9)" fg:x="22624" fg:w="43"/><text x="66.5183%" y="319.50"></text></g><g><title>_rjem_je_edata_cache_put (120 samples, 0.35%)</title><rect x="66.0457%" y="325" width="0.3515%" height="15" fill="rgb(245,99,25)" fg:x="22548" fg:w="120"/><text x="66.2957%" y="335.50"></text></g><g><title>_rjem_je_emap_merge_commit (11 samples, 0.03%)</title><rect x="66.3972%" y="325" width="0.0322%" height="15" fill="rgb(250,82,29)" fg:x="22668" fg:w="11"/><text x="66.6472%" y="335.50"></text></g><g><title>_rjem_je_emap_merge_prepare (29 samples, 0.08%)</title><rect x="66.4294%" y="325" width="0.0849%" height="15" fill="rgb(241,226,54)" fg:x="22679" fg:w="29"/><text x="66.6794%" y="335.50"></text></g><g><title>emap_rtree_leaf_elms_lookup (18 samples, 0.05%)</title><rect x="66.4616%" y="309" width="0.0527%" height="15" fill="rgb(221,99,41)" fg:x="22690" fg:w="18"/><text x="66.7116%" y="319.50"></text></g><g><title>rtree_leaf_elm_lookup (15 samples, 0.04%)</title><rect x="66.4704%" y="293" width="0.0439%" height="15" fill="rgb(213,90,21)" fg:x="22693" fg:w="15"/><text x="66.7204%" y="303.50"></text></g><g><title>pthread_mutex_unlock (23 samples, 0.07%)</title><rect x="66.5261%" y="325" width="0.0674%" height="15" fill="rgb(205,208,24)" fg:x="22712" fg:w="23"/><text x="66.7761%" y="335.50"></text></g><g><title>extent_try_coalesce_large (631 samples, 1.85%)</title><rect x="64.7657%" y="405" width="1.8483%" height="15" fill="rgb(246,31,12)" fg:x="22111" fg:w="631"/><text x="65.0157%" y="415.50">e..</text></g><g><title>extent_try_coalesce_impl (625 samples, 1.83%)</title><rect x="64.7832%" y="389" width="1.8307%" height="15" fill="rgb(213,154,6)" fg:x="22117" fg:w="625"/><text x="65.0332%" y="399.50">e..</text></g><g><title>extent_coalesce (419 samples, 1.23%)</title><rect x="65.3866%" y="373" width="1.2273%" height="15" fill="rgb(222,163,29)" fg:x="22323" fg:w="419"/><text x="65.6366%" y="383.50"></text></g><g><title>extent_merge_impl (281 samples, 0.82%)</title><rect x="65.7909%" y="357" width="0.8231%" height="15" fill="rgb(227,201,8)" fg:x="22461" fg:w="281"/><text x="66.0409%" y="367.50"></text></g><g><title>extent_merge_impl (240 samples, 0.70%)</title><rect x="65.9110%" y="341" width="0.7030%" height="15" fill="rgb(233,9,32)" fg:x="22502" fg:w="240"/><text x="66.1610%" y="351.50"></text></g><g><title>pthread_mutex_unlock@plt (7 samples, 0.02%)</title><rect x="66.5934%" y="325" width="0.0205%" height="15" fill="rgb(217,54,24)" fg:x="22735" fg:w="7"/><text x="66.8434%" y="335.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (5 samples, 0.01%)</title><rect x="66.6139%" y="389" width="0.0146%" height="15" fill="rgb(235,192,0)" fg:x="22742" fg:w="5"/><text x="66.8639%" y="399.50"></text></g><g><title>pthread_mutex_trylock (75 samples, 0.22%)</title><rect x="66.6286%" y="373" width="0.2197%" height="15" fill="rgb(235,45,9)" fg:x="22747" fg:w="75"/><text x="66.8786%" y="383.50"></text></g><g><title>malloc_mutex_lock (104 samples, 0.30%)</title><rect x="66.6139%" y="405" width="0.3046%" height="15" fill="rgb(246,42,40)" fg:x="22742" fg:w="104"/><text x="66.8639%" y="415.50"></text></g><g><title>malloc_mutex_trylock_final (99 samples, 0.29%)</title><rect x="66.6286%" y="389" width="0.2900%" height="15" fill="rgb(248,111,24)" fg:x="22747" fg:w="99"/><text x="66.8786%" y="399.50"></text></g><g><title>pthread_mutex_trylock@plt (24 samples, 0.07%)</title><rect x="66.8483%" y="373" width="0.0703%" height="15" fill="rgb(249,65,22)" fg:x="22822" fg:w="24"/><text x="67.0983%" y="383.50"></text></g><g><title>_rjem_je_extent_record (891 samples, 2.61%)</title><rect x="64.3146%" y="421" width="2.6098%" height="15" fill="rgb(238,111,51)" fg:x="21957" fg:w="891"/><text x="64.5646%" y="431.50">_r..</text></g><g><title>pac_ehooks_get (29 samples, 0.08%)</title><rect x="66.9244%" y="421" width="0.0849%" height="15" fill="rgb(250,118,22)" fg:x="22848" fg:w="29"/><text x="67.1744%" y="431.50"></text></g><g><title>_rjem_je_base_ehooks_get (9 samples, 0.03%)</title><rect x="66.9830%" y="405" width="0.0264%" height="15" fill="rgb(234,84,26)" fg:x="22868" fg:w="9"/><text x="67.2330%" y="415.50"></text></g><g><title>large_dalloc_finish_impl (1,059 samples, 3.10%)</title><rect x="63.9162%" y="453" width="3.1019%" height="15" fill="rgb(243,172,12)" fg:x="21821" fg:w="1059"/><text x="64.1662%" y="463.50">lar..</text></g><g><title>pac_dalloc_impl (989 samples, 2.90%)</title><rect x="64.1213%" y="437" width="2.8969%" height="15" fill="rgb(236,150,49)" fg:x="21891" fg:w="989"/><text x="64.3713%" y="447.50">pa..</text></g><g><title>locked_inc_u64 (34 samples, 0.10%)</title><rect x="67.1060%" y="405" width="0.0996%" height="15" fill="rgb(225,197,26)" fg:x="22910" fg:w="34"/><text x="67.3560%" y="415.50"></text></g><g><title>atomic_fetch_add_u64 (34 samples, 0.10%)</title><rect x="67.1060%" y="389" width="0.0996%" height="15" fill="rgb(214,17,42)" fg:x="22910" fg:w="34"/><text x="67.3560%" y="399.50"></text></g><g><title>arena_large_dalloc_stats_update (42 samples, 0.12%)</title><rect x="67.1031%" y="421" width="0.1230%" height="15" fill="rgb(224,165,40)" fg:x="22909" fg:w="42"/><text x="67.3531%" y="431.50"></text></g><g><title>sz_size2index (7 samples, 0.02%)</title><rect x="67.2056%" y="405" width="0.0205%" height="15" fill="rgb(246,100,4)" fg:x="22944" fg:w="7"/><text x="67.4556%" y="415.50"></text></g><g><title>sz_size2index_compute (7 samples, 0.02%)</title><rect x="67.2056%" y="389" width="0.0205%" height="15" fill="rgb(222,103,0)" fg:x="22944" fg:w="7"/><text x="67.4556%" y="399.50"></text></g><g><title>_rjem_je_large_dalloc (1,253 samples, 3.67%)</title><rect x="63.5677%" y="469" width="3.6702%" height="15" fill="rgb(227,189,26)" fg:x="21702" fg:w="1253"/><text x="63.8177%" y="479.50">_rje..</text></g><g><title>large_dalloc_prep_impl (75 samples, 0.22%)</title><rect x="67.0182%" y="453" width="0.2197%" height="15" fill="rgb(214,202,17)" fg:x="22880" fg:w="75"/><text x="67.2682%" y="463.50"></text></g><g><title>_rjem_je_arena_extent_dalloc_large_prep (46 samples, 0.13%)</title><rect x="67.1031%" y="437" width="0.1347%" height="15" fill="rgb(229,111,3)" fg:x="22909" fg:w="46"/><text x="67.3531%" y="447.50"></text></g><g><title>edata_usize_get (4 samples, 0.01%)</title><rect x="67.2261%" y="421" width="0.0117%" height="15" fill="rgb(229,172,15)" fg:x="22951" fg:w="4"/><text x="67.4761%" y="431.50"></text></g><g><title>rtree_leaf_elm_lookup (8 samples, 0.02%)</title><rect x="67.2408%" y="437" width="0.0234%" height="15" fill="rgb(230,224,35)" fg:x="22956" fg:w="8"/><text x="67.4908%" y="447.50"></text></g><g><title>isdalloct (1,331 samples, 3.90%)</title><rect x="63.5091%" y="517" width="3.8987%" height="15" fill="rgb(251,141,6)" fg:x="21682" fg:w="1331"/><text x="63.7591%" y="527.50">isda..</text></g><g><title>arena_sdalloc (1,331 samples, 3.90%)</title><rect x="63.5091%" y="501" width="3.8987%" height="15" fill="rgb(225,208,6)" fg:x="21682" fg:w="1331"/><text x="63.7591%" y="511.50">aren..</text></g><g><title>arena_dalloc_large (1,328 samples, 3.89%)</title><rect x="63.5179%" y="485" width="3.8899%" height="15" fill="rgb(246,181,16)" fg:x="21685" fg:w="1328"/><text x="63.7679%" y="495.50">aren..</text></g><g><title>emap_edata_lookup (57 samples, 0.17%)</title><rect x="67.2408%" y="469" width="0.1670%" height="15" fill="rgb(227,129,36)" fg:x="22956" fg:w="57"/><text x="67.4908%" y="479.50"></text></g><g><title>rtree_read (57 samples, 0.17%)</title><rect x="67.2408%" y="453" width="0.1670%" height="15" fill="rgb(248,117,24)" fg:x="22956" fg:w="57"/><text x="67.4908%" y="463.50"></text></g><g><title>rtree_leaf_elm_read (49 samples, 0.14%)</title><rect x="67.2642%" y="437" width="0.1435%" height="15" fill="rgb(214,185,35)" fg:x="22964" fg:w="49"/><text x="67.5142%" y="447.50"></text></g><g><title>rtree_leaf_elm_bits_read (46 samples, 0.13%)</title><rect x="67.2730%" y="421" width="0.1347%" height="15" fill="rgb(236,150,34)" fg:x="22967" fg:w="46"/><text x="67.5230%" y="431.50"></text></g><g><title>atomic_load_p (46 samples, 0.13%)</title><rect x="67.2730%" y="405" width="0.1347%" height="15" fill="rgb(243,228,27)" fg:x="22967" fg:w="46"/><text x="67.5230%" y="415.50"></text></g><g><title>sz_size2index (9 samples, 0.03%)</title><rect x="67.4077%" y="517" width="0.0264%" height="15" fill="rgb(245,77,44)" fg:x="23013" fg:w="9"/><text x="67.6577%" y="527.50"></text></g><g><title>sz_size2index_compute (7 samples, 0.02%)</title><rect x="67.4136%" y="501" width="0.0205%" height="15" fill="rgb(235,214,42)" fg:x="23015" fg:w="7"/><text x="67.6636%" y="511.50"></text></g><g><title>cache_bin_ncached_get_local (7 samples, 0.02%)</title><rect x="67.5659%" y="437" width="0.0205%" height="15" fill="rgb(221,74,3)" fg:x="23067" fg:w="7"/><text x="67.8159%" y="447.50"></text></g><g><title>cache_bin_ncached_get_internal (7 samples, 0.02%)</title><rect x="67.5659%" y="421" width="0.0205%" height="15" fill="rgb(206,121,29)" fg:x="23067" fg:w="7"/><text x="67.8159%" y="431.50"></text></g><g><title>_rjem_je_tcache_bin_flush_stashed (11 samples, 0.03%)</title><rect x="67.5600%" y="453" width="0.0322%" height="15" fill="rgb(249,131,53)" fg:x="23065" fg:w="11"/><text x="67.8100%" y="463.50"></text></g><g><title>cache_bin_finish_flush (8 samples, 0.02%)</title><rect x="67.5952%" y="405" width="0.0234%" height="15" fill="rgb(236,170,29)" fg:x="23077" fg:w="8"/><text x="67.8452%" y="415.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="67.5981%" y="389" width="0.0205%" height="15" fill="rgb(247,96,15)" fg:x="23078" fg:w="7"/><text x="67.8481%" y="399.50"></text></g><g><title>extent_deactivate_locked (4 samples, 0.01%)</title><rect x="67.6450%" y="341" width="0.0117%" height="15" fill="rgb(211,210,7)" fg:x="23094" fg:w="4"/><text x="67.8950%" y="351.50"></text></g><g><title>extent_deactivate_locked_impl (4 samples, 0.01%)</title><rect x="67.6450%" y="325" width="0.0117%" height="15" fill="rgb(240,88,50)" fg:x="23094" fg:w="4"/><text x="67.8950%" y="335.50"></text></g><g><title>_rjem_je_eset_insert (4 samples, 0.01%)</title><rect x="67.6450%" y="309" width="0.0117%" height="15" fill="rgb(209,229,26)" fg:x="23094" fg:w="4"/><text x="67.8950%" y="319.50"></text></g><g><title>_rjem_je_extent_record (8 samples, 0.02%)</title><rect x="67.6421%" y="357" width="0.0234%" height="15" fill="rgb(210,68,23)" fg:x="23093" fg:w="8"/><text x="67.8921%" y="367.50"></text></g><g><title>_rjem_je_arena_slab_dalloc (12 samples, 0.04%)</title><rect x="67.6333%" y="389" width="0.0351%" height="15" fill="rgb(229,180,13)" fg:x="23090" fg:w="12"/><text x="67.8833%" y="399.50"></text></g><g><title>pac_dalloc_impl (9 samples, 0.03%)</title><rect x="67.6421%" y="373" width="0.0264%" height="15" fill="rgb(236,53,44)" fg:x="23093" fg:w="9"/><text x="67.8921%" y="383.50"></text></g><g><title>arena_dalloc_bin_locked_step (6 samples, 0.02%)</title><rect x="67.6684%" y="389" width="0.0176%" height="15" fill="rgb(244,214,29)" fg:x="23102" fg:w="6"/><text x="67.9184%" y="399.50"></text></g><g><title>edata_arena_ind_get (9 samples, 0.03%)</title><rect x="67.6948%" y="389" width="0.0264%" height="15" fill="rgb(220,75,29)" fg:x="23111" fg:w="9"/><text x="67.9448%" y="399.50"></text></g><g><title>malloc_mutex_trylock_final (10 samples, 0.03%)</title><rect x="67.7211%" y="373" width="0.0293%" height="15" fill="rgb(214,183,37)" fg:x="23120" fg:w="10"/><text x="67.9711%" y="383.50"></text></g><g><title>pthread_mutex_trylock (10 samples, 0.03%)</title><rect x="67.7211%" y="357" width="0.0293%" height="15" fill="rgb(239,117,29)" fg:x="23120" fg:w="10"/><text x="67.9711%" y="367.50"></text></g><g><title>malloc_mutex_lock (13 samples, 0.04%)</title><rect x="67.7211%" y="389" width="0.0381%" height="15" fill="rgb(237,171,35)" fg:x="23120" fg:w="13"/><text x="67.9711%" y="399.50"></text></g><g><title>rtree_leaf_elm_read (7 samples, 0.02%)</title><rect x="67.7914%" y="357" width="0.0205%" height="15" fill="rgb(229,178,53)" fg:x="23144" fg:w="7"/><text x="68.0414%" y="367.50"></text></g><g><title>rtree_leaf_elm_bits_read (7 samples, 0.02%)</title><rect x="67.7914%" y="341" width="0.0205%" height="15" fill="rgb(210,102,19)" fg:x="23144" fg:w="7"/><text x="68.0414%" y="351.50"></text></g><g><title>atomic_load_p (7 samples, 0.02%)</title><rect x="67.7914%" y="325" width="0.0205%" height="15" fill="rgb(235,127,22)" fg:x="23144" fg:w="7"/><text x="68.0414%" y="335.50"></text></g><g><title>tcache_bin_flush_edatas_lookup (20 samples, 0.06%)</title><rect x="67.7622%" y="389" width="0.0586%" height="15" fill="rgb(244,31,31)" fg:x="23134" fg:w="20"/><text x="68.0122%" y="399.50"></text></g><g><title>emap_edata_lookup_batch (20 samples, 0.06%)</title><rect x="67.7622%" y="373" width="0.0586%" height="15" fill="rgb(231,43,21)" fg:x="23134" fg:w="20"/><text x="68.0122%" y="383.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (82 samples, 0.24%)</title><rect x="67.5952%" y="437" width="0.2402%" height="15" fill="rgb(217,131,35)" fg:x="23077" fg:w="82"/><text x="67.8452%" y="447.50"></text></g><g><title>tcache_bin_flush_bottom (82 samples, 0.24%)</title><rect x="67.5952%" y="421" width="0.2402%" height="15" fill="rgb(221,149,4)" fg:x="23077" fg:w="82"/><text x="67.8452%" y="431.50"></text></g><g><title>tcache_bin_flush_impl (74 samples, 0.22%)</title><rect x="67.6186%" y="405" width="0.2168%" height="15" fill="rgb(232,170,28)" fg:x="23085" fg:w="74"/><text x="67.8686%" y="415.50"></text></g><g><title>tcache_bin_flush_match (5 samples, 0.01%)</title><rect x="67.8207%" y="389" width="0.0146%" height="15" fill="rgb(238,56,10)" fg:x="23154" fg:w="5"/><text x="68.0707%" y="399.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (110 samples, 0.32%)</title><rect x="67.5220%" y="469" width="0.3222%" height="15" fill="rgb(235,196,14)" fg:x="23052" fg:w="110"/><text x="67.7720%" y="479.50"></text></g><g><title>tcache_gc_small (86 samples, 0.25%)</title><rect x="67.5923%" y="453" width="0.2519%" height="15" fill="rgb(216,45,48)" fg:x="23076" fg:w="86"/><text x="67.8423%" y="463.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_new_event_wait (6 samples, 0.02%)</title><rect x="67.8442%" y="469" width="0.0176%" height="15" fill="rgb(238,213,17)" fg:x="23162" fg:w="6"/><text x="68.0942%" y="479.50"></text></g><g><title>atomic_fence (11 samples, 0.03%)</title><rect x="67.8735%" y="405" width="0.0322%" height="15" fill="rgb(212,13,2)" fg:x="23172" fg:w="11"/><text x="68.1235%" y="415.50"></text></g><g><title>te_adjust_thresholds_helper (16 samples, 0.05%)</title><rect x="67.8676%" y="469" width="0.0469%" height="15" fill="rgb(240,114,20)" fg:x="23170" fg:w="16"/><text x="68.1176%" y="479.50"></text></g><g><title>te_ctx_next_event_set (14 samples, 0.04%)</title><rect x="67.8735%" y="453" width="0.0410%" height="15" fill="rgb(228,41,40)" fg:x="23172" fg:w="14"/><text x="68.1235%" y="463.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (14 samples, 0.04%)</title><rect x="67.8735%" y="437" width="0.0410%" height="15" fill="rgb(244,132,35)" fg:x="23172" fg:w="14"/><text x="68.1235%" y="447.50"></text></g><g><title>_rjem_je_te_recompute_fast_threshold (14 samples, 0.04%)</title><rect x="67.8735%" y="421" width="0.0410%" height="15" fill="rgb(253,189,4)" fg:x="23172" fg:w="14"/><text x="68.1235%" y="431.50"></text></g><g><title>_rjem_je_te_event_trigger (162 samples, 0.47%)</title><rect x="67.4487%" y="485" width="0.4745%" height="15" fill="rgb(224,37,19)" fg:x="23027" fg:w="162"/><text x="67.6987%" y="495.50"></text></g><g><title>isfree (1,510 samples, 4.42%)</title><rect x="63.5091%" y="533" width="4.4230%" height="15" fill="rgb(235,223,18)" fg:x="21682" fg:w="1510"/><text x="63.7591%" y="543.50">isfree</text></g><g><title>thread_dalloc_event (170 samples, 0.50%)</title><rect x="67.4341%" y="517" width="0.4979%" height="15" fill="rgb(235,163,25)" fg:x="23022" fg:w="170"/><text x="67.6841%" y="527.50"></text></g><g><title>te_event_advance (170 samples, 0.50%)</title><rect x="67.4341%" y="501" width="0.4979%" height="15" fill="rgb(217,145,28)" fg:x="23022" fg:w="170"/><text x="67.6841%" y="511.50"></text></g><g><title>_rjem_je_sdallocx_default (1,555 samples, 4.55%)</title><rect x="63.4300%" y="549" width="4.5548%" height="15" fill="rgb(223,223,32)" fg:x="21655" fg:w="1555"/><text x="63.6800%" y="559.50">_rjem..</text></g><g><title>tsd_fetch_min (16 samples, 0.05%)</title><rect x="67.9379%" y="533" width="0.0469%" height="15" fill="rgb(227,189,39)" fg:x="23194" fg:w="16"/><text x="68.1879%" y="543.50"></text></g><g><title>tsd_fetch_impl (16 samples, 0.05%)</title><rect x="67.9379%" y="517" width="0.0469%" height="15" fill="rgb(248,10,22)" fg:x="23194" fg:w="16"/><text x="68.1879%" y="527.50"></text></g><g><title>tsd_state_get (14 samples, 0.04%)</title><rect x="67.9438%" y="501" width="0.0410%" height="15" fill="rgb(248,46,39)" fg:x="23196" fg:w="14"/><text x="68.1938%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,587 samples, 4.65%)</title><rect x="63.4300%" y="613" width="4.6485%" height="15" fill="rgb(248,113,48)" fg:x="21655" fg:w="1587"/><text x="63.6800%" y="623.50">&lt;allo..</text></g><g><title>alloc::alloc::dealloc (1,587 samples, 4.65%)</title><rect x="63.4300%" y="597" width="4.6485%" height="15" fill="rgb(245,16,25)" fg:x="21655" fg:w="1587"/><text x="63.6800%" y="607.50">alloc..</text></g><g><title>__rust_dealloc (1,587 samples, 4.65%)</title><rect x="63.4300%" y="581" width="4.6485%" height="15" fill="rgb(249,152,16)" fg:x="21655" fg:w="1587"/><text x="63.6800%" y="591.50">__rus..</text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1,587 samples, 4.65%)</title><rect x="63.4300%" y="565" width="4.6485%" height="15" fill="rgb(250,16,1)" fg:x="21655" fg:w="1587"/><text x="63.6800%" y="575.50">&lt;tikv..</text></g><g><title>_rjem_sdallocx (32 samples, 0.09%)</title><rect x="67.9848%" y="549" width="0.0937%" height="15" fill="rgb(249,138,3)" fg:x="23210" fg:w="32"/><text x="68.2348%" y="559.50"></text></g><g><title>free_fastpath (30 samples, 0.09%)</title><rect x="67.9906%" y="533" width="0.0879%" height="15" fill="rgb(227,71,41)" fg:x="23212" fg:w="30"/><text x="68.2406%" y="543.50"></text></g><g><title>core::mem::drop (1,611 samples, 4.72%)</title><rect x="63.3626%" y="725" width="4.7188%" height="15" fill="rgb(209,184,23)" fg:x="21632" fg:w="1611"/><text x="63.6126%" y="735.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bytes::bytes_mut::Shared&gt;&gt; (1,611 samples, 4.72%)</title><rect x="63.3626%" y="709" width="4.7188%" height="15" fill="rgb(223,215,31)" fg:x="21632" fg:w="1611"/><text x="63.6126%" y="719.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::Shared&gt; (1,588 samples, 4.65%)</title><rect x="63.4300%" y="693" width="4.6514%" height="15" fill="rgb(210,146,28)" fg:x="21655" fg:w="1588"/><text x="63.6800%" y="703.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1,588 samples, 4.65%)</title><rect x="63.4300%" y="677" width="4.6514%" height="15" fill="rgb(209,183,41)" fg:x="21655" fg:w="1588"/><text x="63.6800%" y="687.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1,588 samples, 4.65%)</title><rect x="63.4300%" y="661" width="4.6514%" height="15" fill="rgb(209,224,45)" fg:x="21655" fg:w="1588"/><text x="63.6800%" y="671.50">core:..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,588 samples, 4.65%)</title><rect x="63.4300%" y="645" width="4.6514%" height="15" fill="rgb(224,209,51)" fg:x="21655" fg:w="1588"/><text x="63.6800%" y="655.50">&lt;allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (1,588 samples, 4.65%)</title><rect x="63.4300%" y="629" width="4.6514%" height="15" fill="rgb(223,17,39)" fg:x="21655" fg:w="1588"/><text x="63.6800%" y="639.50">alloc..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (96 samples, 0.28%)</title><rect x="68.0814%" y="725" width="0.2812%" height="15" fill="rgb(234,204,37)" fg:x="23243" fg:w="96"/><text x="68.3314%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (96 samples, 0.28%)</title><rect x="68.0814%" y="709" width="0.2812%" height="15" fill="rgb(236,120,5)" fg:x="23243" fg:w="96"/><text x="68.3314%" y="719.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (2,956 samples, 8.66%)</title><rect x="59.7159%" y="917" width="8.6585%" height="15" fill="rgb(248,97,27)" fg:x="20387" fg:w="2956"/><text x="59.9659%" y="927.50">epoxy_server..</text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (1,753 samples, 5.13%)</title><rect x="63.2396%" y="901" width="5.1347%" height="15" fill="rgb(240,66,17)" fg:x="21590" fg:w="1753"/><text x="63.4896%" y="911.50">tokio:..</text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (1,753 samples, 5.13%)</title><rect x="63.2396%" y="885" width="5.1347%" height="15" fill="rgb(210,79,3)" fg:x="21590" fg:w="1753"/><text x="63.4896%" y="895.50">&lt;tokio..</text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (1,753 samples, 5.13%)</title><rect x="63.2396%" y="869" width="5.1347%" height="15" fill="rgb(214,176,27)" fg:x="21590" fg:w="1753"/><text x="63.4896%" y="879.50">&lt;wisp_..</text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (1,753 samples, 5.13%)</title><rect x="63.2396%" y="853" width="5.1347%" height="15" fill="rgb(235,185,3)" fg:x="21590" fg:w="1753"/><text x="63.4896%" y="863.50">&lt;futur..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (1,750 samples, 5.13%)</title><rect x="63.2484%" y="837" width="5.1260%" height="15" fill="rgb(227,24,12)" fg:x="21593" fg:w="1750"/><text x="63.4984%" y="847.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1,750 samples, 5.13%)</title><rect x="63.2484%" y="821" width="5.1260%" height="15" fill="rgb(252,169,48)" fg:x="21593" fg:w="1750"/><text x="63.4984%" y="831.50">core::..</text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1,750 samples, 5.13%)</title><rect x="63.2484%" y="805" width="5.1260%" height="15" fill="rgb(212,65,1)" fg:x="21593" fg:w="1750"/><text x="63.4984%" y="815.50">&lt;bytes..</text></g><g><title>bytes::bytes_mut::shared_v_drop (1,715 samples, 5.02%)</title><rect x="63.3509%" y="789" width="5.0234%" height="15" fill="rgb(242,39,24)" fg:x="21628" fg:w="1715"/><text x="63.6009%" y="799.50">bytes:..</text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1,715 samples, 5.02%)</title><rect x="63.3509%" y="773" width="5.0234%" height="15" fill="rgb(249,32,23)" fg:x="21628" fg:w="1715"/><text x="63.6009%" y="783.50">&lt;core:..</text></g><g><title>bytes::bytes_mut::shared_v_drop::_{{closure}} (1,715 samples, 5.02%)</title><rect x="63.3509%" y="757" width="5.0234%" height="15" fill="rgb(251,195,23)" fg:x="21628" fg:w="1715"/><text x="63.6009%" y="767.50">bytes:..</text></g><g><title>bytes::bytes_mut::release_shared (1,715 samples, 5.02%)</title><rect x="63.3509%" y="741" width="5.0234%" height="15" fill="rgb(236,174,8)" fg:x="21628" fg:w="1715"/><text x="63.6009%" y="751.50">bytes:..</text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="68.3626%" y="725" width="0.0117%" height="15" fill="rgb(220,197,8)" fg:x="23339" fg:w="4"/><text x="68.6126%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="68.3626%" y="709" width="0.0117%" height="15" fill="rgb(240,108,37)" fg:x="23339" fg:w="4"/><text x="68.6126%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="68.5149%" y="901" width="0.0117%" height="15" fill="rgb(232,176,24)" fg:x="23391" fg:w="4"/><text x="68.7649%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="68.6350%" y="853" width="0.0117%" height="15" fill="rgb(243,35,29)" fg:x="23432" fg:w="4"/><text x="68.8850%" y="863.50"></text></g><g><title>[libc.so.6] (273 samples, 0.80%)</title><rect x="70.2665%" y="677" width="0.7996%" height="15" fill="rgb(210,37,18)" fg:x="23989" fg:w="273"/><text x="70.5165%" y="687.50"></text></g><g><title>recv (839 samples, 2.46%)</title><rect x="68.8635%" y="693" width="2.4575%" height="15" fill="rgb(224,184,40)" fg:x="23510" fg:w="839"/><text x="69.1135%" y="703.50">re..</text></g><g><title>[unknown] (87 samples, 0.25%)</title><rect x="71.0662%" y="677" width="0.2548%" height="15" fill="rgb(236,39,29)" fg:x="24262" fg:w="87"/><text x="71.3162%" y="687.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (848 samples, 2.48%)</title><rect x="68.8489%" y="821" width="2.4839%" height="15" fill="rgb(232,48,39)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="831.50">&lt;&amp;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (848 samples, 2.48%)</title><rect x="68.8489%" y="805" width="2.4839%" height="15" fill="rgb(236,34,42)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="815.50">mi..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (848 samples, 2.48%)</title><rect x="68.8489%" y="789" width="2.4839%" height="15" fill="rgb(243,106,37)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="799.50">mi..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read::_{{closure}} (848 samples, 2.48%)</title><rect x="68.8489%" y="773" width="2.4839%" height="15" fill="rgb(218,96,6)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="783.50">&lt;&amp;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (848 samples, 2.48%)</title><rect x="68.8489%" y="757" width="2.4839%" height="15" fill="rgb(235,130,12)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="767.50">&lt;&amp;..</text></g><g><title>std::sys_common::net::TcpStream::read (848 samples, 2.48%)</title><rect x="68.8489%" y="741" width="2.4839%" height="15" fill="rgb(231,95,0)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="751.50">st..</text></g><g><title>std::sys::pal::unix::net::Socket::read (848 samples, 2.48%)</title><rect x="68.8489%" y="725" width="2.4839%" height="15" fill="rgb(228,12,23)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="735.50">st..</text></g><g><title>std::sys::pal::unix::net::Socket::recv_with_flags (848 samples, 2.48%)</title><rect x="68.8489%" y="709" width="2.4839%" height="15" fill="rgb(216,12,1)" fg:x="23505" fg:w="848"/><text x="69.0989%" y="719.50">st..</text></g><g><title>std::sys::pal::unix::cvt (4 samples, 0.01%)</title><rect x="71.3210%" y="693" width="0.0117%" height="15" fill="rgb(219,59,3)" fg:x="24349" fg:w="4"/><text x="71.5710%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="71.3327%" y="821" width="0.0117%" height="15" fill="rgb(215,208,46)" fg:x="24353" fg:w="4"/><text x="71.5827%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (9 samples, 0.03%)</title><rect x="71.3445%" y="805" width="0.0264%" height="15" fill="rgb(254,224,29)" fg:x="24357" fg:w="9"/><text x="71.5945%" y="815.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::advance (11 samples, 0.03%)</title><rect x="71.3445%" y="821" width="0.0322%" height="15" fill="rgb(232,14,29)" fg:x="24357" fg:w="11"/><text x="71.5945%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::assume_init (7 samples, 0.02%)</title><rect x="71.3767%" y="821" width="0.0205%" height="15" fill="rgb(208,45,52)" fg:x="24368" fg:w="7"/><text x="71.6267%" y="831.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::unfilled_mut (4 samples, 0.01%)</title><rect x="71.3972%" y="821" width="0.0117%" height="15" fill="rgb(234,191,28)" fg:x="24375" fg:w="4"/><text x="71.6472%" y="831.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="71.4704%" y="741" width="0.0146%" height="15" fill="rgb(244,67,43)" fg:x="24400" fg:w="5"/><text x="71.7204%" y="751.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (5 samples, 0.01%)</title><rect x="71.4704%" y="725" width="0.0146%" height="15" fill="rgb(236,189,24)" fg:x="24400" fg:w="5"/><text x="71.7204%" y="735.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="71.4704%" y="709" width="0.0146%" height="15" fill="rgb(239,214,33)" fg:x="24400" fg:w="5"/><text x="71.7204%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="71.5144%" y="709" width="0.0146%" height="15" fill="rgb(226,176,41)" fg:x="24415" fg:w="5"/><text x="71.7644%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (6 samples, 0.02%)</title><rect x="71.5290%" y="709" width="0.0176%" height="15" fill="rgb(248,47,8)" fg:x="24420" fg:w="6"/><text x="71.7790%" y="719.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (5 samples, 0.01%)</title><rect x="71.5319%" y="693" width="0.0146%" height="15" fill="rgb(218,81,44)" fg:x="24421" fg:w="5"/><text x="71.7819%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (5 samples, 0.01%)</title><rect x="71.5319%" y="677" width="0.0146%" height="15" fill="rgb(213,98,6)" fg:x="24421" fg:w="5"/><text x="71.7819%" y="687.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (5 samples, 0.01%)</title><rect x="71.5319%" y="661" width="0.0146%" height="15" fill="rgb(222,85,22)" fg:x="24421" fg:w="5"/><text x="71.7819%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (5 samples, 0.01%)</title><rect x="71.5319%" y="645" width="0.0146%" height="15" fill="rgb(239,46,39)" fg:x="24421" fg:w="5"/><text x="71.7819%" y="655.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (28 samples, 0.08%)</title><rect x="71.4704%" y="789" width="0.0820%" height="15" fill="rgb(237,12,29)" fg:x="24400" fg:w="28"/><text x="71.7204%" y="799.50"></text></g><g><title>tokio::runtime::context::budget (28 samples, 0.08%)</title><rect x="71.4704%" y="773" width="0.0820%" height="15" fill="rgb(214,77,8)" fg:x="24400" fg:w="28"/><text x="71.7204%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.08%)</title><rect x="71.4704%" y="757" width="0.0820%" height="15" fill="rgb(217,168,37)" fg:x="24400" fg:w="28"/><text x="71.7204%" y="767.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (23 samples, 0.07%)</title><rect x="71.4851%" y="741" width="0.0674%" height="15" fill="rgb(221,217,23)" fg:x="24405" fg:w="23"/><text x="71.7351%" y="751.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (23 samples, 0.07%)</title><rect x="71.4851%" y="725" width="0.0674%" height="15" fill="rgb(243,229,36)" fg:x="24405" fg:w="23"/><text x="71.7351%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (49 samples, 0.14%)</title><rect x="71.5729%" y="773" width="0.1435%" height="15" fill="rgb(251,163,40)" fg:x="24435" fg:w="49"/><text x="71.8229%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (49 samples, 0.14%)</title><rect x="71.5729%" y="757" width="0.1435%" height="15" fill="rgb(237,222,12)" fg:x="24435" fg:w="49"/><text x="71.8229%" y="767.50"></text></g><g><title>tokio::runtime::io::driver::Direction::mask (6 samples, 0.02%)</title><rect x="71.7165%" y="773" width="0.0176%" height="15" fill="rgb(248,132,6)" fg:x="24484" fg:w="6"/><text x="71.9665%" y="783.50"></text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedReadHalf as tokio::io::async_read::AsyncRead&gt;::poll_read (1,067 samples, 3.13%)</title><rect x="68.6145%" y="869" width="3.1254%" height="15" fill="rgb(227,167,50)" fg:x="23425" fg:w="1067"/><text x="68.8645%" y="879.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (1,056 samples, 3.09%)</title><rect x="68.6467%" y="853" width="3.0931%" height="15" fill="rgb(242,84,37)" fg:x="23436" fg:w="1056"/><text x="68.8967%" y="863.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (1,005 samples, 2.94%)</title><rect x="68.7961%" y="837" width="2.9438%" height="15" fill="rgb(212,4,50)" fg:x="23487" fg:w="1005"/><text x="69.0461%" y="847.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_read_ready (113 samples, 0.33%)</title><rect x="71.4089%" y="821" width="0.3310%" height="15" fill="rgb(230,228,32)" fg:x="24379" fg:w="113"/><text x="71.6589%" y="831.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (103 samples, 0.30%)</title><rect x="71.4382%" y="805" width="0.3017%" height="15" fill="rgb(248,217,23)" fg:x="24389" fg:w="103"/><text x="71.6882%" y="815.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (64 samples, 0.19%)</title><rect x="71.5524%" y="789" width="0.1875%" height="15" fill="rgb(238,197,32)" fg:x="24428" fg:w="64"/><text x="71.8024%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.02%)</title><rect x="71.7399%" y="869" width="0.0176%" height="15" fill="rgb(236,106,1)" fg:x="24492" fg:w="6"/><text x="71.9899%" y="879.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.02%)</title><rect x="71.7399%" y="853" width="0.0176%" height="15" fill="rgb(219,228,13)" fg:x="24492" fg:w="6"/><text x="71.9899%" y="863.50"></text></g><g><title>tokio::io::read_buf::ReadBuf::filled (23 samples, 0.07%)</title><rect x="71.7575%" y="869" width="0.0674%" height="15" fill="rgb(238,30,35)" fg:x="24498" fg:w="23"/><text x="72.0075%" y="879.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="71.8102%" y="853" width="0.0146%" height="15" fill="rgb(236,70,23)" fg:x="24516" fg:w="5"/><text x="72.0602%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="71.8102%" y="837" width="0.0146%" height="15" fill="rgb(249,104,48)" fg:x="24516" fg:w="5"/><text x="72.0602%" y="847.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="71.8102%" y="821" width="0.0146%" height="15" fill="rgb(254,117,50)" fg:x="24516" fg:w="5"/><text x="72.0602%" y="831.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (1,133 samples, 3.32%)</title><rect x="68.5267%" y="885" width="3.3187%" height="15" fill="rgb(223,152,4)" fg:x="23395" fg:w="1133"/><text x="68.7767%" y="895.50">&lt;to..</text></g><g><title>tokio::io::read_buf::ReadBuf::new (7 samples, 0.02%)</title><rect x="71.8248%" y="869" width="0.0205%" height="15" fill="rgb(245,6,2)" fg:x="24521" fg:w="7"/><text x="72.0748%" y="879.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (1,139 samples, 3.34%)</title><rect x="68.5267%" y="901" width="3.3363%" height="15" fill="rgb(249,150,24)" fg:x="23395" fg:w="1139"/><text x="68.7767%" y="911.50">&lt;to..</text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.02%)</title><rect x="71.8453%" y="885" width="0.0176%" height="15" fill="rgb(228,185,42)" fg:x="24528" fg:w="6"/><text x="72.0953%" y="895.50"></text></g><g><title>core::mem::replace (6 samples, 0.02%)</title><rect x="71.8453%" y="869" width="0.0176%" height="15" fill="rgb(226,39,33)" fg:x="24528" fg:w="6"/><text x="72.0953%" y="879.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="71.8483%" y="853" width="0.0146%" height="15" fill="rgb(221,166,19)" fg:x="24529" fg:w="5"/><text x="72.0983%" y="863.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (39 samples, 0.11%)</title><rect x="71.8658%" y="901" width="0.1142%" height="15" fill="rgb(209,109,2)" fg:x="24535" fg:w="39"/><text x="72.1158%" y="911.50"></text></g><g><title>&lt;tokio::io::util::buf_reader::BufReader&lt;R&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (39 samples, 0.11%)</title><rect x="71.8658%" y="885" width="0.1142%" height="15" fill="rgb(252,216,26)" fg:x="24535" fg:w="39"/><text x="72.1158%" y="895.50"></text></g><g><title>core::cmp::min (9 samples, 0.03%)</title><rect x="71.9537%" y="869" width="0.0264%" height="15" fill="rgb(227,173,36)" fg:x="24565" fg:w="9"/><text x="72.2037%" y="879.50"></text></g><g><title>core::cmp::Ord::min (9 samples, 0.03%)</title><rect x="71.9537%" y="853" width="0.0264%" height="15" fill="rgb(209,90,7)" fg:x="24565" fg:w="9"/><text x="72.2037%" y="863.50"></text></g><g><title>core::cmp::min_by (9 samples, 0.03%)</title><rect x="71.9537%" y="837" width="0.0264%" height="15" fill="rgb(250,194,11)" fg:x="24565" fg:w="9"/><text x="72.2037%" y="847.50"></text></g><g><title>&lt;&amp;T as core::convert::AsRef&lt;U&gt;&gt;::as_ref (51 samples, 0.15%)</title><rect x="72.2935%" y="885" width="0.1494%" height="15" fill="rgb(220,72,50)" fg:x="24681" fg:w="51"/><text x="72.5435%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="72.4429%" y="885" width="0.0117%" height="15" fill="rgb(222,106,48)" fg:x="24732" fg:w="4"/><text x="72.6929%" y="895.50"></text></g><g><title>bytes::bytes_mut::BytesMut::new (4 samples, 0.01%)</title><rect x="72.8588%" y="869" width="0.0117%" height="15" fill="rgb(216,220,45)" fg:x="24874" fg:w="4"/><text x="73.1088%" y="879.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (4 samples, 0.01%)</title><rect x="72.8588%" y="853" width="0.0117%" height="15" fill="rgb(234,112,18)" fg:x="24874" fg:w="4"/><text x="73.1088%" y="863.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (4 samples, 0.01%)</title><rect x="72.8588%" y="837" width="0.0117%" height="15" fill="rgb(206,179,9)" fg:x="24874" fg:w="4"/><text x="73.1088%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::stream::MuxStreamWrite::write_payload_internal::{{closure}}&gt; (9 samples, 0.03%)</title><rect x="72.8705%" y="869" width="0.0264%" height="15" fill="rgb(215,115,40)" fg:x="24878" fg:w="9"/><text x="73.1205%" y="879.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (13 samples, 0.04%)</title><rect x="73.1195%" y="805" width="0.0381%" height="15" fill="rgb(222,69,34)" fg:x="24963" fg:w="13"/><text x="73.3695%" y="815.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (25 samples, 0.07%)</title><rect x="73.1605%" y="789" width="0.0732%" height="15" fill="rgb(209,161,10)" fg:x="24977" fg:w="25"/><text x="73.4105%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (6 samples, 0.02%)</title><rect x="73.2337%" y="789" width="0.0176%" height="15" fill="rgb(217,6,38)" fg:x="25002" fg:w="6"/><text x="73.4837%" y="799.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (300 samples, 0.88%)</title><rect x="73.1576%" y="805" width="0.8787%" height="15" fill="rgb(229,229,48)" fg:x="24976" fg:w="300"/><text x="73.4076%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (265 samples, 0.78%)</title><rect x="73.2601%" y="789" width="0.7762%" height="15" fill="rgb(225,21,28)" fg:x="25011" fg:w="265"/><text x="73.5101%" y="799.50"></text></g><g><title>[libc.so.6] (265 samples, 0.78%)</title><rect x="73.2601%" y="773" width="0.7762%" height="15" fill="rgb(206,33,13)" fg:x="25011" fg:w="265"/><text x="73.5101%" y="783.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (334 samples, 0.98%)</title><rect x="73.0814%" y="821" width="0.9783%" height="15" fill="rgb(242,178,17)" fg:x="24950" fg:w="334"/><text x="73.3314%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::Payload&gt; (8 samples, 0.02%)</title><rect x="74.0363%" y="805" width="0.0234%" height="15" fill="rgb(220,162,5)" fg:x="25276" fg:w="8"/><text x="74.2863%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (6 samples, 0.02%)</title><rect x="74.0422%" y="789" width="0.0176%" height="15" fill="rgb(210,33,43)" fg:x="25278" fg:w="6"/><text x="74.2922%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="74.0422%" y="773" width="0.0176%" height="15" fill="rgb(216,116,54)" fg:x="25278" fg:w="6"/><text x="74.2922%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (11 samples, 0.03%)</title><rect x="74.0627%" y="773" width="0.0322%" height="15" fill="rgb(249,92,24)" fg:x="25285" fg:w="11"/><text x="74.3127%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::capacity (6 samples, 0.02%)</title><rect x="74.0773%" y="757" width="0.0176%" height="15" fill="rgb(231,189,14)" fg:x="25290" fg:w="6"/><text x="74.3273%" y="767.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u32_le (17 samples, 0.05%)</title><rect x="74.0598%" y="821" width="0.0498%" height="15" fill="rgb(230,8,41)" fg:x="25284" fg:w="17"/><text x="74.3098%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (17 samples, 0.05%)</title><rect x="74.0598%" y="805" width="0.0498%" height="15" fill="rgb(249,7,27)" fg:x="25284" fg:w="17"/><text x="74.3098%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (17 samples, 0.05%)</title><rect x="74.0598%" y="789" width="0.0498%" height="15" fill="rgb(232,86,5)" fg:x="25284" fg:w="17"/><text x="74.3098%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::advance_mut (5 samples, 0.01%)</title><rect x="74.1095%" y="773" width="0.0146%" height="15" fill="rgb(224,175,18)" fg:x="25301" fg:w="5"/><text x="74.3595%" y="783.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (4 samples, 0.01%)</title><rect x="74.1242%" y="773" width="0.0117%" height="15" fill="rgb(220,129,12)" fg:x="25306" fg:w="4"/><text x="74.3742%" y="783.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (415 samples, 1.22%)</title><rect x="73.0785%" y="837" width="1.2156%" height="15" fill="rgb(210,19,36)" fg:x="24949" fg:w="415"/><text x="73.3285%" y="847.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (63 samples, 0.18%)</title><rect x="74.1095%" y="821" width="0.1845%" height="15" fill="rgb(219,96,14)" fg:x="25301" fg:w="63"/><text x="74.3595%" y="831.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (63 samples, 0.18%)</title><rect x="74.1095%" y="805" width="0.1845%" height="15" fill="rgb(249,106,1)" fg:x="25301" fg:w="63"/><text x="74.3595%" y="815.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (63 samples, 0.18%)</title><rect x="74.1095%" y="789" width="0.1845%" height="15" fill="rgb(249,155,20)" fg:x="25301" fg:w="63"/><text x="74.3595%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.16%)</title><rect x="74.1359%" y="773" width="0.1582%" height="15" fill="rgb(244,168,9)" fg:x="25310" fg:w="54"/><text x="74.3859%" y="783.50"></text></g><g><title>cache_bin_alloc_easy (101 samples, 0.30%)</title><rect x="75.1406%" y="629" width="0.2958%" height="15" fill="rgb(216,23,50)" fg:x="25653" fg:w="101"/><text x="75.3906%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (101 samples, 0.30%)</title><rect x="75.1406%" y="613" width="0.2958%" height="15" fill="rgb(224,219,20)" fg:x="25653" fg:w="101"/><text x="75.3906%" y="623.50"></text></g><g><title>fastpath_success_finish (4 samples, 0.01%)</title><rect x="75.4364%" y="629" width="0.0117%" height="15" fill="rgb(222,156,15)" fg:x="25754" fg:w="4"/><text x="75.6864%" y="639.50"></text></g><g><title>sz_index2size_lookup_impl (35 samples, 0.10%)</title><rect x="75.4482%" y="613" width="0.1025%" height="15" fill="rgb(231,97,17)" fg:x="25758" fg:w="35"/><text x="75.6982%" y="623.50"></text></g><g><title>sz_size2index_usize_fastpath (40 samples, 0.12%)</title><rect x="75.4482%" y="629" width="0.1172%" height="15" fill="rgb(218,70,48)" fg:x="25758" fg:w="40"/><text x="75.6982%" y="639.50"></text></g><g><title>sz_size2index_lookup_impl (5 samples, 0.01%)</title><rect x="75.5507%" y="613" width="0.0146%" height="15" fill="rgb(212,196,52)" fg:x="25793" fg:w="5"/><text x="75.8007%" y="623.50"></text></g><g><title>__rust_alloc (434 samples, 1.27%)</title><rect x="74.2970%" y="693" width="1.2712%" height="15" fill="rgb(243,203,18)" fg:x="25365" fg:w="434"/><text x="74.5470%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (434 samples, 1.27%)</title><rect x="74.2970%" y="677" width="1.2712%" height="15" fill="rgb(252,125,41)" fg:x="25365" fg:w="434"/><text x="74.5470%" y="687.50"></text></g><g><title>_rjem_malloc (430 samples, 1.26%)</title><rect x="74.3087%" y="661" width="1.2595%" height="15" fill="rgb(223,180,33)" fg:x="25369" fg:w="430"/><text x="74.5587%" y="671.50"></text></g><g><title>imalloc_fastpath (430 samples, 1.26%)</title><rect x="74.3087%" y="645" width="1.2595%" height="15" fill="rgb(254,159,46)" fg:x="25369" fg:w="430"/><text x="74.5587%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (439 samples, 1.29%)</title><rect x="74.2970%" y="741" width="1.2859%" height="15" fill="rgb(254,38,10)" fg:x="25365" fg:w="439"/><text x="74.5470%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (439 samples, 1.29%)</title><rect x="74.2970%" y="725" width="1.2859%" height="15" fill="rgb(208,217,32)" fg:x="25365" fg:w="439"/><text x="74.5470%" y="735.50"></text></g><g><title>alloc::alloc::alloc (439 samples, 1.29%)</title><rect x="74.2970%" y="709" width="1.2859%" height="15" fill="rgb(221,120,13)" fg:x="25365" fg:w="439"/><text x="74.5470%" y="719.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.01%)</title><rect x="75.5682%" y="693" width="0.0146%" height="15" fill="rgb(246,54,52)" fg:x="25799" fg:w="5"/><text x="75.8182%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (443 samples, 1.30%)</title><rect x="74.2941%" y="821" width="1.2976%" height="15" fill="rgb(242,34,25)" fg:x="25364" fg:w="443"/><text x="74.5441%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (443 samples, 1.30%)</title><rect x="74.2941%" y="805" width="1.2976%" height="15" fill="rgb(247,209,9)" fg:x="25364" fg:w="443"/><text x="74.5441%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (443 samples, 1.30%)</title><rect x="74.2941%" y="789" width="1.2976%" height="15" fill="rgb(228,71,26)" fg:x="25364" fg:w="443"/><text x="74.5441%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (443 samples, 1.30%)</title><rect x="74.2941%" y="773" width="1.2976%" height="15" fill="rgb(222,145,49)" fg:x="25364" fg:w="443"/><text x="74.5441%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (443 samples, 1.30%)</title><rect x="74.2941%" y="757" width="1.2976%" height="15" fill="rgb(218,121,17)" fg:x="25364" fg:w="443"/><text x="74.5441%" y="767.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (455 samples, 1.33%)</title><rect x="74.2941%" y="837" width="1.3327%" height="15" fill="rgb(244,50,7)" fg:x="25364" fg:w="455"/><text x="74.5441%" y="847.50"></text></g><g><title>bytes::bytes_mut::BytesMut::from_vec (12 samples, 0.04%)</title><rect x="75.5917%" y="821" width="0.0351%" height="15" fill="rgb(246,229,37)" fg:x="25807" fg:w="12"/><text x="75.8417%" y="831.50"></text></g><g><title>bytes::bytes_mut::original_capacity_to_repr (5 samples, 0.01%)</title><rect x="75.6122%" y="805" width="0.0146%" height="15" fill="rgb(225,18,5)" fg:x="25814" fg:w="5"/><text x="75.8622%" y="815.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (985 samples, 2.89%)</title><rect x="72.8998%" y="853" width="2.8852%" height="15" fill="rgb(213,204,8)" fg:x="24888" fg:w="985"/><text x="73.1498%" y="863.50">wi..</text></g><g><title>wisp_mux::packet::PacketType::get_packet_size (54 samples, 0.16%)</title><rect x="75.6268%" y="837" width="0.1582%" height="15" fill="rgb(238,103,6)" fg:x="25819" fg:w="54"/><text x="75.8768%" y="847.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="75.7674%" y="821" width="0.0176%" height="15" fill="rgb(222,25,35)" fg:x="25867" fg:w="6"/><text x="76.0174%" y="831.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for wisp_mux::ws::Frame&gt;::from (996 samples, 2.92%)</title><rect x="72.8969%" y="869" width="2.9174%" height="15" fill="rgb(213,203,35)" fg:x="24887" fg:w="996"/><text x="73.1469%" y="879.50">wi..</text></g><g><title>wisp_mux::ws::Frame::binary (10 samples, 0.03%)</title><rect x="75.7850%" y="853" width="0.0293%" height="15" fill="rgb(221,79,53)" fg:x="25873" fg:w="10"/><text x="76.0350%" y="863.50"></text></g><g><title>wisp_mux::packet::Packet::new_data (9 samples, 0.03%)</title><rect x="75.8143%" y="869" width="0.0264%" height="15" fill="rgb(243,200,35)" fg:x="25883" fg:w="9"/><text x="76.0643%" y="879.50"></text></g><g><title>&lt;wisp_mux::Role as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="76.7194%" y="853" width="0.0264%" height="15" fill="rgb(248,60,25)" fg:x="26192" fg:w="9"/><text x="76.9694%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (13 samples, 0.04%)</title><rect x="76.7458%" y="853" width="0.0381%" height="15" fill="rgb(227,53,46)" fg:x="26201" fg:w="13"/><text x="76.9958%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (69 samples, 0.20%)</title><rect x="76.7838%" y="853" width="0.2021%" height="15" fill="rgb(216,120,32)" fg:x="26214" fg:w="69"/><text x="77.0338%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (68 samples, 0.20%)</title><rect x="76.7868%" y="837" width="0.1992%" height="15" fill="rgb(220,134,1)" fg:x="26215" fg:w="68"/><text x="77.0368%" y="847.50"></text></g><g><title>_rjem_je_eset_fit (6 samples, 0.02%)</title><rect x="77.7563%" y="421" width="0.0176%" height="15" fill="rgb(237,168,5)" fg:x="26546" fg:w="6"/><text x="78.0063%" y="431.50"></text></g><g><title>eset_first_fit (6 samples, 0.02%)</title><rect x="77.7563%" y="405" width="0.0176%" height="15" fill="rgb(231,100,33)" fg:x="26546" fg:w="6"/><text x="78.0063%" y="415.50"></text></g><g><title>extent_recycle_extract (10 samples, 0.03%)</title><rect x="77.7534%" y="437" width="0.0293%" height="15" fill="rgb(236,177,47)" fg:x="26545" fg:w="10"/><text x="78.0034%" y="447.50"></text></g><g><title>extent_recycle_split (10 samples, 0.03%)</title><rect x="77.7827%" y="437" width="0.0293%" height="15" fill="rgb(235,7,49)" fg:x="26555" fg:w="10"/><text x="78.0327%" y="447.50"></text></g><g><title>extent_split_interior (8 samples, 0.02%)</title><rect x="77.7885%" y="421" width="0.0234%" height="15" fill="rgb(232,119,22)" fg:x="26557" fg:w="8"/><text x="78.0385%" y="431.50"></text></g><g><title>extent_split_impl (8 samples, 0.02%)</title><rect x="77.7885%" y="405" width="0.0234%" height="15" fill="rgb(254,73,53)" fg:x="26557" fg:w="8"/><text x="78.0385%" y="415.50"></text></g><g><title>_rjem_je_pa_alloc (26 samples, 0.08%)</title><rect x="77.7417%" y="533" width="0.0762%" height="15" fill="rgb(251,35,20)" fg:x="26541" fg:w="26"/><text x="77.9917%" y="543.50"></text></g><g><title>pai_alloc (22 samples, 0.06%)</title><rect x="77.7534%" y="517" width="0.0644%" height="15" fill="rgb(241,119,20)" fg:x="26545" fg:w="22"/><text x="78.0034%" y="527.50"></text></g><g><title>pac_alloc_impl (22 samples, 0.06%)</title><rect x="77.7534%" y="501" width="0.0644%" height="15" fill="rgb(207,102,14)" fg:x="26545" fg:w="22"/><text x="78.0034%" y="511.50"></text></g><g><title>pac_alloc_real (22 samples, 0.06%)</title><rect x="77.7534%" y="485" width="0.0644%" height="15" fill="rgb(248,201,50)" fg:x="26545" fg:w="22"/><text x="78.0034%" y="495.50"></text></g><g><title>_rjem_je_ecache_alloc (22 samples, 0.06%)</title><rect x="77.7534%" y="469" width="0.0644%" height="15" fill="rgb(222,185,44)" fg:x="26545" fg:w="22"/><text x="78.0034%" y="479.50"></text></g><g><title>extent_recycle (22 samples, 0.06%)</title><rect x="77.7534%" y="453" width="0.0644%" height="15" fill="rgb(218,107,18)" fg:x="26545" fg:w="22"/><text x="78.0034%" y="463.50"></text></g><g><title>arena_slab_alloc (29 samples, 0.08%)</title><rect x="77.7358%" y="549" width="0.0849%" height="15" fill="rgb(237,177,39)" fg:x="26539" fg:w="29"/><text x="77.9858%" y="559.50"></text></g><g><title>malloc_mutex_lock (6 samples, 0.02%)</title><rect x="77.8237%" y="549" width="0.0176%" height="15" fill="rgb(246,69,6)" fg:x="26569" fg:w="6"/><text x="78.0737%" y="559.50"></text></g><g><title>malloc_mutex_trylock_final (6 samples, 0.02%)</title><rect x="77.8237%" y="533" width="0.0176%" height="15" fill="rgb(234,208,37)" fg:x="26569" fg:w="6"/><text x="78.0737%" y="543.50"></text></g><g><title>pthread_mutex_trylock (6 samples, 0.02%)</title><rect x="77.8237%" y="517" width="0.0176%" height="15" fill="rgb(225,4,6)" fg:x="26569" fg:w="6"/><text x="78.0737%" y="527.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (41 samples, 0.12%)</title><rect x="77.7270%" y="581" width="0.1201%" height="15" fill="rgb(233,45,0)" fg:x="26536" fg:w="41"/><text x="77.9770%" y="591.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (41 samples, 0.12%)</title><rect x="77.7270%" y="565" width="0.1201%" height="15" fill="rgb(226,136,5)" fg:x="26536" fg:w="41"/><text x="77.9770%" y="575.50"></text></g><g><title>imalloc_no_sample (45 samples, 0.13%)</title><rect x="77.7241%" y="645" width="0.1318%" height="15" fill="rgb(211,91,47)" fg:x="26535" fg:w="45"/><text x="77.9741%" y="655.50"></text></g><g><title>iallocztm (45 samples, 0.13%)</title><rect x="77.7241%" y="629" width="0.1318%" height="15" fill="rgb(242,88,51)" fg:x="26535" fg:w="45"/><text x="77.9741%" y="639.50"></text></g><g><title>arena_malloc (45 samples, 0.13%)</title><rect x="77.7241%" y="613" width="0.1318%" height="15" fill="rgb(230,91,28)" fg:x="26535" fg:w="45"/><text x="77.9741%" y="623.50"></text></g><g><title>tcache_alloc_small (45 samples, 0.13%)</title><rect x="77.7241%" y="597" width="0.1318%" height="15" fill="rgb(254,186,29)" fg:x="26535" fg:w="45"/><text x="77.9741%" y="607.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (6 samples, 0.02%)</title><rect x="77.8793%" y="597" width="0.0176%" height="15" fill="rgb(238,6,4)" fg:x="26588" fg:w="6"/><text x="78.1293%" y="607.50"></text></g><g><title>tcache_event (6 samples, 0.02%)</title><rect x="77.8793%" y="581" width="0.0176%" height="15" fill="rgb(221,151,16)" fg:x="26588" fg:w="6"/><text x="78.1293%" y="591.50"></text></g><g><title>tcache_gc_small (4 samples, 0.01%)</title><rect x="77.8852%" y="565" width="0.0117%" height="15" fill="rgb(251,143,52)" fg:x="26590" fg:w="4"/><text x="78.1352%" y="575.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (4 samples, 0.01%)</title><rect x="77.8852%" y="549" width="0.0117%" height="15" fill="rgb(206,90,15)" fg:x="26590" fg:w="4"/><text x="78.1352%" y="559.50"></text></g><g><title>tcache_bin_flush_bottom (4 samples, 0.01%)</title><rect x="77.8852%" y="533" width="0.0117%" height="15" fill="rgb(218,35,8)" fg:x="26590" fg:w="4"/><text x="78.1352%" y="543.50"></text></g><g><title>tcache_bin_flush_impl (4 samples, 0.01%)</title><rect x="77.8852%" y="517" width="0.0117%" height="15" fill="rgb(239,215,6)" fg:x="26590" fg:w="4"/><text x="78.1352%" y="527.50"></text></g><g><title>imalloc_body (62 samples, 0.18%)</title><rect x="77.7241%" y="661" width="0.1816%" height="15" fill="rgb(245,116,39)" fg:x="26535" fg:w="62"/><text x="77.9741%" y="671.50"></text></g><g><title>thread_alloc_event (17 samples, 0.05%)</title><rect x="77.8559%" y="645" width="0.0498%" height="15" fill="rgb(242,65,28)" fg:x="26580" fg:w="17"/><text x="78.1059%" y="655.50"></text></g><g><title>te_event_advance (17 samples, 0.05%)</title><rect x="77.8559%" y="629" width="0.0498%" height="15" fill="rgb(252,132,53)" fg:x="26580" fg:w="17"/><text x="78.1059%" y="639.50"></text></g><g><title>_rjem_je_te_event_trigger (16 samples, 0.05%)</title><rect x="77.8588%" y="613" width="0.0469%" height="15" fill="rgb(224,159,50)" fg:x="26581" fg:w="16"/><text x="78.1088%" y="623.50"></text></g><g><title>_rjem_je_malloc_default (64 samples, 0.19%)</title><rect x="77.7211%" y="693" width="0.1875%" height="15" fill="rgb(224,93,4)" fg:x="26534" fg:w="64"/><text x="77.9711%" y="703.50"></text></g><g><title>imalloc (63 samples, 0.18%)</title><rect x="77.7241%" y="677" width="0.1845%" height="15" fill="rgb(208,81,34)" fg:x="26535" fg:w="63"/><text x="77.9741%" y="687.50"></text></g><g><title>cache_bin_alloc_easy (58 samples, 0.17%)</title><rect x="77.9525%" y="661" width="0.1699%" height="15" fill="rgb(233,92,54)" fg:x="26613" fg:w="58"/><text x="78.2025%" y="671.50"></text></g><g><title>cache_bin_alloc_impl (58 samples, 0.17%)</title><rect x="77.9525%" y="645" width="0.1699%" height="15" fill="rgb(237,21,14)" fg:x="26613" fg:w="58"/><text x="78.2025%" y="655.50"></text></g><g><title>fastpath_success_finish (4 samples, 0.01%)</title><rect x="78.1224%" y="661" width="0.0117%" height="15" fill="rgb(249,128,51)" fg:x="26671" fg:w="4"/><text x="78.3724%" y="671.50"></text></g><g><title>sz_index2size_lookup_impl (10 samples, 0.03%)</title><rect x="78.1342%" y="645" width="0.0293%" height="15" fill="rgb(223,129,24)" fg:x="26675" fg:w="10"/><text x="78.3842%" y="655.50"></text></g><g><title>sz_size2index_usize_fastpath (13 samples, 0.04%)</title><rect x="78.1342%" y="661" width="0.0381%" height="15" fill="rgb(231,168,25)" fg:x="26675" fg:w="13"/><text x="78.3842%" y="671.50"></text></g><g><title>__rust_alloc (158 samples, 0.46%)</title><rect x="77.7124%" y="725" width="0.4628%" height="15" fill="rgb(224,39,20)" fg:x="26531" fg:w="158"/><text x="77.9624%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (158 samples, 0.46%)</title><rect x="77.7124%" y="709" width="0.4628%" height="15" fill="rgb(225,152,53)" fg:x="26531" fg:w="158"/><text x="77.9624%" y="719.50"></text></g><g><title>_rjem_malloc (91 samples, 0.27%)</title><rect x="77.9086%" y="693" width="0.2665%" height="15" fill="rgb(252,17,24)" fg:x="26598" fg:w="91"/><text x="78.1586%" y="703.50"></text></g><g><title>imalloc_fastpath (91 samples, 0.27%)</title><rect x="77.9086%" y="677" width="0.2665%" height="15" fill="rgb(250,114,30)" fg:x="26598" fg:w="91"/><text x="78.1586%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (189 samples, 0.55%)</title><rect x="77.6245%" y="837" width="0.5536%" height="15" fill="rgb(229,5,4)" fg:x="26501" fg:w="189"/><text x="77.8745%" y="847.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (189 samples, 0.55%)</title><rect x="77.6245%" y="821" width="0.5536%" height="15" fill="rgb(225,176,49)" fg:x="26501" fg:w="189"/><text x="77.8745%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (189 samples, 0.55%)</title><rect x="77.6245%" y="805" width="0.5536%" height="15" fill="rgb(224,221,49)" fg:x="26501" fg:w="189"/><text x="77.8745%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (160 samples, 0.47%)</title><rect x="77.7094%" y="789" width="0.4687%" height="15" fill="rgb(253,169,27)" fg:x="26530" fg:w="160"/><text x="77.9594%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (159 samples, 0.47%)</title><rect x="77.7124%" y="773" width="0.4657%" height="15" fill="rgb(211,206,16)" fg:x="26531" fg:w="159"/><text x="77.9624%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (159 samples, 0.47%)</title><rect x="77.7124%" y="757" width="0.4657%" height="15" fill="rgb(244,87,35)" fg:x="26531" fg:w="159"/><text x="77.9624%" y="767.50"></text></g><g><title>alloc::alloc::alloc (159 samples, 0.47%)</title><rect x="77.7124%" y="741" width="0.4657%" height="15" fill="rgb(246,28,10)" fg:x="26531" fg:w="159"/><text x="77.9624%" y="751.50"></text></g><g><title>tcache_gc_small (6 samples, 0.02%)</title><rect x="78.6409%" y="533" width="0.0176%" height="15" fill="rgb(229,12,44)" fg:x="26848" fg:w="6"/><text x="78.8909%" y="543.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.02%)</title><rect x="78.6409%" y="517" width="0.0176%" height="15" fill="rgb(210,145,37)" fg:x="26848" fg:w="6"/><text x="78.8909%" y="527.50"></text></g><g><title>tcache_bin_flush_bottom (6 samples, 0.02%)</title><rect x="78.6409%" y="501" width="0.0176%" height="15" fill="rgb(227,112,52)" fg:x="26848" fg:w="6"/><text x="78.8909%" y="511.50"></text></g><g><title>tcache_bin_flush_impl (5 samples, 0.01%)</title><rect x="78.6438%" y="485" width="0.0146%" height="15" fill="rgb(238,155,34)" fg:x="26849" fg:w="5"/><text x="78.8938%" y="495.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (11 samples, 0.03%)</title><rect x="78.6321%" y="565" width="0.0322%" height="15" fill="rgb(239,226,36)" fg:x="26845" fg:w="11"/><text x="78.8821%" y="575.50"></text></g><g><title>tcache_event (11 samples, 0.03%)</title><rect x="78.6321%" y="549" width="0.0322%" height="15" fill="rgb(230,16,23)" fg:x="26845" fg:w="11"/><text x="78.8821%" y="559.50"></text></g><g><title>_rjem_je_malloc_default (16 samples, 0.05%)</title><rect x="78.6204%" y="661" width="0.0469%" height="15" fill="rgb(236,171,36)" fg:x="26841" fg:w="16"/><text x="78.8704%" y="671.50"></text></g><g><title>imalloc (16 samples, 0.05%)</title><rect x="78.6204%" y="645" width="0.0469%" height="15" fill="rgb(221,22,14)" fg:x="26841" fg:w="16"/><text x="78.8704%" y="655.50"></text></g><g><title>imalloc_body (16 samples, 0.05%)</title><rect x="78.6204%" y="629" width="0.0469%" height="15" fill="rgb(242,43,11)" fg:x="26841" fg:w="16"/><text x="78.8704%" y="639.50"></text></g><g><title>thread_alloc_event (15 samples, 0.04%)</title><rect x="78.6233%" y="613" width="0.0439%" height="15" fill="rgb(232,69,23)" fg:x="26842" fg:w="15"/><text x="78.8733%" y="623.50"></text></g><g><title>te_event_advance (15 samples, 0.04%)</title><rect x="78.6233%" y="597" width="0.0439%" height="15" fill="rgb(216,180,54)" fg:x="26842" fg:w="15"/><text x="78.8733%" y="607.50"></text></g><g><title>_rjem_je_te_event_trigger (15 samples, 0.04%)</title><rect x="78.6233%" y="581" width="0.0439%" height="15" fill="rgb(216,5,24)" fg:x="26842" fg:w="15"/><text x="78.8733%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (42 samples, 0.12%)</title><rect x="78.7434%" y="629" width="0.1230%" height="15" fill="rgb(225,89,9)" fg:x="26883" fg:w="42"/><text x="78.9934%" y="639.50"></text></g><g><title>cache_bin_alloc_impl (42 samples, 0.12%)</title><rect x="78.7434%" y="613" width="0.1230%" height="15" fill="rgb(243,75,33)" fg:x="26883" fg:w="42"/><text x="78.9934%" y="623.50"></text></g><g><title>fastpath_success_finish (6 samples, 0.02%)</title><rect x="78.8664%" y="629" width="0.0176%" height="15" fill="rgb(247,141,45)" fg:x="26925" fg:w="6"/><text x="79.1164%" y="639.50"></text></g><g><title>__rust_alloc (94 samples, 0.28%)</title><rect x="78.6204%" y="693" width="0.2753%" height="15" fill="rgb(232,177,36)" fg:x="26841" fg:w="94"/><text x="78.8704%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (94 samples, 0.28%)</title><rect x="78.6204%" y="677" width="0.2753%" height="15" fill="rgb(219,125,36)" fg:x="26841" fg:w="94"/><text x="78.8704%" y="687.50"></text></g><g><title>_rjem_malloc (78 samples, 0.23%)</title><rect x="78.6673%" y="661" width="0.2285%" height="15" fill="rgb(227,94,9)" fg:x="26857" fg:w="78"/><text x="78.9173%" y="671.50"></text></g><g><title>imalloc_fastpath (76 samples, 0.22%)</title><rect x="78.6731%" y="645" width="0.2226%" height="15" fill="rgb(240,34,52)" fg:x="26859" fg:w="76"/><text x="78.9231%" y="655.50"></text></g><g><title>sz_size2index_usize_fastpath (4 samples, 0.01%)</title><rect x="78.8840%" y="629" width="0.0117%" height="15" fill="rgb(216,45,12)" fg:x="26931" fg:w="4"/><text x="79.1340%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (153 samples, 0.45%)</title><rect x="78.4534%" y="805" width="0.4482%" height="15" fill="rgb(246,21,19)" fg:x="26784" fg:w="153"/><text x="78.7034%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (150 samples, 0.44%)</title><rect x="78.4622%" y="789" width="0.4394%" height="15" fill="rgb(213,98,42)" fg:x="26787" fg:w="150"/><text x="78.7122%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (150 samples, 0.44%)</title><rect x="78.4622%" y="773" width="0.4394%" height="15" fill="rgb(250,136,47)" fg:x="26787" fg:w="150"/><text x="78.7122%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (104 samples, 0.30%)</title><rect x="78.5970%" y="757" width="0.3046%" height="15" fill="rgb(251,124,27)" fg:x="26833" fg:w="104"/><text x="78.8470%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (96 samples, 0.28%)</title><rect x="78.6204%" y="741" width="0.2812%" height="15" fill="rgb(229,180,14)" fg:x="26841" fg:w="96"/><text x="78.8704%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (96 samples, 0.28%)</title><rect x="78.6204%" y="725" width="0.2812%" height="15" fill="rgb(245,216,25)" fg:x="26841" fg:w="96"/><text x="78.8704%" y="735.50"></text></g><g><title>alloc::alloc::alloc (96 samples, 0.28%)</title><rect x="78.6204%" y="709" width="0.2812%" height="15" fill="rgb(251,43,5)" fg:x="26841" fg:w="96"/><text x="78.8704%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.07%)</title><rect x="80.8963%" y="741" width="0.0674%" height="15" fill="rgb(250,128,24)" fg:x="27618" fg:w="23"/><text x="81.1463%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;::write_frame::{{closure}}&gt; (16 samples, 0.05%)</title><rect x="80.9637%" y="741" width="0.0469%" height="15" fill="rgb(217,117,27)" fg:x="27641" fg:w="16"/><text x="81.2137%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (28 samples, 0.08%)</title><rect x="81.4792%" y="725" width="0.0820%" height="15" fill="rgb(245,147,4)" fg:x="27817" fg:w="28"/><text x="81.7292%" y="735.50"></text></g><g><title>&lt;fastwebsockets::Role as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="82.0064%" y="709" width="0.0264%" height="15" fill="rgb(242,201,35)" fg:x="27997" fg:w="9"/><text x="82.2564%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::OpCode as core::cmp::PartialEq&gt;::eq (120 samples, 0.35%)</title><rect x="82.0328%" y="709" width="0.3515%" height="15" fill="rgb(218,181,1)" fg:x="28006" fg:w="120"/><text x="82.2828%" y="719.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (13 samples, 0.04%)</title><rect x="82.3843%" y="709" width="0.0381%" height="15" fill="rgb(222,6,29)" fg:x="28126" fg:w="13"/><text x="82.6343%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="82.6889%" y="645" width="0.0146%" height="15" fill="rgb(208,186,3)" fg:x="28230" fg:w="5"/><text x="82.9389%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (4 samples, 0.01%)</title><rect x="82.6919%" y="629" width="0.0117%" height="15" fill="rgb(216,36,26)" fg:x="28231" fg:w="4"/><text x="82.9419%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (4 samples, 0.01%)</title><rect x="82.6919%" y="613" width="0.0117%" height="15" fill="rgb(248,201,23)" fg:x="28231" fg:w="4"/><text x="82.9419%" y="623.50"></text></g><g><title>[libc.so.6] (322 samples, 0.94%)</title><rect x="83.8371%" y="501" width="0.9432%" height="15" fill="rgb(251,170,31)" fg:x="28622" fg:w="322"/><text x="84.0871%" y="511.50"></text></g><g><title>__send (701 samples, 2.05%)</title><rect x="83.0228%" y="517" width="2.0533%" height="15" fill="rgb(207,110,25)" fg:x="28344" fg:w="701"/><text x="83.2728%" y="527.50">_..</text></g><g><title>[unknown] (101 samples, 0.30%)</title><rect x="84.7803%" y="501" width="0.2958%" height="15" fill="rgb(250,54,15)" fg:x="28944" fg:w="101"/><text x="85.0303%" y="511.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (753 samples, 2.21%)</title><rect x="83.0141%" y="613" width="2.2056%" height="15" fill="rgb(227,68,33)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="623.50">&lt;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (753 samples, 2.21%)</title><rect x="83.0141%" y="597" width="2.2056%" height="15" fill="rgb(238,34,41)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="607.50">m..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (753 samples, 2.21%)</title><rect x="83.0141%" y="581" width="2.2056%" height="15" fill="rgb(220,11,15)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="591.50">m..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write::_{{closure}} (753 samples, 2.21%)</title><rect x="83.0141%" y="565" width="2.2056%" height="15" fill="rgb(246,111,35)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="575.50">&lt;..</text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (753 samples, 2.21%)</title><rect x="83.0141%" y="549" width="2.2056%" height="15" fill="rgb(209,88,53)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="559.50">&lt;..</text></g><g><title>std::sys_common::net::TcpStream::write (753 samples, 2.21%)</title><rect x="83.0141%" y="533" width="2.2056%" height="15" fill="rgb(231,185,47)" fg:x="28341" fg:w="753"/><text x="83.2641%" y="543.50">s..</text></g><g><title>std::sys::pal::unix::cvt (49 samples, 0.14%)</title><rect x="85.0762%" y="517" width="0.1435%" height="15" fill="rgb(233,154,1)" fg:x="29045" fg:w="49"/><text x="85.3262%" y="527.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (48 samples, 0.14%)</title><rect x="85.0791%" y="501" width="0.1406%" height="15" fill="rgb(225,15,46)" fg:x="29046" fg:w="48"/><text x="85.3291%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="85.2197%" y="613" width="0.0117%" height="15" fill="rgb(211,135,41)" fg:x="29094" fg:w="4"/><text x="85.4697%" y="623.50"></text></g><g><title>core::ops::function::FnOnce::call_once (11 samples, 0.03%)</title><rect x="85.2988%" y="533" width="0.0322%" height="15" fill="rgb(208,54,0)" fg:x="29121" fg:w="11"/><text x="85.5488%" y="543.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (11 samples, 0.03%)</title><rect x="85.2988%" y="517" width="0.0322%" height="15" fill="rgb(244,136,14)" fg:x="29121" fg:w="11"/><text x="85.5488%" y="527.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (11 samples, 0.03%)</title><rect x="85.2988%" y="501" width="0.0322%" height="15" fill="rgb(241,56,14)" fg:x="29121" fg:w="11"/><text x="85.5488%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (4 samples, 0.01%)</title><rect x="85.3193%" y="485" width="0.0117%" height="15" fill="rgb(205,80,24)" fg:x="29128" fg:w="4"/><text x="85.5693%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="85.3398%" y="501" width="0.0146%" height="15" fill="rgb(220,57,4)" fg:x="29135" fg:w="5"/><text x="85.5898%" y="511.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (30 samples, 0.09%)</title><rect x="85.2988%" y="581" width="0.0879%" height="15" fill="rgb(226,193,50)" fg:x="29121" fg:w="30"/><text x="85.5488%" y="591.50"></text></g><g><title>tokio::runtime::context::budget (30 samples, 0.09%)</title><rect x="85.2988%" y="565" width="0.0879%" height="15" fill="rgb(231,168,22)" fg:x="29121" fg:w="30"/><text x="85.5488%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30 samples, 0.09%)</title><rect x="85.2988%" y="549" width="0.0879%" height="15" fill="rgb(254,215,14)" fg:x="29121" fg:w="30"/><text x="85.5488%" y="559.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (19 samples, 0.06%)</title><rect x="85.3310%" y="533" width="0.0557%" height="15" fill="rgb(211,115,16)" fg:x="29132" fg:w="19"/><text x="85.5810%" y="543.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (19 samples, 0.06%)</title><rect x="85.3310%" y="517" width="0.0557%" height="15" fill="rgb(236,210,16)" fg:x="29132" fg:w="19"/><text x="85.5810%" y="527.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (5 samples, 0.01%)</title><rect x="85.3720%" y="501" width="0.0146%" height="15" fill="rgb(221,94,12)" fg:x="29146" fg:w="5"/><text x="85.6220%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (76 samples, 0.22%)</title><rect x="85.4130%" y="565" width="0.2226%" height="15" fill="rgb(235,218,49)" fg:x="29160" fg:w="76"/><text x="85.6630%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (76 samples, 0.22%)</title><rect x="85.4130%" y="549" width="0.2226%" height="15" fill="rgb(217,114,14)" fg:x="29160" fg:w="76"/><text x="85.6630%" y="559.50"></text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,033 samples, 3.03%)</title><rect x="82.6186%" y="693" width="3.0258%" height="15" fill="rgb(216,145,22)" fg:x="28206" fg:w="1033"/><text x="82.8686%" y="703.50">&lt;&amp;m..</text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,031 samples, 3.02%)</title><rect x="82.6245%" y="677" width="3.0199%" height="15" fill="rgb(217,112,39)" fg:x="28208" fg:w="1031"/><text x="82.8745%" y="687.50">&lt;ep..</text></g><g><title>&lt;tokio::net::tcp::split_owned::OwnedWriteHalf as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,009 samples, 2.96%)</title><rect x="82.6889%" y="661" width="2.9555%" height="15" fill="rgb(225,85,32)" fg:x="28230" fg:w="1009"/><text x="82.9389%" y="671.50">&lt;to..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_priv (1,004 samples, 2.94%)</title><rect x="82.7036%" y="645" width="2.9408%" height="15" fill="rgb(245,209,47)" fg:x="28235" fg:w="1004"/><text x="82.9536%" y="655.50">to..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (929 samples, 2.72%)</title><rect x="82.9233%" y="629" width="2.7211%" height="15" fill="rgb(218,220,15)" fg:x="28310" fg:w="929"/><text x="83.1733%" y="639.50">to..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_ready (141 samples, 0.41%)</title><rect x="85.2314%" y="613" width="0.4130%" height="15" fill="rgb(222,202,31)" fg:x="29098" fg:w="141"/><text x="85.4814%" y="623.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (133 samples, 0.39%)</title><rect x="85.2548%" y="597" width="0.3896%" height="15" fill="rgb(243,203,4)" fg:x="29106" fg:w="133"/><text x="85.5048%" y="607.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (88 samples, 0.26%)</title><rect x="85.3866%" y="581" width="0.2578%" height="15" fill="rgb(237,92,17)" fg:x="29151" fg:w="88"/><text x="85.6366%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="85.6444%" y="693" width="0.0205%" height="15" fill="rgb(231,119,7)" fg:x="29239" fg:w="7"/><text x="85.8944%" y="703.50"></text></g><g><title>core::ptr::read (26 samples, 0.08%)</title><rect x="85.6649%" y="661" width="0.0762%" height="15" fill="rgb(237,82,41)" fg:x="29246" fg:w="26"/><text x="85.9149%" y="671.50"></text></g><g><title>core::mem::take (32 samples, 0.09%)</title><rect x="85.6649%" y="693" width="0.0937%" height="15" fill="rgb(226,81,48)" fg:x="29246" fg:w="32"/><text x="85.9149%" y="703.50"></text></g><g><title>core::mem::replace (32 samples, 0.09%)</title><rect x="85.6649%" y="677" width="0.0937%" height="15" fill="rgb(234,70,51)" fg:x="29246" fg:w="32"/><text x="85.9149%" y="687.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="85.7411%" y="661" width="0.0176%" height="15" fill="rgb(251,86,4)" fg:x="29272" fg:w="6"/><text x="85.9911%" y="671.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1,143 samples, 3.35%)</title><rect x="82.4224%" y="709" width="3.3480%" height="15" fill="rgb(244,144,28)" fg:x="28139" fg:w="1143"/><text x="82.6724%" y="719.50">&lt;to..</text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (4 samples, 0.01%)</title><rect x="85.7586%" y="693" width="0.0117%" height="15" fill="rgb(232,161,39)" fg:x="29278" fg:w="4"/><text x="86.0086%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_checked (4 samples, 0.01%)</title><rect x="85.7586%" y="677" width="0.0117%" height="15" fill="rgb(247,34,51)" fg:x="29278" fg:w="4"/><text x="86.0086%" y="687.50"></text></g><g><title>cache_bin_dalloc_easy (46 samples, 0.13%)</title><rect x="86.4704%" y="613" width="0.1347%" height="15" fill="rgb(225,132,2)" fg:x="29521" fg:w="46"/><text x="86.7204%" y="623.50"></text></g><g><title>cache_bin_full (10 samples, 0.03%)</title><rect x="86.5759%" y="597" width="0.0293%" height="15" fill="rgb(209,159,44)" fg:x="29557" fg:w="10"/><text x="86.8259%" y="607.50"></text></g><g><title>sz_index2size (28 samples, 0.08%)</title><rect x="86.6052%" y="613" width="0.0820%" height="15" fill="rgb(251,214,1)" fg:x="29567" fg:w="28"/><text x="86.8552%" y="623.50"></text></g><g><title>sz_index2size_lookup (28 samples, 0.08%)</title><rect x="86.6052%" y="597" width="0.0820%" height="15" fill="rgb(247,84,47)" fg:x="29567" fg:w="28"/><text x="86.8552%" y="607.50"></text></g><g><title>sz_index2size_lookup_impl (28 samples, 0.08%)</title><rect x="86.6052%" y="581" width="0.0820%" height="15" fill="rgb(240,111,43)" fg:x="29567" fg:w="28"/><text x="86.8552%" y="591.50"></text></g><g><title>_rjem_sdallocx (262 samples, 0.77%)</title><rect x="85.9227%" y="645" width="0.7674%" height="15" fill="rgb(215,214,35)" fg:x="29334" fg:w="262"/><text x="86.1727%" y="655.50"></text></g><g><title>free_fastpath (262 samples, 0.77%)</title><rect x="85.9227%" y="629" width="0.7674%" height="15" fill="rgb(248,207,23)" fg:x="29334" fg:w="262"/><text x="86.1727%" y="639.50"></text></g><g><title>bytes::bytes_mut::BytesMut::get_vec_pos (6 samples, 0.02%)</title><rect x="86.6901%" y="645" width="0.0176%" height="15" fill="rgb(214,186,4)" fg:x="29596" fg:w="6"/><text x="86.9401%" y="655.50"></text></g><g><title>bytes::bytes_mut::BytesMut::kind (5 samples, 0.01%)</title><rect x="86.7077%" y="645" width="0.0146%" height="15" fill="rgb(220,133,22)" fg:x="29602" fg:w="5"/><text x="86.9577%" y="655.50"></text></g><g><title>bytes::bytes_mut::rebuild_vec (4 samples, 0.01%)</title><rect x="86.7223%" y="645" width="0.0117%" height="15" fill="rgb(239,134,19)" fg:x="29607" fg:w="4"/><text x="86.9723%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.01%)</title><rect x="86.7223%" y="629" width="0.0117%" height="15" fill="rgb(250,140,9)" fg:x="29607" fg:w="4"/><text x="86.9723%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.01%)</title><rect x="86.7223%" y="613" width="0.0117%" height="15" fill="rgb(225,59,14)" fg:x="29607" fg:w="4"/><text x="86.9723%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Frame&gt; (334 samples, 0.98%)</title><rect x="85.7704%" y="709" width="0.9783%" height="15" fill="rgb(214,152,51)" fg:x="29282" fg:w="334"/><text x="86.0204%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::frame::Payload&gt; (334 samples, 0.98%)</title><rect x="85.7704%" y="693" width="0.9783%" height="15" fill="rgb(251,227,43)" fg:x="29282" fg:w="334"/><text x="86.0204%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes_mut::BytesMut&gt; (294 samples, 0.86%)</title><rect x="85.8875%" y="677" width="0.8612%" height="15" fill="rgb(241,96,17)" fg:x="29322" fg:w="294"/><text x="86.1375%" y="687.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (294 samples, 0.86%)</title><rect x="85.8875%" y="661" width="0.8612%" height="15" fill="rgb(234,198,43)" fg:x="29322" fg:w="294"/><text x="86.1375%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="86.7340%" y="645" width="0.0146%" height="15" fill="rgb(220,108,29)" fg:x="29611" fg:w="5"/><text x="86.9840%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="86.7340%" y="629" width="0.0146%" height="15" fill="rgb(226,163,33)" fg:x="29611" fg:w="5"/><text x="86.9840%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="86.7340%" y="613" width="0.0146%" height="15" fill="rgb(205,194,45)" fg:x="29611" fg:w="5"/><text x="86.9840%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::deallocate (5 samples, 0.01%)</title><rect x="86.7340%" y="597" width="0.0146%" height="15" fill="rgb(206,143,44)" fg:x="29611" fg:w="5"/><text x="86.9840%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.02%)</title><rect x="86.7633%" y="693" width="0.0176%" height="15" fill="rgb(236,136,36)" fg:x="29621" fg:w="6"/><text x="87.0133%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (6 samples, 0.02%)</title><rect x="86.7633%" y="677" width="0.0176%" height="15" fill="rgb(249,172,42)" fg:x="29621" fg:w="6"/><text x="87.0133%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (6 samples, 0.02%)</title><rect x="86.7633%" y="661" width="0.0176%" height="15" fill="rgb(216,139,23)" fg:x="29621" fg:w="6"/><text x="87.0133%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::ptr (6 samples, 0.02%)</title><rect x="86.7633%" y="645" width="0.0176%" height="15" fill="rgb(207,166,20)" fg:x="29621" fg:w="6"/><text x="87.0133%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::non_null (6 samples, 0.02%)</title><rect x="86.7633%" y="629" width="0.0176%" height="15" fill="rgb(210,209,22)" fg:x="29621" fg:w="6"/><text x="87.0133%" y="639.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="86.7897%" y="693" width="0.0205%" height="15" fill="rgb(232,118,20)" fg:x="29630" fg:w="7"/><text x="87.0397%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (34 samples, 0.10%)</title><rect x="86.8102%" y="693" width="0.0996%" height="15" fill="rgb(238,113,42)" fg:x="29637" fg:w="34"/><text x="87.0602%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.10%)</title><rect x="86.8102%" y="677" width="0.0996%" height="15" fill="rgb(231,42,5)" fg:x="29637" fg:w="34"/><text x="87.0602%" y="687.50"></text></g><g><title>[libc.so.6] (33 samples, 0.10%)</title><rect x="86.8131%" y="661" width="0.0967%" height="15" fill="rgb(243,166,24)" fg:x="29638" fg:w="33"/><text x="87.0631%" y="671.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (38 samples, 0.11%)</title><rect x="86.9098%" y="693" width="0.1113%" height="15" fill="rgb(237,226,12)" fg:x="29671" fg:w="38"/><text x="87.1598%" y="703.50"></text></g><g><title>&lt;fastwebsockets::frame::Payload as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="87.0094%" y="677" width="0.0117%" height="15" fill="rgb(229,133,24)" fg:x="29705" fg:w="4"/><text x="87.2594%" y="687.50"></text></g><g><title>fastwebsockets::frame::Frame::write (95 samples, 0.28%)</title><rect x="86.7487%" y="709" width="0.2783%" height="15" fill="rgb(238,33,43)" fg:x="29616" fg:w="95"/><text x="86.9987%" y="719.50"></text></g><g><title>std::sys::pal::unix::cvt (21 samples, 0.06%)</title><rect x="87.5073%" y="453" width="0.0615%" height="15" fill="rgb(227,59,38)" fg:x="29875" fg:w="21"/><text x="87.7573%" y="463.50"></text></g><g><title>&lt;isize as std::sys::pal::unix::IsMinusOne&gt;::is_minus_one (21 samples, 0.06%)</title><rect x="87.5073%" y="437" width="0.0615%" height="15" fill="rgb(230,97,0)" fg:x="29875" fg:w="21"/><text x="87.7573%" y="447.50"></text></g><g><title>[libc.so.6] (287 samples, 0.84%)</title><rect x="89.0803%" y="437" width="0.8407%" height="15" fill="rgb(250,173,50)" fg:x="30412" fg:w="287"/><text x="89.3303%" y="447.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored::_{{closure}} (912 samples, 2.67%)</title><rect x="87.5015%" y="581" width="2.6714%" height="15" fill="rgb(240,15,50)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="591.50">to..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored (912 samples, 2.67%)</title><rect x="87.5015%" y="565" width="2.6714%" height="15" fill="rgb(221,93,22)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="575.50">&lt;&amp;..</text></g><g><title>mio::io_source::IoSource&lt;T&gt;::do_io (912 samples, 2.67%)</title><rect x="87.5015%" y="549" width="2.6714%" height="15" fill="rgb(245,180,53)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="559.50">mi..</text></g><g><title>mio::sys::unix::selector::stateless_io_source::IoSourceState::do_io (912 samples, 2.67%)</title><rect x="87.5015%" y="533" width="2.6714%" height="15" fill="rgb(231,88,51)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="543.50">mi..</text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write_vectored::_{{closure}} (912 samples, 2.67%)</title><rect x="87.5015%" y="517" width="2.6714%" height="15" fill="rgb(240,58,21)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="527.50">&lt;&amp;..</text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write_vectored (912 samples, 2.67%)</title><rect x="87.5015%" y="501" width="2.6714%" height="15" fill="rgb(237,21,10)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="511.50">&lt;&amp;..</text></g><g><title>std::sys::pal::unix::fs::File::write_vectored (912 samples, 2.67%)</title><rect x="87.5015%" y="485" width="2.6714%" height="15" fill="rgb(218,43,11)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="495.50">st..</text></g><g><title>std::sys::pal::unix::fd::FileDesc::write_vectored (912 samples, 2.67%)</title><rect x="87.5015%" y="469" width="2.6714%" height="15" fill="rgb(218,221,29)" fg:x="29873" fg:w="912"/><text x="87.7515%" y="479.50">st..</text></g><g><title>writev (889 samples, 2.60%)</title><rect x="87.5688%" y="453" width="2.6040%" height="15" fill="rgb(214,118,42)" fg:x="29896" fg:w="889"/><text x="87.8188%" y="463.50">wr..</text></g><g><title>[unknown] (86 samples, 0.25%)</title><rect x="89.9209%" y="437" width="0.2519%" height="15" fill="rgb(251,200,26)" fg:x="30699" fg:w="86"/><text x="90.1709%" y="447.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="90.2226%" y="517" width="0.0176%" height="15" fill="rgb(237,101,39)" fg:x="30802" fg:w="6"/><text x="90.4726%" y="527.50"></text></g><g><title>tokio::runtime::context::CONTEXT::_{{constant}}::_{{closure}} (6 samples, 0.02%)</title><rect x="90.2226%" y="501" width="0.0176%" height="15" fill="rgb(251,117,11)" fg:x="30802" fg:w="6"/><text x="90.4726%" y="511.50"></text></g><g><title>std::sys::thread_local::native::eager::Storage&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="90.2226%" y="485" width="0.0176%" height="15" fill="rgb(216,223,23)" fg:x="30802" fg:w="6"/><text x="90.4726%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (6 samples, 0.02%)</title><rect x="90.2695%" y="485" width="0.0176%" height="15" fill="rgb(251,54,12)" fg:x="30818" fg:w="6"/><text x="90.5195%" y="495.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (7 samples, 0.02%)</title><rect x="90.2871%" y="485" width="0.0205%" height="15" fill="rgb(254,176,54)" fg:x="30824" fg:w="7"/><text x="90.5371%" y="495.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (6 samples, 0.02%)</title><rect x="90.2900%" y="469" width="0.0176%" height="15" fill="rgb(210,32,8)" fg:x="30825" fg:w="6"/><text x="90.5400%" y="479.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_ref (6 samples, 0.02%)</title><rect x="90.2900%" y="453" width="0.0176%" height="15" fill="rgb(235,52,38)" fg:x="30825" fg:w="6"/><text x="90.5400%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_ref (6 samples, 0.02%)</title><rect x="90.2900%" y="437" width="0.0176%" height="15" fill="rgb(231,4,44)" fg:x="30825" fg:w="6"/><text x="90.5400%" y="447.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (6 samples, 0.02%)</title><rect x="90.2900%" y="421" width="0.0176%" height="15" fill="rgb(249,2,32)" fg:x="30825" fg:w="6"/><text x="90.5400%" y="431.50"></text></g><g><title>tokio::runtime::coop::poll_proceed (35 samples, 0.10%)</title><rect x="90.2168%" y="565" width="0.1025%" height="15" fill="rgb(224,65,26)" fg:x="30800" fg:w="35"/><text x="90.4668%" y="575.50"></text></g><g><title>tokio::runtime::context::budget (35 samples, 0.10%)</title><rect x="90.2168%" y="549" width="0.1025%" height="15" fill="rgb(250,73,40)" fg:x="30800" fg:w="35"/><text x="90.4668%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.10%)</title><rect x="90.2168%" y="533" width="0.1025%" height="15" fill="rgb(253,177,16)" fg:x="30800" fg:w="35"/><text x="90.4668%" y="543.50"></text></g><g><title>tokio::runtime::context::budget::_{{closure}} (27 samples, 0.08%)</title><rect x="90.2402%" y="517" width="0.0791%" height="15" fill="rgb(217,32,34)" fg:x="30808" fg:w="27"/><text x="90.4902%" y="527.50"></text></g><g><title>tokio::runtime::coop::poll_proceed::_{{closure}} (27 samples, 0.08%)</title><rect x="90.2402%" y="501" width="0.0791%" height="15" fill="rgb(212,7,10)" fg:x="30808" fg:w="27"/><text x="90.4902%" y="511.50"></text></g><g><title>tokio::runtime::coop::Budget::decrement (4 samples, 0.01%)</title><rect x="90.3076%" y="485" width="0.0117%" height="15" fill="rgb(245,89,8)" fg:x="30831" fg:w="4"/><text x="90.5576%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (42 samples, 0.12%)</title><rect x="90.3368%" y="549" width="0.1230%" height="15" fill="rgb(237,16,53)" fg:x="30841" fg:w="42"/><text x="90.5868%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.12%)</title><rect x="90.3368%" y="533" width="0.1230%" height="15" fill="rgb(250,204,30)" fg:x="30841" fg:w="42"/><text x="90.5868%" y="543.50"></text></g><g><title>&lt;tokio::io::util::write_vectored::WriteVectored&lt;W&gt; as core::future::future::Future&gt;::poll (1,093 samples, 3.20%)</title><rect x="87.2730%" y="693" width="3.2015%" height="15" fill="rgb(208,77,27)" fg:x="29795" fg:w="1093"/><text x="87.5230%" y="703.50">&lt;to..</text></g><g><title>&lt;&amp;mut T as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,092 samples, 3.20%)</title><rect x="87.2759%" y="677" width="3.1986%" height="15" fill="rgb(250,204,28)" fg:x="29796" fg:w="1092"/><text x="87.5259%" y="687.50">&lt;&amp;m..</text></g><g><title>&lt;epoxy_server::listener::Trio&lt;A,B,C&gt; as tokio::io::async_write::AsyncWrite&gt;::poll_write_vectored (1,092 samples, 3.20%)</title><rect x="87.2759%" y="661" width="3.1986%" height="15" fill="rgb(244,63,21)" fg:x="29796" fg:w="1092"/><text x="87.5259%" y="671.50">&lt;ep..</text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (1,071 samples, 3.14%)</title><rect x="87.3374%" y="645" width="3.1371%" height="15" fill="rgb(236,85,44)" fg:x="29817" fg:w="1071"/><text x="87.5874%" y="655.50">tok..</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write_vectored (1,036 samples, 3.03%)</title><rect x="87.4400%" y="629" width="3.0346%" height="15" fill="rgb(215,98,4)" fg:x="29852" fg:w="1036"/><text x="87.6900%" y="639.50">tok..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_write_io (1,036 samples, 3.03%)</title><rect x="87.4400%" y="613" width="3.0346%" height="15" fill="rgb(235,38,11)" fg:x="29852" fg:w="1036"/><text x="87.6900%" y="623.50">tok..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_io (1,036 samples, 3.03%)</title><rect x="87.4400%" y="597" width="3.0346%" height="15" fill="rgb(254,186,25)" fg:x="29852" fg:w="1036"/><text x="87.6900%" y="607.50">tok..</text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (103 samples, 0.30%)</title><rect x="90.1728%" y="581" width="0.3017%" height="15" fill="rgb(225,55,31)" fg:x="30785" fg:w="103"/><text x="90.4228%" y="591.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (53 samples, 0.16%)</title><rect x="90.3193%" y="565" width="0.1552%" height="15" fill="rgb(211,15,21)" fg:x="30835" fg:w="53"/><text x="90.5693%" y="575.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (3,264 samples, 9.56%)</title><rect x="81.0105%" y="741" width="9.5606%" height="15" fill="rgb(215,187,41)" fg:x="27657" fg:w="3264"/><text x="81.2605%" y="751.50">fastwebsockets..</text></g><g><title>fastwebsockets::WriteHalf::write_frame::_{{closure}} (3,076 samples, 9.01%)</title><rect x="81.5612%" y="725" width="9.0100%" height="15" fill="rgb(248,69,32)" fg:x="27845" fg:w="3076"/><text x="81.8112%" y="735.50">fastwebsocket..</text></g><g><title>fastwebsockets::frame::Frame::writev::_{{closure}} (1,210 samples, 3.54%)</title><rect x="87.0269%" y="709" width="3.5442%" height="15" fill="rgb(252,102,52)" fg:x="29711" fg:w="1210"/><text x="87.2769%" y="719.50">fast..</text></g><g><title>fastwebsockets::frame::Frame::fmt_head (33 samples, 0.10%)</title><rect x="90.4745%" y="693" width="0.0967%" height="15" fill="rgb(253,140,32)" fg:x="30888" fg:w="33"/><text x="90.7245%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.01%)</title><rect x="90.5565%" y="677" width="0.0146%" height="15" fill="rgb(216,56,42)" fg:x="30916" fg:w="5"/><text x="90.8065%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="90.5565%" y="661" width="0.0146%" height="15" fill="rgb(216,184,14)" fg:x="30916" fg:w="5"/><text x="90.8065%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,764 samples, 11.03%)</title><rect x="79.6485%" y="773" width="11.0252%" height="15" fill="rgb(237,187,27)" fg:x="27192" fg:w="3764"/><text x="79.8985%" y="783.50">&lt;core::pin::Pin&lt;..</text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (3,764 samples, 11.03%)</title><rect x="79.6485%" y="757" width="11.0252%" height="15" fill="rgb(219,65,3)" fg:x="27192" fg:w="3764"/><text x="79.8985%" y="767.50">wisp_mux::fastwe..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl core::convert::From&lt;wisp_mux::ws::Frame&gt; for fastwebsockets::frame::Frame&gt;::from (35 samples, 0.10%)</title><rect x="90.5712%" y="741" width="0.1025%" height="15" fill="rgb(245,83,25)" fg:x="30921" fg:w="35"/><text x="90.8212%" y="751.50"></text></g><g><title>wisp_mux::fastwebsockets::match_payload_reverse (31 samples, 0.09%)</title><rect x="90.5829%" y="725" width="0.0908%" height="15" fill="rgb(214,205,45)" fg:x="30925" fg:w="31"/><text x="90.8329%" y="735.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (6 samples, 0.02%)</title><rect x="90.9402%" y="581" width="0.0176%" height="15" fill="rgb(241,20,18)" fg:x="31047" fg:w="6"/><text x="91.1902%" y="591.50"></text></g><g><title>isfree (17 samples, 0.05%)</title><rect x="90.9227%" y="645" width="0.0498%" height="15" fill="rgb(232,163,23)" fg:x="31041" fg:w="17"/><text x="91.1727%" y="655.50"></text></g><g><title>thread_dalloc_event (16 samples, 0.05%)</title><rect x="90.9256%" y="629" width="0.0469%" height="15" fill="rgb(214,5,46)" fg:x="31042" fg:w="16"/><text x="91.1756%" y="639.50"></text></g><g><title>te_event_advance (16 samples, 0.05%)</title><rect x="90.9256%" y="613" width="0.0469%" height="15" fill="rgb(229,78,17)" fg:x="31042" fg:w="16"/><text x="91.1756%" y="623.50"></text></g><g><title>_rjem_je_te_event_trigger (13 samples, 0.04%)</title><rect x="90.9344%" y="597" width="0.0381%" height="15" fill="rgb(248,89,10)" fg:x="31045" fg:w="13"/><text x="91.1844%" y="607.50"></text></g><g><title>_rjem_je_sdallocx_default (19 samples, 0.06%)</title><rect x="90.9197%" y="661" width="0.0557%" height="15" fill="rgb(248,54,15)" fg:x="31040" fg:w="19"/><text x="91.1697%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (103 samples, 0.30%)</title><rect x="91.6110%" y="629" width="0.3017%" height="15" fill="rgb(223,116,6)" fg:x="31276" fg:w="103"/><text x="91.8610%" y="639.50"></text></g><g><title>cache_bin_full (58 samples, 0.17%)</title><rect x="91.7428%" y="613" width="0.1699%" height="15" fill="rgb(205,125,38)" fg:x="31321" fg:w="58"/><text x="91.9928%" y="623.50"></text></g><g><title>sz_index2size (25 samples, 0.07%)</title><rect x="91.9127%" y="629" width="0.0732%" height="15" fill="rgb(251,78,38)" fg:x="31379" fg:w="25"/><text x="92.1627%" y="639.50"></text></g><g><title>sz_index2size_lookup (25 samples, 0.07%)</title><rect x="91.9127%" y="613" width="0.0732%" height="15" fill="rgb(253,78,28)" fg:x="31379" fg:w="25"/><text x="92.1627%" y="623.50"></text></g><g><title>sz_index2size_lookup_impl (25 samples, 0.07%)</title><rect x="91.9127%" y="597" width="0.0732%" height="15" fill="rgb(209,120,3)" fg:x="31379" fg:w="25"/><text x="92.1627%" y="607.50"></text></g><g><title>_rjem_sdallocx (347 samples, 1.02%)</title><rect x="90.9754%" y="661" width="1.0164%" height="15" fill="rgb(238,229,9)" fg:x="31059" fg:w="347"/><text x="91.2254%" y="671.50"></text></g><g><title>free_fastpath (347 samples, 1.02%)</title><rect x="90.9754%" y="645" width="1.0164%" height="15" fill="rgb(253,159,18)" fg:x="31059" fg:w="347"/><text x="91.2254%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (390 samples, 1.14%)</title><rect x="90.9197%" y="725" width="1.1424%" height="15" fill="rgb(244,42,34)" fg:x="31040" fg:w="390"/><text x="91.1697%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (390 samples, 1.14%)</title><rect x="90.9197%" y="709" width="1.1424%" height="15" fill="rgb(224,8,7)" fg:x="31040" fg:w="390"/><text x="91.1697%" y="719.50"></text></g><g><title>__rust_dealloc (390 samples, 1.14%)</title><rect x="90.9197%" y="693" width="1.1424%" height="15" fill="rgb(210,201,45)" fg:x="31040" fg:w="390"/><text x="91.1697%" y="703.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (390 samples, 1.14%)</title><rect x="90.9197%" y="677" width="1.1424%" height="15" fill="rgb(252,185,21)" fg:x="31040" fg:w="390"/><text x="91.1697%" y="687.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (24 samples, 0.07%)</title><rect x="91.9918%" y="661" width="0.0703%" height="15" fill="rgb(223,131,1)" fg:x="31406" fg:w="24"/><text x="92.2418%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (396 samples, 1.16%)</title><rect x="90.9080%" y="741" width="1.1599%" height="15" fill="rgb(245,141,16)" fg:x="31036" fg:w="396"/><text x="91.1580%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (496 samples, 1.45%)</title><rect x="90.6737%" y="773" width="1.4528%" height="15" fill="rgb(229,55,45)" fg:x="30956" fg:w="496"/><text x="90.9237%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (496 samples, 1.45%)</title><rect x="90.6737%" y="757" width="1.4528%" height="15" fill="rgb(208,92,15)" fg:x="30956" fg:w="496"/><text x="90.9237%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (20 samples, 0.06%)</title><rect x="92.0680%" y="741" width="0.0586%" height="15" fill="rgb(234,185,47)" fg:x="31432" fg:w="20"/><text x="92.3180%" y="751.50"></text></g><g><title>arena_slab_alloc (7 samples, 0.02%)</title><rect x="92.2906%" y="485" width="0.0205%" height="15" fill="rgb(253,104,50)" fg:x="31508" fg:w="7"/><text x="92.5406%" y="495.50"></text></g><g><title>_rjem_je_pa_alloc (6 samples, 0.02%)</title><rect x="92.2935%" y="469" width="0.0176%" height="15" fill="rgb(205,70,7)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="479.50"></text></g><g><title>pai_alloc (6 samples, 0.02%)</title><rect x="92.2935%" y="453" width="0.0176%" height="15" fill="rgb(240,178,43)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="463.50"></text></g><g><title>pac_alloc_impl (6 samples, 0.02%)</title><rect x="92.2935%" y="437" width="0.0176%" height="15" fill="rgb(214,112,2)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="447.50"></text></g><g><title>pac_alloc_real (6 samples, 0.02%)</title><rect x="92.2935%" y="421" width="0.0176%" height="15" fill="rgb(206,46,17)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="431.50"></text></g><g><title>_rjem_je_ecache_alloc (6 samples, 0.02%)</title><rect x="92.2935%" y="405" width="0.0176%" height="15" fill="rgb(225,220,16)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="415.50"></text></g><g><title>extent_recycle (6 samples, 0.02%)</title><rect x="92.2935%" y="389" width="0.0176%" height="15" fill="rgb(238,65,40)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="399.50"></text></g><g><title>extent_recycle_extract (6 samples, 0.02%)</title><rect x="92.2935%" y="373" width="0.0176%" height="15" fill="rgb(230,151,21)" fg:x="31509" fg:w="6"/><text x="92.5435%" y="383.50"></text></g><g><title>extent_activate_locked (5 samples, 0.01%)</title><rect x="92.2964%" y="357" width="0.0146%" height="15" fill="rgb(218,58,49)" fg:x="31510" fg:w="5"/><text x="92.5464%" y="367.50"></text></g><g><title>_rjem_je_eset_remove (4 samples, 0.01%)</title><rect x="92.2994%" y="341" width="0.0117%" height="15" fill="rgb(219,179,14)" fg:x="31511" fg:w="4"/><text x="92.5494%" y="351.50"></text></g><g><title>imalloc_no_sample (13 samples, 0.04%)</title><rect x="92.2876%" y="581" width="0.0381%" height="15" fill="rgb(223,72,1)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="591.50"></text></g><g><title>iallocztm (13 samples, 0.04%)</title><rect x="92.2876%" y="565" width="0.0381%" height="15" fill="rgb(238,126,10)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="575.50"></text></g><g><title>arena_malloc (13 samples, 0.04%)</title><rect x="92.2876%" y="549" width="0.0381%" height="15" fill="rgb(224,206,38)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="559.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.04%)</title><rect x="92.2876%" y="533" width="0.0381%" height="15" fill="rgb(212,201,54)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="543.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (13 samples, 0.04%)</title><rect x="92.2876%" y="517" width="0.0381%" height="15" fill="rgb(218,154,48)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="527.50"></text></g><g><title>_rjem_je_arena_cache_bin_fill_small (13 samples, 0.04%)</title><rect x="92.2876%" y="501" width="0.0381%" height="15" fill="rgb(232,93,24)" fg:x="31507" fg:w="13"/><text x="92.5376%" y="511.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="92.3111%" y="485" width="0.0146%" height="15" fill="rgb(245,30,21)" fg:x="31515" fg:w="5"/><text x="92.5611%" y="495.50"></text></g><g><title>malloc_mutex_trylock_final (5 samples, 0.01%)</title><rect x="92.3111%" y="469" width="0.0146%" height="15" fill="rgb(242,148,29)" fg:x="31515" fg:w="5"/><text x="92.5611%" y="479.50"></text></g><g><title>pthread_mutex_trylock (5 samples, 0.01%)</title><rect x="92.3111%" y="453" width="0.0146%" height="15" fill="rgb(244,153,54)" fg:x="31515" fg:w="5"/><text x="92.5611%" y="463.50"></text></g><g><title>tcache_gc_small (5 samples, 0.01%)</title><rect x="92.3521%" y="501" width="0.0146%" height="15" fill="rgb(252,87,22)" fg:x="31529" fg:w="5"/><text x="92.6021%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="92.3521%" y="485" width="0.0146%" height="15" fill="rgb(210,51,29)" fg:x="31529" fg:w="5"/><text x="92.6021%" y="495.50"></text></g><g><title>tcache_bin_flush_bottom (5 samples, 0.01%)</title><rect x="92.3521%" y="469" width="0.0146%" height="15" fill="rgb(242,136,47)" fg:x="31529" fg:w="5"/><text x="92.6021%" y="479.50"></text></g><g><title>_rjem_je_tcache_gc_event_handler (9 samples, 0.03%)</title><rect x="92.3433%" y="533" width="0.0264%" height="15" fill="rgb(238,68,4)" fg:x="31526" fg:w="9"/><text x="92.5933%" y="543.50"></text></g><g><title>tcache_event (9 samples, 0.03%)</title><rect x="92.3433%" y="517" width="0.0264%" height="15" fill="rgb(242,161,30)" fg:x="31526" fg:w="9"/><text x="92.5933%" y="527.50"></text></g><g><title>_rjem_je_malloc_default (33 samples, 0.10%)</title><rect x="92.2876%" y="629" width="0.0967%" height="15" fill="rgb(218,58,44)" fg:x="31507" fg:w="33"/><text x="92.5376%" y="639.50"></text></g><g><title>imalloc (33 samples, 0.10%)</title><rect x="92.2876%" y="613" width="0.0967%" height="15" fill="rgb(252,125,32)" fg:x="31507" fg:w="33"/><text x="92.5376%" y="623.50"></text></g><g><title>imalloc_body (33 samples, 0.10%)</title><rect x="92.2876%" y="597" width="0.0967%" height="15" fill="rgb(219,178,0)" fg:x="31507" fg:w="33"/><text x="92.5376%" y="607.50"></text></g><g><title>thread_alloc_event (20 samples, 0.06%)</title><rect x="92.3257%" y="581" width="0.0586%" height="15" fill="rgb(213,152,7)" fg:x="31520" fg:w="20"/><text x="92.5757%" y="591.50"></text></g><g><title>te_event_advance (20 samples, 0.06%)</title><rect x="92.3257%" y="565" width="0.0586%" height="15" fill="rgb(249,109,34)" fg:x="31520" fg:w="20"/><text x="92.5757%" y="575.50"></text></g><g><title>_rjem_je_te_event_trigger (19 samples, 0.06%)</title><rect x="92.3286%" y="549" width="0.0557%" height="15" fill="rgb(232,96,21)" fg:x="31521" fg:w="19"/><text x="92.5786%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (55 samples, 0.16%)</title><rect x="92.4517%" y="597" width="0.1611%" height="15" fill="rgb(228,27,39)" fg:x="31563" fg:w="55"/><text x="92.7017%" y="607.50"></text></g><g><title>cache_bin_alloc_impl (55 samples, 0.16%)</title><rect x="92.4517%" y="581" width="0.1611%" height="15" fill="rgb(211,182,52)" fg:x="31563" fg:w="55"/><text x="92.7017%" y="591.50"></text></g><g><title>sz_index2size_lookup_impl (5 samples, 0.01%)</title><rect x="92.6186%" y="581" width="0.0146%" height="15" fill="rgb(234,178,38)" fg:x="31620" fg:w="5"/><text x="92.8686%" y="591.50"></text></g><g><title>sz_size2index_usize_fastpath (7 samples, 0.02%)</title><rect x="92.6186%" y="597" width="0.0205%" height="15" fill="rgb(221,111,3)" fg:x="31620" fg:w="7"/><text x="92.8686%" y="607.50"></text></g><g><title>__rust_alloc (122 samples, 0.36%)</title><rect x="92.2876%" y="661" width="0.3574%" height="15" fill="rgb(228,175,21)" fg:x="31507" fg:w="122"/><text x="92.5376%" y="671.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (122 samples, 0.36%)</title><rect x="92.2876%" y="645" width="0.3574%" height="15" fill="rgb(228,174,43)" fg:x="31507" fg:w="122"/><text x="92.5376%" y="655.50"></text></g><g><title>_rjem_malloc (89 samples, 0.26%)</title><rect x="92.3843%" y="629" width="0.2607%" height="15" fill="rgb(211,191,0)" fg:x="31540" fg:w="89"/><text x="92.6343%" y="639.50"></text></g><g><title>imalloc_fastpath (88 samples, 0.26%)</title><rect x="92.3872%" y="613" width="0.2578%" height="15" fill="rgb(253,117,3)" fg:x="31541" fg:w="88"/><text x="92.6372%" y="623.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,697 samples, 13.76%)</title><rect x="78.9016%" y="805" width="13.7581%" height="15" fill="rgb(241,127,19)" fg:x="26937" fg:w="4697"/><text x="79.1516%" y="815.50">&lt;core::pin::Pin&lt;P&gt; as..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (4,697 samples, 13.76%)</title><rect x="78.9016%" y="789" width="13.7581%" height="15" fill="rgb(218,103,12)" fg:x="26937" fg:w="4697"/><text x="79.1516%" y="799.50">&lt;alloc::boxed::Box&lt;dy..</text></g><g><title>wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split (182 samples, 0.53%)</title><rect x="92.1265%" y="773" width="0.5331%" height="15" fill="rgb(236,214,43)" fg:x="31452" fg:w="182"/><text x="92.3765%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (174 samples, 0.51%)</title><rect x="92.1500%" y="757" width="0.5097%" height="15" fill="rgb(244,144,19)" fg:x="31460" fg:w="174"/><text x="92.4000%" y="767.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (174 samples, 0.51%)</title><rect x="92.1500%" y="741" width="0.5097%" height="15" fill="rgb(246,188,10)" fg:x="31460" fg:w="174"/><text x="92.4000%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (129 samples, 0.38%)</title><rect x="92.2818%" y="725" width="0.3779%" height="15" fill="rgb(212,193,33)" fg:x="31505" fg:w="129"/><text x="92.5318%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (127 samples, 0.37%)</title><rect x="92.2876%" y="709" width="0.3720%" height="15" fill="rgb(241,51,29)" fg:x="31507" fg:w="127"/><text x="92.5376%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (127 samples, 0.37%)</title><rect x="92.2876%" y="693" width="0.3720%" height="15" fill="rgb(211,58,19)" fg:x="31507" fg:w="127"/><text x="92.5376%" y="703.50"></text></g><g><title>alloc::alloc::alloc (127 samples, 0.37%)</title><rect x="92.2876%" y="677" width="0.3720%" height="15" fill="rgb(229,111,26)" fg:x="31507" fg:w="127"/><text x="92.5376%" y="687.50"></text></g><g><title>core::ptr::read_volatile (5 samples, 0.01%)</title><rect x="92.6450%" y="661" width="0.0146%" height="15" fill="rgb(213,115,40)" fg:x="31629" fg:w="5"/><text x="92.8950%" y="671.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (7 samples, 0.02%)</title><rect x="92.8295%" y="613" width="0.0205%" height="15" fill="rgb(209,56,44)" fg:x="31692" fg:w="7"/><text x="93.0795%" y="623.50"></text></g><g><title>isfree (13 samples, 0.04%)</title><rect x="92.8178%" y="677" width="0.0381%" height="15" fill="rgb(230,108,32)" fg:x="31688" fg:w="13"/><text x="93.0678%" y="687.50"></text></g><g><title>thread_dalloc_event (13 samples, 0.04%)</title><rect x="92.8178%" y="661" width="0.0381%" height="15" fill="rgb(216,165,31)" fg:x="31688" fg:w="13"/><text x="93.0678%" y="671.50"></text></g><g><title>te_event_advance (13 samples, 0.04%)</title><rect x="92.8178%" y="645" width="0.0381%" height="15" fill="rgb(218,122,21)" fg:x="31688" fg:w="13"/><text x="93.0678%" y="655.50"></text></g><g><title>_rjem_je_te_event_trigger (12 samples, 0.04%)</title><rect x="92.8207%" y="629" width="0.0351%" height="15" fill="rgb(223,224,47)" fg:x="31689" fg:w="12"/><text x="93.0707%" y="639.50"></text></g><g><title>_rjem_je_sdallocx_default (14 samples, 0.04%)</title><rect x="92.8178%" y="693" width="0.0410%" height="15" fill="rgb(238,102,44)" fg:x="31688" fg:w="14"/><text x="93.0678%" y="703.50"></text></g><g><title>cache_bin_dalloc_easy (61 samples, 0.18%)</title><rect x="92.9672%" y="661" width="0.1787%" height="15" fill="rgb(236,46,40)" fg:x="31739" fg:w="61"/><text x="93.2172%" y="671.50"></text></g><g><title>cache_bin_full (26 samples, 0.08%)</title><rect x="93.0697%" y="645" width="0.0762%" height="15" fill="rgb(247,202,50)" fg:x="31774" fg:w="26"/><text x="93.3197%" y="655.50"></text></g><g><title>_rjem_sdallocx (105 samples, 0.31%)</title><rect x="92.8588%" y="693" width="0.3076%" height="15" fill="rgb(209,99,20)" fg:x="31702" fg:w="105"/><text x="93.1088%" y="703.50"></text></g><g><title>free_fastpath (105 samples, 0.31%)</title><rect x="92.8588%" y="677" width="0.3076%" height="15" fill="rgb(252,27,34)" fg:x="31702" fg:w="105"/><text x="93.1088%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (129 samples, 0.38%)</title><rect x="92.8120%" y="757" width="0.3779%" height="15" fill="rgb(215,206,23)" fg:x="31686" fg:w="129"/><text x="93.0620%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (129 samples, 0.38%)</title><rect x="92.8120%" y="741" width="0.3779%" height="15" fill="rgb(212,135,36)" fg:x="31686" fg:w="129"/><text x="93.0620%" y="751.50"></text></g><g><title>__rust_dealloc (129 samples, 0.38%)</title><rect x="92.8120%" y="725" width="0.3779%" height="15" fill="rgb(240,189,1)" fg:x="31686" fg:w="129"/><text x="93.0620%" y="735.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (129 samples, 0.38%)</title><rect x="92.8120%" y="709" width="0.3779%" height="15" fill="rgb(242,56,20)" fg:x="31686" fg:w="129"/><text x="93.0620%" y="719.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (8 samples, 0.02%)</title><rect x="93.1664%" y="693" width="0.0234%" height="15" fill="rgb(247,132,33)" fg:x="31807" fg:w="8"/><text x="93.4164%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.40%)</title><rect x="92.8002%" y="773" width="0.3954%" height="15" fill="rgb(208,149,11)" fg:x="31682" fg:w="135"/><text x="93.0502%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5,129 samples, 15.02%)</title><rect x="78.1781%" y="837" width="15.0234%" height="15" fill="rgb(211,33,11)" fg:x="26690" fg:w="5129"/><text x="78.4281%" y="847.50">&lt;core::pin::Pin&lt;P&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (5,129 samples, 15.02%)</title><rect x="78.1781%" y="821" width="15.0234%" height="15" fill="rgb(221,29,38)" fg:x="26690" fg:w="5129"/><text x="78.4281%" y="831.50">&lt;alloc::boxed::Box&lt;dyn ..</text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (185 samples, 0.54%)</title><rect x="92.6596%" y="805" width="0.5419%" height="15" fill="rgb(206,182,49)" fg:x="31634" fg:w="185"/><text x="92.9096%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (185 samples, 0.54%)</title><rect x="92.6596%" y="789" width="0.5419%" height="15" fill="rgb(216,140,1)" fg:x="31634" fg:w="185"/><text x="92.9096%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="93.2455%" y="821" width="0.0176%" height="15" fill="rgb(232,57,40)" fg:x="31834" fg:w="6"/><text x="93.4955%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (6 samples, 0.02%)</title><rect x="93.2455%" y="805" width="0.0176%" height="15" fill="rgb(224,186,18)" fg:x="31834" fg:w="6"/><text x="93.4955%" y="815.50"></text></g><g><title>&lt;slab::Slab&lt;T&gt; as core::ops::index::IndexMut&lt;usize&gt;&gt;::index_mut (8 samples, 0.02%)</title><rect x="93.2630%" y="821" width="0.0234%" height="15" fill="rgb(215,121,11)" fg:x="31840" fg:w="8"/><text x="93.5130%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="93.2953%" y="821" width="0.0117%" height="15" fill="rgb(245,147,10)" fg:x="31851" fg:w="4"/><text x="93.5453%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="93.2953%" y="805" width="0.0117%" height="15" fill="rgb(238,153,13)" fg:x="31851" fg:w="4"/><text x="93.5453%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (4 samples, 0.01%)</title><rect x="93.3304%" y="773" width="0.0117%" height="15" fill="rgb(233,108,0)" fg:x="31863" fg:w="4"/><text x="93.5804%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="93.3304%" y="757" width="0.0117%" height="15" fill="rgb(212,157,17)" fg:x="31863" fg:w="4"/><text x="93.5804%" y="767.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (15 samples, 0.04%)</title><rect x="93.3070%" y="821" width="0.0439%" height="15" fill="rgb(225,213,38)" fg:x="31855" fg:w="15"/><text x="93.5570%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="93.3304%" y="805" width="0.0205%" height="15" fill="rgb(248,16,11)" fg:x="31863" fg:w="7"/><text x="93.5804%" y="815.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (7 samples, 0.02%)</title><rect x="93.3304%" y="789" width="0.0205%" height="15" fill="rgb(241,33,4)" fg:x="31863" fg:w="7"/><text x="93.5804%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::try_lock (153 samples, 0.45%)</title><rect x="93.3509%" y="821" width="0.4482%" height="15" fill="rgb(222,26,43)" fg:x="31870" fg:w="153"/><text x="93.6009%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (153 samples, 0.45%)</title><rect x="93.3509%" y="805" width="0.4482%" height="15" fill="rgb(243,29,36)" fg:x="31870" fg:w="153"/><text x="93.6009%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (153 samples, 0.45%)</title><rect x="93.3509%" y="789" width="0.4482%" height="15" fill="rgb(241,9,27)" fg:x="31870" fg:w="153"/><text x="93.6009%" y="799.50"></text></g><g><title>futures_util::lock::mutex::Waiter::register (4 samples, 0.01%)</title><rect x="93.7991%" y="821" width="0.0117%" height="15" fill="rgb(205,117,26)" fg:x="32023" fg:w="4"/><text x="94.0491%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="93.7991%" y="805" width="0.0117%" height="15" fill="rgb(209,80,39)" fg:x="32023" fg:w="4"/><text x="94.0491%" y="815.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (9 samples, 0.03%)</title><rect x="93.8108%" y="821" width="0.0264%" height="15" fill="rgb(239,155,6)" fg:x="32027" fg:w="9"/><text x="94.0608%" y="831.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (9 samples, 0.03%)</title><rect x="93.8108%" y="805" width="0.0264%" height="15" fill="rgb(212,104,12)" fg:x="32027" fg:w="9"/><text x="94.0608%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.01%)</title><rect x="93.8401%" y="789" width="0.0146%" height="15" fill="rgb(234,204,3)" fg:x="32037" fg:w="5"/><text x="94.0901%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="93.8401%" y="773" width="0.0146%" height="15" fill="rgb(251,218,7)" fg:x="32037" fg:w="5"/><text x="94.0901%" y="783.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (223 samples, 0.65%)</title><rect x="93.2045%" y="837" width="0.6532%" height="15" fill="rgb(221,81,32)" fg:x="31820" fg:w="223"/><text x="93.4545%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="93.8371%" y="821" width="0.0205%" height="15" fill="rgb(214,152,26)" fg:x="32036" fg:w="7"/><text x="94.0871%" y="831.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (6 samples, 0.02%)</title><rect x="93.8401%" y="805" width="0.0176%" height="15" fill="rgb(223,22,3)" fg:x="32037" fg:w="6"/><text x="94.0901%" y="815.50"></text></g><g><title>_rjem_je_tcache_gc_dalloc_event_handler (5 samples, 0.01%)</title><rect x="93.9074%" y="645" width="0.0146%" height="15" fill="rgb(207,174,7)" fg:x="32060" fg:w="5"/><text x="94.1574%" y="655.50"></text></g><g><title>_rjem_je_sdallocx_default (14 samples, 0.04%)</title><rect x="93.8840%" y="725" width="0.0410%" height="15" fill="rgb(224,19,52)" fg:x="32052" fg:w="14"/><text x="94.1340%" y="735.50"></text></g><g><title>isfree (13 samples, 0.04%)</title><rect x="93.8869%" y="709" width="0.0381%" height="15" fill="rgb(228,24,14)" fg:x="32053" fg:w="13"/><text x="94.1369%" y="719.50"></text></g><g><title>thread_dalloc_event (12 samples, 0.04%)</title><rect x="93.8899%" y="693" width="0.0351%" height="15" fill="rgb(230,153,43)" fg:x="32054" fg:w="12"/><text x="94.1399%" y="703.50"></text></g><g><title>te_event_advance (12 samples, 0.04%)</title><rect x="93.8899%" y="677" width="0.0351%" height="15" fill="rgb(231,106,12)" fg:x="32054" fg:w="12"/><text x="94.1399%" y="687.50"></text></g><g><title>_rjem_je_te_event_trigger (8 samples, 0.02%)</title><rect x="93.9016%" y="661" width="0.0234%" height="15" fill="rgb(215,92,2)" fg:x="32058" fg:w="8"/><text x="94.1516%" y="671.50"></text></g><g><title>cache_bin_dalloc_easy (18 samples, 0.05%)</title><rect x="93.9602%" y="693" width="0.0527%" height="15" fill="rgb(249,143,25)" fg:x="32078" fg:w="18"/><text x="94.2102%" y="703.50"></text></g><g><title>cache_bin_full (9 samples, 0.03%)</title><rect x="93.9865%" y="677" width="0.0264%" height="15" fill="rgb(252,7,35)" fg:x="32087" fg:w="9"/><text x="94.2365%" y="687.50"></text></g><g><title>sz_size2index_lookup (4 samples, 0.01%)</title><rect x="94.0158%" y="693" width="0.0117%" height="15" fill="rgb(216,69,40)" fg:x="32097" fg:w="4"/><text x="94.2658%" y="703.50"></text></g><g><title>sz_size2index_lookup_impl (4 samples, 0.01%)</title><rect x="94.0158%" y="677" width="0.0117%" height="15" fill="rgb(240,36,33)" fg:x="32097" fg:w="4"/><text x="94.2658%" y="687.50"></text></g><g><title>_rjem_sdallocx (36 samples, 0.11%)</title><rect x="93.9250%" y="725" width="0.1054%" height="15" fill="rgb(231,128,14)" fg:x="32066" fg:w="36"/><text x="94.1750%" y="735.50"></text></g><g><title>free_fastpath (35 samples, 0.10%)</title><rect x="93.9279%" y="709" width="0.1025%" height="15" fill="rgb(245,143,14)" fg:x="32067" fg:w="35"/><text x="94.1779%" y="719.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.18%)</title><rect x="93.8781%" y="805" width="0.1787%" height="15" fill="rgb(222,130,28)" fg:x="32050" fg:w="61"/><text x="94.1281%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (60 samples, 0.18%)</title><rect x="93.8811%" y="789" width="0.1757%" height="15" fill="rgb(212,10,48)" fg:x="32051" fg:w="60"/><text x="94.1311%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (60 samples, 0.18%)</title><rect x="93.8811%" y="773" width="0.1757%" height="15" fill="rgb(254,118,45)" fg:x="32051" fg:w="60"/><text x="94.1311%" y="783.50"></text></g><g><title>__rust_dealloc (60 samples, 0.18%)</title><rect x="93.8811%" y="757" width="0.1757%" height="15" fill="rgb(228,6,45)" fg:x="32051" fg:w="60"/><text x="94.1311%" y="767.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (60 samples, 0.18%)</title><rect x="93.8811%" y="741" width="0.1757%" height="15" fill="rgb(241,18,35)" fg:x="32051" fg:w="60"/><text x="94.1311%" y="751.50"></text></g><g><title>tikv_jemallocator::layout_to_flags (9 samples, 0.03%)</title><rect x="94.0305%" y="725" width="0.0264%" height="15" fill="rgb(227,214,53)" fg:x="32102" fg:w="9"/><text x="94.2805%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (70 samples, 0.21%)</title><rect x="93.8576%" y="837" width="0.2050%" height="15" fill="rgb(224,107,51)" fg:x="32043" fg:w="70"/><text x="94.1076%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (70 samples, 0.21%)</title><rect x="93.8576%" y="821" width="0.2050%" height="15" fill="rgb(248,60,28)" fg:x="32043" fg:w="70"/><text x="94.1076%" y="831.50"></text></g><g><title>&lt;slab::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (62 samples, 0.18%)</title><rect x="94.1066%" y="789" width="0.1816%" height="15" fill="rgb(249,101,23)" fg:x="32128" fg:w="62"/><text x="94.3566%" y="799.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="94.2384%" y="773" width="0.0498%" height="15" fill="rgb(228,51,19)" fg:x="32173" fg:w="17"/><text x="94.4884%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="94.2384%" y="757" width="0.0498%" height="15" fill="rgb(213,20,6)" fg:x="32173" fg:w="17"/><text x="94.4884%" y="767.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="94.2384%" y="741" width="0.0498%" height="15" fill="rgb(212,124,10)" fg:x="32173" fg:w="17"/><text x="94.4884%" y="751.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="94.2648%" y="725" width="0.0234%" height="15" fill="rgb(248,3,40)" fg:x="32182" fg:w="8"/><text x="94.5148%" y="735.50"></text></g><g><title>std::sync::poison::Flag::done (6 samples, 0.02%)</title><rect x="94.2970%" y="757" width="0.0176%" height="15" fill="rgb(223,178,23)" fg:x="32193" fg:w="6"/><text x="94.5470%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;futures_util::lock::mutex::Waiter&gt;&gt;&gt; (112 samples, 0.33%)</title><rect x="94.2882%" y="789" width="0.3281%" height="15" fill="rgb(240,132,45)" fg:x="32190" fg:w="112"/><text x="94.5382%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (112 samples, 0.33%)</title><rect x="94.2882%" y="773" width="0.3281%" height="15" fill="rgb(245,164,36)" fg:x="32190" fg:w="112"/><text x="94.5382%" y="783.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (103 samples, 0.30%)</title><rect x="94.3146%" y="757" width="0.3017%" height="15" fill="rgb(231,188,53)" fg:x="32199" fg:w="103"/><text x="94.5646%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (99 samples, 0.29%)</title><rect x="94.3263%" y="741" width="0.2900%" height="15" fill="rgb(237,198,39)" fg:x="32203" fg:w="99"/><text x="94.5763%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (99 samples, 0.29%)</title><rect x="94.3263%" y="725" width="0.2900%" height="15" fill="rgb(223,120,35)" fg:x="32203" fg:w="99"/><text x="94.5763%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (164 samples, 0.48%)</title><rect x="94.6192%" y="789" width="0.4804%" height="15" fill="rgb(253,107,49)" fg:x="32303" fg:w="164"/><text x="94.8692%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_and (164 samples, 0.48%)</title><rect x="94.6192%" y="773" width="0.4804%" height="15" fill="rgb(216,44,31)" fg:x="32303" fg:w="164"/><text x="94.8692%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.03%)</title><rect x="95.1260%" y="661" width="0.0264%" height="15" fill="rgb(253,87,21)" fg:x="32476" fg:w="9"/><text x="95.3760%" y="671.50"></text></g><g><title>tokio::runtime::context::with_scheduler::_{{closure}} (8 samples, 0.02%)</title><rect x="95.1289%" y="645" width="0.0234%" height="15" fill="rgb(226,18,2)" fg:x="32477" fg:w="8"/><text x="95.3789%" y="655.50"></text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::with (6 samples, 0.02%)</title><rect x="95.1347%" y="629" width="0.0176%" height="15" fill="rgb(216,8,46)" fg:x="32479" fg:w="6"/><text x="95.3847%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current::_{{closure}} (5 samples, 0.01%)</title><rect x="95.1377%" y="613" width="0.0146%" height="15" fill="rgb(226,140,39)" fg:x="32480" fg:w="5"/><text x="95.3877%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="95.1523%" y="645" width="0.0176%" height="15" fill="rgb(221,194,54)" fg:x="32485" fg:w="6"/><text x="95.4023%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.02%)</title><rect x="95.1523%" y="629" width="0.0176%" height="15" fill="rgb(213,92,11)" fg:x="32485" fg:w="6"/><text x="95.4023%" y="639.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="95.1523%" y="613" width="0.0176%" height="15" fill="rgb(229,162,46)" fg:x="32485" fg:w="6"/><text x="95.4023%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.01%)</title><rect x="95.1845%" y="597" width="0.0146%" height="15" fill="rgb(214,111,36)" fg:x="32496" fg:w="5"/><text x="95.4345%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.01%)</title><rect x="95.1845%" y="581" width="0.0146%" height="15" fill="rgb(207,6,21)" fg:x="32496" fg:w="5"/><text x="95.4345%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.02%)</title><rect x="95.1845%" y="629" width="0.0176%" height="15" fill="rgb(213,127,38)" fg:x="32496" fg:w="6"/><text x="95.4345%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 0.02%)</title><rect x="95.1845%" y="613" width="0.0176%" height="15" fill="rgb(238,118,32)" fg:x="32496" fg:w="6"/><text x="95.4345%" y="623.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (33 samples, 0.10%)</title><rect x="95.1260%" y="709" width="0.0967%" height="15" fill="rgb(240,139,39)" fg:x="32476" fg:w="33"/><text x="95.3760%" y="719.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::with_current (33 samples, 0.10%)</title><rect x="95.1260%" y="693" width="0.0967%" height="15" fill="rgb(235,10,37)" fg:x="32476" fg:w="33"/><text x="95.3760%" y="703.50"></text></g><g><title>tokio::runtime::context::with_scheduler (33 samples, 0.10%)</title><rect x="95.1260%" y="677" width="0.0967%" height="15" fill="rgb(249,171,38)" fg:x="32476" fg:w="33"/><text x="95.3760%" y="687.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task::_{{closure}} (24 samples, 0.07%)</title><rect x="95.1523%" y="661" width="0.0703%" height="15" fill="rgb(242,144,32)" fg:x="32485" fg:w="24"/><text x="95.4023%" y="671.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (17 samples, 0.05%)</title><rect x="95.1728%" y="645" width="0.0498%" height="15" fill="rgb(217,117,21)" fg:x="32492" fg:w="17"/><text x="95.4228%" y="655.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (4 samples, 0.01%)</title><rect x="95.2109%" y="629" width="0.0117%" height="15" fill="rgb(249,87,1)" fg:x="32505" fg:w="4"/><text x="95.4609%" y="639.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (4 samples, 0.01%)</title><rect x="95.2109%" y="613" width="0.0117%" height="15" fill="rgb(248,196,48)" fg:x="32505" fg:w="4"/><text x="95.4609%" y="623.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::schedule (46 samples, 0.13%)</title><rect x="95.1260%" y="725" width="0.1347%" height="15" fill="rgb(251,206,33)" fg:x="32476" fg:w="46"/><text x="95.3760%" y="735.50"></text></g><g><title>tokio::runtime::task::raw::schedule (13 samples, 0.04%)</title><rect x="95.2226%" y="709" width="0.0381%" height="15" fill="rgb(232,141,28)" fg:x="32509" fg:w="13"/><text x="95.4726%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.01%)</title><rect x="95.2607%" y="693" width="0.0117%" height="15" fill="rgb(209,167,14)" fg:x="32522" fg:w="4"/><text x="95.5107%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="95.2607%" y="677" width="0.0117%" height="15" fill="rgb(225,11,50)" fg:x="32522" fg:w="4"/><text x="95.5107%" y="687.50"></text></g><g><title>futures_util::lock::mutex::Waiter::wake (84 samples, 0.25%)</title><rect x="95.0996%" y="789" width="0.2460%" height="15" fill="rgb(209,50,20)" fg:x="32467" fg:w="84"/><text x="95.3496%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (79 samples, 0.23%)</title><rect x="95.1142%" y="773" width="0.2314%" height="15" fill="rgb(212,17,46)" fg:x="32472" fg:w="79"/><text x="95.3642%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (79 samples, 0.23%)</title><rect x="95.1142%" y="757" width="0.2314%" height="15" fill="rgb(216,101,39)" fg:x="32472" fg:w="79"/><text x="95.3642%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::&lt;impl tokio::runtime::task::raw::RawTask&gt;::wake_by_val (79 samples, 0.23%)</title><rect x="95.1142%" y="741" width="0.2314%" height="15" fill="rgb(212,228,48)" fg:x="32472" fg:w="79"/><text x="95.3642%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (29 samples, 0.08%)</title><rect x="95.2607%" y="725" width="0.0849%" height="15" fill="rgb(250,6,50)" fg:x="32522" fg:w="29"/><text x="95.5107%" y="735.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (29 samples, 0.08%)</title><rect x="95.2607%" y="709" width="0.0849%" height="15" fill="rgb(250,160,48)" fg:x="32522" fg:w="29"/><text x="95.5107%" y="719.50"></text></g><g><title>tokio::runtime::task::state::State::load (25 samples, 0.07%)</title><rect x="95.2724%" y="693" width="0.0732%" height="15" fill="rgb(244,216,33)" fg:x="32526" fg:w="25"/><text x="95.5224%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (25 samples, 0.07%)</title><rect x="95.2724%" y="677" width="0.0732%" height="15" fill="rgb(207,157,5)" fg:x="32526" fg:w="25"/><text x="95.5224%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (25 samples, 0.07%)</title><rect x="95.2724%" y="661" width="0.0732%" height="15" fill="rgb(228,199,8)" fg:x="32526" fg:w="25"/><text x="95.5224%" y="671.50"></text></g><g><title>std::sync::poison::Flag::get (4 samples, 0.01%)</title><rect x="95.3661%" y="741" width="0.0117%" height="15" fill="rgb(227,80,20)" fg:x="32558" fg:w="4"/><text x="95.6161%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (4 samples, 0.01%)</title><rect x="95.3661%" y="725" width="0.0117%" height="15" fill="rgb(222,9,33)" fg:x="32558" fg:w="4"/><text x="95.6161%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="95.3661%" y="709" width="0.0117%" height="15" fill="rgb(239,44,28)" fg:x="32558" fg:w="4"/><text x="95.6161%" y="719.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (22 samples, 0.06%)</title><rect x="95.3515%" y="773" width="0.0644%" height="15" fill="rgb(249,187,43)" fg:x="32553" fg:w="22"/><text x="95.6015%" y="783.50"></text></g><g><title>std::sync::poison::Flag::guard (22 samples, 0.06%)</title><rect x="95.3515%" y="757" width="0.0644%" height="15" fill="rgb(216,141,28)" fg:x="32553" fg:w="22"/><text x="95.6015%" y="767.50"></text></g><g><title>std::thread::panicking (13 samples, 0.04%)</title><rect x="95.3779%" y="741" width="0.0381%" height="15" fill="rgb(230,154,53)" fg:x="32562" fg:w="13"/><text x="95.6279%" y="751.50"></text></g><g><title>std::panicking::panicking (13 samples, 0.04%)</title><rect x="95.3779%" y="725" width="0.0381%" height="15" fill="rgb(227,82,4)" fg:x="32562" fg:w="13"/><text x="95.6279%" y="735.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (13 samples, 0.04%)</title><rect x="95.3779%" y="709" width="0.0381%" height="15" fill="rgb(220,107,16)" fg:x="32562" fg:w="13"/><text x="95.6279%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.02%)</title><rect x="95.3954%" y="693" width="0.0205%" height="15" fill="rgb(207,187,2)" fg:x="32568" fg:w="7"/><text x="95.6454%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.02%)</title><rect x="95.3954%" y="677" width="0.0205%" height="15" fill="rgb(210,162,52)" fg:x="32568" fg:w="7"/><text x="95.6454%" y="687.50"></text></g><g><title>epoxy_server::handle::wisp::copy_write_fast::_{{closure}} (9,319 samples, 27.30%)</title><rect x="68.3743%" y="917" width="27.2964%" height="15" fill="rgb(217,216,49)" fg:x="23343" fg:w="9319"/><text x="68.6243%" y="927.50">epoxy_server::handle::wisp::copy_write_fast:..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write::_{{closure}} (8,087 samples, 23.69%)</title><rect x="71.9830%" y="901" width="23.6878%" height="15" fill="rgb(218,146,49)" fg:x="24575" fg:w="8087"/><text x="72.2330%" y="911.50">wisp_mux::stream::MuxStreamWrite::writ..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (7,926 samples, 23.22%)</title><rect x="72.4546%" y="885" width="23.2162%" height="15" fill="rgb(216,55,40)" fg:x="24736" fg:w="7926"/><text x="72.7046%" y="895.50">wisp_mux::stream::MuxStreamWrite::wri..</text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (6,770 samples, 19.83%)</title><rect x="75.8407%" y="869" width="19.8301%" height="15" fill="rgb(208,196,21)" fg:x="25892" fg:w="6770"/><text x="76.0907%" y="879.50">wisp_mux::stream::MuxStreamWrit..</text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (6,379 samples, 18.68%)</title><rect x="76.9859%" y="853" width="18.6848%" height="15" fill="rgb(242,117,42)" fg:x="26283" fg:w="6379"/><text x="77.2359%" y="863.50">wisp_mux::ws::LockedWebSocket..</text></g><g><title>core::ptr::drop_in_place&lt;futures_util::lock::mutex::MutexGuard&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt;&gt;&gt; (549 samples, 1.61%)</title><rect x="94.0627%" y="837" width="1.6081%" height="15" fill="rgb(210,11,23)" fg:x="32113" fg:w="549"/><text x="94.3127%" y="847.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (543 samples, 1.59%)</title><rect x="94.0803%" y="821" width="1.5905%" height="15" fill="rgb(217,110,2)" fg:x="32119" fg:w="543"/><text x="94.3303%" y="831.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::unlock (543 samples, 1.59%)</title><rect x="94.0803%" y="805" width="1.5905%" height="15" fill="rgb(229,77,54)" fg:x="32119" fg:w="543"/><text x="94.3303%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (109 samples, 0.32%)</title><rect x="95.3515%" y="789" width="0.3193%" height="15" fill="rgb(218,53,16)" fg:x="32553" fg:w="109"/><text x="95.6015%" y="799.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (87 samples, 0.25%)</title><rect x="95.4159%" y="773" width="0.2548%" height="15" fill="rgb(215,38,13)" fg:x="32575" fg:w="87"/><text x="95.6659%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (87 samples, 0.25%)</title><rect x="95.4159%" y="757" width="0.2548%" height="15" fill="rgb(235,42,18)" fg:x="32575" fg:w="87"/><text x="95.6659%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.25%)</title><rect x="95.4159%" y="741" width="0.2548%" height="15" fill="rgb(219,66,54)" fg:x="32575" fg:w="87"/><text x="95.6659%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="95.6796%" y="837" width="0.0146%" height="15" fill="rgb(222,205,4)" fg:x="32665" fg:w="5"/><text x="95.9296%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="95.6796%" y="821" width="0.0146%" height="15" fill="rgb(227,213,46)" fg:x="32665" fg:w="5"/><text x="95.9296%" y="831.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="95.6796%" y="805" width="0.0146%" height="15" fill="rgb(250,145,42)" fg:x="32665" fg:w="5"/><text x="95.9296%" y="815.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="95.6796%" y="789" width="0.0146%" height="15" fill="rgb(219,15,2)" fg:x="32665" fg:w="5"/><text x="95.9296%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or_else (4 samples, 0.01%)</title><rect x="95.6942%" y="837" width="0.0117%" height="15" fill="rgb(231,181,52)" fg:x="32670" fg:w="4"/><text x="95.9442%" y="847.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12,312 samples, 36.06%)</title><rect x="59.6573%" y="949" width="36.0633%" height="15" fill="rgb(235,1,42)" fg:x="20367" fg:w="12312"/><text x="59.9073%" y="959.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future:..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (12,312 samples, 36.06%)</title><rect x="59.6573%" y="933" width="36.0633%" height="15" fill="rgb(249,88,27)" fg:x="20367" fg:w="12312"/><text x="59.9073%" y="943.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{..</text></g><g><title>tokio::macros::support::thread_rng_n (17 samples, 0.05%)</title><rect x="95.6708%" y="917" width="0.0498%" height="15" fill="rgb(235,145,16)" fg:x="32662" fg:w="17"/><text x="95.9208%" y="927.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (17 samples, 0.05%)</title><rect x="95.6708%" y="901" width="0.0498%" height="15" fill="rgb(237,114,19)" fg:x="32662" fg:w="17"/><text x="95.9208%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.05%)</title><rect x="95.6708%" y="885" width="0.0498%" height="15" fill="rgb(238,51,50)" fg:x="32662" fg:w="17"/><text x="95.9208%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.05%)</title><rect x="95.6708%" y="869" width="0.0498%" height="15" fill="rgb(205,194,25)" fg:x="32662" fg:w="17"/><text x="95.9208%" y="879.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (14 samples, 0.04%)</title><rect x="95.6796%" y="853" width="0.0410%" height="15" fill="rgb(215,203,17)" fg:x="32665" fg:w="14"/><text x="95.9296%" y="863.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (5 samples, 0.01%)</title><rect x="95.7059%" y="837" width="0.0146%" height="15" fill="rgb(233,112,49)" fg:x="32674" fg:w="5"/><text x="95.9559%" y="847.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (5 samples, 0.01%)</title><rect x="95.7059%" y="821" width="0.0146%" height="15" fill="rgb(241,130,26)" fg:x="32674" fg:w="5"/><text x="95.9559%" y="831.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (12,346 samples, 36.16%)</title><rect x="59.5665%" y="981" width="36.1629%" height="15" fill="rgb(252,223,19)" fg:x="20336" fg:w="12346"/><text x="59.8165%" y="991.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (12,332 samples, 36.12%)</title><rect x="59.6075%" y="965" width="36.1219%" height="15" fill="rgb(211,95,25)" fg:x="20350" fg:w="12332"/><text x="59.8575%" y="975.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{..</text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.03%)</title><rect x="95.7293%" y="901" width="0.0293%" height="15" fill="rgb(251,182,27)" fg:x="32682" fg:w="10"/><text x="95.9793%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.03%)</title><rect x="95.7293%" y="885" width="0.0293%" height="15" fill="rgb(238,24,4)" fg:x="32682" fg:w="10"/><text x="95.9793%" y="895.50"></text></g><g><title>core::mem::replace (10 samples, 0.03%)</title><rect x="95.7293%" y="869" width="0.0293%" height="15" fill="rgb(224,220,25)" fg:x="32682" fg:w="10"/><text x="95.9793%" y="879.50"></text></g><g><title>core::ptr::write (10 samples, 0.03%)</title><rect x="95.7293%" y="853" width="0.0293%" height="15" fill="rgb(239,133,26)" fg:x="32682" fg:w="10"/><text x="95.9793%" y="863.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (12,448 samples, 36.46%)</title><rect x="59.3058%" y="1013" width="36.4616%" height="15" fill="rgb(211,94,48)" fg:x="20247" fg:w="12448"/><text x="59.5558%" y="1023.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future:..</text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (12,448 samples, 36.46%)</title><rect x="59.3058%" y="997" width="36.4616%" height="15" fill="rgb(239,87,6)" fg:x="20247" fg:w="12448"/><text x="59.5558%" y="1007.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{..</text></g><g><title>tokio::macros::support::thread_rng_n (13 samples, 0.04%)</title><rect x="95.7293%" y="981" width="0.0381%" height="15" fill="rgb(227,62,0)" fg:x="32682" fg:w="13"/><text x="95.9793%" y="991.50"></text></g><g><title>tokio::runtime::context::thread_rng_n (13 samples, 0.04%)</title><rect x="95.7293%" y="965" width="0.0381%" height="15" fill="rgb(211,226,4)" fg:x="32682" fg:w="13"/><text x="95.9793%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.04%)</title><rect x="95.7293%" y="949" width="0.0381%" height="15" fill="rgb(253,38,52)" fg:x="32682" fg:w="13"/><text x="95.9793%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.04%)</title><rect x="95.7293%" y="933" width="0.0381%" height="15" fill="rgb(229,126,40)" fg:x="32682" fg:w="13"/><text x="95.9793%" y="943.50"></text></g><g><title>tokio::runtime::context::thread_rng_n::_{{closure}} (13 samples, 0.04%)</title><rect x="95.7293%" y="917" width="0.0381%" height="15" fill="rgb(229,165,44)" fg:x="32682" fg:w="13"/><text x="95.9793%" y="927.50"></text></g><g><title>base_block_alloc (5 samples, 0.01%)</title><rect x="95.7762%" y="517" width="0.0146%" height="15" fill="rgb(247,95,47)" fg:x="32698" fg:w="5"/><text x="96.0262%" y="527.50"></text></g><g><title>arena_init_locked (6 samples, 0.02%)</title><rect x="95.7762%" y="565" width="0.0176%" height="15" fill="rgb(216,140,30)" fg:x="32698" fg:w="6"/><text x="96.0262%" y="575.50"></text></g><g><title>_rjem_je_arena_new (6 samples, 0.02%)</title><rect x="95.7762%" y="549" width="0.0176%" height="15" fill="rgb(246,214,8)" fg:x="32698" fg:w="6"/><text x="96.0262%" y="559.50"></text></g><g><title>_rjem_je_base_new (6 samples, 0.02%)</title><rect x="95.7762%" y="533" width="0.0176%" height="15" fill="rgb(227,224,15)" fg:x="32698" fg:w="6"/><text x="96.0262%" y="543.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::insert (21 samples, 0.06%)</title><rect x="95.7762%" y="1013" width="0.0615%" height="15" fill="rgb(233,175,4)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="1023.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_insert (21 samples, 0.06%)</title><rect x="95.7762%" y="997" width="0.0615%" height="15" fill="rgb(221,66,45)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="1007.50"></text></g><g><title>dashmap::DashMap&lt;K,V,S&gt;::entry (21 samples, 0.06%)</title><rect x="95.7762%" y="981" width="0.0615%" height="15" fill="rgb(221,178,18)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="991.50"></text></g><g><title>&lt;dashmap::DashMap&lt;K,V,S&gt; as dashmap::t::Map&lt;K,V,S&gt;&gt;::_entry (21 samples, 0.06%)</title><rect x="95.7762%" y="965" width="0.0615%" height="15" fill="rgb(213,81,29)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find_or_find_insert_slot (21 samples, 0.06%)</title><rect x="95.7762%" y="949" width="0.0615%" height="15" fill="rgb(220,89,49)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="959.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (21 samples, 0.06%)</title><rect x="95.7762%" y="933" width="0.0615%" height="15" fill="rgb(227,60,33)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (21 samples, 0.06%)</title><rect x="95.7762%" y="917" width="0.0615%" height="15" fill="rgb(205,113,12)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="927.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::reserve_rehash_inner (21 samples, 0.06%)</title><rect x="95.7762%" y="901" width="0.0615%" height="15" fill="rgb(211,32,1)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="911.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::resize_inner (21 samples, 0.06%)</title><rect x="95.7762%" y="885" width="0.0615%" height="15" fill="rgb(246,2,12)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="895.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::prepare_resize (21 samples, 0.06%)</title><rect x="95.7762%" y="869" width="0.0615%" height="15" fill="rgb(243,37,27)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="879.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::fallible_with_capacity (21 samples, 0.06%)</title><rect x="95.7762%" y="853" width="0.0615%" height="15" fill="rgb(248,211,31)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="863.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner::new_uninitialized (21 samples, 0.06%)</title><rect x="95.7762%" y="837" width="0.0615%" height="15" fill="rgb(242,146,47)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="847.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (21 samples, 0.06%)</title><rect x="95.7762%" y="821" width="0.0615%" height="15" fill="rgb(206,70,20)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (21 samples, 0.06%)</title><rect x="95.7762%" y="805" width="0.0615%" height="15" fill="rgb(215,10,51)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="815.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.06%)</title><rect x="95.7762%" y="789" width="0.0615%" height="15" fill="rgb(243,178,53)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="799.50"></text></g><g><title>__rust_alloc (21 samples, 0.06%)</title><rect x="95.7762%" y="773" width="0.0615%" height="15" fill="rgb(233,221,20)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="783.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (21 samples, 0.06%)</title><rect x="95.7762%" y="757" width="0.0615%" height="15" fill="rgb(218,95,35)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="767.50"></text></g><g><title>_rjem_je_malloc_default (21 samples, 0.06%)</title><rect x="95.7762%" y="741" width="0.0615%" height="15" fill="rgb(229,13,5)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="751.50"></text></g><g><title>imalloc (21 samples, 0.06%)</title><rect x="95.7762%" y="725" width="0.0615%" height="15" fill="rgb(252,164,30)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="735.50"></text></g><g><title>tsd_fetch (21 samples, 0.06%)</title><rect x="95.7762%" y="709" width="0.0615%" height="15" fill="rgb(232,68,36)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="719.50"></text></g><g><title>tsd_fetch_impl (21 samples, 0.06%)</title><rect x="95.7762%" y="693" width="0.0615%" height="15" fill="rgb(219,59,54)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="703.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (21 samples, 0.06%)</title><rect x="95.7762%" y="677" width="0.0615%" height="15" fill="rgb(250,92,33)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="687.50"></text></g><g><title>tsd_data_init (21 samples, 0.06%)</title><rect x="95.7762%" y="661" width="0.0615%" height="15" fill="rgb(229,162,54)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="671.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (21 samples, 0.06%)</title><rect x="95.7762%" y="645" width="0.0615%" height="15" fill="rgb(244,114,52)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="655.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (21 samples, 0.06%)</title><rect x="95.7762%" y="629" width="0.0615%" height="15" fill="rgb(212,211,43)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="639.50"></text></g><g><title>arena_choose (21 samples, 0.06%)</title><rect x="95.7762%" y="613" width="0.0615%" height="15" fill="rgb(226,147,8)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="623.50"></text></g><g><title>arena_choose_impl (21 samples, 0.06%)</title><rect x="95.7762%" y="597" width="0.0615%" height="15" fill="rgb(226,23,13)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="607.50"></text></g><g><title>_rjem_je_arena_choose_hard (21 samples, 0.06%)</title><rect x="95.7762%" y="581" width="0.0615%" height="15" fill="rgb(240,63,4)" fg:x="32698" fg:w="21"/><text x="96.0262%" y="591.50"></text></g><g><title>malloc_mutex_lock (15 samples, 0.04%)</title><rect x="95.7938%" y="565" width="0.0439%" height="15" fill="rgb(221,1,32)" fg:x="32704" fg:w="15"/><text x="96.0438%" y="575.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (15 samples, 0.04%)</title><rect x="95.7938%" y="549" width="0.0439%" height="15" fill="rgb(242,117,10)" fg:x="32704" fg:w="15"/><text x="96.0438%" y="559.50"></text></g><g><title>malloc_mutex_lock_final (15 samples, 0.04%)</title><rect x="95.7938%" y="533" width="0.0439%" height="15" fill="rgb(249,172,44)" fg:x="32704" fg:w="15"/><text x="96.0438%" y="543.50"></text></g><g><title>pthread_mutex_lock (15 samples, 0.04%)</title><rect x="95.7938%" y="517" width="0.0439%" height="15" fill="rgb(244,46,45)" fg:x="32704" fg:w="15"/><text x="96.0438%" y="527.50"></text></g><g><title>[libc.so.6] (12 samples, 0.04%)</title><rect x="95.8026%" y="501" width="0.0351%" height="15" fill="rgb(206,43,17)" fg:x="32707" fg:w="12"/><text x="96.0526%" y="511.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (12,514 samples, 36.65%)</title><rect x="59.1916%" y="1029" width="36.6550%" height="15" fill="rgb(239,218,39)" fg:x="20208" fg:w="12514"/><text x="59.4416%" y="1039.50">epoxy_server::handle::wisp::handle_stream::_{{closure}}</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25,610 samples, 75.01%)</title><rect x="20.8436%" y="1109" width="75.0146%" height="15" fill="rgb(208,169,54)" fg:x="7116" fg:w="25610"/><text x="21.0936%" y="1119.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (25,610 samples, 75.01%)</title><rect x="20.8436%" y="1093" width="75.0146%" height="15" fill="rgb(247,25,42)" fg:x="7116" fg:w="25610"/><text x="21.0936%" y="1103.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (25,610 samples, 75.01%)</title><rect x="20.8436%" y="1077" width="75.0146%" height="15" fill="rgb(226,23,31)" fg:x="7116" fg:w="25610"/><text x="21.0936%" y="1087.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25,608 samples, 75.01%)</title><rect x="20.8494%" y="1061" width="75.0088%" height="15" fill="rgb(247,16,28)" fg:x="7118" fg:w="25608"/><text x="21.0994%" y="1071.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (25,608 samples, 75.01%)</title><rect x="20.8494%" y="1045" width="75.0088%" height="15" fill="rgb(231,147,38)" fg:x="7118" fg:w="25608"/><text x="21.0994%" y="1055.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>tokio::runtime::task::harness::poll_future (25,611 samples, 75.02%)</title><rect x="20.8436%" y="1173" width="75.0176%" height="15" fill="rgb(253,81,48)" fg:x="7116" fg:w="25611"/><text x="21.0936%" y="1183.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (25,611 samples, 75.02%)</title><rect x="20.8436%" y="1157" width="75.0176%" height="15" fill="rgb(249,222,43)" fg:x="7116" fg:w="25611"/><text x="21.0936%" y="1167.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (25,611 samples, 75.02%)</title><rect x="20.8436%" y="1141" width="75.0176%" height="15" fill="rgb(221,3,27)" fg:x="7116" fg:w="25611"/><text x="21.0936%" y="1151.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (25,611 samples, 75.02%)</title><rect x="20.8436%" y="1125" width="75.0176%" height="15" fill="rgb(228,180,5)" fg:x="7116" fg:w="25611"/><text x="21.0936%" y="1135.50">std::panicking::try::do_call</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.01%)</title><rect x="95.8612%" y="1141" width="0.0117%" height="15" fill="rgb(227,131,42)" fg:x="32727" fg:w="4"/><text x="96.1112%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="95.8612%" y="1125" width="0.0117%" height="15" fill="rgb(212,3,39)" fg:x="32727" fg:w="4"/><text x="96.1112%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_dec (4 samples, 0.01%)</title><rect x="95.8992%" y="1125" width="0.0117%" height="15" fill="rgb(226,45,5)" fg:x="32740" fg:w="4"/><text x="96.1492%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (20 samples, 0.06%)</title><rect x="95.8612%" y="1173" width="0.0586%" height="15" fill="rgb(215,167,45)" fg:x="32727" fg:w="20"/><text x="96.1112%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (20 samples, 0.06%)</title><rect x="95.8612%" y="1157" width="0.0586%" height="15" fill="rgb(250,218,53)" fg:x="32727" fg:w="20"/><text x="96.1112%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::_{{closure}} (14 samples, 0.04%)</title><rect x="95.8787%" y="1141" width="0.0410%" height="15" fill="rgb(207,140,0)" fg:x="32733" fg:w="14"/><text x="96.1287%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (7 samples, 0.02%)</title><rect x="95.9197%" y="1173" width="0.0205%" height="15" fill="rgb(238,133,51)" fg:x="32747" fg:w="7"/><text x="96.1697%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update_action (7 samples, 0.02%)</title><rect x="95.9197%" y="1157" width="0.0205%" height="15" fill="rgb(218,203,53)" fg:x="32747" fg:w="7"/><text x="96.1697%" y="1167.50"></text></g><g><title>tokio::runtime::coop::budget (26,021 samples, 76.22%)</title><rect x="19.7247%" y="1301" width="76.2185%" height="15" fill="rgb(226,184,25)" fg:x="6734" fg:w="26021"/><text x="19.9747%" y="1311.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (26,021 samples, 76.22%)</title><rect x="19.7247%" y="1285" width="76.2185%" height="15" fill="rgb(231,121,21)" fg:x="6734" fg:w="26021"/><text x="19.9747%" y="1295.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}} (26,015 samples, 76.20%)</title><rect x="19.7422%" y="1269" width="76.2009%" height="15" fill="rgb(251,14,34)" fg:x="6740" fg:w="26015"/><text x="19.9922%" y="1279.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::_{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (25,971 samples, 76.07%)</title><rect x="19.8711%" y="1253" width="76.0721%" height="15" fill="rgb(249,193,11)" fg:x="6784" fg:w="25971"/><text x="20.1211%" y="1263.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (25,971 samples, 76.07%)</title><rect x="19.8711%" y="1237" width="76.0721%" height="15" fill="rgb(220,172,37)" fg:x="6784" fg:w="25971"/><text x="20.1211%" y="1247.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (25,956 samples, 76.03%)</title><rect x="19.9151%" y="1221" width="76.0281%" height="15" fill="rgb(231,229,43)" fg:x="6799" fg:w="25956"/><text x="20.1651%" y="1231.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (25,956 samples, 76.03%)</title><rect x="19.9151%" y="1205" width="76.0281%" height="15" fill="rgb(250,161,5)" fg:x="6799" fg:w="25956"/><text x="20.1651%" y="1215.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (25,649 samples, 75.13%)</title><rect x="20.8143%" y="1189" width="75.1289%" height="15" fill="rgb(218,225,18)" fg:x="7106" fg:w="25649"/><text x="21.0643%" y="1199.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>core::sync::atomic::AtomicUsize::load (38 samples, 0.11%)</title><rect x="95.9695%" y="1237" width="0.1113%" height="15" fill="rgb(245,45,42)" fg:x="32764" fg:w="38"/><text x="96.2195%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (38 samples, 0.11%)</title><rect x="95.9695%" y="1221" width="0.1113%" height="15" fill="rgb(211,115,1)" fg:x="32764" fg:w="38"/><text x="96.2195%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (5 samples, 0.01%)</title><rect x="96.0808%" y="1237" width="0.0146%" height="15" fill="rgb(248,133,52)" fg:x="32802" fg:w="5"/><text x="96.3308%" y="1247.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (5 samples, 0.01%)</title><rect x="96.0808%" y="1221" width="0.0146%" height="15" fill="rgb(238,100,21)" fg:x="32802" fg:w="5"/><text x="96.3308%" y="1231.50"></text></g><g><title>clock_gettime (4 samples, 0.01%)</title><rect x="96.0838%" y="1205" width="0.0117%" height="15" fill="rgb(247,144,11)" fg:x="32803" fg:w="4"/><text x="96.3338%" y="1215.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="96.0838%" y="1189" width="0.0117%" height="15" fill="rgb(206,164,16)" fg:x="32803" fg:w="4"/><text x="96.3338%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::hash (6 samples, 0.02%)</title><rect x="96.0984%" y="1221" width="0.0176%" height="15" fill="rgb(222,34,3)" fg:x="32808" fg:w="6"/><text x="96.3484%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (26 samples, 0.08%)</title><rect x="96.0955%" y="1237" width="0.0762%" height="15" fill="rgb(248,82,4)" fg:x="32807" fg:w="26"/><text x="96.3455%" y="1247.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (19 samples, 0.06%)</title><rect x="96.1160%" y="1221" width="0.0557%" height="15" fill="rgb(228,81,46)" fg:x="32814" fg:w="19"/><text x="96.3660%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.06%)</title><rect x="96.1160%" y="1205" width="0.0557%" height="15" fill="rgb(227,67,47)" fg:x="32814" fg:w="19"/><text x="96.3660%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.06%)</title><rect x="96.1160%" y="1189" width="0.0557%" height="15" fill="rgb(215,93,53)" fg:x="32814" fg:w="19"/><text x="96.3660%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (80 samples, 0.23%)</title><rect x="95.9490%" y="1269" width="0.2343%" height="15" fill="rgb(248,194,39)" fg:x="32757" fg:w="80"/><text x="96.1990%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (80 samples, 0.23%)</title><rect x="95.9490%" y="1253" width="0.2343%" height="15" fill="rgb(215,5,19)" fg:x="32757" fg:w="80"/><text x="96.1990%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (4 samples, 0.01%)</title><rect x="96.1716%" y="1237" width="0.0117%" height="15" fill="rgb(226,215,51)" fg:x="32833" fg:w="4"/><text x="96.4216%" y="1247.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (4 samples, 0.01%)</title><rect x="96.1716%" y="1221" width="0.0117%" height="15" fill="rgb(225,56,26)" fg:x="32833" fg:w="4"/><text x="96.4216%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.01%)</title><rect x="96.1716%" y="1205" width="0.0117%" height="15" fill="rgb(222,75,29)" fg:x="32833" fg:w="4"/><text x="96.4216%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.01%)</title><rect x="96.1716%" y="1189" width="0.0117%" height="15" fill="rgb(236,139,6)" fg:x="32833" fg:w="4"/><text x="96.4216%" y="1199.50"></text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="96.1834%" y="1269" width="0.0205%" height="15" fill="rgb(223,137,36)" fg:x="32837" fg:w="7"/><text x="96.4334%" y="1279.50"></text></g><g><title>[libc.so.6] (7 samples, 0.02%)</title><rect x="96.2273%" y="1141" width="0.0205%" height="15" fill="rgb(226,99,2)" fg:x="32852" fg:w="7"/><text x="96.4773%" y="1151.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (17 samples, 0.05%)</title><rect x="96.2039%" y="1269" width="0.0498%" height="15" fill="rgb(206,133,23)" fg:x="32844" fg:w="17"/><text x="96.4539%" y="1279.50"></text></g><g><title>tokio::runtime::io::driver::Handle::unpark (15 samples, 0.04%)</title><rect x="96.2097%" y="1253" width="0.0439%" height="15" fill="rgb(243,173,15)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1263.50"></text></g><g><title>mio::waker::Waker::wake (15 samples, 0.04%)</title><rect x="96.2097%" y="1237" width="0.0439%" height="15" fill="rgb(228,69,28)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1247.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (15 samples, 0.04%)</title><rect x="96.2097%" y="1221" width="0.0439%" height="15" fill="rgb(212,51,22)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1231.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (15 samples, 0.04%)</title><rect x="96.2097%" y="1205" width="0.0439%" height="15" fill="rgb(227,113,0)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1215.50"></text></g><g><title>std::sys::pal::unix::fs::File::write (15 samples, 0.04%)</title><rect x="96.2097%" y="1189" width="0.0439%" height="15" fill="rgb(252,84,27)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1199.50"></text></g><g><title>std::sys::pal::unix::fd::FileDesc::write (15 samples, 0.04%)</title><rect x="96.2097%" y="1173" width="0.0439%" height="15" fill="rgb(223,145,39)" fg:x="32846" fg:w="15"/><text x="96.4597%" y="1183.50"></text></g><g><title>write (14 samples, 0.04%)</title><rect x="96.2127%" y="1157" width="0.0410%" height="15" fill="rgb(239,219,30)" fg:x="32847" fg:w="14"/><text x="96.4627%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (9 samples, 0.03%)</title><rect x="96.2830%" y="1237" width="0.0264%" height="15" fill="rgb(224,196,39)" fg:x="32871" fg:w="9"/><text x="96.5330%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 0.03%)</title><rect x="96.2830%" y="1221" width="0.0264%" height="15" fill="rgb(205,35,43)" fg:x="32871" fg:w="9"/><text x="96.5330%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (19 samples, 0.06%)</title><rect x="96.2624%" y="1269" width="0.0557%" height="15" fill="rgb(228,201,21)" fg:x="32864" fg:w="19"/><text x="96.5124%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Inner::unpark (19 samples, 0.06%)</title><rect x="96.2624%" y="1253" width="0.0557%" height="15" fill="rgb(237,118,16)" fg:x="32864" fg:w="19"/><text x="96.5124%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::parking_lot::MutexGuard&lt;tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (5 samples, 0.01%)</title><rect x="96.3181%" y="1237" width="0.0146%" height="15" fill="rgb(241,17,19)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::scheduler::multi_thread::worker::Synced&gt;&gt; (5 samples, 0.01%)</title><rect x="96.3181%" y="1221" width="0.0146%" height="15" fill="rgb(214,10,25)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1231.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="96.3181%" y="1205" width="0.0146%" height="15" fill="rgb(238,37,29)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.01%)</title><rect x="96.3181%" y="1189" width="0.0146%" height="15" fill="rgb(253,83,25)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.01%)</title><rect x="96.3181%" y="1173" width="0.0146%" height="15" fill="rgb(234,192,12)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="96.3181%" y="1157" width="0.0146%" height="15" fill="rgb(241,216,45)" fg:x="32883" fg:w="5"/><text x="96.5681%" y="1167.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::notify_should_wakeup (5 samples, 0.01%)</title><rect x="96.3386%" y="1237" width="0.0146%" height="15" fill="rgb(242,22,33)" fg:x="32890" fg:w="5"/><text x="96.5886%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (26,168 samples, 76.65%)</title><rect x="19.7071%" y="1317" width="76.6491%" height="15" fill="rgb(231,105,49)" fg:x="6728" fg:w="26168"/><text x="19.9571%" y="1327.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_from_searching (139 samples, 0.41%)</title><rect x="95.9490%" y="1301" width="0.4071%" height="15" fill="rgb(218,204,15)" fg:x="32757" fg:w="139"/><text x="96.1990%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (139 samples, 0.41%)</title><rect x="95.9490%" y="1285" width="0.4071%" height="15" fill="rgb(235,138,41)" fg:x="32757" fg:w="139"/><text x="96.1990%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (13 samples, 0.04%)</title><rect x="96.3181%" y="1269" width="0.0381%" height="15" fill="rgb(246,0,9)" fg:x="32883" fg:w="13"/><text x="96.5681%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::worker_to_notify (13 samples, 0.04%)</title><rect x="96.3181%" y="1253" width="0.0381%" height="15" fill="rgb(210,74,4)" fg:x="32883" fg:w="13"/><text x="96.5681%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (5 samples, 0.01%)</title><rect x="96.3825%" y="1301" width="0.0146%" height="15" fill="rgb(250,60,41)" fg:x="32905" fg:w="5"/><text x="96.6325%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task::_{{closure}} (5 samples, 0.01%)</title><rect x="96.3825%" y="1285" width="0.0146%" height="15" fill="rgb(220,115,12)" fg:x="32905" fg:w="5"/><text x="96.6325%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (5 samples, 0.01%)</title><rect x="96.3825%" y="1269" width="0.0146%" height="15" fill="rgb(237,100,13)" fg:x="32905" fg:w="5"/><text x="96.6325%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicU64::compare_exchange (4 samples, 0.01%)</title><rect x="96.4118%" y="1237" width="0.0117%" height="15" fill="rgb(213,55,26)" fg:x="32915" fg:w="4"/><text x="96.6618%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.01%)</title><rect x="96.4118%" y="1221" width="0.0117%" height="15" fill="rgb(216,17,4)" fg:x="32915" fg:w="4"/><text x="96.6618%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (12 samples, 0.04%)</title><rect x="96.4060%" y="1285" width="0.0351%" height="15" fill="rgb(220,153,47)" fg:x="32913" fg:w="12"/><text x="96.6560%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task::_{{closure}} (12 samples, 0.04%)</title><rect x="96.4060%" y="1269" width="0.0351%" height="15" fill="rgb(215,131,9)" fg:x="32913" fg:w="12"/><text x="96.6560%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Local&lt;T&gt;::pop (12 samples, 0.04%)</title><rect x="96.4060%" y="1253" width="0.0351%" height="15" fill="rgb(233,46,42)" fg:x="32913" fg:w="12"/><text x="96.6560%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (6 samples, 0.02%)</title><rect x="96.4236%" y="1237" width="0.0176%" height="15" fill="rgb(226,86,7)" fg:x="32919" fg:w="6"/><text x="96.6736%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="96.4236%" y="1221" width="0.0176%" height="15" fill="rgb(239,226,21)" fg:x="32919" fg:w="6"/><text x="96.6736%" y="1231.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_local_task (14 samples, 0.04%)</title><rect x="96.4060%" y="1301" width="0.0410%" height="15" fill="rgb(244,137,22)" fg:x="32913" fg:w="14"/><text x="96.6560%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::next_task (51 samples, 0.15%)</title><rect x="96.3562%" y="1317" width="0.1494%" height="15" fill="rgb(211,139,35)" fg:x="32896" fg:w="51"/><text x="96.6062%" y="1327.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tune_global_queue_interval (20 samples, 0.06%)</title><rect x="96.4470%" y="1301" width="0.0586%" height="15" fill="rgb(214,62,50)" fg:x="32927" fg:w="20"/><text x="96.6970%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::stats::Stats::tuned_global_queue_interval (16 samples, 0.05%)</title><rect x="96.4587%" y="1285" width="0.0469%" height="15" fill="rgb(212,113,44)" fg:x="32931" fg:w="16"/><text x="96.7087%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.02%)</title><rect x="96.6169%" y="1301" width="0.0176%" height="15" fill="rgb(226,150,43)" fg:x="32985" fg:w="6"/><text x="96.8669%" y="1311.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (6 samples, 0.02%)</title><rect x="96.6169%" y="1285" width="0.0176%" height="15" fill="rgb(250,71,37)" fg:x="32985" fg:w="6"/><text x="96.8669%" y="1295.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="96.6169%" y="1269" width="0.0176%" height="15" fill="rgb(219,76,19)" fg:x="32985" fg:w="6"/><text x="96.8669%" y="1279.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="96.6344%" y="1301" width="0.0117%" height="15" fill="rgb(250,39,11)" fg:x="32991" fg:w="4"/><text x="96.8844%" y="1311.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="96.6344%" y="1285" width="0.0117%" height="15" fill="rgb(230,64,31)" fg:x="32991" fg:w="4"/><text x="96.8844%" y="1295.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (5 samples, 0.01%)</title><rect x="96.6550%" y="1285" width="0.0146%" height="15" fill="rgb(208,222,23)" fg:x="32998" fg:w="5"/><text x="96.9050%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.03%)</title><rect x="96.7077%" y="1269" width="0.0293%" height="15" fill="rgb(227,125,18)" fg:x="33016" fg:w="10"/><text x="96.9577%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::inner (10 samples, 0.03%)</title><rect x="96.7077%" y="1253" width="0.0293%" height="15" fill="rgb(234,210,9)" fg:x="33016" fg:w="10"/><text x="96.9577%" y="1263.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (10 samples, 0.03%)</title><rect x="96.7077%" y="1237" width="0.0293%" height="15" fill="rgb(217,127,24)" fg:x="33016" fg:w="10"/><text x="96.9577%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicU64::load (73 samples, 0.21%)</title><rect x="96.7458%" y="1269" width="0.2138%" height="15" fill="rgb(239,141,48)" fg:x="33029" fg:w="73"/><text x="96.9958%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_load (73 samples, 0.21%)</title><rect x="96.7458%" y="1253" width="0.2138%" height="15" fill="rgb(227,109,8)" fg:x="33029" fg:w="73"/><text x="96.9958%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (9 samples, 0.03%)</title><rect x="96.9596%" y="1269" width="0.0264%" height="15" fill="rgb(235,184,23)" fg:x="33102" fg:w="9"/><text x="97.2096%" y="1279.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2::_{{closure}} (9 samples, 0.03%)</title><rect x="96.9596%" y="1253" width="0.0264%" height="15" fill="rgb(227,226,48)" fg:x="33102" fg:w="9"/><text x="97.2096%" y="1263.50"></text></g><g><title>core::ptr::read (9 samples, 0.03%)</title><rect x="96.9596%" y="1237" width="0.0264%" height="15" fill="rgb(206,150,11)" fg:x="33102" fg:w="9"/><text x="97.2096%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into2 (108 samples, 0.32%)</title><rect x="96.6755%" y="1285" width="0.3163%" height="15" fill="rgb(254,2,33)" fg:x="33005" fg:w="108"/><text x="96.9255%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (120 samples, 0.35%)</title><rect x="96.6462%" y="1301" width="0.3515%" height="15" fill="rgb(243,160,20)" fg:x="32995" fg:w="120"/><text x="96.8962%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::State::inc_num_searching (4 samples, 0.01%)</title><rect x="97.0006%" y="1269" width="0.0117%" height="15" fill="rgb(218,208,30)" fg:x="33116" fg:w="4"/><text x="97.2506%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.01%)</title><rect x="97.0006%" y="1253" width="0.0117%" height="15" fill="rgb(224,120,49)" fg:x="33116" fg:w="4"/><text x="97.2506%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.01%)</title><rect x="97.0006%" y="1237" width="0.0117%" height="15" fill="rgb(246,12,2)" fg:x="33116" fg:w="4"/><text x="97.2506%" y="1247.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::transition_to_searching (6 samples, 0.02%)</title><rect x="96.9977%" y="1301" width="0.0176%" height="15" fill="rgb(236,117,3)" fg:x="33115" fg:w="6"/><text x="97.2477%" y="1311.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_searching (5 samples, 0.01%)</title><rect x="97.0006%" y="1285" width="0.0146%" height="15" fill="rgb(216,128,52)" fg:x="33116" fg:w="5"/><text x="97.2506%" y="1295.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::steal_work (176 samples, 0.52%)</title><rect x="96.5056%" y="1317" width="0.5155%" height="15" fill="rgb(246,145,19)" fg:x="32947" fg:w="176"/><text x="96.7556%" y="1327.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (30,538 samples, 89.45%)</title><rect x="7.5952%" y="1765" width="89.4493%" height="15" fill="rgb(222,11,46)" fg:x="2593" fg:w="30538"/><text x="7.8452%" y="1775.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1749" width="89.3380%" height="15" fill="rgb(245,82,36)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1759.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1733" width="89.3380%" height="15" fill="rgb(250,73,51)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1743.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1717" width="89.3380%" height="15" fill="rgb(221,189,23)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1727.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::raw::poll (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1701" width="89.3380%" height="15" fill="rgb(210,33,7)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1711.50">tokio::runtime::task::raw::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1685" width="89.3380%" height="15" fill="rgb(210,107,22)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1695.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1669" width="89.3380%" height="15" fill="rgb(222,116,37)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1679.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1653" width="89.3380%" height="15" fill="rgb(254,17,48)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1663.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1637" width="89.3380%" height="15" fill="rgb(224,36,32)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1647.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1621" width="89.3380%" height="15" fill="rgb(232,90,46)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1631.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1605" width="89.3380%" height="15" fill="rgb(241,66,40)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1615.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1589" width="89.3380%" height="15" fill="rgb(249,184,29)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1599.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::_{{closure}} (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1573" width="89.3380%" height="15" fill="rgb(231,181,1)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1583.50">tokio::runtime::task::harness::poll_future::_{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1557" width="89.3380%" height="15" fill="rgb(224,94,2)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1567.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1541" width="89.3380%" height="15" fill="rgb(229,170,15)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1551.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}} (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1525" width="89.3380%" height="15" fill="rgb(240,127,35)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1535.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::_{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1509" width="89.3380%" height="15" fill="rgb(248,196,34)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1519.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}} (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1493" width="89.3380%" height="15" fill="rgb(236,137,7)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1503.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1477" width="89.3380%" height="15" fill="rgb(235,127,16)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1487.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (30,500 samples, 89.34%)</title><rect x="7.7065%" y="1461" width="89.3380%" height="15" fill="rgb(250,192,54)" fg:x="2631" fg:w="30500"/><text x="7.9565%" y="1471.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}} (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1445" width="89.3351%" height="15" fill="rgb(218,98,20)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1455.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}</text></g><g><title>tokio::runtime::context::set_scheduler (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1429" width="89.3351%" height="15" fill="rgb(230,176,47)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1439.50">tokio::runtime::context::set_scheduler</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1413" width="89.3351%" height="15" fill="rgb(244,2,33)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1423.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1397" width="89.3351%" height="15" fill="rgb(231,100,17)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1407.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>tokio::runtime::context::set_scheduler::_{{closure}} (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1381" width="89.3351%" height="15" fill="rgb(245,23,12)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1391.50">tokio::runtime::context::set_scheduler::_{{closure}}</text></g><g><title>tokio::runtime::context::scoped::Scoped&lt;T&gt;::set (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1365" width="89.3351%" height="15" fill="rgb(249,55,22)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1375.50">tokio::runtime::context::scoped::Scoped&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}} (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1349" width="89.3351%" height="15" fill="rgb(207,134,9)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1359.50">tokio::runtime::scheduler::multi_thread::worker::run::_{{closure}}::_{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (30,499 samples, 89.34%)</title><rect x="7.7094%" y="1333" width="89.3351%" height="15" fill="rgb(218,134,0)" fg:x="2632" fg:w="30499"/><text x="7.9594%" y="1343.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Core::tick (8 samples, 0.02%)</title><rect x="97.0211%" y="1317" width="0.0234%" height="15" fill="rgb(213,212,33)" fg:x="33123" fg:w="8"/><text x="97.2711%" y="1327.50"></text></g><g><title>[libc.so.6] (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1989" width="89.4552%" height="15" fill="rgb(252,106,18)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1999.50">[libc.so.6]</text></g><g><title>[libc.so.6] (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1973" width="89.4552%" height="15" fill="rgb(208,126,42)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1983.50">[libc.so.6]</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1957" width="89.4552%" height="15" fill="rgb(246,175,29)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1967.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1941" width="89.4552%" height="15" fill="rgb(215,13,50)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1951.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1925" width="89.4552%" height="15" fill="rgb(216,172,15)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1935.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1909" width="89.4552%" height="15" fill="rgb(212,103,13)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1919.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}} (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1893" width="89.4552%" height="15" fill="rgb(231,171,36)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1903.50">std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>std::panic::catch_unwind (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1877" width="89.4552%" height="15" fill="rgb(250,123,20)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1887.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1861" width="89.4552%" height="15" fill="rgb(212,53,50)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1871.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1845" width="89.4552%" height="15" fill="rgb(243,54,12)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1855.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1829" width="89.4552%" height="15" fill="rgb(234,101,34)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1839.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1813" width="89.4552%" height="15" fill="rgb(254,67,22)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1823.50">std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1797" width="89.4552%" height="15" fill="rgb(250,35,47)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1807.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}} (30,540 samples, 89.46%)</title><rect x="7.5923%" y="1781" width="89.4552%" height="15" fill="rgb(226,126,38)" fg:x="2592" fg:w="30540"/><text x="7.8423%" y="1791.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::_{{closure}}</text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split (6 samples, 0.02%)</title><rect x="97.1822%" y="1973" width="0.0176%" height="15" fill="rgb(216,138,53)" fg:x="33178" fg:w="6"/><text x="97.4322%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="97.4605%" y="1957" width="0.0234%" height="15" fill="rgb(246,199,43)" fg:x="33273" fg:w="8"/><text x="97.7105%" y="1967.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::_{{closure}} (129 samples, 0.38%)</title><rect x="97.1998%" y="1973" width="0.3779%" height="15" fill="rgb(232,125,11)" fg:x="33184" fg:w="129"/><text x="97.4498%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (32 samples, 0.09%)</title><rect x="97.4839%" y="1957" width="0.0937%" height="15" fill="rgb(218,219,45)" fg:x="33281" fg:w="32"/><text x="97.7339%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (32 samples, 0.09%)</title><rect x="97.4839%" y="1941" width="0.0937%" height="15" fill="rgb(216,102,54)" fg:x="33281" fg:w="32"/><text x="97.7339%" y="1951.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.08%)</title><rect x="97.4927%" y="1925" width="0.0849%" height="15" fill="rgb(250,228,7)" fg:x="33284" fg:w="29"/><text x="97.7427%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.08%)</title><rect x="97.4927%" y="1909" width="0.0849%" height="15" fill="rgb(226,125,25)" fg:x="33284" fg:w="29"/><text x="97.7427%" y="1919.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.08%)</title><rect x="97.4927%" y="1893" width="0.0849%" height="15" fill="rgb(224,165,27)" fg:x="33284" fg:w="29"/><text x="97.7427%" y="1903.50"></text></g><g><title>__rust_dealloc (29 samples, 0.08%)</title><rect x="97.4927%" y="1877" width="0.0849%" height="15" fill="rgb(233,86,3)" fg:x="33284" fg:w="29"/><text x="97.7427%" y="1887.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (29 samples, 0.08%)</title><rect x="97.4927%" y="1861" width="0.0849%" height="15" fill="rgb(228,116,20)" fg:x="33284" fg:w="29"/><text x="97.7427%" y="1871.50"></text></g><g><title>&lt;futures_util::lock::mutex::MutexLockFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="97.5806%" y="1973" width="0.0176%" height="15" fill="rgb(209,192,17)" fg:x="33314" fg:w="6"/><text x="97.8306%" y="1983.50"></text></g><g><title>&lt;tokio::io::util::read_buf::ReadBuf&lt;R,B&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="97.5981%" y="1973" width="0.0176%" height="15" fill="rgb(224,88,34)" fg:x="33320" fg:w="6"/><text x="97.8481%" y="1983.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (6 samples, 0.02%)</title><rect x="97.6157%" y="1973" width="0.0176%" height="15" fill="rgb(233,38,6)" fg:x="33326" fg:w="6"/><text x="97.8657%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split::_{{closure}} (8 samples, 0.02%)</title><rect x="97.6362%" y="1973" width="0.0234%" height="15" fill="rgb(212,59,30)" fg:x="33333" fg:w="8"/><text x="97.8862%" y="1983.50"></text></g><g><title>&lt;wisp_mux::ws::Payload as bytes::buf::buf_impl::Buf&gt;::advance (8 samples, 0.02%)</title><rect x="97.6596%" y="1973" width="0.0234%" height="15" fill="rgb(213,80,3)" fg:x="33341" fg:w="8"/><text x="97.9096%" y="1983.50"></text></g><g><title>[libc.so.6] (9 samples, 0.03%)</title><rect x="97.6831%" y="1973" width="0.0264%" height="15" fill="rgb(251,178,7)" fg:x="33349" fg:w="9"/><text x="97.9331%" y="1983.50"></text></g><g><title>_rjem_je_malloc_default (7 samples, 0.02%)</title><rect x="97.7475%" y="1973" width="0.0205%" height="15" fill="rgb(213,154,26)" fg:x="33371" fg:w="7"/><text x="97.9975%" y="1983.50"></text></g><g><title>_rjem_je_sdallocx_default (6 samples, 0.02%)</title><rect x="97.7709%" y="1973" width="0.0176%" height="15" fill="rgb(238,165,49)" fg:x="33379" fg:w="6"/><text x="98.0209%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketWrite+core::marker::Send&gt; as wisp_mux::ws::WebSocketWrite&gt;::wisp_write_split::{{closure}}&gt; (9 samples, 0.03%)</title><rect x="97.8120%" y="1973" width="0.0264%" height="15" fill="rgb(248,91,46)" fg:x="33393" fg:w="9"/><text x="98.0620%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::fastwebsockets::&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;epoxy_server::listener::Trio&lt;tokio::net::tcp::split_owned::OwnedWriteHalf,tokio::net::unix::split_owned::OwnedWriteHalf,tokio::fs::file::File&gt;&gt;&gt;::wisp_write_split::{{closure}}&gt; (19 samples, 0.06%)</title><rect x="97.8500%" y="1973" width="0.0557%" height="15" fill="rgb(244,21,52)" fg:x="33406" fg:w="19"/><text x="98.1000%" y="1983.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::ws::LockedWebSocketWrite::write_split::{{closure}}&gt; (10 samples, 0.03%)</title><rect x="97.9057%" y="1973" width="0.0293%" height="15" fill="rgb(247,122,20)" fg:x="33425" fg:w="10"/><text x="98.1557%" y="1983.50"></text></g><g><title>fastwebsockets::ReadHalf::read_frame_inner::_{{closure}} (4 samples, 0.01%)</title><rect x="97.9408%" y="1973" width="0.0117%" height="15" fill="rgb(218,27,9)" fg:x="33437" fg:w="4"/><text x="98.1908%" y="1983.50"></text></g><g><title>fastwebsockets::WebSocketWrite&lt;S&gt;::write_frame::_{{closure}} (16 samples, 0.05%)</title><rect x="97.9525%" y="1973" width="0.0469%" height="15" fill="rgb(246,7,6)" fg:x="33441" fg:w="16"/><text x="98.2025%" y="1983.50"></text></g><g><title>fastwebsockets::frame::Frame::unmask (49 samples, 0.14%)</title><rect x="98.0053%" y="1973" width="0.1435%" height="15" fill="rgb(227,135,54)" fg:x="33459" fg:w="49"/><text x="98.2553%" y="1983.50"></text></g><g><title>fastwebsockets::frame::Frame::write (8 samples, 0.02%)</title><rect x="98.1488%" y="1973" width="0.0234%" height="15" fill="rgb(247,14,11)" fg:x="33508" fg:w="8"/><text x="98.3988%" y="1983.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (6 samples, 0.02%)</title><rect x="98.1722%" y="1973" width="0.0176%" height="15" fill="rgb(206,149,34)" fg:x="33516" fg:w="6"/><text x="98.4222%" y="1983.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (6 samples, 0.02%)</title><rect x="98.1898%" y="1973" width="0.0176%" height="15" fill="rgb(227,228,4)" fg:x="33522" fg:w="6"/><text x="98.4398%" y="1983.50"></text></g><g><title>recv (7 samples, 0.02%)</title><rect x="98.2250%" y="1973" width="0.0205%" height="15" fill="rgb(238,218,28)" fg:x="33534" fg:w="7"/><text x="98.4750%" y="1983.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (6 samples, 0.02%)</title><rect x="98.2455%" y="1973" width="0.0176%" height="15" fill="rgb(252,86,40)" fg:x="33541" fg:w="6"/><text x="98.4955%" y="1983.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::sub_timespec (6 samples, 0.02%)</title><rect x="98.2630%" y="1973" width="0.0176%" height="15" fill="rgb(251,225,11)" fg:x="33547" fg:w="6"/><text x="98.5130%" y="1983.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.01%)</title><rect x="98.2806%" y="1973" width="0.0146%" height="15" fill="rgb(206,46,49)" fg:x="33553" fg:w="5"/><text x="98.5306%" y="1983.50"></text></g><g><title>tokio::runtime::io::driver::Driver::turn (4 samples, 0.01%)</title><rect x="98.3158%" y="1973" width="0.0117%" height="15" fill="rgb(245,128,24)" fg:x="33565" fg:w="4"/><text x="98.5658%" y="1983.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (34 samples, 0.10%)</title><rect x="98.3275%" y="1973" width="0.0996%" height="15" fill="rgb(219,177,34)" fg:x="33569" fg:w="34"/><text x="98.5775%" y="1983.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (10 samples, 0.03%)</title><rect x="98.4271%" y="1973" width="0.0293%" height="15" fill="rgb(218,60,48)" fg:x="33603" fg:w="10"/><text x="98.6771%" y="1983.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (4 samples, 0.01%)</title><rect x="98.4564%" y="1973" width="0.0117%" height="15" fill="rgb(221,11,5)" fg:x="33613" fg:w="4"/><text x="98.7064%" y="1983.50"></text></g><g><title>tokio::runtime::signal::Driver::process (5 samples, 0.01%)</title><rect x="98.4710%" y="1973" width="0.0146%" height="15" fill="rgb(220,148,13)" fg:x="33618" fg:w="5"/><text x="98.7210%" y="1983.50"></text></g><g><title>tokio::runtime::io::driver::signal::&lt;impl tokio::runtime::io::driver::Driver&gt;::consume_signal_ready (5 samples, 0.01%)</title><rect x="98.4710%" y="1957" width="0.0146%" height="15" fill="rgb(210,16,3)" fg:x="33618" fg:w="5"/><text x="98.7210%" y="1967.50"></text></g><g><title>tokio::runtime::task::raw::poll (13 samples, 0.04%)</title><rect x="98.4856%" y="1973" width="0.0381%" height="15" fill="rgb(236,80,2)" fg:x="33623" fg:w="13"/><text x="98.7356%" y="1983.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (10 samples, 0.03%)</title><rect x="98.5237%" y="1973" width="0.0293%" height="15" fill="rgb(239,129,19)" fg:x="33636" fg:w="10"/><text x="98.7737%" y="1983.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min (6 samples, 0.02%)</title><rect x="98.5970%" y="1957" width="0.0176%" height="15" fill="rgb(220,106,35)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1967.50"></text></g><g><title>core::iter::traits::iterator::Iterator::min_by (6 samples, 0.02%)</title><rect x="98.5970%" y="1941" width="0.0176%" height="15" fill="rgb(252,139,45)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1951.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (6 samples, 0.02%)</title><rect x="98.5970%" y="1925" width="0.0176%" height="15" fill="rgb(229,8,36)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1935.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="98.5970%" y="1909" width="0.0176%" height="15" fill="rgb(230,126,33)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1919.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (6 samples, 0.02%)</title><rect x="98.5970%" y="1893" width="0.0176%" height="15" fill="rgb(239,140,21)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (6 samples, 0.02%)</title><rect x="98.5970%" y="1877" width="0.0176%" height="15" fill="rgb(254,104,9)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1887.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal::_{{closure}} (6 samples, 0.02%)</title><rect x="98.5970%" y="1861" width="0.0176%" height="15" fill="rgb(239,52,14)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1871.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration_time (6 samples, 0.02%)</title><rect x="98.5970%" y="1845" width="0.0176%" height="15" fill="rgb(208,227,44)" fg:x="33661" fg:w="6"/><text x="98.8470%" y="1855.50"></text></g><g><title>tokio::runtime::time::Driver::park_internal (21 samples, 0.06%)</title><rect x="98.5559%" y="1973" width="0.0615%" height="15" fill="rgb(246,18,19)" fg:x="33647" fg:w="21"/><text x="98.8059%" y="1983.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (22 samples, 0.06%)</title><rect x="98.6175%" y="1973" width="0.0644%" height="15" fill="rgb(235,228,25)" fg:x="33668" fg:w="22"/><text x="98.8675%" y="1983.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (22 samples, 0.06%)</title><rect x="98.6175%" y="1957" width="0.0644%" height="15" fill="rgb(240,156,20)" fg:x="33668" fg:w="22"/><text x="98.8675%" y="1967.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (22 samples, 0.06%)</title><rect x="98.6175%" y="1941" width="0.0644%" height="15" fill="rgb(224,8,20)" fg:x="33668" fg:w="22"/><text x="98.8675%" y="1951.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketRead for fastwebsockets::WebSocketRead&lt;S&gt;&gt;::wisp_read_split::_{{closure}} (8 samples, 0.02%)</title><rect x="98.6907%" y="1973" width="0.0234%" height="15" fill="rgb(214,12,52)" fg:x="33693" fg:w="8"/><text x="98.9407%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::_&lt;impl wisp_mux::ws::WebSocketWrite for fastwebsockets::WebSocketWrite&lt;S&gt;&gt;::wisp_write_split::_{{closure}} (8 samples, 0.02%)</title><rect x="98.7141%" y="1973" width="0.0234%" height="15" fill="rgb(211,220,47)" fg:x="33701" fg:w="8"/><text x="98.9641%" y="1983.50"></text></g><g><title>wisp_mux::fastwebsockets::payload_to_bytesmut (9 samples, 0.03%)</title><rect x="98.7376%" y="1973" width="0.0264%" height="15" fill="rgb(250,173,5)" fg:x="33709" fg:w="9"/><text x="98.9876%" y="1983.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (18 samples, 0.05%)</title><rect x="98.7639%" y="1973" width="0.0527%" height="15" fill="rgb(250,125,52)" fg:x="33718" fg:w="18"/><text x="99.0139%" y="1983.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (4 samples, 0.01%)</title><rect x="98.8049%" y="1957" width="0.0117%" height="15" fill="rgb(209,133,18)" fg:x="33732" fg:w="4"/><text x="99.0549%" y="1967.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="98.8049%" y="1941" width="0.0117%" height="15" fill="rgb(216,173,22)" fg:x="33732" fg:w="4"/><text x="99.0549%" y="1951.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="98.8049%" y="1925" width="0.0117%" height="15" fill="rgb(205,3,22)" fg:x="33732" fg:w="4"/><text x="99.0549%" y="1935.50"></text></g><g><title>[unknown] (617 samples, 1.81%)</title><rect x="97.0475%" y="1989" width="1.8073%" height="15" fill="rgb(248,22,20)" fg:x="33132" fg:w="617"/><text x="97.2975%" y="1999.50">[..</text></g><g><title>writev (11 samples, 0.03%)</title><rect x="98.8225%" y="1973" width="0.0322%" height="15" fill="rgb(233,6,29)" fg:x="33738" fg:w="11"/><text x="99.0725%" y="1983.50"></text></g><g><title>_rjem_je_sdallocx_default (5 samples, 0.01%)</title><rect x="98.8694%" y="1989" width="0.0146%" height="15" fill="rgb(240,22,54)" fg:x="33754" fg:w="5"/><text x="99.1194%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;fastwebsockets::WriteHalf::write_frame&lt;hyper_util::rt::tokio::TokioIo&lt;hyper::upgrade::Upgraded&gt;&gt;::{{closure}}&gt; (4 samples, 0.01%)</title><rect x="98.9045%" y="1989" width="0.0117%" height="15" fill="rgb(231,133,32)" fg:x="33766" fg:w="4"/><text x="99.1545%" y="1999.50"></text></g><g><title>core::ptr::drop_in_place&lt;wisp_mux::inner::MuxInner&lt;wisp_mux::ws::AppendingWebSocketRead&lt;alloc::boxed::Box&lt;dyn wisp_mux::ws::WebSocketRead+core::marker::Send&gt;&gt;&gt;::process_wisp_message::{{closure}}&gt; (13 samples, 0.04%)</title><rect x="98.9221%" y="1989" width="0.0381%" height="15" fill="rgb(248,193,4)" fg:x="33772" fg:w="13"/><text x="99.1721%" y="1999.50"></text></g><g><title>&lt;tokio::io::util::fill_buf::FillBuf&lt;R&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="99.0041%" y="1861" width="0.0234%" height="15" fill="rgb(211,178,46)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1871.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::poll_fill_buf (8 samples, 0.02%)</title><rect x="99.0041%" y="1845" width="0.0234%" height="15" fill="rgb(224,5,42)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1855.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (8 samples, 0.02%)</title><rect x="99.0041%" y="1829" width="0.0234%" height="15" fill="rgb(239,176,25)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::poll_fill_buf (8 samples, 0.02%)</title><rect x="99.0041%" y="1813" width="0.0234%" height="15" fill="rgb(245,187,50)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1823.50"></text></g><g><title>&lt;S as futures_core::stream::TryStream&gt;::try_poll_next (8 samples, 0.02%)</title><rect x="99.0041%" y="1797" width="0.0234%" height="15" fill="rgb(248,24,15)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1807.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamIoStream as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.02%)</title><rect x="99.0041%" y="1781" width="0.0234%" height="15" fill="rgb(205,166,13)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1791.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as futures_core::stream::Stream&gt;::poll_next (8 samples, 0.02%)</title><rect x="99.0041%" y="1765" width="0.0234%" height="15" fill="rgb(208,114,23)" fg:x="33800" fg:w="8"/><text x="99.2541%" y="1775.50"></text></g><g><title>epoxy_server::handle::wisp::copy_read_fast::_{{closure}} (22 samples, 0.06%)</title><rect x="99.0041%" y="1877" width="0.0644%" height="15" fill="rgb(239,127,18)" fg:x="33800" fg:w="22"/><text x="99.2541%" y="1887.50"></text></g><g><title>tokio::io::util::async_buf_read_ext::AsyncBufReadExt::consume (14 samples, 0.04%)</title><rect x="99.0275%" y="1861" width="0.0410%" height="15" fill="rgb(219,154,28)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1871.50"></text></g><g><title>&lt;tokio_util::compat::Compat&lt;T&gt; as tokio::io::async_buf_read::AsyncBufRead&gt;::consume (14 samples, 0.04%)</title><rect x="99.0275%" y="1845" width="0.0410%" height="15" fill="rgb(225,157,23)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1855.50"></text></g><g><title>&lt;wisp_mux::stream::MuxStreamAsyncRead as futures_io::if_std::AsyncBufRead&gt;::consume (14 samples, 0.04%)</title><rect x="99.0275%" y="1829" width="0.0410%" height="15" fill="rgb(219,8,6)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1839.50"></text></g><g><title>&lt;futures_util::stream::try_stream::into_async_read::IntoAsyncRead&lt;St&gt; as futures_io::if_std::AsyncBufRead&gt;::consume (14 samples, 0.04%)</title><rect x="99.0275%" y="1813" width="0.0410%" height="15" fill="rgb(212,47,6)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1823.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::try_stream::into_async_read::ReadState&lt;bytes::bytes::Bytes&gt;&gt; (14 samples, 0.04%)</title><rect x="99.0275%" y="1797" width="0.0410%" height="15" fill="rgb(224,190,4)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1807.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (14 samples, 0.04%)</title><rect x="99.0275%" y="1781" width="0.0410%" height="15" fill="rgb(239,183,29)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1791.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="99.0275%" y="1765" width="0.0410%" height="15" fill="rgb(213,57,7)" fg:x="33808" fg:w="14"/><text x="99.2775%" y="1775.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}} (35 samples, 0.10%)</title><rect x="98.9690%" y="1989" width="0.1025%" height="15" fill="rgb(216,148,1)" fg:x="33788" fg:w="35"/><text x="99.2190%" y="1999.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (26 samples, 0.08%)</title><rect x="98.9953%" y="1973" width="0.0762%" height="15" fill="rgb(236,182,29)" fg:x="33797" fg:w="26"/><text x="99.2453%" y="1983.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (26 samples, 0.08%)</title><rect x="98.9953%" y="1957" width="0.0762%" height="15" fill="rgb(244,120,48)" fg:x="33797" fg:w="26"/><text x="99.2453%" y="1967.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}} (23 samples, 0.07%)</title><rect x="99.0041%" y="1941" width="0.0674%" height="15" fill="rgb(206,71,34)" fg:x="33800" fg:w="23"/><text x="99.2541%" y="1951.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}} (23 samples, 0.07%)</title><rect x="99.0041%" y="1925" width="0.0674%" height="15" fill="rgb(242,32,6)" fg:x="33800" fg:w="23"/><text x="99.2541%" y="1935.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (23 samples, 0.07%)</title><rect x="99.0041%" y="1909" width="0.0674%" height="15" fill="rgb(241,35,3)" fg:x="33800" fg:w="23"/><text x="99.2541%" y="1919.50"></text></g><g><title>epoxy_server::handle::wisp::handle_stream::_{{closure}}::_{{closure}}::_{{closure}}::_{{closure}} (23 samples, 0.07%)</title><rect x="99.0041%" y="1893" width="0.0674%" height="15" fill="rgb(222,62,19)" fg:x="33800" fg:w="23"/><text x="99.2541%" y="1903.50"></text></g><g><title>fastwebsockets::frame::Frame::fmt_head (4 samples, 0.01%)</title><rect x="99.0861%" y="1989" width="0.0117%" height="15" fill="rgb(223,110,41)" fg:x="33828" fg:w="4"/><text x="99.3361%" y="1999.50"></text></g><g><title>fastwebsockets::frame::Frame::write (13 samples, 0.04%)</title><rect x="99.0978%" y="1989" width="0.0381%" height="15" fill="rgb(208,224,4)" fg:x="33832" fg:w="13"/><text x="99.3478%" y="1999.50"></text></g><g><title>flume::Chan&lt;T&gt;::pull_pending (6 samples, 0.02%)</title><rect x="99.1359%" y="1989" width="0.0176%" height="15" fill="rgb(241,137,19)" fg:x="33845" fg:w="6"/><text x="99.3859%" y="1999.50"></text></g><g><title>flume::Shared&lt;T&gt;::recv (10 samples, 0.03%)</title><rect x="99.1535%" y="1989" width="0.0293%" height="15" fill="rgb(244,24,17)" fg:x="33851" fg:w="10"/><text x="99.4035%" y="1999.50"></text></g><g><title>futures_util::lock::mutex::Mutex&lt;T&gt;::remove_waker (4 samples, 0.01%)</title><rect x="99.1828%" y="1989" width="0.0117%" height="15" fill="rgb(245,178,49)" fg:x="33861" fg:w="4"/><text x="99.4328%" y="1999.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (4 samples, 0.01%)</title><rect x="99.1945%" y="1989" width="0.0117%" height="15" fill="rgb(219,160,38)" fg:x="33865" fg:w="4"/><text x="99.4445%" y="1999.50"></text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="99.2355%" y="1989" width="0.0205%" height="15" fill="rgb(228,137,14)" fg:x="33879" fg:w="7"/><text x="99.4855%" y="1999.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_read_priv (13 samples, 0.04%)</title><rect x="99.2560%" y="1989" width="0.0381%" height="15" fill="rgb(237,134,11)" fg:x="33886" fg:w="13"/><text x="99.5060%" y="1999.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (4 samples, 0.01%)</title><rect x="99.2824%" y="1973" width="0.0117%" height="15" fill="rgb(211,126,44)" fg:x="33895" fg:w="4"/><text x="99.5324%" y="1983.50"></text></g><g><title>tokio::net::tcp::stream::TcpStream::poll_write_vectored_priv (12 samples, 0.04%)</title><rect x="99.2970%" y="1989" width="0.0351%" height="15" fill="rgb(226,171,33)" fg:x="33900" fg:w="12"/><text x="99.5470%" y="1999.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (6 samples, 0.02%)</title><rect x="99.3468%" y="1989" width="0.0176%" height="15" fill="rgb(253,99,13)" fg:x="33917" fg:w="6"/><text x="99.5968%" y="1999.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (7 samples, 0.02%)</title><rect x="99.3644%" y="1989" width="0.0205%" height="15" fill="rgb(244,48,7)" fg:x="33923" fg:w="7"/><text x="99.6144%" y="1999.50"></text></g><g><title>tokio::runtime::task::raw::poll (32 samples, 0.09%)</title><rect x="99.3849%" y="1989" width="0.0937%" height="15" fill="rgb(244,217,54)" fg:x="33930" fg:w="32"/><text x="99.6349%" y="1999.50"></text></g><g><title>tokio::runtime::time::wheel::Wheel::next_expiration (43 samples, 0.13%)</title><rect x="99.4786%" y="1989" width="0.1260%" height="15" fill="rgb(224,15,18)" fg:x="33962" fg:w="43"/><text x="99.7286%" y="1999.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (17 samples, 0.05%)</title><rect x="99.5548%" y="1973" width="0.0498%" height="15" fill="rgb(244,99,12)" fg:x="33988" fg:w="17"/><text x="99.8048%" y="1983.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.05%)</title><rect x="99.5548%" y="1957" width="0.0498%" height="15" fill="rgb(233,226,8)" fg:x="33988" fg:w="17"/><text x="99.8048%" y="1967.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (6 samples, 0.02%)</title><rect x="99.6134%" y="1989" width="0.0176%" height="15" fill="rgb(229,211,3)" fg:x="34008" fg:w="6"/><text x="99.8634%" y="1999.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="99.7042%" y="1925" width="0.0146%" height="15" fill="rgb(216,140,21)" fg:x="34039" fg:w="5"/><text x="99.9542%" y="1935.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}}::_{{closure}} (34 samples, 0.10%)</title><rect x="99.6309%" y="1989" width="0.0996%" height="15" fill="rgb(234,122,30)" fg:x="34014" fg:w="34"/><text x="99.8809%" y="1999.50"></text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (9 samples, 0.03%)</title><rect x="99.7042%" y="1973" width="0.0264%" height="15" fill="rgb(236,25,46)" fg:x="34039" fg:w="9"/><text x="99.9542%" y="1983.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="99.7042%" y="1957" width="0.0264%" height="15" fill="rgb(217,52,54)" fg:x="34039" fg:w="9"/><text x="99.9542%" y="1967.50"></text></g><g><title>&lt;futures_util::future::future::fuse::Fuse&lt;Fut&gt; as core::future::future::Future&gt;::poll (9 samples, 0.03%)</title><rect x="99.7042%" y="1941" width="0.0264%" height="15" fill="rgb(222,29,26)" fg:x="34039" fg:w="9"/><text x="99.9542%" y="1951.50"></text></g><g><title>&lt;futures_util::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (21 samples, 0.06%)</title><rect x="99.7305%" y="1973" width="0.0615%" height="15" fill="rgb(216,177,29)" fg:x="34048" fg:w="21"/><text x="99.9805%" y="1983.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}}::_{{closure}} (21 samples, 0.06%)</title><rect x="99.7305%" y="1957" width="0.0615%" height="15" fill="rgb(247,136,51)" fg:x="34048" fg:w="21"/><text x="99.9805%" y="1967.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.06%)</title><rect x="99.7305%" y="1941" width="0.0615%" height="15" fill="rgb(231,47,47)" fg:x="34048" fg:w="21"/><text x="99.9805%" y="1951.50"></text></g><g><title>&lt;wisp_mux::ws::AppendingWebSocketRead&lt;R&gt; as wisp_mux::ws::WebSocketRead&gt;::wisp_read_split (4 samples, 0.01%)</title><rect x="99.7920%" y="1973" width="0.0117%" height="15" fill="rgb(211,192,36)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1983.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.01%)</title><rect x="99.7920%" y="1957" width="0.0117%" height="15" fill="rgb(229,156,32)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1967.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="99.7920%" y="1941" width="0.0117%" height="15" fill="rgb(248,213,20)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1951.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.01%)</title><rect x="99.7920%" y="1925" width="0.0117%" height="15" fill="rgb(217,64,7)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1935.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="99.7920%" y="1909" width="0.0117%" height="15" fill="rgb(232,142,8)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1919.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="99.7920%" y="1893" width="0.0117%" height="15" fill="rgb(224,92,44)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1903.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="99.7920%" y="1877" width="0.0117%" height="15" fill="rgb(214,169,17)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1887.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="99.7920%" y="1861" width="0.0117%" height="15" fill="rgb(210,59,37)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1871.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="99.7920%" y="1845" width="0.0117%" height="15" fill="rgb(214,116,48)" fg:x="34069" fg:w="4"/><text x="100.0420%" y="1855.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::process_wisp_message::_{{closure}} (8 samples, 0.02%)</title><rect x="99.8037%" y="1973" width="0.0234%" height="15" fill="rgb(244,191,6)" fg:x="34073" fg:w="8"/><text x="100.0537%" y="1983.50"></text></g><g><title>wisp_mux::packet::Packet::maybe_handle_extension::_{{closure}} (8 samples, 0.02%)</title><rect x="99.8037%" y="1957" width="0.0234%" height="15" fill="rgb(241,50,52)" fg:x="34073" fg:w="8"/><text x="100.0537%" y="1967.50"></text></g><g><title>wisp_mux::inner::MuxInner&lt;R&gt;::stream_loop::_{{closure}} (34 samples, 0.10%)</title><rect x="99.7305%" y="1989" width="0.0996%" height="15" fill="rgb(236,75,39)" fg:x="34048" fg:w="34"/><text x="99.9805%" y="1999.50"></text></g><g><title>&lt;wisp_mux::packet::Packet as wisp_mux::packet::Encode&gt;::encode (7 samples, 0.02%)</title><rect x="99.8653%" y="1973" width="0.0205%" height="15" fill="rgb(236,99,0)" fg:x="34094" fg:w="7"/><text x="100.1153%" y="1983.50"></text></g><g><title>&lt;wisp_mux::packet::PacketType as wisp_mux::packet::Encode&gt;::encode (7 samples, 0.02%)</title><rect x="99.8653%" y="1957" width="0.0205%" height="15" fill="rgb(207,202,15)" fg:x="34094" fg:w="7"/><text x="100.1153%" y="1967.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (7 samples, 0.02%)</title><rect x="99.8653%" y="1941" width="0.0205%" height="15" fill="rgb(233,207,14)" fg:x="34094" fg:w="7"/><text x="100.1153%" y="1951.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="99.8653%" y="1925" width="0.0205%" height="15" fill="rgb(226,27,51)" fg:x="34094" fg:w="7"/><text x="100.1153%" y="1935.50"></text></g><g><title>wisp_mux::packet::&lt;impl core::convert::From&lt;wisp_mux::packet::Packet&gt; for bytes::bytes_mut::BytesMut&gt;::from (24 samples, 0.07%)</title><rect x="99.8301%" y="1989" width="0.0703%" height="15" fill="rgb(206,104,42)" fg:x="34082" fg:w="24"/><text x="100.0801%" y="1999.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (5 samples, 0.01%)</title><rect x="99.8858%" y="1973" width="0.0146%" height="15" fill="rgb(212,225,4)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1983.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="99.8858%" y="1957" width="0.0146%" height="15" fill="rgb(233,96,42)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="99.8858%" y="1941" width="0.0146%" height="15" fill="rgb(229,21,32)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1951.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="99.8858%" y="1925" width="0.0146%" height="15" fill="rgb(226,216,24)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="99.8858%" y="1909" width="0.0146%" height="15" fill="rgb(221,163,17)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="99.8858%" y="1893" width="0.0146%" height="15" fill="rgb(216,216,42)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1903.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="99.8858%" y="1877" width="0.0146%" height="15" fill="rgb(240,118,7)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1887.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="99.8858%" y="1861" width="0.0146%" height="15" fill="rgb(221,67,37)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1871.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="99.8858%" y="1845" width="0.0146%" height="15" fill="rgb(241,32,44)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1855.50"></text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="99.8858%" y="1829" width="0.0146%" height="15" fill="rgb(235,204,43)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1839.50"></text></g><g><title>&lt;tikv_jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="99.8858%" y="1813" width="0.0146%" height="15" fill="rgb(213,116,10)" fg:x="34101" fg:w="5"/><text x="100.1358%" y="1823.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload::_{{closure}} (30 samples, 0.09%)</title><rect x="99.9033%" y="1989" width="0.0879%" height="15" fill="rgb(239,15,48)" fg:x="34107" fg:w="30"/><text x="100.1533%" y="1999.50"></text></g><g><title>wisp_mux::stream::MuxStreamWrite::write_payload_internal::_{{closure}} (14 samples, 0.04%)</title><rect x="99.9502%" y="1973" width="0.0410%" height="15" fill="rgb(207,123,36)" fg:x="34123" fg:w="14"/><text x="100.2002%" y="1983.50"></text></g><g><title>wisp_mux::ws::LockedWebSocketWrite::write_split::_{{closure}} (12 samples, 0.04%)</title><rect x="99.9561%" y="1957" width="0.0351%" height="15" fill="rgb(209,103,30)" fg:x="34125" fg:w="12"/><text x="100.2061%" y="1967.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="99.9795%" y="1941" width="0.0117%" height="15" fill="rgb(238,100,19)" fg:x="34133" fg:w="4"/><text x="100.2295%" y="1951.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),wisp_mux::WispError&gt;+core::marker::Send&gt;&gt; (4 samples, 0.01%)</title><rect x="99.9795%" y="1925" width="0.0117%" height="15" fill="rgb(244,30,14)" fg:x="34133" fg:w="4"/><text x="100.2295%" y="1935.50"></text></g><g><title>all (34,140 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(249,174,6)" fg:x="0" fg:w="34140"/><text x="0.2500%" y="2031.50"></text></g><g><title>tokio-runtime-w (34,077 samples, 99.82%)</title><rect x="0.1845%" y="2005" width="99.8155%" height="15" fill="rgb(235,213,41)" fg:x="63" fg:w="34077"/><text x="0.4345%" y="2015.50">tokio-runtime-w</text></g></svg></svg>